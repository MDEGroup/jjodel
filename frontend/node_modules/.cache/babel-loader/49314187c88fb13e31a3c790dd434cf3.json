{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{DUser,LProject,LUser,Try,U}from'../joiner';import useQuery from'../hooks/useQuery';import{ProjectsApi}from'../api/persistance';import{SaveManager}from'../components/topbar/SaveManager';import{Dashboard}from\"./components\";import CollaborativeAttacher from\"../components/collaborative/CollaborativeAttacher\";import{Cards}from'./components/cards/Cards';import{useNavigate}from\"react-router-dom\";import{CSS_Units}from\"../view/viewElement/view\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProjectComponent(props){var _user$project;const{user}=props;const navigate=useNavigate();const query=useQuery();const id=query.get('id')||'';useEffect(()=>{(async function(){const project=await ProjectsApi.getOne(id);if(!project){U.resetState();navigate('/allProject');return;}if(project.state){const state=JSON.parse(await U.decompressState(project.state));state['idlookup'][DUser.current]=user.__raw;if(!state['users'].includes(DUser.current))state['users'].push(DUser.current);SaveManager.load(state);}user.project=LProject.fromPointer(project.id);})();},[id]);let vparr=(user===null||user===void 0?void 0:(_user$project=user.project)===null||_user$project===void 0?void 0:_user$project.viewpoints)||[];let allViews=vparr.flatMap(vp=>vp&&vp.allSubViews);allViews.push(...vparr);allViews=allViews.filter(v=>v);const viewsDeDuplicator={};for(let v of allViews)viewsDeDuplicator[v.id]=v;if(!(user===null||user===void 0?void 0:user.project))return/*#__PURE__*/_jsx(_Fragment,{});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Try,{children:/*#__PURE__*/_jsx(Dashboard,{active:'Project',version:props.version,project:user.project,children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"style\",{id:\"views-css-injector-p\",children:Object.values(viewsDeDuplicator).map(v=>v.compiled_css).join('\\n\\n')}),CSS_Units.jsx,/*#__PURE__*/_jsxs(Cards,{children:[user.project.metamodels.length===0?/*#__PURE__*/_jsx(Cards.Item,{title:'Your first metamodel ?',subtitle:'Create a new metamodel.',icon:'add',style:'red',action:()=>{alert('new metamodel');}}):/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Cards.Item,{title:'Create another metamodel ?',subtitle:'Create a new metamodel.',icon:'add',style:'red',action:()=>{alert('another metamodel');}}),/*#__PURE__*/_jsx(Cards.Item,{title:'Create a model ?',subtitle:'Create a new model.',icon:'add',style:'red',action:()=>{alert('new model');}})]}),/*#__PURE__*/_jsx(Cards.Item,{icon:'question',style:'clear',title:'Ehy!',subtitle:'What do you want to do today?'})]})]})})}),user.project.type==='collaborative'&&/*#__PURE__*/_jsx(CollaborativeAttacher,{project:user.project})]});}function mapStateToProps(state,ownProps){const ret={};ret.user=LUser.fromPointer(DUser.current);return ret;}function mapDispatchToProps(dispatch){const ret={};return ret;}export const ProjectConnected=connect(mapStateToProps,mapDispatchToProps)(ProjectComponent);const ProjectPage=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(ProjectConnected,{...props,children});};export{ProjectPage};","map":{"version":3,"names":["React","useEffect","connect","DUser","LProject","LUser","Try","U","useQuery","ProjectsApi","SaveManager","Dashboard","CollaborativeAttacher","Cards","useNavigate","CSS_Units","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","ProjectComponent","props","_user$project","user","navigate","query","id","get","project","getOne","resetState","state","JSON","parse","decompressState","current","__raw","includes","push","load","fromPointer","vparr","viewpoints","allViews","flatMap","vp","allSubViews","filter","v","viewsDeDuplicator","children","active","version","Object","values","map","compiled_css","join","metamodels","length","Item","title","subtitle","icon","style","action","alert","type","mapStateToProps","ownProps","ret","mapDispatchToProps","dispatch","ProjectConnected","ProjectPage","arguments","undefined"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/pages/Project.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, useEffect,  useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    CreateElementAction,\r\n    Dictionary,\r\n    DState,\r\n    DUser,\r\n    DViewElement, GObject,\r\n    LProject,\r\n    LUser,\r\n    LViewElement,\r\n    LViewPoint,\r\n    Pointer,\r\n    Try,\r\n    U\r\n} from '../joiner';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport useQuery from '../hooks/useQuery';\r\nimport {ProjectsApi} from '../api/persistance';\r\nimport {SaveManager} from '../components/topbar/SaveManager';\r\nimport {Dashboard} from \"./components\";\r\nimport CollaborativeAttacher from \"../components/collaborative/CollaborativeAttacher\";\r\nimport {Cards} from './components/cards/Cards';\r\nimport Storage from \"../data/storage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Loader from '../components/loader/Loader';\r\nimport {Navbar} from \"./components\";\r\nimport {CSS_Units} from \"../view/viewElement/view\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\n\r\n\r\n\r\nfunction ProjectComponent(props: AllProps): JSX.Element {\r\n\r\n    const {user} = props;\r\n    const navigate = useNavigate();\r\n    const query = useQuery();\r\n    const id = query.get('id') || '';\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n            const project = await ProjectsApi.getOne(id);\r\n            if(!project) {\r\n                U.resetState();\r\n                navigate('/allProject');\r\n                return;\r\n            }\r\n            if(project.state) {\r\n                const state = JSON.parse(await U.decompressState(project.state));\r\n                state['idlookup'][DUser.current] = user.__raw;\r\n                if(!state['users'].includes(DUser.current)) state['users'].push(DUser.current);\r\n                SaveManager.load(state);\r\n            }\r\n            user.project = LProject.fromPointer(project.id);\r\n        })();\r\n    }, [id]);\r\n\r\n    let vparr = user?.project?.viewpoints || [];\r\n    let allViews = vparr.flatMap((vp: LViewPoint) => vp && vp.allSubViews);\r\n    allViews.push(...vparr as LViewElement[]);\r\n    allViews = allViews.filter(v => v);\r\n    const viewsDeDuplicator: Dictionary<Pointer<DViewElement>, LViewElement> = {};\r\n    for (let v of allViews) viewsDeDuplicator[v.id] = v;\r\n    if(!user?.project) return (<></>);\r\n    return (<>\r\n        <Try>\r\n        <Dashboard active={'Project'} version={props.version} project={user.project}>\r\n                <React.Fragment>\r\n                    <style id={\"views-css-injector-p\"}>\r\n                        {Object.values(viewsDeDuplicator).map(v => v.compiled_css).join('\\n\\n')}\r\n                    </style>\r\n                    {CSS_Units.jsx}\r\n\r\n                    <Cards>\r\n                        {user.project.metamodels.length === 0 ?\r\n                            <Cards.Item\r\n                                title={'Your first metamodel ?'}\r\n                                subtitle={'Create a new metamodel.'}\r\n                                icon={'add'}\r\n                                style={'red'}\r\n                                action={() => {\r\n                                    alert('new metamodel')\r\n                                }}\r\n                            />\r\n                            :\r\n                            <React.Fragment>\r\n                                <Cards.Item\r\n                                    title={'Create another metamodel ?'}\r\n                                    subtitle={'Create a new metamodel.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {\r\n                                        alert('another metamodel')\r\n                                    }}\r\n                                />\r\n                                <Cards.Item\r\n                                    title={'Create a model ?'}\r\n                                    subtitle={'Create a new model.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {\r\n                                        alert('new model')\r\n                                    }}\r\n                                />\r\n                            </React.Fragment>\r\n                        }\r\n                        <Cards.Item icon={'question'} style={'clear'} title={'Ehy!'}\r\n                                    subtitle={'What do you want to do today?'}/>\r\n                    </Cards>\r\n\r\n                </React.Fragment>\r\n            </Dashboard>\r\n        </Try>\r\n\r\n        {/*<Try><Dock /></Try>*/}\r\n        {user.project.type === 'collaborative' && <CollaborativeAttacher project={user.project}/>}\r\n    </>);\r\n\r\n}\r\n\r\ninterface OwnProps {\r\n}\r\n\r\ninterface StateProps {\r\n    user: LUser,\r\n    version: DState[\"version\"],\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.user = LUser.fromPointer(DUser.current);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const ProjectConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProjectComponent);\r\n\r\nconst ProjectPage = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ProjectConnected {...{...props, children}} />;\r\n}\r\n\r\nexport {ProjectPage};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}