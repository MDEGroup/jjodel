import React, { isValidElement } from "react";
import { map } from ".";
import { render } from "@testing-library/react";
describe(map, () => {
    const App = ({ children, fn, options }) => (React.createElement(React.Fragment, null, map(children, fn, options)));
    it("applies the mapping fn depth first, post-order", () => {
        let idx = 0;
        const fn = jest.fn((el) => {
            idx++;
            return (React.createElement("div", { "data-visit-idx": idx, children: isValidElement(el) ? el.props.children : null }));
        });
        const { container } = render(React.createElement(App, { fn: fn },
            React.createElement("div", null,
                React.createElement("div", null,
                    React.createElement("div", null),
                    React.createElement("div", null)),
                React.createElement("div", null,
                    React.createElement("div", null),
                    React.createElement("div", null)))));
        expect(container).toMatchInlineSnapshot(`
<div>
  <div
    data-visit-idx="7"
  >
    <div
      data-visit-idx="3"
    >
      <div
        data-visit-idx="1"
      />
      <div
        data-visit-idx="2"
      />
    </div>
    <div
      data-visit-idx="6"
    >
      <div
        data-visit-idx="4"
      />
      <div
        data-visit-idx="5"
      />
    </div>
  </div>
</div>
`);
    });
    it("only descends maxDepth", () => {
        let idx = 0;
        const fn = jest.fn((el) => {
            idx++;
            return (React.createElement("div", { "data-visit-idx": idx, children: isValidElement(el) ? el.props.children : null }));
        });
        const { container } = render(React.createElement(App, { fn: fn, options: { maxDepth: 1 } },
            React.createElement("div", null,
                React.createElement("div", null,
                    React.createElement("div", null),
                    React.createElement("div", null)),
                React.createElement("div", null,
                    React.createElement("div", null),
                    React.createElement("div", null)))));
        expect(container).toMatchInlineSnapshot(`
<div>
  <div
    data-visit-idx="3"
  >
    <div
      data-visit-idx="1"
    >
      <div />
      <div />
    </div>
    <div
      data-visit-idx="2"
    >
      <div />
      <div />
    </div>
  </div>
</div>
`);
    });
});
