{"ast":null,"code":"var _dec,_class,_class2;// npm i react-json-view\nimport React from\"react\";import withReactContent from\"sweetalert2-react-content\";import Swal from\"sweetalert2\";import{U,Log,GraphElementComponent,windoww,RuntimeAccessible,EdgeComponent,transientProperties,JSXT}from\"../joiner\";import{jsx as _jsx}from\"react/jsx-runtime\";var Convert=require('ansi-to-html');// U-functions that require jsx\nexport let UX=(_dec=RuntimeAccessible('UX'),_dec(_class=(_class2=class UX{static recursiveMap(children,fn){let depthIndices=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];// NB: depthIndices is correct but if there is an expression children evaluated to false like {false && <jsx>},\n// it counts as children iterated regardless. so html indices might be apparently off, but like this is even safer as indices won't change when conditions are changed.\nconst innermap=(child,i1,depthIndices)=>{if(!/*#__PURE__*/React.isValidElement(child)){if(Array.isArray(child))return React.Children.map(child,(c,i3)=>innermap(c,i3,[...depthIndices,i3]));if(child&&typeof child===\"object\"){var _child;if(!windoww.invalidObjsReact)windoww.invalidObjsReact=[];windoww.invalidObjsReact.push(child);return\"<! Objects cannot be rendered in jsx : \"+((_child=child)===null||_child===void 0?void 0:_child.name)+\">\";}return child;}if(child.props.children){// let deeperDepthIndices = [...depthIndices, i1];  // depthIndices; //\n// should probably change deeperDepthIndices in [...deeperDepthIndices, i] in next uncommented line.\n// Giordano: add ignore for webpack\n//@ts-ignore\nchild=/*#__PURE__*/React.cloneElement(child,{children:UX.recursiveMap(child.props.children,(e,i2,ii)=>fn(e,i2,ii),depthIndices)});// this can be optimized, and i think i can avoid cloning here, as the nodes are already cloned in \"fn\" = ux.injectprops\n}return fn(child,i1,depthIndices);};if(!Array.isArray(children))return innermap(children,0,[...depthIndices,0]);// if (typeof children[0] === \"object\") return (children).map( (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as any as T;\nreturn React.Children.map(children,(c,i3)=>innermap(c,i3,[...depthIndices,i3]));}/*\r\n    public static draggable_eventmap = {\r\n        's':    {'draggable': 'onDragStart',    'rotatable': 'onRotateStart',   'resizable': 'onResizeStart'},\r\n        'ing':  {'draggable': 'whileDragging',  'rotatable': 'whileRotating',   'resizable': 'whileResizing'},\r\n        'e':    {'draggable': 'onDragEnd',      'rotatable': 'onRotateEnd',     'resizable': 'onResizeEnd'  },\r\n    };\r\n    public static draggable_eventprops= UX.initMeasurable();\r\n    static initMeasurable(): Dictionary<string, boolean>{\r\n        return U.objectFromArrayValues(Object.values(UX.draggable_eventmap).flatMap(v=>Object.values(v)), true);\r\n    }*/static injectProp(parentComponent,e,gvidmap_useless,parentnodeid,index,indices,injectOffset){var _WrappedComponent,_parentComponent$prop,_parentComponent$prop2,_parentComponent$prop3,_parentComponent$prop4,_re$props$data,_re$props$initialSize,_re$props$startingSiz,_WrappedComponent2;let re=UX.ReactNodeAsElement(e);// injectOffset&&console.log(\"inject offset props 1:\", {e, re, injectOffset});\nif(!re)return e;// @ts-ignore this\n// const parentComponent = this;\nconst type=((_WrappedComponent=re.type.WrappedComponent)===null||_WrappedComponent===void 0?void 0:_WrappedComponent.name)||re.type;let injectProps={};/* if (false && injectOffset) {\r\n            const style = {...(re.props?.style || {})};\r\n            let offset = injectOffset.offset;\r\n            let scale = injectOffset.zoom;\r\n            style.position = \"absolute\";\r\n            style.left = offset.x;\r\n            style.top = offset.y;\r\n            style.transform = \"scale(\" + scale.x + \",\" + scale.y + \")\"\r\n            injectProps.style = style;\r\n            console.log(\"inject offset props:\", {re, injectProps});\r\n        }*/ //  fix the injection somehow. override Edge() Vertex() Asterisk() ...\n// const windoww = window as any;\n// console.log('ux.injectingProp pre ', {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\n// add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\nswitch(type){default:// console.count('ux.injectingProp case default: ' + type);\nif(indices.length<=2&&(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop=parentComponent.props)===null||_parentComponent$prop===void 0?void 0:_parentComponent$prop.childStyle)){// if first non-component child of a GraphElement with a clipPath shape, i assign clip path to it.\nconsole.log('injecting to first child (A):',{re,indices,il:indices.length,pc:parentComponent,injectProps,cs:parentComponent.props.childStyle});let istyle=injectProps.style={...(injectProps.style||{})};injectProps.style=injectProps.style?{...injectProps.style}:{};U.objectMergeInPlace(injectProps.style,parentComponent.props.childStyle);}else return re;break;/*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: UX.getKey(re) || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/ // case windoww.Components.GraphElement.name:\ncase windoww.Components.Input.cname+\"Component\":case windoww.Components.Select.cname+\"Component\":case windoww.Components.TextArea.cname+\"Component\":// todo: can i do a injector that if the user provides a ModelElement list raw <div>{this.children}</div> it wraps them in DefaultNode?\nconst injectProps2={};const parentnodeid=(_parentComponent$prop2=parentComponent.props.node)===null||_parentComponent$prop2===void 0?void 0:_parentComponent$prop2.id;injectProps2.data=re.props.data||(typeof parentComponent.props.data===\"string\"?parentComponent.props.data:(_parentComponent$prop3=parentComponent.props.data)===null||_parentComponent$prop3===void 0?void 0:_parentComponent$prop3.id);// !IMPORTANT! this key does not remove the responsability of adding keys to <GraphElement>s. this is assigning the key to the first returned element by component A,\n// but react needs to distinguish component A from other components, and he still doesn't have a key. in fact this is useless as this component can only have 1 child\ninjectProps2.key=UX.getKey(re)||parentnodeid+\"_input_\"+index;return/*#__PURE__*/React.cloneElement(re,injectProps2);case windoww.Components.GraphElementComponent.cname:// case windoww.Components.DefaultNode.name:\ncase windoww.Components.DefaultNodeComponent.cname:// case windoww.Components.Graph.name:\n// case windoww.Components.GraphComponent.cname:\ncase\"Graph\":case\"GraphComponent\":// case windoww.Components.Field.name:\n// case windoww.Components.FieldComponent.cname:\n// case windoww.Components.Vertex.name:\ncase EdgeComponent.cname:case windoww.Components.VertexComponent.cname:injectProps.parentViewId=parentComponent.props.view.id||parentComponent.props.view;// re.props.view ||  thiss.props.view\ninjectProps.parentnodeid=(_parentComponent$prop4=parentComponent.props.node)===null||_parentComponent$prop4===void 0?void 0:_parentComponent$prop4.id;injectProps.graphid=parentComponent.props.graphid;// const vidmap = GraphElementRaw.graphVertexID_counter;\n// if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\n// const gvidmap = vidmap[injectProps.graphid];\n// const validVertexIdCondition = (id: string): boolean => gvidmap_useless[id];\n// todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando? React-portals?\nconst dataid=(typeof re.props.data===\"string\"?re.props.data:(_re$props$data=re.props.data)===null||_re$props$data===void 0?void 0:_re$props$data.id)||\"shapeless\";let idbasename;//console.log('injecting props ' + type, {re, pc: parentComponent, injectProps, ownProps: re.props});\nif((_re$props$initialSize=re.props.initialSize)===null||_re$props$initialSize===void 0?void 0:_re$props$initialSize.id){var _re$props$initialSize2;idbasename=(_re$props$initialSize2=re.props.initialSize)===null||_re$props$initialSize2===void 0?void 0:_re$props$initialSize2.id;}else if(re.props.nodeid){idbasename=re.props.nodeid;}else if(re.props.id){idbasename=re.props.id;}else if(UX.getKey(re)){idbasename=injectProps.parentnodeid+\"_\"+UX.getKey(re);// console.log(\"keyid: \", {idbasename});\n}else switch(type){default:idbasename=injectProps.parentnodeid+\"_\"+dataid+\"N\";break;case windoww.Components.EdgePoint.cname:idbasename=injectProps.parentnodeid+\"_\"+(dataid||((_re$props$startingSiz=re.props.startingSize)===null||_re$props$startingSiz===void 0?void 0:_re$props$startingSiz.id)||indices.join(\"_\"))+\"EP\";break;case EdgeComponent.cname:case\"Edge\"://console.log('injecting props ' + type + \" without key\", {re, pc: parentComponent, injectProps, ownProps: re.props});\nlet edgeProps=re.props;let edgestart_id=edgeProps.start.id||edgeProps.start;let edgeend_id=edgeProps.end.id||edgeProps.end;idbasename=injectProps.parentnodeid+\"_\"+edgestart_id+\"-\"+edgeend_id;}// (injectProps.parentnodeid)+\"_\"+(dataid)+indices.join(\"_\");//injectProps.graphid + '_' + dataid;\n// console.log(\"setting nodeid\", {injectProps, props:re.props, re});\n// Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\nLog.exDev(!injectProps.graphid,'vertex is missing mandatory props (graphid).',{graphid:injectProps.graphid,dataid,props:re.props});if(false&&indices.length===2){var _parentComponent$prop5,_parentComponent$prop6;// if first component child, of a component? like (DefaultNode -> Vertex)?\nconsole.log('injecting to first child (B):',{re,pc:parentComponent,injectProps});if(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop5=parentComponent.props.style)===null||_parentComponent$prop5===void 0?void 0:_parentComponent$prop5.clipPath)injectProps.style={...(injectProps.style||{}),clipPath:(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop6=parentComponent.props.style)===null||_parentComponent$prop6===void 0?void 0:_parentComponent$prop6.clipPath)||''};}injectProps.nodeid=idbasename;// U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\ninjectProps.htmlindex=indices[indices.length-1];// re.props.node ? re.props.node.htmlindex : indices[indices.length - 1];\ninjectProps.key=UX.getKey(re)||injectProps.nodeid;// console.log(\"cloning jsx:\", re, injectProps);\nLog.ex((injectProps.nodeid===injectProps.graphid||injectProps.nodeid===injectProps.parentnodeid)&&type!==\"GraphComponent\",\"User manually assigned a invalid node id. please remove or change prop \\\"nodeid\\\"\",{type:((_WrappedComponent2=re.type.WrappedComponent)===null||_WrappedComponent2===void 0?void 0:_WrappedComponent2.cname)||re.type},{mycomponents:windoww.mycomponents,re,props:re.props});}//console.log('injecting props ' + type, {id: injectProps.nodeid, re, pc: parentComponent, injectProps});\nreturn/*#__PURE__*/React.cloneElement(re,injectProps);}static ReactNodeAsElement(e){return e&&e.type?e:null;}static getKey(e){return e===null||e===void 0?void 0:e.key;// NOT e.props.key, key is not a part of props in ReactNode.\n}static async deleteWithAlarm(lItem){const MySwal=withReactContent(Swal);const confirm=await MySwal.fire({title:\"Delete \"+lItem.toString()+\"?\",showCancelButton:true,confirmButtonText:\"Yes\",cancelButtonText:\"No\",showLoaderOnConfirm:true});if(confirm.value===true){lItem.delete();}}static async info(text){const MySwal=withReactContent(Swal);const confirm=await MySwal.fire({title:text,showCancelButton:false,confirmButtonText:\"Got It\"});}static initPropInjectionStuff(){UX.graphComponents=['GraphElement','...more'];UX.inputComponents=['Input','Select','TextArea','...more'];UX.graphComponentsRegexp=new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));UX.inputComponentRegexp=new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));UX.viewRootProps='\"data-viewid\": props.viewid,'+' addStyle: (offset ? {position:\"absolute\", left:offset.x, top:offset.y/*,transform:\"scale(\"+zoom.x+\",\"+zoom.y+\")\"*/} : undefined)';UX.mainViewRootProps='ref: component.html, id: props.nodeid, \"data-nodeid\": props.nodeid, \"data-dataid\": props.dataid,\\n'+'\"data-modelname\": data?.className || \"model-less\",'+'\"data-userselecting\": JSON.stringify(node.isSelected || {}),'+'\"data-nodetype\": node.className, '+'\"data-parentview\": props.parentviewid, '+//'\"data-order\": node.zIndex,' +\n'onClick: component.onClick,'+'onContextMenu: component.onContextMenu,'+'onMouseDown: component.onMouseDown,'+'onMouseUp: component.onMouseUp,'+'onwheel: component.onScroll,'+'onMouseEnter: component.onEnter,'+'onMouseLeave: component.onLeave,'+'tabIndex: (props as any).tabIndex || node.zIndex || -1,'+'\"data-countrenders\": component.countRenders++,'+'decorators: otherViews,'+// used in user jsx to inject decorator views\n'classNameAdd: [(component.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"),\"mainView\", props.viewid, ...props.viewsid].join(\",\"),'+'...this.props';UX.decorativeViewRootProps+='classNameAdd: \"decorativeView \" + props.viewid, \"data-mainview\": mainviewid';return UX.graphComponents;}static GC_propsAdder(index){return\"nodeid: window._assignnodeid(props, \"+index+\"), key:\"+index;}static Input_propsAdder(index){return\"key:\"+index;}static injectPropsToString_addstuff(s,index,props,type,propsAdder){// move out in global scope\nswitch(s[index]){case'{':// props object\n// let propstr = JSON.stringify(propsToInjectAtRoot);\n// propstr = propstr.substring(1, propstr.length-2);\ns=s.substring(0,index+1)+props+(propsAdder?','+propsAdder(index):'')+','+s.substring(index+1);break;case'n':// null:\n// let propstr = JSON.stringify(propsToInjectAtRoot)\ns=s.substring(0,index)+'{'+props+(propsAdder?','+propsAdder(index):'')+'}'+s.substring(index+4);break;default:Log.exDevv('unexpected string in '+type+' props injection parser',{s_pre:s.substring(index-10,10),s_post:s.substring(index,index+10),index,c:s[index],fullstr:s});break;}return s;}// propsToInject cannot be an object because i need variable names as prop values, NOT strings, not their immediate values. so i pass a string with a list of props\nstatic injectPropsToString(s,asMainView,graphComponentsProps,inputComponentProps){// non-root props are injected through Component constructors instead\n// plan B instead: make it  \"DefaultNde({pa: \"pa\"}, [\"a\", [b,c]])\" ---> \"Root(DefaultNde, {pa: \"pa\"}, [\"a\", [b,c]]) and handle injection in Root func\nconst propsToInjectAtRoot=UX.viewRootProps+','+(asMainView?UX.mainViewRootProps:UX.decorativeViewRootProps);//add in context: component = (this as GraphElementComponent), otherViews\n// 'style: {...viewStyle, ...styleoverride},' + need to fix this\n// 'className: classes.join(\\' \\'),' + and this\n// and otherViews as ReactNode[]\n// context.mainviewid (different from context.view in decorative views)\ns=s.trim();if(propsToInjectAtRoot.length){let argStartIndex=s.indexOf('(',1)+1;//.match(/[A-Za-z_$0-9]+\\(/)\n// todo: hamdle props.addstyle\n// add im props: offset: this.props.isGraph ££ this.props.ode.offset, zoom: this.props.isGraph ££ this.props.ode.zoom\nif(s[argStartIndex]===\"'\")argStartIndex=s.indexOf(\"'\",argStartIndex+1);// it is a lowercase component with name as string in first param\ns=UX.injectPropsToString_addstuff(s,argStartIndex,propsToInjectAtRoot,'root');// used in GC_propsAdder as a string to be eval-ed\nwindow._assignnodeid=function _assignnodeid(props,index){const tnv=transientProperties.node[props.nodeid].viewScores[props.viewid];if(!tnv.nodeidcounter)tnv.nodeidcounter={};if(tnv.nodeidcounter[index]===undefined)tnv.nodeidcounter[index]=0;else tnv.nodeidcounter[index]++;return props.nodeid+'_'+index+'_'+tnv.nodeidcounter[index];// every time before jsx render, \" let nc = transientProperties.node[props.nodeid].viewScores[props.viewid].nodeidcounter; for (let k of nc) nc[k]=0; or just nodeidcounter={}\n};}// lowercase, no props          React.createElement('defaultNde', null, [\"a\", [a,b,c]])\n// uppercase, ++ props          DefaultNde({pa: \"pa\", pb: b, pc: \"c\"}, [\"a\", [a,b,c]])\n// lowercase, ++ props          React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]])\n// uppercase, no props          DefaultNde(null, [\"a\", [a,b,c]])\n// might have () wrapping all\n// or array wrapping all\n// or comments (both inline and line)\n// or even a string at beginning\n// nightmare case is:          `([\"a()\", /*comment()*/ React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]]),2])`\n// !! fix: force users to have < as first char?? and editor tells it's wrong if this is not the case?\n// that forces mono-root, but arrays would be hard to inject root-level props and prone to break anyway\nlet match;//here i give up, because i cannot compute nodeid without htmlindex[] from root to component\n// cannot even get nodeid according to jsxstr position because of loops / map generate multiple nodes from same string index\n// NO! i can do srtindex+counters[strindex]++?\n//\ngraphComponentsProps='parentnodeid: props.nodeid, graphid:this.props.node.className.indexOf(\"Graph\")>=0 ? props.nodeid : props.graphid,'+' parentViewId:props.viewid';// + dynamically: 'nodeid, key' // - removed: htmlindex\ninputComponentProps='data: props.data, field:\"name\"';// + dynamically: 'key'\nif(graphComponentsProps.length>0)while(match=UX.graphComponentsRegexp.exec(s)){let matchstr=match[0];//let pre = s.substring(0, match.index) + matchstr;\nlet argStartIndex=match.index+matchstr.length;s=UX.injectPropsToString_addstuff(s,argStartIndex,graphComponentsProps,'graphElement',UX.GC_propsAdder);}if(inputComponentProps.length>0)while(match=UX.inputComponentRegexp.exec(s)){let matchstr=match[0];//let pre = s.substring(0, match.index) + matchstr;\nlet argStartIndex=match.index+matchstr.length;s=UX.injectPropsToString_addstuff(s,argStartIndex,inputComponentProps,'inputComponent',UX.Input_propsAdder);}return s;}static parseAndInject(jsxString,v){let jsxCompiled;let e;try{jsxCompiled=JSXT.fromString(jsxString,{factory:'React.createElement'});}catch(ee){e=ee;jsxCompiled=GraphElementComponent.displayError(e,\"JSX Syntax\",v,undefined,undefined,true);}return jsxCompiled;}static stopEvt(e){var _e$persist,_stopImmediatePropaga,_ref,_e$stopPropagation,_ne$stopImmediateProp,_ne$stopPropagation;if(!e)return;(_e$persist=e.persist)===null||_e$persist===void 0?void 0:_e$persist.call(e);(_stopImmediatePropaga=(_ref=e).stopImmediatePropagation)===null||_stopImmediatePropaga===void 0?void 0:_stopImmediatePropaga.call(_ref);(_e$stopPropagation=e.stopPropagation)===null||_e$stopPropagation===void 0?void 0:_e$stopPropagation.call(e);let ne=e.nativeEvent;e._jjIsStopped=true;if(!ne)return;(_ne$stopImmediateProp=ne.stopImmediatePropagation)===null||_ne$stopImmediateProp===void 0?void 0:_ne$stopImmediateProp.call(ne);(_ne$stopPropagation=ne.stopPropagation)===null||_ne$stopPropagation===void 0?void 0:_ne$stopPropagation.call(ne);if(!ne.isPropagationStopped)ne.isPropagationStopped=()=>true;ne._jjIsStopped=true;}static isStoppedEvt(e){var _e$isPropagationStopp,_ne$isPropagationStop;if(!e)return true;if(e._jjIsStopped||((_e$isPropagationStopp=e.isPropagationStopped)===null||_e$isPropagationStopp===void 0?void 0:_e$isPropagationStopp.call(e)))return true;let ne=e.nativeEvent;if(!ne)return false;return!!(ne._jjIsStopped||((_ne$isPropagationStop=ne.isPropagationStopped)===null||_ne$isPropagationStop===void 0?void 0:_ne$isPropagationStop.call(ne)));}static options(validTargets){return validTargets.filter(e=>!!e).map(e=>/*#__PURE__*/_jsx(\"optgroup\",{label:e.label,children:e.options.filter(o=>!!o).map(o=>/*#__PURE__*/_jsx(\"option\",{value:o.value,title:o.title,children:o.label},o.value))}));}/*\r\n    does not catch: visibility: hidden, opacity:0, invisible stuff inside a overflow:scroll element, overlapping z-index (returns true)\r\n    does catch display:none, top:-999999px, width:0 (returns false)\r\n    possibly zoom can mess it up\r\n    */static isElementInViewport(el){let includePartiallyVisible=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(!el)return false;var rect=el.getBoundingClientRect();// safely returns a 0-filled struct for non-in-dom elements\nreturn rect.top+(includePartiallyVisible?rect.height:0)>=0&&rect.left+(includePartiallyVisible?rect.width:0)>=0&&rect.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&rect.right<=(window.innerWidth||document.documentElement.clientWidth);}static onVisibilityChange(el,callback){var old_visible;return function(){var visible=UX.isElementInViewport(el);if(visible===old_visible)return;old_visible=visible;if(typeof callback=='function'){callback();}};}},_class2.graphComponents=_class2.initPropInjectionStuff(),_class2.inputComponents=undefined,_class2.graphComponentsRegexp=undefined,_class2.inputComponentRegexp=undefined,_class2.viewRootProps=void 0,_class2.decorativeViewRootProps=void 0,_class2.mainViewRootProps=void 0,_class2))||_class);","map":{"version":3,"names":["React","withReactContent","Swal","U","Log","GraphElementComponent","windoww","RuntimeAccessible","EdgeComponent","transientProperties","JSXT","jsx","_jsx","Convert","require","UX","_dec","_class","_class2","recursiveMap","children","fn","depthIndices","arguments","length","undefined","innermap","child","i1","isValidElement","Array","isArray","Children","map","c","i3","_child","invalidObjsReact","push","name","props","cloneElement","e","i2","ii","injectProp","parentComponent","gvidmap_useless","parentnodeid","index","indices","injectOffset","_WrappedComponent","_parentComponent$prop","_parentComponent$prop2","_parentComponent$prop3","_parentComponent$prop4","_re$props$data","_re$props$initialSize","_re$props$startingSiz","_WrappedComponent2","re","ReactNodeAsElement","type","WrappedComponent","injectProps","childStyle","console","log","il","pc","cs","istyle","style","objectMergeInPlace","Components","Input","cname","Select","TextArea","injectProps2","node","id","data","key","getKey","DefaultNodeComponent","VertexComponent","parentViewId","view","graphid","dataid","idbasename","initialSize","_re$props$initialSize2","nodeid","EdgePoint","startingSize","join","edgeProps","edgestart_id","start","edgeend_id","end","exDev","_parentComponent$prop5","_parentComponent$prop6","clipPath","htmlindex","ex","mycomponents","deleteWithAlarm","lItem","MySwal","confirm","fire","title","toString","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","value","delete","info","text","initPropInjectionStuff","graphComponents","inputComponents","graphComponentsRegexp","RegExp","s","inputComponentRegexp","viewRootProps","mainViewRootProps","decorativeViewRootProps","GC_propsAdder","Input_propsAdder","injectPropsToString_addstuff","propsAdder","substring","exDevv","s_pre","s_post","fullstr","injectPropsToString","asMainView","graphComponentsProps","inputComponentProps","propsToInjectAtRoot","trim","argStartIndex","indexOf","window","_assignnodeid","tnv","viewScores","viewid","nodeidcounter","match","exec","matchstr","parseAndInject","jsxString","v","jsxCompiled","fromString","factory","ee","displayError","stopEvt","_e$persist","_stopImmediatePropaga","_ref","_e$stopPropagation","_ne$stopImmediateProp","_ne$stopPropagation","persist","call","stopImmediatePropagation","stopPropagation","ne","nativeEvent","_jjIsStopped","isPropagationStopped","isStoppedEvt","_e$isPropagationStopp","_ne$isPropagationStop","options","validTargets","filter","label","o","isElementInViewport","el","includePartiallyVisible","rect","getBoundingClientRect","top","height","left","width","bottom","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","onVisibilityChange","callback","old_visible","visible"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/common/UX.tsx"],"sourcesContent":["import ReactJson from 'react-json-view' // npm i react-json-view\r\nimport React, {ReactElement, ReactNode} from \"react\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport {GraphElementOwnProps, GObject, Dictionary, DocString, Pointer, LGraph, MultiSelectOptGroup} from \"../joiner\";\r\nimport type { InputOwnProps, SelectOwnProps } from '../components/forEndUser/Input';\r\nimport type {  } from '../components/forEndUser/Select';\r\nimport {\r\n    LPointerTargetable,\r\n    U,\r\n    Log,\r\n    GraphElementComponent,\r\n    windoww,\r\n    RuntimeAccessible,\r\n    EdgeComponent,\r\n    RuntimeAccessibleClass,\r\n    EdgeOwnProps,\r\n    DGraphElement,\r\n    DModelElement,\r\n    transientProperties, JSXT, DViewElement\r\n} from \"../joiner\";\r\nimport {AllPropss} from \"../graph/vertex/Vertex\";\r\n\r\nvar Convert = require('ansi-to-html');\r\n\r\n// U-functions that require jsx\r\n@RuntimeAccessible('UX')\r\nexport class UX{\r\n\r\n    static recursiveMap<T extends ReactNode | ReactNode[] | null | undefined>(children: T, fn: (rn: T, i: number, depthIndices: number[])=>T, depthIndices: number[] = []): T {\r\n        // NB: depthIndices is correct but if there is an expression children evaluated to false like {false && <jsx>},\r\n        // it counts as children iterated regardless. so html indices might be apparently off, but like this is even safer as indices won't change when conditions are changed.\r\n        const innermap = (child: ReactNode, i1: number, depthIndices: number[]): T => {\r\n            if (!React.isValidElement(child)) {\r\n                if (Array.isArray(child)) return React.Children.map(child as T, (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as T;\r\n                if (child && typeof child === \"object\") {\r\n                    if (!windoww.invalidObjsReact) windoww.invalidObjsReact = [];\r\n                    windoww.invalidObjsReact.push(child);\r\n                    return \"<! Objects cannot be rendered in jsx : \" + (child as any)?.name + \">\" as T;\r\n                }\r\n                return child as T; }\r\n            if (child.props.children) {\r\n                // let deeperDepthIndices = [...depthIndices, i1];  // depthIndices; //\r\n                // should probably change deeperDepthIndices in [...deeperDepthIndices, i] in next uncommented line.\r\n                // Giordano: add ignore for webpack\r\n                //@ts-ignore\r\n                child = React.cloneElement(child, { children: UX.recursiveMap(child.props.children,\r\n                        (e: T, i2: number, ii) => fn(e, i2, ii), depthIndices) });\r\n                // this can be optimized, and i think i can avoid cloning here, as the nodes are already cloned in \"fn\" = ux.injectprops\r\n            }\r\n            return fn(child as T, i1, depthIndices);\r\n        };\r\n        if (!Array.isArray(children)) return innermap(children as ReactNode, 0, [...depthIndices, 0]) as T;\r\n        // if (typeof children[0] === \"object\") return (children).map( (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as any as T;\r\n        return React.Children.map(children, (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as T;\r\n    }\r\n    /*\r\n    public static draggable_eventmap = {\r\n        's':    {'draggable': 'onDragStart',    'rotatable': 'onRotateStart',   'resizable': 'onResizeStart'},\r\n        'ing':  {'draggable': 'whileDragging',  'rotatable': 'whileRotating',   'resizable': 'whileResizing'},\r\n        'e':    {'draggable': 'onDragEnd',      'rotatable': 'onRotateEnd',     'resizable': 'onResizeEnd'  },\r\n    };\r\n    public static draggable_eventprops= UX.initMeasurable();\r\n    static initMeasurable(): Dictionary<string, boolean>{\r\n        return U.objectFromArrayValues(Object.values(UX.draggable_eventmap).flatMap(v=>Object.values(v)), true);\r\n    }*/\r\n\r\n    static injectProp(parentComponent: GraphElementComponent, e: ReactNode, gvidmap_useless: Dictionary<DocString<'VertexID'>, boolean>,\r\n                      parentnodeid: string, index: number, indices: number[], injectOffset?: LGraph): ReactNode {\r\n        let re: ReactElement | null = UX.ReactNodeAsElement(e);\r\n\r\n        // injectOffset&&console.log(\"inject offset props 1:\", {e, re, injectOffset});\r\n        if (!re) return e;\r\n        // @ts-ignore this\r\n        // const parentComponent = this;\r\n        const type = (re.type as any).WrappedComponent?.name || re.type;\r\n        let injectProps: GraphElementOwnProps = {} as any;\r\n        /* if (false && injectOffset) {\r\n            const style = {...(re.props?.style || {})};\r\n            let offset = injectOffset.offset;\r\n            let scale = injectOffset.zoom;\r\n            style.position = \"absolute\";\r\n            style.left = offset.x;\r\n            style.top = offset.y;\r\n            style.transform = \"scale(\" + scale.x + \",\" + scale.y + \")\"\r\n            injectProps.style = style;\r\n            console.log(\"inject offset props:\", {re, injectProps});\r\n        }*/\r\n        //  fix the injection somehow. override Edge() Vertex() Asterisk() ...\r\n        // const windoww = window as any;\r\n        // console.log('ux.injectingProp pre ', {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n        // add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\r\n        switch (type) {\r\n            default:\r\n                // console.count('ux.injectingProp case default: ' + type);\r\n                if (indices.length <= 2 && (parentComponent?.props?.childStyle)) {\r\n                    // if first non-component child of a GraphElement with a clipPath shape, i assign clip path to it.\r\n                    console.log('injecting to first child (A):', {re, indices, il: indices.length, pc: parentComponent, injectProps, cs:parentComponent.props.childStyle});\r\n                    let istyle: GObject = injectProps.style = {...(injectProps.style || {})};\r\n                    injectProps.style = injectProps.style ? {...injectProps.style} : {};\r\n                    U.objectMergeInPlace(injectProps.style, parentComponent.props.childStyle);\r\n                } else return re;\r\n                break;\r\n            /*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: UX.getKey(re) || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/\r\n            // case windoww.Components.GraphElement.name:\r\n            case windoww.Components.Input.cname+\"Component\":\r\n            case windoww.Components.Select.cname+\"Component\":\r\n            case windoww.Components.TextArea.cname+\"Component\":\r\n                // todo: can i do a injector that if the user provides a ModelElement list raw <div>{this.children}</div> it wraps them in DefaultNode?\r\n                const injectProps2: InputOwnProps | SelectOwnProps = {} as any;\r\n                const parentnodeid = parentComponent.props.node?.id;\r\n                injectProps2.data = re.props.data || (typeof parentComponent.props.data === \"string\" ? parentComponent.props.data : parentComponent.props.data?.id);\r\n                // !IMPORTANT! this key does not remove the responsability of adding keys to <GraphElement>s. this is assigning the key to the first returned element by component A,\r\n                // but react needs to distinguish component A from other components, and he still doesn't have a key. in fact this is useless as this component can only have 1 child\r\n                injectProps2.key = UX.getKey(re) || (parentnodeid + \"_input_\"+index);\r\n                return React.cloneElement(re, injectProps2);\r\n            case windoww.Components.GraphElementComponent.cname:\r\n            // case windoww.Components.DefaultNode.name:\r\n            case windoww.Components.DefaultNodeComponent.cname:\r\n            // case windoww.Components.Graph.name:\r\n            // case windoww.Components.GraphComponent.cname:\r\n            case \"Graph\": case \"GraphComponent\":\r\n            // case windoww.Components.Field.name:\r\n            // case windoww.Components.FieldComponent.cname:\r\n            // case windoww.Components.Vertex.name:\r\n            case EdgeComponent.cname:\r\n            case windoww.Components.VertexComponent.cname:\r\n                injectProps.parentViewId = parentComponent.props.view.id || (parentComponent.props.view as any); // re.props.view ||  thiss.props.view\r\n                injectProps.parentnodeid = parentComponent.props.node?.id;\r\n                injectProps.graphid = parentComponent.props.graphid;\r\n                // const vidmap = GraphElementRaw.graphVertexID_counter;\r\n                // if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\r\n                // const gvidmap = vidmap[injectProps.graphid];\r\n                // const validVertexIdCondition = (id: string): boolean => gvidmap_useless[id];\r\n                // todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando? React-portals?\r\n                const dataid = (typeof re.props.data === \"string\" ? re.props.data : re.props.data?.id) || \"shapeless\";\r\n                let idbasename: string;\r\n\r\n                //console.log('injecting props ' + type, {re, pc: parentComponent, injectProps, ownProps: re.props});\r\n                if (re.props.initialSize?.id) { idbasename = re.props.initialSize?.id; } else\r\n                if (re.props.nodeid) { idbasename = re.props.nodeid; } else\r\n                if (re.props.id) { idbasename = re.props.id; } else\r\n                if (UX.getKey(re)) {\r\n                    idbasename = injectProps.parentnodeid + \"_\" +UX.getKey(re);\r\n                    // console.log(\"keyid: \", {idbasename});\r\n                }\r\n                else switch (type) {\r\n                    default:\r\n                        idbasename = injectProps.parentnodeid + \"_\" + dataid + \"N\";\r\n                        break;\r\n                    case windoww.Components.EdgePoint.cname:\r\n                        idbasename = injectProps.parentnodeid + \"_\" + (dataid || re.props.startingSize?.id || indices.join(\"_\")) + \"EP\";\r\n                        break;\r\n                    case EdgeComponent.cname: case \"Edge\":\r\n                        //console.log('injecting props ' + type + \" without key\", {re, pc: parentComponent, injectProps, ownProps: re.props});\r\n                        let edgeProps:EdgeOwnProps = re.props;\r\n                        let edgestart_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.start as any).id || edgeProps.start;\r\n                        let edgeend_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.end as any).id || edgeProps.end;\r\n                        idbasename = injectProps.parentnodeid + \"_\" + edgestart_id + \"-\" + edgeend_id;\r\n                }\r\n                // (injectProps.parentnodeid)+\"_\"+(dataid)+indices.join(\"_\");//injectProps.graphid + '_' + dataid;\r\n                // console.log(\"setting nodeid\", {injectProps, props:re.props, re});\r\n                // Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                Log.exDev(!injectProps.graphid, 'vertex is missing mandatory props (graphid).', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                if (false && indices.length === 2) {\r\n                    // if first component child, of a component? like (DefaultNode -> Vertex)?\r\n                    console.log('injecting to first child (B):', {re, pc: parentComponent, injectProps});\r\n                    if (parentComponent?.props.style?.clipPath) injectProps.style = {...(injectProps.style || {}), clipPath: parentComponent?.props.style?.clipPath||''}\r\n                }\r\n                injectProps.nodeid = idbasename; // U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\r\n                injectProps.htmlindex = indices[indices.length - 1]; // re.props.node ? re.props.node.htmlindex : indices[indices.length - 1];\r\n                injectProps.key = UX.getKey(re) || injectProps.nodeid;\r\n                // console.log(\"cloning jsx:\", re, injectProps);\r\n                Log.ex((injectProps.nodeid === injectProps.graphid||injectProps.nodeid === injectProps.parentnodeid) && type !== \"GraphComponent\", \"User manually assigned a invalid node id. please remove or change prop \\\"nodeid\\\"\", {type: (re.type as any).WrappedComponent?.cname || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n        }\r\n        //console.log('injecting props ' + type, {id: injectProps.nodeid, re, pc: parentComponent, injectProps});\r\n        return React.cloneElement(re, injectProps);\r\n    }\r\n\r\n    static ReactNodeAsElement(e: React.ReactNode): React.ReactElement | null {\r\n        return e && (e as ReactElement).type ? e as ReactElement : null;\r\n    }\r\n    static getKey(e: ReactNode): string | undefined {\r\n        return (e as any)?.key; // NOT e.props.key, key is not a part of props in ReactNode.\r\n    }\r\n\r\n    public static async deleteWithAlarm(lItem: LPointerTargetable) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: \"Delete \" + lItem.toString() + \"?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            cancelButtonText: \"No\",\r\n            showLoaderOnConfirm: true\r\n        });\r\n        if (confirm.value === true) {\r\n            lItem.delete();\r\n        }\r\n    }\r\n    public static async info(text: string) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: text,\r\n            showCancelButton: false,\r\n            confirmButtonText: \"Got It\"\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private static initPropInjectionStuff(): string[]{\r\n        UX.graphComponents = ['GraphElement', '...more'];\r\n        UX.inputComponents = ['Input', 'Select', 'TextArea','...more'];\r\n        UX.graphComponentsRegexp = new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));\r\n        UX.inputComponentRegexp = new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));\r\n        UX.viewRootProps = '\"data-viewid\": props.viewid,' +\r\n            ' addStyle: (offset ? {position:\"absolute\", left:offset.x, top:offset.y/*,transform:\"scale(\"+zoom.x+\",\"+zoom.y+\")\"*/} : undefined)';\r\n        UX.mainViewRootProps = 'ref: component.html, id: props.nodeid, \"data-nodeid\": props.nodeid, \"data-dataid\": props.dataid,\\n' +\r\n            '\"data-modelname\": data?.className || \"model-less\",' +\r\n            '\"data-userselecting\": JSON.stringify(node.isSelected || {}),' +\r\n            '\"data-nodetype\": node.className, ' +\r\n            '\"data-parentview\": props.parentviewid, ' +\r\n            //'\"data-order\": node.zIndex,' +\r\n            'onClick: component.onClick,' +\r\n            'onContextMenu: component.onContextMenu,' +\r\n            'onMouseDown: component.onMouseDown,' +\r\n            'onMouseUp: component.onMouseUp,' +\r\n            'onwheel: component.onScroll,' +\r\n            'onMouseEnter: component.onEnter,' +\r\n            'onMouseLeave: component.onLeave,' +\r\n            'tabIndex: (props as any).tabIndex || node.zIndex || -1,' +\r\n            '\"data-countrenders\": component.countRenders++,' +\r\n            'decorators: otherViews,'+// used in user jsx to inject decorator views\r\n            'classNameAdd: [(component.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"),\"mainView\", props.viewid, ...props.viewsid].join(\",\"),' +\r\n            '...this.props';\r\n        UX.decorativeViewRootProps +='classNameAdd: \"decorativeView \" + props.viewid, \"data-mainview\": mainviewid';\r\n        return UX.graphComponents\r\n    }\r\n    private static graphComponents: string[] = UX.initPropInjectionStuff();\r\n    private static inputComponents: string[] = undefined as any;\r\n    private static graphComponentsRegexp: RegExp = undefined as any;\r\n    private static inputComponentRegexp: RegExp = undefined as any;\r\n    private static GC_propsAdder(index: number): string { return \"nodeid: window._assignnodeid(props, \"+index+\"), key:\"+index; }\r\n    private static Input_propsAdder(index: number):string { return \"key:\"+index; }\r\n    private static injectPropsToString_addstuff(s: string, index: number, props: string, type: string, propsAdder?:((index: number)=>string) | undefined): string { // move out in global scope\r\n        switch (s[index]) {\r\n            case '{': // props object\r\n                // let propstr = JSON.stringify(propsToInjectAtRoot);\r\n                // propstr = propstr.substring(1, propstr.length-2);\r\n                s = s.substring(0, index+1) + props + (propsAdder ? ','+propsAdder(index) : '') + ',' + s.substring(index+1);\r\n                break;\r\n            case 'n': // null:\r\n                // let propstr = JSON.stringify(propsToInjectAtRoot)\r\n                s = s.substring(0, index) + '{'+props+(propsAdder ? ','+propsAdder(index) : '') + '}' + s.substring(index+4);\r\n                break;\r\n            default: Log.exDevv('unexpected string in '+type+' props injection parser',\r\n                {s_pre:s.substring(index-10, 10), s_post:s.substring(index, index+10), index, c:s[index], fullstr:s});\r\n                break;\r\n        }\r\n        return s;\r\n    }\r\n    private static viewRootProps: string;\r\n    private static decorativeViewRootProps: string;\r\n    private static mainViewRootProps: string;\r\n// propsToInject cannot be an object because i need variable names as prop values, NOT strings, not their immediate values. so i pass a string with a list of props\r\n    static injectPropsToString(s: string, asMainView:boolean, graphComponentsProps: string, inputComponentProps: string){\r\n        // non-root props are injected through Component constructors instead\r\n        // plan B instead: make it  \"DefaultNde({pa: \"pa\"}, [\"a\", [b,c]])\" ---> \"Root(DefaultNde, {pa: \"pa\"}, [\"a\", [b,c]]) and handle injection in Root func\r\n        const propsToInjectAtRoot = UX.viewRootProps + ','+(asMainView ? UX.mainViewRootProps : UX.decorativeViewRootProps);\r\n        //add in context: component = (this as GraphElementComponent), otherViews\r\n        // 'style: {...viewStyle, ...styleoverride},' + need to fix this\r\n        // 'className: classes.join(\\' \\'),' + and this\r\n        // and otherViews as ReactNode[]\r\n        // context.mainviewid (different from context.view in decorative views)\r\n        s = s.trim();\r\n        if (propsToInjectAtRoot.length) {\r\n            let argStartIndex = s.indexOf('(', 1) + 1;//.match(/[A-Za-z_$0-9]+\\(/)\r\n            // todo: hamdle props.addstyle\r\n            // add im props: offset: this.props.isGraph ££ this.props.ode.offset, zoom: this.props.isGraph ££ this.props.ode.zoom\r\n\r\n            if (s[argStartIndex] === \"'\") argStartIndex = s.indexOf(\"'\", argStartIndex+1);// it is a lowercase component with name as string in first param\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, propsToInjectAtRoot, 'root');\r\n\r\n            // used in GC_propsAdder as a string to be eval-ed\r\n            (window as any)._assignnodeid = function _assignnodeid(props: AllPropss, index:number): string {\r\n                const tnv = transientProperties.node[props.nodeid].viewScores[props.viewid];\r\n                if (!tnv.nodeidcounter) tnv.nodeidcounter = {};\r\n                if (tnv.nodeidcounter[index] === undefined) tnv.nodeidcounter[index] = 0;\r\n                else tnv.nodeidcounter[index]++;\r\n\r\n                return props.nodeid+'_'+index+'_'+tnv.nodeidcounter[index];\r\n                // every time before jsx render, \" let nc = transientProperties.node[props.nodeid].viewScores[props.viewid].nodeidcounter; for (let k of nc) nc[k]=0; or just nodeidcounter={}\r\n            }\r\n        }\r\n\r\n        // lowercase, no props          React.createElement('defaultNde', null, [\"a\", [a,b,c]])\r\n        // uppercase, ++ props          DefaultNde({pa: \"pa\", pb: b, pc: \"c\"}, [\"a\", [a,b,c]])\r\n        // lowercase, ++ props          React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]])\r\n        // uppercase, no props          DefaultNde(null, [\"a\", [a,b,c]])\r\n        // might have () wrapping all\r\n        // or array wrapping all\r\n        // or comments (both inline and line)\r\n        // or even a string at beginning\r\n        // nightmare case is:          `([\"a()\", /*comment()*/ React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]]),2])`\r\n        // !! fix: force users to have < as first char?? and editor tells it's wrong if this is not the case?\r\n        // that forces mono-root, but arrays would be hard to inject root-level props and prone to break anyway\r\n        let match: RegExpExecArray | null;\r\n        //here i give up, because i cannot compute nodeid without htmlindex[] from root to component\r\n        // cannot even get nodeid according to jsxstr position because of loops / map generate multiple nodes from same string index\r\n        // NO! i can do srtindex+counters[strindex]++?\r\n        //\r\n\r\n        graphComponentsProps = 'parentnodeid: props.nodeid, graphid:this.props.node.className.indexOf(\"Graph\")>=0 ? props.nodeid : props.graphid,' +\r\n            ' parentViewId:props.viewid';// + dynamically: 'nodeid, key' // - removed: htmlindex\r\n        inputComponentProps = 'data: props.data, field:\"name\"'; // + dynamically: 'key'\r\n\r\n        if (graphComponentsProps.length > 0) while (match = UX.graphComponentsRegexp.exec(s)) {\r\n            let matchstr: string = match[0];\r\n            //let pre = s.substring(0, match.index) + matchstr;\r\n            let argStartIndex = match.index + matchstr.length;\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, graphComponentsProps, 'graphElement', UX.GC_propsAdder);\r\n        }\r\n        if (inputComponentProps.length > 0) while (match = UX.inputComponentRegexp.exec(s)) {\r\n            let matchstr: string = match[0];\r\n            //let pre = s.substring(0, match.index) + matchstr;\r\n            let argStartIndex = match.index + matchstr.length;\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, inputComponentProps, 'inputComponent', UX.Input_propsAdder);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    static parseAndInject(jsxString: string, v: DViewElement): string {\r\n        let jsxCompiled: DocString<ReactNode>;\r\n        let e: any;\r\n        try { jsxCompiled = JSXT.fromString(jsxString, {factory: 'React.createElement'}); }\r\n        catch (ee: any) { e = ee; jsxCompiled = GraphElementComponent.displayError(e, \"JSX Syntax\", v, undefined, undefined, true) as any; }\r\n        return jsxCompiled;\r\n    }\r\n    static stopEvt(e: GObject<React.SyntheticEvent>): void{\r\n        if (!e) return;\r\n        e.persist?.();\r\n        (e as any).stopImmediatePropagation?.();\r\n        e.stopPropagation?.();\r\n        let ne: any = e.nativeEvent;\r\n        e._jjIsStopped = true;\r\n        if (!ne) return;\r\n        ne.stopImmediatePropagation?.();\r\n        ne.stopPropagation?.();\r\n        if (!ne.isPropagationStopped) ne.isPropagationStopped = ()=>true;\r\n        ne._jjIsStopped = true;\r\n    }\r\n    static isStoppedEvt(e: GObject<React.SyntheticEvent>): boolean{\r\n        if (!e) return true;\r\n        if (e._jjIsStopped || e.isPropagationStopped?.()) return true;\r\n        let ne: any = e.nativeEvent;\r\n        if (!ne) return false;\r\n        return !!(ne._jjIsStopped || ne.isPropagationStopped?.());\r\n    }\r\n\r\n    static options(validTargets: MultiSelectOptGroup[]): JSX.Element[] {\r\n        return validTargets\r\n            .filter(e=>!!e)\r\n            .map(e => <optgroup label={e.label}>\r\n                { e.options.filter(o=>!!o).map(o=><option value={o.value} key={o.value} title={o.title}>{o.label}</option>) }\r\n            </optgroup>);\r\n    }\r\n    /*\r\n    does not catch: visibility: hidden, opacity:0, invisible stuff inside a overflow:scroll element, overlapping z-index (returns true)\r\n    does catch display:none, top:-999999px, width:0 (returns false)\r\n    possibly zoom can mess it up\r\n    */\r\n    static isElementInViewport(el?: Element, includePartiallyVisible: boolean = true): boolean {\r\n        if (!el) return false;\r\n        var rect = el.getBoundingClientRect(); // safely returns a 0-filled struct for non-in-dom elements\r\n        return (\r\n            rect.top + (includePartiallyVisible ? rect.height : 0) >= 0 &&\r\n            rect.left + (includePartiallyVisible ? rect.width : 0)  >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n        );\r\n    }\r\n    static onVisibilityChange(el: Element, callback: ()=>any):(()=>void) {\r\n        var old_visible: boolean;\r\n        return function () {\r\n            var visible = UX.isElementInViewport(el);\r\n            if (visible === old_visible) return;\r\n            old_visible = visible;\r\n            if (typeof callback == 'function') { callback(); }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}