{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\damedges\\\\damedge.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DEdge, EdgeBendingMode, GraphElementComponent, GraphElementDispatchProps, GraphElementStatee, LPointerTargetable, RuntimeAccessibleClass, U, EdgeOwnProps, EdgeStateProps, DModelElement } from \"../../joiner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet groupingsize = {};\ngroupingsize[EdgeBendingMode.Line] = 1;\ngroupingsize[EdgeBendingMode.Bezier_quadratic] = 2;\ngroupingsize[EdgeBendingMode.Bezier_cubic] = 3;\n// groupingsize[EdgeBendingMode.Bezier_quadratic_mirrored] = 1;\n// groupingsize[EdgeBendingMode.Bezier_cubic_mirrored] = 2;\ngroupingsize[EdgeBendingMode.Elliptical_arc] = 2; // (1_coord), (rotation), (sweep    arc), (1_coord)\n\nconst superclassGraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent;\nconst superclassGraphElementComponentuntyped = RuntimeAccessibleClass.classes.GraphElementComponent;\nclass ThisStatee extends GraphElementStatee {}\nexport class EdgeComponent extends superclassGraphElementComponent {\n  constructor(props, context) {\n    super(props, context);\n  }\n  /*\r\n      path(): string {\r\n          let coords = this.pathCoords();\r\n          let svgletter: EdgeBendingMode = (this.props.view.bendingMode || \"L\");\r\n          let strings: string[] = coords.map(gp => gp.x+\" \" + gp.y);\r\n          return \"M\"+strings.join(\" \" + svgletter); }\r\n  \r\n      pathCoords(): GraphPoint[] {\r\n          const ret = this.props;\r\n          let svgletter: EdgeBendingMode = (ret).view.bendingMode;\r\n          if (!ret.node) return []; // \"node missing\"\r\n          let coords: GraphPoint[] = (ret.node.midnodes as { x:number, y:number }[] as GraphPoint[]) || [];\r\n          let grouping = groupingsize[svgletter];\r\n          console.log(\"edgeee\", {coords, svgletter, groupingsize, midnodes:ret.node.midnodes, mnraw: ret.node.midnodes.map(mn=>mn.__raw), ret});\r\n          let scoord: GraphPoint = ret.node.startPoint || new GraphPoint(10, 10);\r\n          let ecoord: GraphPoint = ret.node.endPoint || new GraphPoint(100, 100);\r\n          return [scoord, ...coords, ecoord]; }\r\n  \r\n      pathSegments(): GraphPoint[][]{\r\n          return U.pairArrayElements(this.pathCoords(), true); }\r\n  */\n  render() {\n    if (this.props.__skipRender) return null;\n    if (!this.props.node) return \"loading\";\n    // set classes\n    let nodeType = \"Edge\";\n    let classesoverride = [nodeType];\n    // set classes end\n    let styleoverride = {};\n    return super.render(nodeType, styleoverride, classesoverride);\n  }\n}\nEdgeComponent.cname = \"EdgeComponent\";\nEdgeComponent.defaultProps = EdgeOwnProps.new();\nclass DispatchProps extends GraphElementDispatchProps {}\nfunction mapStateToProps(state, ownProps) {\n  let ret = EdgeStateProps.new();\n  if (!ownProps.data && !ownProps.start || !ownProps.end) return {\n    __skipRender: true\n  };\n  if (!ownProps.data) {\n    let lstart = LPointerTargetable.from(ownProps.start);\n    if (RuntimeAccessibleClass.extends(lstart.className, DModelElement.cname)) ret.data = lstart;\n  }\n  ret = GraphElementComponent.mapStateToProps(state, ownProps, DEdge, ret);\n  // superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\n  ret.isEdgePending = {\n    user: LPointerTargetable.from(state.isEdgePending.user),\n    source: LPointerTargetable.from(state.isEdgePending.source)\n  };\n  let l;\n  if (ownProps.start) {\n    l = LPointerTargetable.from(ownProps.start);\n    if (l) ret.start = l;\n  }\n  if (ownProps.end) {\n    l = LPointerTargetable.from(ownProps.end);\n    if (l) ret.end = l;\n  }\n  U.removeEmptyObjectKeys(ret);\n  if (!ret.start || !ret.end) return {\n    __skipRender: true\n  };\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const superret = GraphElementComponent.mapDispatchToProps(dispatch);\n  const ret = new GraphElementDispatchProps();\n  U.objectMergeInPlace(superret, ret);\n  U.removeEmptyObjectKeys(superret);\n  return superret;\n}\nexport const EdgeConnected = connect(mapStateToProps, mapDispatchToProps)(EdgeComponent);\nexport const Edge = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(EdgeConnected, {\n    ...props,\n    children,\n    isGraph: false,\n    isGraphVertex: false,\n    isVertex: false,\n    isEdgePoint: false,\n    isField: false,\n    isEdge: true,\n    isVoid: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 12\n  }, _this);\n};\n_c = Edge;\nEdgeComponent.cname = \"EdgeComponent\";\nEdgeConnected.cname = \"EdgeConnected\";\nEdge.cname = \"Edge\";\nvar _c;\n$RefreshReg$(_c, \"Edge\");","map":{"version":3,"names":["React","connect","DEdge","EdgeBendingMode","GraphElementComponent","GraphElementDispatchProps","GraphElementStatee","LPointerTargetable","RuntimeAccessibleClass","U","EdgeOwnProps","EdgeStateProps","DModelElement","jsxDEV","_jsxDEV","groupingsize","Line","Bezier_quadratic","Bezier_cubic","Elliptical_arc","superclassGraphElementComponent","classes","superclassGraphElementComponentuntyped","ThisStatee","EdgeComponent","constructor","props","context","render","__skipRender","node","nodeType","classesoverride","styleoverride","cname","defaultProps","new","DispatchProps","mapStateToProps","state","ownProps","ret","data","start","end","lstart","from","extends","className","isEdgePending","user","source","l","removeEmptyObjectKeys","mapDispatchToProps","dispatch","superret","objectMergeInPlace","EdgeConnected","Edge","children","arguments","length","undefined","isGraph","isGraphVertex","isVertex","isEdgePoint","isField","isEdge","isVoid","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/damedges/damedge.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex, Dictionary,\r\n    DVoidVertex, EdgeBendingMode, GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee, GraphPoint,\r\n    GraphSize,\r\n    DState,\r\n    LClass, LEdge, LGraphElement,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LUser,\r\n    LVoidVertex, Overlap,\r\n    RuntimeAccessibleClass,\r\n    U,\r\n    EdgeOwnProps, EdgeStateProps,\r\n    LViewPoint, DModelElement, SetFieldAction, LVertex\r\n} from \"../../joiner\";\r\n\r\nlet groupingsize: Dictionary<EdgeBendingMode, number> = {} as any;\r\ngroupingsize[EdgeBendingMode.Line] = 1;\r\ngroupingsize[EdgeBendingMode.Bezier_quadratic] = 2;\r\ngroupingsize[EdgeBendingMode.Bezier_cubic] = 3;\r\n// groupingsize[EdgeBendingMode.Bezier_quadratic_mirrored] = 1;\r\n// groupingsize[EdgeBendingMode.Bezier_cubic_mirrored] = 2;\r\ngroupingsize[EdgeBendingMode.Elliptical_arc] = 2; // (1_coord), (rotation), (sweep    arc), (1_coord)\r\n\r\nconst superclassGraphElementComponent: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\nconst superclassGraphElementComponentuntyped: any = RuntimeAccessibleClass.classes.GraphElementComponent as any;\r\nclass ThisStatee extends GraphElementStatee {}\r\n\r\nexport class EdgeComponent<AllProps extends AllPropss = AllPropss, ThisState extends ThisStatee = ThisStatee>\r\n    extends superclassGraphElementComponent<AllProps, ThisState> {\r\n    public static cname: string = \"EdgeComponent\";\r\n    static defaultProps: Partial<EdgeOwnProps> = EdgeOwnProps.new();\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n/*\r\n    path(): string {\r\n        let coords = this.pathCoords();\r\n        let svgletter: EdgeBendingMode = (this.props.view.bendingMode || \"L\");\r\n        let strings: string[] = coords.map(gp => gp.x+\" \" + gp.y);\r\n        return \"M\"+strings.join(\" \" + svgletter); }\r\n\r\n    pathCoords(): GraphPoint[] {\r\n        const ret = this.props;\r\n        let svgletter: EdgeBendingMode = (ret).view.bendingMode;\r\n        if (!ret.node) return []; // \"node missing\"\r\n        let coords: GraphPoint[] = (ret.node.midnodes as { x:number, y:number }[] as GraphPoint[]) || [];\r\n        let grouping = groupingsize[svgletter];\r\n        console.log(\"edgeee\", {coords, svgletter, groupingsize, midnodes:ret.node.midnodes, mnraw: ret.node.midnodes.map(mn=>mn.__raw), ret});\r\n        let scoord: GraphPoint = ret.node.startPoint || new GraphPoint(10, 10);\r\n        let ecoord: GraphPoint = ret.node.endPoint || new GraphPoint(100, 100);\r\n        return [scoord, ...coords, ecoord]; }\r\n\r\n    pathSegments(): GraphPoint[][]{\r\n        return U.pairArrayElements(this.pathCoords(), true); }\r\n*/\r\n    render(): ReactNode {\r\n        if (this.props.__skipRender) return null;\r\n        if (!this.props.node) return \"loading\";\r\n        // set classes\r\n        let nodeType = \"Edge\";\r\n        let classesoverride = [nodeType];\r\n        // set classes end\r\n        let styleoverride: React.CSSProperties = {}\r\n        return super.render(nodeType, styleoverride, classesoverride);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass DispatchProps extends GraphElementDispatchProps {\r\n}\r\n\r\ntype AllPropss = Overlap<Overlap<EdgeOwnProps, EdgeStateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: EdgeOwnProps): EdgeStateProps {\r\n    let ret: EdgeStateProps = EdgeStateProps.new();\r\n    if (!ownProps.data && !ownProps.start || !ownProps.end) return {__skipRender: true} as any;\r\n    if (!ownProps.data) {\r\n        let lstart = LPointerTargetable.from(ownProps.start);\r\n        if (RuntimeAccessibleClass.extends(lstart.className, DModelElement.cname)) ret.data = lstart as any;\r\n    }\r\n    ret = GraphElementComponent.mapStateToProps(state, ownProps, DEdge, ret) as EdgeStateProps;\r\n    // superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\r\n    ret.isEdgePending = {\r\n        user: LPointerTargetable.from(state.isEdgePending.user),\r\n        source: LPointerTargetable.from(state.isEdgePending.source)\r\n    };\r\n    let l: GObject;\r\n\r\n    if (ownProps.start){ l = LPointerTargetable.from(ownProps.start); if (l) ret.start = l as LVertex; }\r\n    if (ownProps.end){ l = LPointerTargetable.from(ownProps.end); if (l) ret.end = l as LVertex; }\r\n\r\n    U.removeEmptyObjectKeys(ret);\r\n    if (!ret.start || !ret.end) return {__skipRender: true} as any;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const superret: GraphElementDispatchProps = GraphElementComponent.mapDispatchToProps(dispatch);\r\n    const ret: GraphElementDispatchProps = new GraphElementDispatchProps();\r\n    U.objectMergeInPlace(superret, ret);\r\n    U.removeEmptyObjectKeys(superret);\r\n    return superret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<EdgeStateProps, DispatchProps, EdgeOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent as any);\r\n\r\nexport const Edge = (props: EdgeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, children}}\r\n                          isGraph={false} isGraphVertex={false} isVertex={false} isEdgePoint={false} isField={false} isEdge={true} isVoid={false} />;\r\n}\r\n\r\nEdgeComponent.cname = \"EdgeComponent\";\r\nEdgeConnected.cname = \"EdgeConnected\";\r\nEdge.cname = \"Edge\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}