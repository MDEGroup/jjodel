{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\rightbar\\\\viewsEditor\\\\data\\\\SubViewsData.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React from 'react';\nimport { DUser, LUser, LViewElement } from '../../../../joiner';\nimport { connect } from 'react-redux';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubViewsDataComponent(props) {\n  _s();\n  const view = props.view;\n  const project = props.project;\n  const readOnly = props.readonly;\n  const [hoverID, setHoverID] = useStateIfMounted('');\n  const [possibleSubViews, setPossibleSubViews] = useStateIfMounted(project.views.filter(v => v && v.id !== view.id && !view.subViews.map(v => v.id).includes(v.id)));\n  const [subViewID, setSubViewID] = useStateIfMounted(possibleSubViews[0] ? possibleSubViews[0].id : '');\n  const add = e => {\n    if (!subViewID) return;\n    view.setSubViewScore(subViewID, 1.5);\n    const _possibleSubViews = project.views.filter(v => v && v.id !== subViewID && v.id !== view.id && !view.subViews.map(v => v.id).includes(v.id));\n    setPossibleSubViews(_possibleSubViews);\n    setSubViewID(_possibleSubViews[0] ? _possibleSubViews[0].id : '');\n  };\n  const remove = (e, subView) => {\n    e.preventDefault();\n    e.stopPropagation();\n    view.setSubViewScore(subViewID, null);\n    setPossibleSubViews([...possibleSubViews, subView]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'p-3',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex w-100 mb-2',\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: 'my-auto select ',\n        value: subViewID,\n        onChange: e => setSubViewID(e.target.value),\n        children: possibleSubViews.map((v, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: v.id,\n            children: v.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn btn-primary ms-auto',\n        onClick: add,\n        disabled: !subViewID || readOnly,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: 'p-1 bi bi-plus'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), view.subViews.map((subView, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex p-1 mt-1 border round mx-1',\n        tabIndex: -1,\n        onMouseEnter: e => setHoverID(subView.id),\n        onMouseLeave: e => setHoverID(''),\n        onClick: e => props.setSelectedView(subView),\n        style: {\n          cursor: 'pointer',\n          background: hoverID === subView.id ? '#E0E0E0' : 'transparent'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            cursor: 'pointer'\n          },\n          className: 'my-auto',\n          children: subView.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'btn btn-danger ms-auto',\n          disabled: readOnly,\n          onClick: e => remove(e, subView),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: 'p-1 bi bi-trash3-fill'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    })]\n  }, view.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_s(SubViewsDataComponent, \"SAHMY7+AHMJi9MkZGPVLgOc8SXI=\", false, function () {\n  return [useStateIfMounted, useStateIfMounted, useStateIfMounted];\n});\n_c = SubViewsDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LViewElement.fromPointer(ownProps.viewID);\n  const user = LUser.fromPointer(DUser.current);\n  ret.project = user.project;\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const SubViewsDataConnected = connect(mapStateToProps, mapDispatchToProps)(SubViewsDataComponent);\nexport const SubViewsData = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(SubViewsDataConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = SubViewsData;\nexport default SubViewsData;\nvar _c, _c2;\n$RefreshReg$(_c, \"SubViewsDataComponent\");\n$RefreshReg$(_c2, \"SubViewsData\");","map":{"version":3,"names":["React","DUser","LUser","LViewElement","connect","useStateIfMounted","jsxDEV","_jsxDEV","SubViewsDataComponent","props","_s","view","project","readOnly","readonly","hoverID","setHoverID","possibleSubViews","setPossibleSubViews","views","filter","v","id","subViews","map","includes","subViewID","setSubViewID","add","e","setSubViewScore","_possibleSubViews","remove","subView","preventDefault","stopPropagation","className","children","value","onChange","target","index","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","tabIndex","onMouseEnter","onMouseLeave","setSelectedView","style","cursor","background","_c","mapStateToProps","state","ownProps","ret","fromPointer","viewID","user","current","mapDispatchToProps","dispatch","SubViewsDataConnected","SubViewsData","arguments","length","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/rightbar/viewsEditor/data/SubViewsData.tsx"],"sourcesContent":["import React, {Dispatch, MouseEvent, ReactElement, useEffect} from 'react';\r\nimport {\r\n    DState,\r\n    DUser,\r\n    DViewElement,\r\n    LProject,\r\n    LUser,\r\n    LViewElement,\r\n    Pointer, SetFieldAction,\r\n    SetRootFieldAction,\r\n    U\r\n} from '../../../../joiner';\r\nimport {connect} from 'react-redux';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport {FakeStateProps} from '../../../../joiner/types';\r\n\r\nfunction SubViewsDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const project = props.project;\r\n\r\n    const readOnly = props.readonly;\r\n    const [hoverID, setHoverID] = useStateIfMounted('');\r\n    const [possibleSubViews, setPossibleSubViews] = useStateIfMounted(project.views.filter(v => v && v.id !== view.id && !view.subViews.map(v => v.id).includes(v.id)));\r\n    const [subViewID, setSubViewID] = useStateIfMounted((possibleSubViews[0]) ? possibleSubViews[0].id : '');\r\n\r\n    const add = (e: MouseEvent) => {\r\n        if(!subViewID) return;\r\n        view.setSubViewScore(subViewID, 1.5);\r\n        const _possibleSubViews = project.views.filter(v => v && v.id !== subViewID && v.id !== view.id && !view.subViews.map(v => v.id).includes(v.id));\r\n        setPossibleSubViews(_possibleSubViews);\r\n        setSubViewID((_possibleSubViews[0]) ? _possibleSubViews[0].id : '');\r\n    }\r\n\r\n\r\n    const remove = (e: MouseEvent, subView: LViewElement) => {\r\n        e.preventDefault(); e.stopPropagation();\r\n        view.setSubViewScore(subViewID, null);\r\n        setPossibleSubViews([...possibleSubViews, subView]);\r\n    }\r\n\r\n    return(<section key={view.id} className={'p-3'}>\r\n        <div className={'d-flex w-100 mb-2'}>\r\n            <select className={'my-auto select '} value={subViewID} onChange={e => setSubViewID(e.target.value)}>\r\n                {possibleSubViews.map((v, index) => {\r\n                    return(<option key={index} value={v.id}>{v.name}</option>)\r\n                })}\r\n            </select>\r\n            <button className={'btn btn-primary ms-auto'} onClick={add} disabled={!subViewID || readOnly}>\r\n                <i className={'p-1 bi bi-plus'}></i>\r\n            </button>\r\n        </div>\r\n        {view.subViews.map((subView, index) => {\r\n            return <div key={index} className={'d-flex p-1 mt-1 border round mx-1'} tabIndex={-1}\r\n                        onMouseEnter={e => setHoverID(subView.id)} onMouseLeave={e => setHoverID('')}\r\n                        onClick={e => props.setSelectedView(subView)}\r\n                        style={{cursor: 'pointer', background: hoverID === subView.id ? '#E0E0E0' : 'transparent'}}>\r\n                <label style={{cursor: 'pointer'}} className={'my-auto'}>{subView.name}</label>\r\n                <button className={'btn btn-danger ms-auto'} disabled={readOnly}\r\n                        onClick={e => remove(e, subView)}>\r\n                    <i className={'p-1 bi bi-trash3-fill'}></i>\r\n                </button>\r\n            </div>\r\n        })}\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement, 1, 1, LViewElement>;\r\n    readonly: boolean;\r\n    setSelectedView: React.Dispatch<React.SetStateAction<LViewElement | undefined>>;// (val: LViewElement | undefined) => {}\r\n}\r\ninterface StateProps {\r\n    view: LViewElement;\r\n    project: LProject;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LViewElement.fromPointer(ownProps.viewID);\r\n    const user = LUser.fromPointer(DUser.current);\r\n    ret.project = user.project as LProject;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const SubViewsDataConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SubViewsDataComponent);\r\n\r\nexport const SubViewsData = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <SubViewsDataConnected {...{...props, children}} />;\r\n}\r\nexport default SubViewsData;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAuD,OAAO;AAC1E,SAEIC,KAAK,EAGLC,KAAK,EACLC,YAAY,QAIT,oBAAoB;AAC3B,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,iBAAiB,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,SAASC,qBAAqBA,CAACC,KAAe,EAAE;EAAAC,EAAA;EAC5C,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EACvB,MAAMC,OAAO,GAAGH,KAAK,CAACG,OAAO;EAE7B,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,QAAQ;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,iBAAiB,CAAC,EAAE,CAAC;EACnD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,iBAAiB,CAACO,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKX,IAAI,CAACW,EAAE,IAAI,CAACX,IAAI,CAACY,QAAQ,CAACC,GAAG,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAACG,QAAQ,CAACJ,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC;EACnK,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGtB,iBAAiB,CAAEY,gBAAgB,CAAC,CAAC,CAAC,GAAIA,gBAAgB,CAAC,CAAC,CAAC,CAACK,EAAE,GAAG,EAAE,CAAC;EAExG,MAAMM,GAAG,GAAIC,CAAa,IAAK;IAC3B,IAAG,CAACH,SAAS,EAAE;IACff,IAAI,CAACmB,eAAe,CAACJ,SAAS,EAAE,GAAG,CAAC;IACpC,MAAMK,iBAAiB,GAAGnB,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKI,SAAS,IAAIL,CAAC,CAACC,EAAE,KAAKX,IAAI,CAACW,EAAE,IAAI,CAACX,IAAI,CAACY,QAAQ,CAACC,GAAG,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAACG,QAAQ,CAACJ,CAAC,CAACC,EAAE,CAAC,CAAC;IAChJJ,mBAAmB,CAACa,iBAAiB,CAAC;IACtCJ,YAAY,CAAEI,iBAAiB,CAAC,CAAC,CAAC,GAAIA,iBAAiB,CAAC,CAAC,CAAC,CAACT,EAAE,GAAG,EAAE,CAAC;EACvE,CAAC;EAGD,MAAMU,MAAM,GAAGA,CAACH,CAAa,EAAEI,OAAqB,KAAK;IACrDJ,CAAC,CAACK,cAAc,CAAC,CAAC;IAAEL,CAAC,CAACM,eAAe,CAAC,CAAC;IACvCxB,IAAI,CAACmB,eAAe,CAACJ,SAAS,EAAE,IAAI,CAAC;IACrCR,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAEgB,OAAO,CAAC,CAAC;EACvD,CAAC;EAED,oBAAO1B,OAAA;IAAuB6B,SAAS,EAAE,KAAM;IAAAC,QAAA,gBAC3C9B,OAAA;MAAK6B,SAAS,EAAE,mBAAoB;MAAAC,QAAA,gBAChC9B,OAAA;QAAQ6B,SAAS,EAAE,iBAAkB;QAACE,KAAK,EAAEZ,SAAU;QAACa,QAAQ,EAAEV,CAAC,IAAIF,YAAY,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;QAAAD,QAAA,EAC/FpB,gBAAgB,CAACO,GAAG,CAAC,CAACH,CAAC,EAAEoB,KAAK,KAAK;UAChC,oBAAOlC,OAAA;YAAoB+B,KAAK,EAAEjB,CAAC,CAACC,EAAG;YAAAe,QAAA,EAAEhB,CAAC,CAACqB;UAAI,GAA3BD,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CAAC;QAC7D,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACTvC,OAAA;QAAQ6B,SAAS,EAAE,yBAA0B;QAACW,OAAO,EAAEnB,GAAI;QAACoB,QAAQ,EAAE,CAACtB,SAAS,IAAIb,QAAS;QAAAwB,QAAA,eACzF9B,OAAA;UAAG6B,SAAS,EAAE;QAAiB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACLnC,IAAI,CAACY,QAAQ,CAACC,GAAG,CAAC,CAACS,OAAO,EAAEQ,KAAK,KAAK;MACnC,oBAAOlC,OAAA;QAAiB6B,SAAS,EAAE,mCAAoC;QAACa,QAAQ,EAAE,CAAC,CAAE;QACzEC,YAAY,EAAErB,CAAC,IAAIb,UAAU,CAACiB,OAAO,CAACX,EAAE,CAAE;QAAC6B,YAAY,EAAEtB,CAAC,IAAIb,UAAU,CAAC,EAAE,CAAE;QAC7E+B,OAAO,EAAElB,CAAC,IAAIpB,KAAK,CAAC2C,eAAe,CAACnB,OAAO,CAAE;QAC7CoB,KAAK,EAAE;UAACC,MAAM,EAAE,SAAS;UAAEC,UAAU,EAAExC,OAAO,KAAKkB,OAAO,CAACX,EAAE,GAAG,SAAS,GAAG;QAAa,CAAE;QAAAe,QAAA,gBACnG9B,OAAA;UAAO8C,KAAK,EAAE;YAACC,MAAM,EAAE;UAAS,CAAE;UAAClB,SAAS,EAAE,SAAU;UAAAC,QAAA,EAAEJ,OAAO,CAACS;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/EvC,OAAA;UAAQ6B,SAAS,EAAE,wBAAyB;UAACY,QAAQ,EAAEnC,QAAS;UACxDkC,OAAO,EAAElB,CAAC,IAAIG,MAAM,CAACH,CAAC,EAAEI,OAAO,CAAE;UAAAI,QAAA,eACrC9B,OAAA;YAAG6B,SAAS,EAAE;UAAwB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA,GARIL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASjB,CAAC;IACV,CAAC,CAAC;EAAA,GAtBenC,IAAI,CAACW,EAAE;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAuBnB,CAAC;AACd;AAACpC,EAAA,CAhDQF,qBAAqB;EAAA,QAKIH,iBAAiB,EACCA,iBAAiB,EAC/BA,iBAAiB;AAAA;AAAAmD,EAAA,GAP9ChD,qBAAqB;AA8D9B,SAASiD,eAAeA,CAACC,KAAa,EAAEC,QAAkB,EAAc;EACpE,MAAMC,GAAe,GAAG,CAAC,CAAmB;EAC5CA,GAAG,CAACjD,IAAI,GAAGR,YAAY,CAAC0D,WAAW,CAACF,QAAQ,CAACG,MAAM,CAAC;EACpD,MAAMC,IAAI,GAAG7D,KAAK,CAAC2D,WAAW,CAAC5D,KAAK,CAAC+D,OAAO,CAAC;EAC7CJ,GAAG,CAAChD,OAAO,GAAGmD,IAAI,CAACnD,OAAmB;EACtC,OAAOgD,GAAG;AACd;AAEA,SAASK,kBAAkBA,CAACC,QAAuB,EAAiB;EAChE,MAAMN,GAAkB,GAAG,CAAC,CAAC;EAC7B,OAAOA,GAAG;AACd;AAEA,OAAO,MAAMO,qBAAqB,GAAG/D,OAAO,CACxCqD,eAAe,EACfQ,kBACJ,CAAC,CAACzD,qBAAqB,CAAC;AAExB,OAAO,MAAM4D,YAAY,GAAG,SAAAA,CAAC3D,KAAe,EAAgE;EAAA,IAA9D4B,QAAsC,GAAAgC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACrF,oBAAO9D,OAAA,CAAC4D,qBAAqB;IAAM,GAAG1D,KAAK;IAAE4B;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAA0B,KAAI,CAAC;AAC9D,CAAC;AAAAC,GAAA,GAFYL,YAAY;AAGzB,eAAeA,YAAY;AAAC,IAAAZ,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}