{"ast":null,"code":"import React,{useState}from'react';import'./widgets.scss';import{SetRootFieldAction}from'../../joiner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const InternalToggle=props=>{const[value,setValue]=useState(false);const labels=props.labels?props.labels:{true:props.name+' on',false:props.name+' off'};const toggleValue=()=>{const newValue=!value;setValue(newValue);SetRootFieldAction.new(props.name,newValue);};let trueval=props.values?props.values.true:true;let falseval=props.values?props.values.false:false;return/*#__PURE__*/_jsxs(\"div\",{className:'toggle '+(props.size||'medium'),onClick:()=>{toggleValue();},style:props.style,children:[/*#__PURE__*/_jsx(\"input\",{className:'toggle-input',id:props.name,type:'checkbox',checked:value}),/*#__PURE__*/_jsx(\"label\",{className:'toggle-label'}),/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-labels\",children:[value===trueval&&/*#__PURE__*/_jsx(\"span\",{className:\"toggle-on\",children:labels['true']}),value===falseval&&/*#__PURE__*/_jsx(\"span\",{className:\"toggle-off\",children:labels['false']})]})]});};export const HRule=props=>{const theme=!props.theme?'normal':props.theme;return/*#__PURE__*/_jsx(_Fragment,{children:props.style?/*#__PURE__*/_jsx(\"hr\",{className:\"hrule \".concat(theme),style:props.style}):/*#__PURE__*/_jsx(\"hr\",{className:\"hrule \".concat(theme)})});};","map":{"version":3,"names":["React","useState","SetRootFieldAction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InternalToggle","props","value","setValue","labels","true","name","false","toggleValue","newValue","new","trueval","values","falseval","className","size","onClick","style","children","id","type","checked","HRule","theme","concat"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/widgets/Widgets.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './widgets.scss';\r\nimport { event } from 'jquery';\r\nimport {int, PrimitiveType} from '../../joiner/types';\r\nimport { windoww } from '../../joiner/types';\r\nimport { SetRootFieldAction } from '../../joiner';\r\nimport { MapStateToProps } from 'react-redux';\r\nimport { InputMapStateToProps } from '../forEndUser/Input';\r\nimport { DState } from '../../joiner';\r\nimport { VertexOwnProps, VertexStateProps } from '../../graph/graphElement/sharedTypes/sharedTypes';\r\n\r\n\r\n\r\ntype InToggleValues = {\r\n    true: PrimitiveType;\r\n    false: PrimitiveType;\r\n}\r\n\r\ntype InToggleProps = {\r\n    name: string;\r\n    values?: InToggleValues;\r\n    labels?: InToggleValues;\r\n    size?: string; // \"small\" | \"medium\" | \"large\";\r\n    style?: React.CSSProperties;\r\n};\r\n\r\nexport const InternalToggle = (props: InToggleProps) => {\r\n    const [value, setValue] = useState<boolean>(false);\r\n\r\n    const labels = props.labels ? props.labels : {true: props.name+' on', false: props.name+' off'};\r\n\r\n    const toggleValue = () => {\r\n        const newValue = !value;\r\n        setValue(newValue);\r\n        SetRootFieldAction.new(props.name, newValue);\r\n    };\r\n    let trueval = props.values ? props.values.true : true;\r\n    let falseval = props.values ? props.values.false : false;\r\n\r\n    return (\r\n        <div className={'toggle ' + (props.size || 'medium')} onClick={() => {toggleValue()}} style={props.style}>\r\n\r\n            <input className={'toggle-input'} id={props.name} type={'checkbox'} checked={value}  />\r\n            <label className={'toggle-label'}></label>\r\n            <div className={\"toggle-labels\"}>\r\n                {value === trueval && <span className={\"toggle-on\"}>{labels['true']}</span>}\r\n                {value === falseval && <span className={\"toggle-off\"}>{labels['false']}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype HRuleProps = {\r\n    theme?:  'normal' | 'light' | 'dark';\r\n    style?: React.CSSProperties;\r\n}\r\nexport const HRule = (props: HRuleProps) => {\r\n\r\n    const theme = (!props.theme ? 'normal' : props.theme);\r\n    return (<>\r\n        {props.style ?\r\n            <hr className={`hrule ${theme}`} style={props.style}></hr>\r\n        :\r\n            <hr className={`hrule ${theme}`} ></hr>\r\n        }\r\n    </>);\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,gBAAgB,CAIvB,OAASC,kBAAkB,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAqBlD,MAAO,MAAM,CAAAC,cAAc,CAAIC,KAAoB,EAAK,CACpD,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAU,KAAK,CAAC,CAElD,KAAM,CAAAY,MAAM,CAAGH,KAAK,CAACG,MAAM,CAAGH,KAAK,CAACG,MAAM,CAAG,CAACC,IAAI,CAAEJ,KAAK,CAACK,IAAI,CAAC,KAAK,CAAEC,KAAK,CAAEN,KAAK,CAACK,IAAI,CAAC,MAAM,CAAC,CAE/F,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,QAAQ,CAAG,CAACP,KAAK,CACvBC,QAAQ,CAACM,QAAQ,CAAC,CAClBhB,kBAAkB,CAACiB,GAAG,CAACT,KAAK,CAACK,IAAI,CAAEG,QAAQ,CAAC,CAChD,CAAC,CACD,GAAI,CAAAE,OAAO,CAAGV,KAAK,CAACW,MAAM,CAAGX,KAAK,CAACW,MAAM,CAACP,IAAI,CAAG,IAAI,CACrD,GAAI,CAAAQ,QAAQ,CAAGZ,KAAK,CAACW,MAAM,CAAGX,KAAK,CAACW,MAAM,CAACL,KAAK,CAAG,KAAK,CAExD,mBACIV,KAAA,QAAKiB,SAAS,CAAE,SAAS,EAAIb,KAAK,CAACc,IAAI,EAAI,QAAQ,CAAE,CAACC,OAAO,CAAEA,CAAA,GAAM,CAACR,WAAW,CAAC,CAAC,EAAE,CAACS,KAAK,CAAEhB,KAAK,CAACgB,KAAM,CAAAC,QAAA,eAErGvB,IAAA,UAAOmB,SAAS,CAAE,cAAe,CAACK,EAAE,CAAElB,KAAK,CAACK,IAAK,CAACc,IAAI,CAAE,UAAW,CAACC,OAAO,CAAEnB,KAAM,CAAG,CAAC,cACvFP,IAAA,UAAOmB,SAAS,CAAE,cAAe,CAAQ,CAAC,cAC1CjB,KAAA,QAAKiB,SAAS,CAAE,eAAgB,CAAAI,QAAA,EAC3BhB,KAAK,GAAKS,OAAO,eAAIhB,IAAA,SAAMmB,SAAS,CAAE,WAAY,CAAAI,QAAA,CAAEd,MAAM,CAAC,MAAM,CAAC,CAAO,CAAC,CAC1EF,KAAK,GAAKW,QAAQ,eAAIlB,IAAA,SAAMmB,SAAS,CAAE,YAAa,CAAAI,QAAA,CAAEd,MAAM,CAAC,OAAO,CAAC,CAAO,CAAC,EAC7E,CAAC,EACL,CAAC,CAEd,CAAC,CAMD,MAAO,MAAM,CAAAkB,KAAK,CAAIrB,KAAiB,EAAK,CAExC,KAAM,CAAAsB,KAAK,CAAI,CAACtB,KAAK,CAACsB,KAAK,CAAG,QAAQ,CAAGtB,KAAK,CAACsB,KAAM,CACrD,mBAAQ5B,IAAA,CAAAI,SAAA,EAAAmB,QAAA,CACHjB,KAAK,CAACgB,KAAK,cACRtB,IAAA,OAAImB,SAAS,UAAAU,MAAA,CAAWD,KAAK,CAAG,CAACN,KAAK,CAAEhB,KAAK,CAACgB,KAAM,CAAK,CAAC,cAE1DtB,IAAA,OAAImB,SAAS,UAAAU,MAAA,CAAWD,KAAK,CAAG,CAAM,CAAC,CAE7C,CAAC,CACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}