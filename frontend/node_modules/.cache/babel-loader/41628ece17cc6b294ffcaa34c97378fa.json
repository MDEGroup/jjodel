{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\viewsEditor\\\\data\\\\PaletteData.tsx\",\n  _s3 = $RefreshSig$(),\n  _this = this;\n/* Viewpoints > Style */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\nimport tinycolor from \"tinycolor2\";\nimport Editor from \"@monaco-editor/react\";\nimport 'smart-webcomponents-react/source/styles/smart.default.css';\nimport { EdgeHead, Input, Keystrokes, Log, LViewElement, U } from '../../../../joiner';\nimport { CSS_Units } from '../../../../view/viewElement/view';\nimport { Color } from '../../../forEndUser/Color';\nimport { CommandBar, Btn } from '../../../commandbar/CommandBar';\nimport { HRule } from '../../../widgets/Widgets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction makeNumericInput(prefix, number, setNumber, setText, readOnly) {\n  let min;\n  let max;\n  let step = undefined;\n  switch (number.unit) {\n    case '':\n    case 'px':\n      min = 0;\n      max = 300;\n      break;\n    case 'pt':\n      break;\n    // 1pt = 1.33 px; 1px = 0.75pt\n    case 'cm':\n    case 'mm':\n      min = 0;\n      max = 200;\n      break;\n    // 1mm = 3.7px\n    case 'ch':\n    case 'ex':\n    case 'em':\n    case 'rem':\n    case 'in': // 1in = 96px\n    case 'pc': // 2px = 0.125 picas; 18.75pc = 300px\n    case 'fr':\n      min = 0;\n      max = 20;\n      step = 0.5;\n      break;\n    case \"%\":\n    case \"vh\":\n    case \"vw\":\n    case \"vmax\":\n    case \"vmin\":\n      min = 0;\n      max = 100;\n      break;\n  }\n  let roundedValue0 = Math.round(((number.value || 0) - (typeof step === \"number\" ? number.value % step : number.value % 0.1)) * 10000) / 10000; // % works on decimals right.\n  let roundedValue = typeof step === \"number\" ? Math.round((number.value || 0) * (1 / step)) * step : Math.round(number.value * 100) / 100; // % works on decimals right.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"value\",\n      placeholder: \"value\",\n      type: \"range\",\n      disabled: readOnly,\n      defaultValue: number.value,\n      min: min,\n      max: max,\n      step: \"any\",\n      onBlur: e => {\n        setNumber(e, prefix);\n      },\n      onMouseUp: e => {\n        setNumber(e, prefix);\n      }\n    }, \"s\" + number.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"spinner\",\n      placeholder: \"value\",\n      type: \"number\",\n      disabled: readOnly,\n      defaultValue: roundedValue,\n      \"data-dv\": roundedValue,\n      \"data-dv2\": number.value,\n      step: step,\n      onBlur: e => {\n        setNumber(e, prefix);\n      },\n      onKeyDown: e => {\n        if (e.key === Keystrokes.enter) setNumber(e, prefix);\n        if (e.key === Keystrokes.escape) e.target.value = '' + number.value;\n      }\n    }, roundedValue, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n// delete button <button className=\"btn btn-danger ms-1\"><i className=\"p-1 bi bi-trash3-fill\"/></button>\nfunction PaletteDataComponent(props) {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const view = props.view;\n  const readOnly = props.readonly;\n  let palette = {\n    ...view.palette\n  };\n  let tmp = undefined;\n  const [css, setCss] = useStateIfMounted(view.css);\n  const [expand, setExpand] = useStateIfMounted(false);\n  const change = value => {\n    if (value !== undefined) setCss(value);\n  }; // save in local state for frequent changes.\n  const blur = () => view.css = css; // confirm in redux state for final state\n\n  /* *** alfonso *** */\n\n  function useClickOutside(ref, onClickOutside) {\n    _s();\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          onClickOutside();\n        }\n      }\n\n      // Bind\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // dispose\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref, onClickOutside]);\n  }\n  _s(useClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const AddPalette = () => {\n    _s2();\n    const [open, setOpen] = useState(false);\n    const menuRef = useRef(null);\n    useClickOutside(menuRef, () => {\n      setOpen(false);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !open ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'add-palette-item',\n        onClick: () => {\n          setOpen(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'white'\n          },\n          className: \"bi bi-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'add-palette-item active',\n          onClick: () => {\n            setOpen(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              color: 'white'\n            },\n            className: \"bi bi-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addControl('palette'),\n          className: \"btn btn-success my-btn btn-color\",\n          children: \"Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addControl('number'),\n          className: \"btn btn-success my-btn btn-number\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addControl('text'),\n          className: \"btn btn-success my-btn btn-textual\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addControl('path'),\n          className: \"btn btn-success my-btn btn-path\",\n          children: \"Path\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  };\n\n  /* *** */\n  _s2(AddPalette, \"gcWb2bgdbwmQyTM5ZcnMQYMBF7g=\", false, function () {\n    return [useClickOutside];\n  });\n  const addControl = type => {\n    if (readOnly) return;\n    let i;\n    let prefix0; //= 'palette_' + i + '-';\n    switch (type) {\n      default:\n        Log.exDevv(\"unexpected case in addControl:\" + type);\n        return;\n      case 'path':\n        i = Object.values(palette).filter(o => o.type === \"path\").length + 1;\n        prefix0 = 'path_';\n        break;\n      case 'text':\n        i = Object.values(palette).filter(o => o.type === \"text\").length + 1;\n        prefix0 = 'text_';\n        break;\n      case 'number':\n        i = Object.values(palette).filter(o => o.type === \"number\").length + 1;\n        prefix0 = 'numeric_';\n        break;\n      case 'palette':\n        i = Object.values(palette).filter(o => Array.isArray(o)).length + 1;\n        prefix0 = 'palette_';\n        break;\n    }\n    let prefix;\n    while (true) {\n      prefix = prefix0 + i++;\n      if (prefix in palette) continue;\n      break;\n    }\n    switch (type) {\n      default:\n        Log.exDevv(\"unexpected case in addControl:\" + type);\n        return;\n      case 'path':\n        const agglabel = \"◇ Aggregation / Composition\";\n        const extendlabel = \"△ \" + EdgeHead.extend;\n        const asslabel = \"Λ \" + EdgeHead.reference;\n        let headdict = {\n          [asslabel]: 'M 0 0   L x y/2   L 0 y',\n          [extendlabel]: 'M 0 0   L x y/2   L 0 y   Z',\n          [agglabel]: 'M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z'\n        };\n        let predefinedPaths = Object.entries(headdict).map(e => ({\n          k: e[0],\n          v: e[1]\n        }));\n        tmp = {\n          ...palette\n        };\n        tmp[prefix] = {\n          type: 'path',\n          value: '',\n          x: 'edgeHeadSize.x',\n          y: 'edgeHeadSize.y',\n          options: predefinedPaths\n        };\n        break;\n      case 'text':\n        tmp = {\n          ...palette\n        };\n        tmp[prefix] = {\n          type: 'text',\n          value: ''\n        };\n        break;\n      case 'number':\n        tmp = {\n          ...palette\n        };\n        tmp[prefix] = {\n          type: 'number',\n          value: 0,\n          unit: 'px'\n        };\n        break;\n      case 'palette':\n        tmp = {\n          ...palette\n        };\n        tmp[prefix] = {\n          type: 'color',\n          value: []\n        };\n        break;\n    }\n    view.palette = palette = tmp;\n  };\n  const setGeneric = (e, prefix, key) => {\n    const val = e.target.value;\n    if (readOnly || palette[prefix][key] === val) return;\n    let tmp = {\n      ...palette\n    };\n    tmp[prefix][key] = val;\n    view.palette = palette = tmp;\n  };\n  const setText = (e, prefix) => {\n    const val = e.target.value;\n    if (readOnly || palette[prefix].value === val) return;\n    let tmp = {\n      ...palette\n    };\n    tmp[prefix].value = val;\n    view.palette = palette = tmp;\n  };\n  const setNumber = (e, prefix) => {\n    const val = +e.target.value || 0;\n    if (readOnly || palette[prefix].value === val) return;\n    let tmp = {\n      ...palette\n    };\n    tmp[prefix].value = val;\n    view.palette = palette = tmp;\n  };\n  const setUnit = (e, prefix) => {\n    const val = e.target.value === undefined ? 'px' : e.target.value;\n    if (readOnly || val === palette[prefix].unit) return;\n    let tmp = {\n      ...palette\n    };\n    tmp[prefix].unit = val;\n    view.palette = palette = tmp;\n  };\n  const changePrefix = (oldPrefix, newPrefix) => {\n    newPrefix = newPrefix.replaceAll(/[^\\w\\-]/g, '-'); // /^[^a-zA-Z0-9_\\-]*$/, '-');\n    if (readOnly || palette[newPrefix]) return; // refuse to overwrite existing palette name (2 different palettes with same name)\n    tmp = {\n      ...palette\n    };\n    tmp[newPrefix] = palette[oldPrefix];\n    delete tmp[oldPrefix];\n    view.palette = palette = tmp;\n  };\n  const removeControl = prefix => {\n    if (readOnly || !palette[prefix]) return;\n    tmp = {\n      ...palette\n    };\n    delete tmp[prefix];\n    view.palette = palette = tmp;\n  };\n  const addColor = function (prefix, colors) {\n    let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    let skipFirst = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    if (readOnly) return;\n    if (!Array.isArray(colors)) {\n      colors = [colors];\n      skipFirst = false;\n    }\n    let tmp = {\n      ...palette\n    };\n    let lastAdded = undefined;\n    for (let i = colors.length - 1; i >= (skipFirst ? 1 : 0); i--) {\n      let color = colors[i];\n      let rgba = color.toRgb();\n      console.log(\"addingColor:\", {\n        rgba,\n        lastAdded,\n        color\n      });\n      if (rgba === lastAdded) continue;\n      lastAdded = rgba;\n      if (!tmp[prefix]) tmp[prefix] = {\n        type: 'color',\n        value: []\n      };else tmp[prefix] = {\n        ...tmp[prefix]\n      };\n      tmp[prefix].value = [...tmp[prefix].value];\n      if (index >= 0) tmp[prefix].value.splice(index + 1, 0, rgba);else tmp[prefix].value.push(rgba);\n    }\n    view.palette = palette = tmp;\n  };\n  const setColor = (prefix, index, hex, alpha) => {\n    let tmp = {\n      ...palette\n    };\n    if (readOnly || !tmp[prefix]) tmp[prefix] = {\n      type: 'color',\n      value: []\n    };else tmp[prefix] = {\n      ...tmp[prefix]\n    };\n    let oldColor = tmp[prefix].value[index];\n    if (hex) {\n      let color = tinycolor(hex);\n      if (alpha !== undefined) color.setAlpha(alpha);\n      let rgba = color.toRgb();\n      if (oldColor && oldColor.a !== undefined) rgba.a = oldColor.a;\n      tmp[prefix].value[index] = oldColor = rgba;\n      view.palette = palette = tmp;\n    }\n    if (alpha !== undefined) tmp[prefix].value[index] = {\n      ...oldColor,\n      a: alpha\n    };\n  };\n  const transparencyColor = (prefix, index, color, alpha) => {\n    if (readOnly || !palette[prefix]) return;\n    let tmp = {\n      ...palette\n    };\n    if (!alpha && alpha !== 0) alpha = 1;\n    tmp[prefix] = {\n      ...tmp[prefix]\n    };\n    tmp[prefix].value = [...tmp[prefix].value];\n    tmp[prefix].value[index] = {\n      ...tmp[prefix].value[index]\n    };\n    tmp[prefix].value[index].a = alpha;\n    color.setAlpha(alpha);\n    console.log(\"set transparency\", {\n      color,\n      tinycolor,\n      oldcolor: tmp[prefix].value[index]\n    });\n    view.palette = palette = tmp;\n  };\n  const removeColor = (prefix, index) => {\n    if (readOnly || !palette[prefix]) {\n      return;\n    }\n    ;\n    let tmp = {\n      ...palette\n    };\n    tmp[prefix].value = [...tmp[prefix].value];\n    tmp[prefix].value = tmp[prefix].value.filter((c, i) => i !== index);\n    view.palette = palette = tmp;\n  };\n  const cssIsGlobal = view.cssIsGlobal;\n  let a;\n  let dropDownButton = {\n    current: null\n  };\n  function addcss(color) {\n    let ret = {};\n    ret.background = color.toRgbString();\n    // ret.opacity = color.getAlpha();\n    return ret;\n  }\n  function invert(color) {\n    let transformGrays = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n    transformGrays = transformGrays * 128;\n    let {\n      r,\n      g,\n      b,\n      a\n    } = color.toRgb();\n    r = Math.abs(r - 128) <= transformGrays ? r >= 128 ? 0 : 255 : 255 - r;\n    g = Math.abs(g - 128) <= transformGrays ? g >= 128 ? 0 : 255 : 255 - g;\n    b = Math.abs(b - 128) <= transformGrays ? b >= 128 ? 0 : 255 : 255 - b;\n    if (a || a === 0) a = 255 - a;\n    return tinycolor({\n      r,\n      g,\n      b,\n      a\n    }).toRgbString();\n  }\n  function style(c) {\n    return {\n      backgroundColor: c.toRgbString(),\n      color: invert(c)\n    };\n  }\n  let palettes = U.paletteSplit(palette);\n  function palettewrap(prefix, node) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette-row-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"prefix\",\n        style: {\n          maxHeight: 'var(--input-height)',\n          borderRadius: 'var(--radius)'\n        },\n        placeholder: \"variable name\",\n        defaultValue: prefix,\n        onBlur: e => changePrefix(prefix, e.target.value),\n        disabled: readOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), node]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this);\n  }\n  const vcss = view.css;\n  let colors = Object.keys(palettes.color).sort();\n  const lines = Math.round(vcss.split(/\\r|\\r\\n|\\n/).length * 1.8) < 5 ? 10 : Math.round(vcss.split(/\\r|\\r\\n|\\n/).length * 1.8);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'p-3 style-tab',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: 'view',\n      children: [\"View: \", props.view.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      style: {\n        position: 'relative',\n        zIndex: 2\n      },\n      children: [colors.map((entry, index, entries) => {\n        let prefix = entry;\n        let paletteobj = palettes.color[prefix];\n        let colors = paletteobj.value.map(v => tinycolor(v));\n        let suggestions = [tinycolor('#ffaaaa')]; // todo: compute according to current row \"colors\"\n        return palettewrap(prefix, /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"palette-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-container\",\n              style: {\n                maxHeight: 'var(--input-height)',\n                borderRadius: 'var(--radius)'\n              },\n              children: colors.map((color, i) => /*#__PURE__*/_jsxDEV(Color, {\n                readonly: readOnly,\n                data: view,\n                field: 'palette',\n                canDelete: !readOnly,\n                getter: () => colors[i].toHexString(),\n                setter: newVal => {\n                  setColor(prefix, i, newVal);\n                },\n                style: {\n                  background: 'white'\n                },\n                inputStyle: {\n                  opacity: color.getAlpha()\n                },\n                childrenn: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content suggestions\",\n                  style: {\n                    backgroundColor: \"inherit\"\n                  },\n                  onClick: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                  },\n                  children: [(() => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Alter current color transparency\",\n                        children: \"Opacity\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          width: \"auto\",\n                          marginLeft: \"1em\",\n                          marginRight: \"1em\"\n                        },\n                        type: \"range\",\n                        min: 0,\n                        max: 1,\n                        step: \"any\",\n                        value: color.getAlpha(),\n                        onChange: e => {\n                          transparencyColor(prefix, i, color, +e.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            size: 'x-small',\n                            action: () => addColor(prefix, color.analogous(7, 30 / 1.5), i),\n                            theme: 'dark',\n                            tip: 'Add all the colors'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 404,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 77\n                        }, this), \"Analogous\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: color.analogous(7, 30 / 1.5).map((c, ii) => ii === 0 ? undefined : /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: style(c),\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          className: \"btn color-suggestion\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 414,\n                            columnNumber: 89\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 81\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            size: 'x-small',\n                            tip: 'Add all the colors',\n                            theme: 'dark',\n                            action: () => addColor(prefix, [1 / 12, 2 / 12, 3 / 12, 4 / 12, 5 / 12, 6 / 12].map(n => color.clone().lighten(n * 100)), i, false)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 427,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 426,\n                          columnNumber: 77\n                        }, this), \"Lighten\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: [1 / 12, 2 / 12, 3 / 12, 4 / 12, 5 / 12, 6 / 12].map(n => color.clone().lighten(n * 100)).map((c, ii) => /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: style(c),\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 435,\n                            columnNumber: 144\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 434,\n                          columnNumber: 96\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            theme: 'dark',\n                            tip: 'Add all the colors',\n                            size: 'x-small',\n                            action: () => addColor(prefix, [6 / 12, 5 / 12, 4 / 12, 3 / 12, 2 / 12, 1 / 12].map(n => color.clone().darken(n * 100)), i, false)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 441,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 440,\n                          columnNumber: 77\n                        }, this), \"Darken\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: [6 / 12, 5 / 12, 4 / 12, 3 / 12, 2 / 12, 1 / 12].map(n => color.clone().darken(n * 100)).map((c, ii) => /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: style(c),\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 144\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 96\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            tip: 'Add all the colors',\n                            theme: 'dark',\n                            size: 'x-small',\n                            action: () => addColor(prefix, [color.complement(), tinycolor(invert(color))], i, false)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 77\n                        }, this), \"Complementary / Opposite\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          style: style(color.complement()),\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, color.complement(), i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(color.complement()),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 142\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 77\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: style(color),\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, tinycolor(invert(color)), i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(color),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 465,\n                            columnNumber: 148\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 77\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            tip: 'Add all the colors',\n                            theme: 'dark',\n                            size: 'x-small',\n                            action: () => addColor(prefix, color.splitcomplement(), i)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 471,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 470,\n                          columnNumber: 73\n                        }, this), \"Split Complementary\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: color.splitcomplement().map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: {\n                            ...style(c)\n                          },\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 478,\n                            columnNumber: 161\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 113\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            tip: 'Add all the colors',\n                            theme: 'dark',\n                            size: 'x-small',\n                            action: () => addColor(prefix, color.triad(), i)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 73\n                        }, this), \"Triadic\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: color.triad().map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: {\n                            ...style(c)\n                          },\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 490,\n                            columnNumber: 153\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 105\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                        title: \"Add all the colors\",\n                        children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n                          style: {\n                            float: 'left',\n                            paddingRight: '8px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Btn, {\n                            icon: 'add',\n                            tip: 'Add all the colors',\n                            theme: 'dark',\n                            size: 'x-small',\n                            action: () => addColor(prefix, color.tetrad(), i)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 495,\n                            columnNumber: 81\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 494,\n                          columnNumber: 73\n                        }, this), \"Tetradic\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"roww\",\n                        children: color.tetrad().map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n                          style: {\n                            ...style(c)\n                          },\n                          className: \"btn color-suggestion\",\n                          onClick: e => {\n                            addColor(prefix, c, i);\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            style: style(c),\n                            className: \"bi bi-plus-lg\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 501,\n                            columnNumber: 154\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 106\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 73\n                      }, this)]\n                    }, void 0, true);\n                  })(), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: 'btn btn-danger content delete-color mt-2 jj-delete',\n                    onClick: () => removeColor(prefix, i),\n                    disabled: readOnly,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi p-1 bi-trash-fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 73\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 65\n                }, this)\n              }, prefix + i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 54\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-container\",\n              children: suggestions.map((c, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"p-1\",\n                children: /*#__PURE__*/_jsxDEV(CommandBar, {\n                  style: {\n                    float: 'right'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Btn, {\n                    icon: 'add',\n                    tip: 'Add color to palette',\n                    action: () => addColor(prefix, c)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Btn, {\n                    icon: 'delete',\n                    tip: 'Remove color from palette',\n                    action: () => {\n                      if (Array.isArray(palette[prefix].value) && palette[prefix].value.length) {\n                        removeColor(prefix, i);\n                      } else {\n                        removeControl(prefix);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 55\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 21\n          }, this)\n        }, void 0, false));\n      }), Object.entries(palettes.path).map((entry, index, entries) => {\n        let prefix = entry[0];\n        let path = entry[1];\n        return palettewrap(prefix, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"palette-row path\",\n          title: \"todo: proper tooltip.\\nedgeHeadSize is in the \\\"Options\\\" tab and determines the position of the head.\\nBasic math operators are allowed, but the minus and plus must have spaces around them or they will be traated as unary operators.\\nx and y are variables local to this path used to scale his shape.\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value hoverable\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex w-100\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"value w-100 my-auto\",\n                placeholder: \"svg path [d]\",\n                defaultValue: path.value,\n                onBlur: e => {\n                  setText(e, prefix);\n                },\n                disabled: readOnly,\n                onKeyDown: e => {\n                  if (e.key === Keystrokes.enter) setText(e, prefix);\n                  if (e.key === Keystrokes.escape) e.target.value = path.value;\n                }\n              }, path.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content d-flex w-100\",\n              style: {\n                position: 'relative',\n                backgroundColor: 'whitesmoke'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"spacer w-100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mx-auto\",\n                children: [\"x:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"x\",\n                  placeholder: \"x\",\n                  defaultValue: path.x,\n                  disabled: readOnly,\n                  onChange: e => setGeneric(e, prefix, \"x\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mx-auto\",\n                children: [\"y:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"y\",\n                  placeholder: \"y\",\n                  defaultValue: path.y,\n                  disabled: readOnly,\n                  onChange: e => setGeneric(e, prefix, \"y\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: 'd-flex',\n            style: {\n              width: '100px!important'\n            },\n            value: path.value,\n            disabled: readOnly,\n            onChange: e => setText(e, prefix),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              style: {\n                fontStyle: 'italic',\n                color: 'gray'\n              },\n              value: \"\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 35\n            }, this), path.options.map(e => {\n              let k = e.k;\n              let v = e.v;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: v,\n                children: k\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommandBar, {\n            style: {\n              paddingRight: '4px',\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Btn, {\n              icon: 'space'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Btn, {\n              icon: \"delete\",\n              action: e => {\n                removeControl(prefix);\n              },\n              tip: 'Remove path'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 25\n        }, this));\n      }), Object.entries(palettes.number).map((entry, index, entries) => {\n        let prefix = entry[0];\n        let number = entry[1];\n        return palettewrap(prefix, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"palette-row numeric\",\n          children: [makeNumericInput(prefix, number, setNumber, setText, readOnly), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"unit\",\n            placeholder: \"unit\",\n            value: number.unit,\n            pattern: CSS_Units.pattern,\n            disabled: readOnly,\n            list: \"__jodel_CSS_units\",\n            onChange: e => {\n              setUnit(e, prefix);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommandBar, {\n            style: {\n              paddingRight: '4px',\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Btn, {\n              icon: 'space'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Btn, {\n              icon: \"delete\",\n              action: e => {\n                removeControl(prefix);\n              },\n              tip: 'Remove number'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this));\n      }), Object.entries(palettes.text).map((entry, index, entries) => {\n        let prefix = entry[0];\n        let string = entry[1];\n        return palettewrap(prefix, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"palette-row textual\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"value\",\n            placeholder: \"value\",\n            defaultValue: string.value,\n            onBlur: e => {\n              setText(e, prefix);\n            },\n            disabled: readOnly,\n            onKeyDown: e => {\n              if (e.key === Keystrokes.enter) setText(e, prefix);\n              if (e.key === Keystrokes.escape) e.target.value = string.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommandBar, {\n            style: {\n              paddingRight: '4px',\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Btn, {\n              icon: 'space'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Btn, {\n              icon: \"delete\",\n              action: e => {\n                removeControl(prefix);\n              },\n              tip: 'Remove text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }, this));\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddPalette, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HRule, {\n      theme: 'light',\n      style: {\n        display: 'block',\n        padding: '30px 0px!important'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: 'cssIsGlobal',\n      type: \"checkbox\",\n      jsxLabel: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          display: 'block',\n          float: 'left'\n        },\n        children: [cssIsGlobal ? /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: 'inherit'\n          },\n          children: \"Global\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: 'inherit'\n          },\n          children: \"Local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 75\n        }, this), ' CSS & LESS Editor ', cssIsGlobal ? '(Use with caution)' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }, this), vcss.indexOf('//') >= 0 && /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Warning:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 40\n      }, this), \" Inline comments // are not supported by our compiler.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 137\n      }, this), \"Please replace them with /* block comments */\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monaco-editor-wrapper\",\n      style: {\n        minHeight: '20px',\n        height: `${expand ? '30lvh' : '10lvh'}`,\n        transition: 'height 0.3s',\n        resize: 'vertical',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      onFocus: () => setExpand(true),\n      onBlur: () => {\n        setExpand(false);\n        blur();\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        className: 'mx-1',\n        options: {\n          fontSize: 12,\n          scrollbar: {\n            vertical: 'hidden',\n            horizontalScrollbarSize: 5\n          },\n          minimap: {\n            enabled: false\n          },\n          readOnly: readOnly\n        },\n        defaultLanguage: 'less',\n        value: vcss,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }, this), false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre'\n        },\n        children: view.compiled_css\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 12\n  }, this);\n}\n_s3(PaletteDataComponent, \"0AfNzcox72jI7KbOWLhq1+toeoA=\", false, function () {\n  return [useStateIfMounted, useStateIfMounted];\n});\n_c = PaletteDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const view = LViewElement.fromPointer(ownProps.viewID);\n  return {\n    view\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const PaletteDataConnected = connect(mapStateToProps, mapDispatchToProps)(PaletteDataComponent);\nexport const PaletteData = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(PaletteDataConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 712,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = PaletteData;\nexport default PaletteData;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaletteDataComponent\");\n$RefreshReg$(_c2, \"PaletteData\");","map":{"version":3,"names":["React","useState","useRef","useEffect","connect","useStateIfMounted","tinycolor","Editor","EdgeHead","Input","Keystrokes","Log","LViewElement","U","CSS_Units","Color","CommandBar","Btn","HRule","jsxDEV","_jsxDEV","Fragment","_Fragment","makeNumericInput","prefix","number","setNumber","setText","readOnly","min","max","step","undefined","unit","roundedValue0","Math","round","value","roundedValue","children","className","placeholder","type","disabled","defaultValue","onBlur","e","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","key","enter","escape","target","PaletteDataComponent","props","_s3","_s","$RefreshSig$","_s2","view","readonly","palette","tmp","css","setCss","expand","setExpand","change","blur","useClickOutside","ref","onClickOutside","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","AddPalette","open","setOpen","menuRef","onClick","style","color","addControl","i","prefix0","exDevv","Object","values","filter","o","length","Array","isArray","agglabel","extendlabel","extend","asslabel","reference","headdict","predefinedPaths","entries","map","k","v","x","y","options","setGeneric","val","setUnit","changePrefix","oldPrefix","newPrefix","replaceAll","removeControl","addColor","colors","index","arguments","skipFirst","lastAdded","rgba","toRgb","console","log","splice","push","setColor","hex","alpha","oldColor","setAlpha","a","transparencyColor","oldcolor","removeColor","c","cssIsGlobal","dropDownButton","addcss","ret","background","toRgbString","invert","transformGrays","r","g","b","abs","backgroundColor","palettes","paletteSplit","palettewrap","node","maxHeight","borderRadius","vcss","keys","sort","lines","split","name","position","zIndex","entry","paletteobj","suggestions","data","field","canDelete","getter","toHexString","setter","newVal","inputStyle","opacity","getAlpha","childrenn","preventDefault","stopPropagation","title","width","marginLeft","marginRight","onChange","float","paddingRight","icon","size","action","analogous","theme","tip","ii","n","clone","lighten","darken","complement","splitcomplement","triad","tetrad","path","fontStyle","pattern","list","text","string","display","padding","jsxLabel","indexOf","minHeight","height","transition","resize","overflow","flexDirection","onFocus","fontSize","scrollbar","vertical","horizontalScrollbarSize","minimap","enabled","defaultLanguage","whiteSpace","compiled_css","_c","mapStateToProps","state","ownProps","fromPointer","viewID","mapDispatchToProps","dispatch","PaletteDataConnected","PaletteData","_this","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/viewsEditor/data/PaletteData.tsx"],"sourcesContent":["/* Viewpoints > Style */\r\n\r\nimport React, {Dispatch, ReactElement, ReactNode, Ref, RefObject, SyntheticEvent, useState, useRef, useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport tinycolor, {Instance} from \"tinycolor2\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport DropDownButton from \"smart-webcomponents-react/dropdownbutton\";\r\nimport 'smart-webcomponents-react/source/styles/smart.default.css';\r\nimport type {\r\n    Dictionary,\r\n    GObject,\r\n    Pointer,\r\n} from '../../../../joiner';\r\nimport type {\r\n    PaletteControl,\r\n    NumberControl,\r\n    StringControl,\r\n    PaletteType,\r\n    PathControl\r\n} from '../../../../view/viewElement/view';\r\nimport {\r\n    DState,\r\n    DViewElement, EdgeHead,\r\n    Input,\r\n    Keystrokes,\r\n    Log,\r\n    LViewElement,\r\n    U,\r\n} from '../../../../joiner';\r\nimport{CSS_Units} from '../../../../view/viewElement/view';\r\nimport {Function} from \"../../../forEndUser/FunctionComponent\";\r\nimport { Color } from '../../../forEndUser/Color';\r\n\r\nimport { CommandBar, Btn } from '../../../commandbar/CommandBar';\r\nimport { HRule } from '../../../widgets/Widgets';\r\n\r\n\r\nfunction makeNumericInput(prefix: string, number: NumberControl,\r\n                          setNumber: (e: React.FocusEvent<HTMLInputElement>, prefix: string) => void,\r\n                          setText: (e: React.FocusEvent<HTMLInputElement>, prefix: string) => void, readOnly: boolean) {\r\n    let min: number | undefined;\r\n    let max: number | undefined;\r\n    let step: number | undefined = undefined;\r\n    switch (number.unit) {\r\n        case '':\r\n        case 'px': min = 0; max = 300; break;\r\n        case 'pt': break; // 1pt = 1.33 px; 1px = 0.75pt\r\n        case 'cm':\r\n        case 'mm': min = 0; max = 200; break; // 1mm = 3.7px\r\n        case 'ch':\r\n        case 'ex':\r\n        case 'em':\r\n        case 'rem':\r\n        case 'in': // 1in = 96px\r\n        case 'pc': // 2px = 0.125 picas; 18.75pc = 300px\r\n        case 'fr': min=0; max=20; step = 0.5; break;\r\n        case \"%\": case \"vh\": case \"vw\": case \"vmax\": case \"vmin\":\r\n            min = 0;\r\n            max = 100;\r\n            break;\r\n    }\r\n    let roundedValue0 = Math.round(((number.value || 0) - (typeof step === \"number\" ? number.value % step : number.value % 0.1))*10000)/10000; // % works on decimals right.\r\n    let roundedValue = typeof step === \"number\" ? Math.round(((number.value || 0)  * (1/step))) * step : Math.round(number.value*100)/100; // % works on decimals right.\r\n    return <>\r\n        <input className={\"value\"} placeholder={\"value\"} type={\"range\"} disabled={readOnly}\r\n            key={\"s\"+number.value} defaultValue={number.value}\r\n            min={min}\r\n            max={max}\r\n            step={\"any\"}\r\n            onBlur={e => {setNumber(e as any, prefix)}}\r\n            onMouseUp={e => { setNumber(e as any, prefix); }} />\r\n        <input className={\"spinner\"} placeholder={\"value\"} type={\"number\"} disabled={readOnly}\r\n            key={roundedValue} defaultValue={roundedValue} data-dv={roundedValue} data-dv2={number.value}\r\n            step={step}\r\n            onBlur={e => {setNumber(e as any, prefix)}}\r\n            onKeyDown={e => {\r\n               if (e.key === Keystrokes.enter) setNumber(e as any, prefix);\r\n               if (e.key === Keystrokes.escape) (e.target as HTMLInputElement).value = '' + number.value; }} />\r\n    </>\r\n}\r\n\r\n\r\n\r\n// delete button <button className=\"btn btn-danger ms-1\"><i className=\"p-1 bi bi-trash3-fill\"/></button>\r\nfunction PaletteDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = props.readonly;\r\n    let palette: Readonly<PaletteType> = {...view.palette};\r\n    let tmp: PaletteType = undefined as any;\r\n    const [css, setCss] = useStateIfMounted(view.css);\r\n\r\n    const [expand, setExpand] = useStateIfMounted(false);\r\n\r\n    const change = (value: string|undefined) => { if(value !== undefined) setCss(value); } // save in local state for frequent changes.\r\n    const blur = () => view.css = css; // confirm in redux state for final state\r\n\r\n    /* *** alfonso *** */\r\n\r\n\r\n    function useClickOutside(ref: any, onClickOutside: any) {\r\n        useEffect(() => {\r\n\r\n            function handleClickOutside(event: Event) {\r\n                if (ref.current && !ref.current.contains(event.target)) {\r\n                    onClickOutside();\r\n                }\r\n            }\r\n\r\n          // Bind\r\n\r\n          document.addEventListener(\"mousedown\", handleClickOutside);\r\n          return () => {\r\n            // dispose\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n          };\r\n        }, [ref, onClickOutside]);\r\n    }\r\n\r\n    const AddPalette = () => {\r\n        const [open,setOpen] = useState(false);\r\n        const menuRef = useRef(null);\r\n\r\n        useClickOutside(menuRef, () => {\r\n            setOpen(false);\r\n        });\r\n\r\n\r\n        return (<>\r\n            {/* {open ?\r\n                <div className='palette-buttons'>\r\n                    <button onClick={()=>addControl('palette')} className='btn btn-success my-btn btn-color'>Add palette</button>\r\n                    <button onClick={()=> addControl('number')} className='btn btn-success my-btn btn-number'>Add number</button>\r\n                    <button onClick={()=>addControl('text')} className='btn btn-success my-btn btn-textual'>Add text</button>\r\n                    <button onClick={()=>addControl('path')}className='btn btn-success my-btn btn-path'>Add path</button>\r\n                </div>\r\n            :\r\n                <button onClick={() => setOpen(!open)} className='btn btn-success my-btn'>Add new</button>\r\n            }*/}\r\n\r\n            {!open ?\r\n                <div className={'add-palette-item'} onClick={() => {setOpen(true)}}>\r\n                    <i style={{color: 'white'}} className=\"bi bi-plus\"></i>\r\n                    <span>Add new</span>\r\n                </div>\r\n                :\r\n                <>\r\n                    <div className={'add-palette-item active'} onClick={() => {setOpen(false)}}>\r\n                        <i style={{color: 'white'}} className=\"bi bi-plus\"></i>\r\n                    </div>\r\n                    <button onClick={()=>addControl('palette')} className='btn btn-success my-btn btn-color'>Palette</button>\r\n                    <button onClick={()=> addControl('number')} className='btn btn-success my-btn btn-number'>Number</button>\r\n                    <button onClick={()=>addControl('text')} className='btn btn-success my-btn btn-textual'>Text</button>\r\n                    <button onClick={()=>addControl('path')}className='btn btn-success my-btn btn-path'>Path</button>\r\n\r\n                </>\r\n            }\r\n\r\n        </>);\r\n    };\r\n\r\n    /* *** */\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const addControl = (type: 'palette' | 'number' | 'text' | 'path') => {\r\n        if (readOnly) return;\r\n        let i: number;\r\n        let prefix0: string;//= 'palette_' + i + '-';\r\n        switch (type){\r\n            default: Log.exDevv(\"unexpected case in addControl:\" + type); return;\r\n            case 'path':\r\n                i = Object.values(palette).filter( o => (o as PathControl).type === \"path\").length + 1;\r\n                prefix0 = 'path_';\r\n                break;\r\n            case 'text':\r\n                i = Object.values(palette).filter( o => (o as StringControl).type === \"text\").length + 1;\r\n                prefix0 = 'text_';\r\n                break;\r\n            case 'number':\r\n                i = Object.values(palette).filter( o => (o as NumberControl).type === \"number\").length + 1;\r\n                prefix0 = 'numeric_';\r\n                break;\r\n            case 'palette':\r\n                i = Object.values(palette).filter( o => Array.isArray(o as any)).length + 1;\r\n                prefix0 = 'palette_';\r\n                break;\r\n        }\r\n        let prefix: string;\r\n        while (true){\r\n            prefix = prefix0 + i++;\r\n            if (prefix in palette) continue;\r\n            break;\r\n        }\r\n        switch (type){\r\n            default: Log.exDevv(\"unexpected case in addControl:\" + type); return;\r\n            case 'path':\r\n                const agglabel = \"◇ Aggregation / Composition\";\r\n                const extendlabel = \"△ \"+EdgeHead.extend;\r\n                const asslabel = \"Λ \"+EdgeHead.reference;\r\n                let headdict: Dictionary<string, string> = {\r\n                    [asslabel]: 'M 0 0   L x y/2   L 0 y',\r\n                    [extendlabel]: 'M 0 0   L x y/2   L 0 y   Z',\r\n                    [agglabel]: 'M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z',\r\n                };\r\n                let predefinedPaths: {k:string, v:string}[] = Object.entries(headdict).map((e)=>({k:e[0], v:e[1]}));\r\n\r\n                tmp = {...palette};\r\n                tmp[prefix] = {type: 'path', value: '', x:'edgeHeadSize.x', y:'edgeHeadSize.y', options: predefinedPaths};\r\n                break;\r\n            case 'text':\r\n                tmp = {...palette};\r\n                tmp[prefix] = {type: 'text', value: ''};\r\n                break;\r\n            case 'number':\r\n                tmp = {...palette};\r\n                tmp[prefix] = {type: 'number', value: 0, unit: 'px'};\r\n                break;\r\n            case 'palette':\r\n                tmp = {...palette};\r\n                tmp[prefix] = {type:'color', value:[]};\r\n                break;\r\n        }\r\n        view.palette = palette = tmp;\r\n    }\r\n\r\n\r\n\r\n\r\n    const setGeneric = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>, prefix: string, key: string) => {\r\n        const val: string = e.target.value;\r\n        if (readOnly || (palette[prefix] as any)[key] === val) return;\r\n        let tmp: Dictionary<string, StringControl> = {...palette} as any;\r\n        (tmp[prefix] as any)[key] = val;\r\n        view.palette = palette = tmp; }\r\n    const setText = (e: React.FocusEvent<HTMLInputElement | HTMLSelectElement>, prefix: string) => {\r\n        const val: string = e.target.value;\r\n        if (readOnly || (palette[prefix] as StringControl).value === val) return;\r\n        let tmp: Dictionary<string, StringControl> = {...palette} as any;\r\n        tmp[prefix].value = val;\r\n        view.palette = palette = tmp; }\r\n    const setNumber = (e: React.FocusEvent<HTMLInputElement>, prefix: string) => {\r\n        const val: number = +e.target.value || 0;\r\n        if (readOnly || (palette[prefix] as NumberControl).value === val) return;\r\n        let tmp: Dictionary<string, NumberControl> = {...palette} as any;\r\n        tmp[prefix].value = val;\r\n        view.palette = palette = tmp; }\r\n    const setUnit = (e: React.FocusEvent<HTMLInputElement>, prefix: string) => {\r\n        const val: string = e.target.value === undefined ? 'px' : e.target.value;\r\n        if (readOnly || val === (palette[prefix] as NumberControl).unit) return;\r\n        let tmp: Dictionary<string, NumberControl> = {...palette} as any;\r\n        tmp[prefix].unit = val;\r\n        view.palette = palette = tmp; }\r\n    const changePrefix = (oldPrefix: string, newPrefix: string) => {\r\n        newPrefix = newPrefix.replaceAll(/[^\\w\\-]/g,'-'); // /^[^a-zA-Z0-9_\\-]*$/, '-');\r\n        if (readOnly || palette[newPrefix]) return; // refuse to overwrite existing palette name (2 different palettes with same name)\r\n        tmp = {...palette};\r\n        tmp[newPrefix] = palette[oldPrefix];\r\n        delete tmp[oldPrefix];\r\n        view.palette = palette = tmp;\r\n    }\r\n    const removeControl = (prefix: string) => {\r\n        if (readOnly || !palette[prefix]) return;\r\n        tmp = {...palette};\r\n        delete tmp[prefix];\r\n        view.palette = palette = tmp;\r\n    }\r\n\r\n    const addColor = (prefix: string, colors: Instance[] | Instance, index: number = -1, skipFirst: boolean = true) => {\r\n        if (readOnly) return;\r\n        if (!Array.isArray(colors)) {\r\n            colors = [colors as Instance];\r\n            skipFirst = false;\r\n        }\r\n        let tmp: Dictionary<string, PaletteControl> = {...palette} as GObject;\r\n        let lastAdded: tinycolor.ColorFormats.RGBA = undefined as any;\r\n        for (let i = colors.length-1; i >= (skipFirst ? 1 : 0); i--) {\r\n            let color: Instance = colors[i];\r\n            let rgba = color.toRgb();\r\n            console.log(\"addingColor:\", {rgba, lastAdded, color});\r\n            if (rgba === lastAdded) continue;\r\n            lastAdded = rgba;\r\n            if (!tmp[prefix]) tmp[prefix] = {type:'color', value:[]};\r\n            else tmp[prefix] = {...tmp[prefix]};\r\n            tmp[prefix].value = [...tmp[prefix].value];\r\n            if (index >= 0) tmp[prefix].value.splice(index + 1, 0, rgba);\r\n            else tmp[prefix].value.push(rgba);\r\n        }\r\n        view.palette = palette = tmp;\r\n    }\r\n\r\n    const setColor = (prefix: string, index: number, hex?: string, alpha?: number) => {\r\n        let tmp: Dictionary<string, PaletteControl> = {...palette} as any;\r\n        if (readOnly || !tmp[prefix]) tmp[prefix] = {type:'color', value:[]};\r\n        else tmp[prefix] = {...tmp[prefix]};\r\n        let oldColor = tmp[prefix].value[index];\r\n        if (hex) {\r\n            let color = tinycolor(hex);\r\n            if (alpha !== undefined) color.setAlpha(alpha);\r\n            let rgba = color.toRgb();\r\n            if (oldColor && oldColor.a !== undefined) rgba.a = oldColor.a;\r\n            tmp[prefix].value[index] = oldColor = rgba;\r\n            view.palette = palette = tmp;\r\n        }\r\n        if (alpha !== undefined) tmp[prefix].value[index] = {...oldColor, a:alpha};\r\n    }\r\n    const transparencyColor = (prefix: string, index: number, color: tinycolor.Instance, alpha: number) => {\r\n        if (readOnly || !palette[prefix]) return;\r\n        let tmp: Dictionary<string, PaletteControl> = {...palette} as any;\r\n        if (!alpha && alpha !== 0) alpha = 1;\r\n        tmp[prefix] = {...tmp[prefix]};\r\n        tmp[prefix].value = [...tmp[prefix].value];\r\n        tmp[prefix].value[index] = {...tmp[prefix].value[index]};\r\n        tmp[prefix].value[index].a = alpha;\r\n        color.setAlpha(alpha);\r\n        console.log(\"set transparency\", {color, tinycolor, oldcolor: tmp[prefix].value[index]});\r\n        view.palette = palette = tmp;\r\n    }\r\n    const removeColor = (prefix: string, index: number) => {\r\n        if (readOnly || !palette[prefix]) {return};\r\n\r\n        let tmp: Dictionary<string, PaletteControl> = {...palette} as any;\r\n        tmp[prefix].value = [...tmp[prefix].value];\r\n        tmp[prefix].value = tmp[prefix].value.filter((c, i) => i !== index);\r\n        view.palette = palette = tmp;\r\n    }\r\n\r\n    const cssIsGlobal = view.cssIsGlobal;\r\n    let a: DropDownButton;\r\n    let dropDownButton: RefObject<DropDownButton> = {current: null};\r\n    function addcss(color: Instance): GObject {\r\n        let ret: GObject = {};\r\n        ret.background = color.toRgbString();\r\n        // ret.opacity = color.getAlpha();\r\n        return ret;\r\n    }\r\n    function invert(color: Instance, transformGrays: number = 0.2): string {\r\n        transformGrays = transformGrays * 128;\r\n        let {r, g, b, a} = color.toRgb();\r\n        r = Math.abs(r-128) <= transformGrays ? (r >= 128 ? 0 : 255) : 255 - r;\r\n        g = Math.abs(g-128) <= transformGrays ? (g >= 128 ? 0 : 255) : 255 - g;\r\n        b = Math.abs(b-128) <= transformGrays ? (b >= 128 ? 0 : 255) : 255 - b;\r\n        if (a || a === 0) a = 255 - a;\r\n        return (tinycolor({r, g, b, a})).toRgbString();\r\n    }\r\n    function style(c: Instance): GObject{\r\n        return {backgroundColor: c.toRgbString(), color:invert(c)};\r\n    }\r\n\r\n    let palettes = U.paletteSplit(palette);\r\n    function palettewrap(prefix: string, node: ReactNode): ReactNode{\r\n        return (\r\n            <div className=\"palette-row-container\">\r\n                {/* <button className=\"btn btn-danger me-1\" onClick={()=>removeControl(prefix)} disabled={readOnly}><i className=\"p-1 bi bi-trash3-fill\"/></button>*/}\r\n\r\n                <input className={\"prefix\"}\r\n                    style={{maxHeight: 'var(--input-height)', borderRadius: 'var(--radius)'}}\r\n                    placeholder={\"variable name\"}\r\n                    defaultValue={prefix}\r\n                    onBlur={(e)=> changePrefix(prefix, e.target.value)}\r\n                    disabled={readOnly} />\r\n                {node}\r\n            </div>)\r\n    }\r\n    const vcss = view.css;\r\n\r\n    let colors = Object.keys(palettes.color).sort();\r\n    const lines = (Math.round(vcss.split(/\\r|\\r\\n|\\n/).length*1.8) < 5 ? 10 : Math.round(vcss.split(/\\r|\\r\\n|\\n/).length*1.8));\r\n\r\n    return(<section className={'p-3 style-tab'}>\r\n        <h1 className={'view'}>View: {props.view.name}</h1>\r\n        <div className={\"controls\"} style={{position:'relative', zIndex:2}}>\r\n\r\n            {colors.map((entry, index, entries)=>{\r\n                let prefix = entry;\r\n                let paletteobj: PaletteControl = palettes.color[prefix] as PaletteControl;\r\n                let colors: Instance[] = paletteobj.value.map(v=> tinycolor(v));\r\n                let suggestions = [tinycolor('#ffaaaa')]; // todo: compute according to current row \"colors\"\r\n                return palettewrap(prefix, <>\r\n                    <div className=\"palette-row\">\r\n\r\n                        <div className=\"color-container\" style={{maxHeight: 'var(--input-height)', borderRadius: 'var(--radius)'}}>{\r\n                            colors.map((color, i) => <Color key={prefix+i} readonly={readOnly}\r\n                                                            data={view} field={'palette'} canDelete={!readOnly}\r\n                                                            getter={()=>colors[i].toHexString()} setter={(newVal) => { setColor(prefix, i, newVal) }}\r\n                                                            style ={{background: 'white'}}\r\n                                                            inputStyle ={{opacity: color.getAlpha()}}\r\n                                                            childrenn={\r\n                                                                <div className={\"content suggestions\"} style={{backgroundColor: \"inherit\"}} onClick={(e) => {e.preventDefault(); e.stopPropagation();}}>\r\n                                                                    {(()=>{ return <>\r\n                                                                        <h6 title={\"Alter current color transparency\"}>Opacity</h6>\r\n\r\n                                                                        <input style={{width: \"auto\", marginLeft:\"1em\", marginRight:\"1em\"}}\r\n                                                                            type={\"range\"} min={0} max={1} step={\"any\"}\r\n                                                                            value={color.getAlpha()}\r\n                                                                            onChange={(e)=>{ transparencyColor(prefix, i, color, +e.target.value) }} />\r\n\r\n                                                                        {/* Add all colors */}\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                            <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} size={'x-small'}  action={()=>addColor(prefix, color.analogous(7, 30/1.5), i)} theme={'dark'} tip={'Add all the colors'}/>\r\n                                                                            </CommandBar>\r\n                                                                            Analogous\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {color.analogous(7, 30/1.5).map((c,ii) => ii===0?undefined:\r\n                                                                                <button style={style(c)}\r\n                                                                                    onClick={(e)=>{addColor(prefix, c, i)}}\r\n                                                                                    className=\"btn color-suggestion\">\r\n                                                                                        <i style={style(c)} className=\"bi bi-plus-lg\"></i>\r\n                                                                                </button>\r\n                                                                            )}\r\n                                                                        </div>{/*\r\n                                    <h6 onClick={()=>addColor(prefix, color.monochromatic(7), i)} title={\"Add all the colors\"}>Monochromatic</h6>\r\n                                    <div className={\"roww\"}>\r\n                                        {color.monochromatic(7).map((c,ii) => ii===0?undefined: <button style={style(c)}\r\n                                                                                                        onClick={(e)=>{addColor(prefix, c, i)}} className=\"btn color-suggestion\">+</button>)}\r\n                                    </div>{/*[6/12, 5/12, 4/12, 3/12, 2/12, 1/12]*/}\r\n\r\n                                                                        {/* Add all colors */}\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                            <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} size={'x-small'} tip={'Add all the colors'} theme={'dark'} action={()=>addColor(prefix, [1/12, 2/12, 3/12, 4/12, 5/12, 6/12].map(n=>color.clone().lighten(n*100)), i, false)}/>\r\n                                                                            </CommandBar>\r\n                                                                            Lighten\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {[1/12, 2/12, 3/12, 4/12, 5/12, 6/12].map(n=>color.clone().lighten(n*100))\r\n                                                                                .map((c,ii) => <button style={style(c)} className=\"btn color-suggestion\"\r\n                                                                                                       onClick={(e)=>{addColor(prefix, c, i)}}><i style={style(c)} className=\"bi bi-plus-lg\"></i></button>)}\r\n                                                                        </div>\r\n\r\n                                                                        {/* Add all colors */}\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                            <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} theme={'dark'} tip={'Add all the colors'} size={'x-small'} action={()=>addColor(prefix, [6/12, 5/12, 4/12, 3/12, 2/12, 1/12].map(n=>color.clone().darken(n*100)), i, false)}/>\r\n                                                                            </CommandBar>\r\n                                                                            Darken\r\n\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {[6/12, 5/12, 4/12, 3/12, 2/12, 1/12].map(n=>color.clone().darken(n*100))\r\n                                                                                .map((c,ii) => <button style={style(c)} className=\"btn color-suggestion\"\r\n                                                                                                       onClick={(e)=>{addColor(prefix, c, i)}}><i style={style(c)} className=\"bi bi-plus-lg\"></i></button>)}\r\n                                                                        </div>\r\n\r\n                                                                        {/* Add all colors */}\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                            <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} tip={'Add all the colors'} theme={'dark'} size={'x-small'} action={()=>addColor(prefix, [color.complement(), tinycolor(invert(color))], i, false)}/>\r\n                                                                            </CommandBar>\r\n                                                                            Complementary / Opposite\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            <button style={style(color.complement())} className=\"btn color-suggestion\"\r\n                                                                                    onClick={(e)=>{addColor(prefix, color.complement(), i)}}><i style={style(color.complement())} className=\"bi bi-plus-lg\"></i></button>\r\n                                                                            <button style={style(color)} className=\"btn color-suggestion\"\r\n                                                                                    onClick={(e)=>{addColor(prefix, tinycolor(invert(color)), i)}}><i style={style(color)} className=\"bi bi-plus-lg\"></i></button>\r\n                                                                        </div>\r\n\r\n                                                                        {/* Add all colors */}\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                        <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                            <Btn icon={'add'} tip={'Add all the colors'} theme={'dark'} size={'x-small'} action={()=>addColor(prefix, color.splitcomplement(), i)}/>\r\n                                                                        </CommandBar>\r\n                                                                        Split Complementary\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {color.splitcomplement().map((c) => <button style={{...style(c)}} className=\"btn color-suggestion\"\r\n                                                                                                                        onClick={(e)=>{addColor(prefix, c, i)}}><i style={style(c)} className=\"bi bi-plus-lg\"></i></button>)}\r\n                                                                        </div>\r\n\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                        <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} tip={'Add all the colors'} theme={'dark'} size={'x-small'} action={()=>addColor(prefix, color.triad(), i)}/>\r\n                                                                            </CommandBar>\r\n                                                                            Triadic\r\n                                                                        </h6>\r\n\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {color.triad().map ( (c) => <button style={{...style(c)}} className=\"btn color-suggestion\"\r\n                                                                                                                onClick={(e)=>{addColor(prefix, c, i)}}><i style={style(c)} className=\"bi bi-plus-lg\"></i></button>)}\r\n                                                                        </div>\r\n\r\n                                                                        <h6 title={\"Add all the colors\"}>\r\n                                                                        <CommandBar style={{float: 'left', paddingRight: '8px'}}>\r\n                                                                                <Btn icon={'add'} tip={'Add all the colors'} theme={'dark'} size={'x-small'} action={()=>addColor(prefix, color.tetrad(), i)}/>\r\n                                                                            </CommandBar>\r\n                                                                            Tetradic\r\n                                                                        </h6>\r\n                                                                        <div className={\"roww\"}>\r\n                                                                            {color.tetrad().map ( (c) => <button style={{...style(c)}} className=\"btn color-suggestion\"\r\n                                                                                                                 onClick={(e)=>{addColor(prefix, c, i)}}><i style={style(c)} className=\"bi bi-plus-lg\"></i></button>)}\r\n                                                                        </div>\r\n                                                                    </>})()}\r\n\r\n\r\n                                                                    <button\r\n                                                                        className={'btn btn-danger content delete-color mt-2 jj-delete'}\r\n                                                                        onClick={()=>removeColor(prefix, i)}\r\n                                                                        disabled={readOnly}\r\n                                                                    >\r\n                                                                        <i className=\"bi p-1 bi-trash-fill\"/> Delete\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            }\r\n                            />)\r\n                        }\r\n                        </div>\r\n                        <div className=\"suggestion-container\">{\r\n                            suggestions.map((c, i) => <label className=\"p-1\">\r\n\r\n                                {/* Palette */}\r\n                                <CommandBar style={{float: 'right'}}>\r\n                                    <Btn icon={'add'} tip={'Add color to palette'} action={() => addColor(prefix, c)} />\r\n                                    <Btn icon={'delete'} tip={'Remove color from palette'} action={() => {\r\n                                        if (Array.isArray(palette[prefix].value) && (palette[prefix].value as any).length) {\r\n                                            removeColor(prefix, i)\r\n                                        } else {\r\n                                            removeControl(prefix);\r\n                                        }\r\n                                    }}\r\n                                    />\r\n                                </CommandBar>\r\n\r\n                                {/* <button className=\"btn color-suggestion\" style={style(c)} onClick={()=>{addColor(prefix, c)}} disabled={readOnly}>+</button>*/}\r\n                            </label>)\r\n                        }</div>\r\n                    </div>\r\n                </>); })\r\n            }\r\n            {Object.entries(palettes.path).map((entry, index, entries)=>{\r\n                    let prefix = entry[0];\r\n                    let path: PathControl = entry[1] as any;\r\n                    return palettewrap(prefix,\r\n                        <div className=\"palette-row path\" title={\"todo: proper tooltip.\\nedgeHeadSize is in the \\\"Options\\\" tab and determines the position of the head.\\nBasic math operators are allowed, but the minus and plus must have spaces around them or they will be traated as unary operators.\\nx and y are variables local to this path used to scale his shape.\"}>\r\n                            <div className={\"value hoverable\"} >\r\n                                <div className={\"d-flex w-100\"}>\r\n                                    <input className={\"value w-100 my-auto\"} placeholder={\"svg path [d]\"} defaultValue={path.value} key={path.value} onBlur={e => {setText(e as any, prefix)}} disabled={readOnly}\r\n                                           onKeyDown={e => {\r\n                                               if (e.key === Keystrokes.enter) setText(e as any, prefix);\r\n                                               if (e.key === Keystrokes.escape) (e.target as HTMLInputElement).value = path.value; }}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"content d-flex w-100\"} style={{position: 'relative', backgroundColor: 'whitesmoke'}}>\r\n                                    <input className={\"spacer w-100\"}/>\r\n                                    <label className={\"mx-auto\"}>x:&nbsp;<input className=\"x\" placeholder={\"x\"} defaultValue={path.x} disabled={readOnly} onChange={(e)=>setGeneric(e, prefix, \"x\")}/></label>\r\n                                    <label className={\"mx-auto\"}>y:&nbsp;<input className=\"y\" placeholder={\"y\"} defaultValue={path.y} disabled={readOnly} onChange={(e)=>setGeneric(e, prefix, \"y\")}/></label>\r\n                                </div>\r\n                            </div>\r\n                            <select className={'d-flex'} style={{width: '100px!important'}} value={path.value} disabled={readOnly} onChange={(e)=>setText(e as any, prefix)}>\r\n                                {[<option style={{fontStyle:'italic', color:'gray'}} value={\"\"}>Custom</option>, path.options.map((e)=>{\r\n                                let k = e.k;\r\n                                let v = e.v;\r\n                                return <option value={v}>{k}</option>\r\n                            })]}</select>\r\n\r\n                            {/* Path */}\r\n                            <CommandBar  style={{paddingRight: '4px', marginLeft: 'auto'}}>\r\n                                <Btn icon={'space'} />\r\n                                <Btn icon={\"delete\"} action={(e) => {removeControl(prefix)}} tip={'Remove path'}/>\r\n                            </CommandBar>\r\n\r\n                        </div>)\r\n                }\r\n            )}\r\n            {Object.entries(palettes.number).map((entry, index, entries)=>{\r\n                    let prefix = entry[0];\r\n                    let number: NumberControl = entry[1] as any;\r\n                    return palettewrap(prefix,\r\n                        <div className=\"palette-row numeric\">\r\n                            {makeNumericInput(prefix, number, setNumber, setText, readOnly)}\r\n                            <input className={\"unit\"} placeholder={\"unit\"} value={number.unit} pattern={CSS_Units.pattern} disabled={readOnly}\r\n                                   list={\"__jodel_CSS_units\"} onChange={e => {setUnit(e as any, prefix)}} />\r\n\r\n                            {/* Numeric */}\r\n                            <CommandBar  style={{paddingRight: '4px', marginLeft: 'auto'}}>\r\n                                <Btn icon={'space'} />\r\n                                <Btn icon={\"delete\"} action={(e) => {removeControl(prefix)}} tip={'Remove number'}/>\r\n                            </CommandBar>\r\n                        </div>)\r\n                }\r\n            )}\r\n            {Object.entries(palettes.text).map((entry, index, entries)=>{\r\n                    let prefix = entry[0];\r\n                    let string: StringControl = entry[1] as any;\r\n                    return palettewrap(prefix,\r\n                        <div className={\"palette-row textual\"}>\r\n                            <input className={\"value\"} placeholder={\"value\"} defaultValue={string.value} onBlur={e => {setText(e as any, prefix)}} disabled={readOnly}\r\n                                   onKeyDown={e => {\r\n                                       if (e.key === Keystrokes.enter) setText(e as any, prefix);\r\n                                       if (e.key === Keystrokes.escape) (e.target as HTMLInputElement).value = string.value; }} />\r\n\r\n                            {/* Text */}\r\n                            <CommandBar  style={{paddingRight: '4px', marginLeft: 'auto'}}>\r\n                                <Btn icon={'space'} />\r\n                                <Btn icon={\"delete\"} action={(e) => {removeControl(prefix)}} tip={'Remove text'}/>\r\n                            </CommandBar>\r\n                        </div>)\r\n                }\r\n            )}\r\n        </div>\r\n\r\n\r\n        <AddPalette />\r\n\r\n\r\n        {/* <div className={\"w-100\"} style={{display: 'grid', gridTemplateColumns: 'repeat(10, 1fr)', position: 'relative', zIndex:1}}\r\n             onMouseEnter={(e)=>{ dropDownButton.current?.open()}}\r\n             onMouseLeave={(e)=>{ dropDownButton.current?.close()}}\r\n        >\r\n            <button className=\"btn btn-success\" style={{flexBasis:0, flexGrow:9, gridArea: '1 / 1 / 1 / 1', zIndex: 2, minWidth: 'calc(1000% - var(--smart-editor-addon-width))'}} onClick={()=>addControl('palette')}>+ Palette</button>\r\n            <DropDownButton ref={dropDownButton} style={{flexBasis:0, flexGrow:1, minWidth:0, gridArea: '1 / 1 / 1 / 11', zIndex:1, transform: 'scaleX(-1)'}}>\r\n                <div onClick={(e)=> dropDownButton.current?.close()} style={{transform: 'scaleX(-1)'}}>\r\n                    <button className={\"w-100 btn btn-outline-success\"} style={{height: 'var(--smart-editor-height)'}}\r\n                            onClick={()=>addControl('number')}>+ Number</button>\r\n                    <button className={\"w-100 btn btn-outline-success\"} style={{height: 'var(--smart-editor-height)'}}\r\n                            onClick={()=>addControl('text')}>+ Text</button>\r\n                    <button className={\"w-100 btn btn-outline-success\"} style={{height: 'var(--smart-editor-height)'}}\r\n                            onClick={()=>addControl('path')}>+ Path</button>\r\n                </div>\r\n            </DropDownButton>\r\n            </div>*/}\r\n\r\n        <HRule theme={'light'} style={{display: 'block', padding: '30px 0px!important'}}/>\r\n\r\n        <Input data={view} field={'cssIsGlobal'} type={\"checkbox\"}  jsxLabel={\r\n            <div style={{width:'100%', display:'block', float: 'left'}}>\r\n                {cssIsGlobal ? <b style={{color: 'inherit'}}>Global</b> : <b style={{color: 'inherit'}}>Local</b>}\r\n                {' CSS & LESS Editor '}\r\n                {cssIsGlobal ? '(Use with caution)' : ''}\r\n            </div>\r\n        } />\r\n\r\n        {/* <CommandBar style={{paddingTop: '10px', float: 'right'}}>\r\n            {expand ?\r\n                <Btn icon={'shrink'} action={(e) => {setExpand(false)}} tip={'Minimize editor'}/>\r\n                :\r\n                <Btn icon={'expand'} action={(e) => {setExpand(true)}} tip={'Enlarge editor'}/>\r\n            }\r\n        </CommandBar>*/}\r\n\r\n        {/* ****** */}\r\n\r\n        {/*<label className={'ms-1 mb-1'}>{view.cssIsGlobal ? 'Global' : 'Local'} CSS Editor</label>*/}\r\n        {vcss.indexOf('//') >= 0 && <b><span style={{color:'red'}}>Warning:</span> Inline comments // are not supported by our compiler.<br/>\r\n            Please replace them with /* block comments */</b>}\r\n\r\n            <div className={\"monaco-editor-wrapper\"} style={{\r\n                minHeight: '20px',\r\n                height:`${expand ? '30lvh' : '10lvh'}`,\r\n                transition: 'height 0.3s',\r\n                resize: 'vertical', overflow:'hidden',\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }}\r\n            onFocus={() => setExpand(true)}\r\n            onBlur={() => {setExpand(false);blur()}}>\r\n            <Editor className={'mx-1'}\r\n                    options={{fontSize: 12, scrollbar: {vertical: 'hidden', horizontalScrollbarSize: 5}, minimap: {enabled: false}, readOnly: readOnly}}\r\n                    defaultLanguage={'less'} value={vcss} onChange={change}/>\r\n        </div>\r\n        {false && <div className={\"debug\"}><div style={{whiteSpace:'pre'}}>{view.compiled_css}</div></div>}\r\n        {/*<textarea>\r\n            '[data-viewid=\"'+view.id+'\"]{\\n' +\r\n            Object.entries(palette).flatMap((entry, index, entries)=>{\r\n                let prefix = entry[0];\r\n                let colors = entry[1];\r\n                return colors.map((color, i)=> \"\\t--\" + prefix + i + \": \" + color + \";\\n\");\r\n            }).join('')+'\\n' + (cssISGlobal ? '}\\n' : '\\n') +\r\n            '/ *** custom css area *** /\\n' + view.css + (!cssISGlobal ? '}\\n' : '\\n')\r\n            view.css\r\n        </textarea>*/}\r\n        {\r\n            // todo: if row have only 1 color can be accessed both as palette prefix-1 or as palett prefix without number, so i can name colors.\r\n        }\r\n\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {viewID: Pointer<DViewElement, 1, 1, LViewElement>, readonly: boolean}\r\ninterface StateProps {view: LViewElement}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const view = LViewElement.fromPointer(ownProps.viewID);\r\n    return {view};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const PaletteDataConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PaletteDataComponent);\r\n\r\nexport const PaletteData = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <PaletteDataConnected {...{...props, children}} />;\r\n}\r\nexport default PaletteData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}