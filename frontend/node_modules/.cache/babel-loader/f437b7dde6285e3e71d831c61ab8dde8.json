{"ast":null,"code":"import _slicedToArray from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport { DockTabs } from \"./DockTabs\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DragState } from \"./dragdrop/DragManager\";\nimport { DockDropLayer } from \"./DockDropLayer\";\nimport { getFloatPanelSize, nextZIndex } from \"./Algorithm\";\nimport { DockDropEdge } from \"./DockDropEdge\";\nexport var DockPanel = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DockPanel, _React$PureComponent);\n  var _super = _createSuper(DockPanel);\n  function DockPanel() {\n    var _this;\n    _classCallCheck(this, DockPanel);\n    _this = _super.apply(this, arguments);\n    _this.getRef = function (r) {\n      _this._ref = r;\n    };\n    _this.state = {\n      dropFromPanel: null,\n      draggingHeader: false\n    };\n    _this.onDragOver = function (e) {\n      if (DockPanel._droppingPanel === _assertThisInitialized(_this)) {\n        return;\n      }\n      var panelData = _this.props.panelData;\n      var dockId = _this.context.getDockId();\n      var tab = DragState.getData('tab', dockId);\n      var panel = DragState.getData('panel', dockId);\n      if (tab || panel) {\n        DockPanel.droppingPanel = _assertThisInitialized(_this);\n      }\n      if (tab) {\n        if (tab.parent) {\n          _this.setState({\n            dropFromPanel: tab.parent\n          });\n        } else {\n          // add a fake panel\n          _this.setState({\n            dropFromPanel: {\n              activeId: '',\n              tabs: [],\n              group: tab.group\n            }\n          });\n        }\n      } else if (panel) {\n        _this.setState({\n          dropFromPanel: panel\n        });\n      }\n    };\n    // drop to move in float mode\n    _this.onPanelHeaderDragStart = function (event) {\n      var panelData = _this.props.panelData;\n      var parent = panelData.parent,\n        x = panelData.x,\n        y = panelData.y,\n        z = panelData.z;\n      var dockId = _this.context.getDockId();\n      if (parent && parent.mode === 'float') {\n        _this._movingX = x;\n        _this._movingY = y;\n        // hide the panel, but not create drag layer element\n        event.setData({\n          panel: _this.props.panelData\n        }, dockId);\n        event.startDrag(null, null);\n        _this.onFloatPointerDown();\n      } else {\n        var tabGroup = _this.context.getGroup(panelData.group);\n        var _getFloatPanelSize = getFloatPanelSize(_this._ref, tabGroup),\n          _getFloatPanelSize2 = _slicedToArray(_getFloatPanelSize, 2),\n          panelWidth = _getFloatPanelSize2[0],\n          panelHeight = _getFloatPanelSize2[1];\n        event.setData({\n          panel: panelData,\n          panelSize: [panelWidth, panelHeight]\n        }, dockId);\n        event.startDrag(null);\n      }\n      _this.setState({\n        draggingHeader: true\n      });\n    };\n    _this.onPanelHeaderDragMove = function (e) {\n      var _this$context$getLayo = _this.context.getLayoutSize(),\n        width = _this$context$getLayo.width,\n        height = _this$context$getLayo.height;\n      var panelData = _this.props.panelData;\n      panelData.x = _this._movingX + e.dx;\n      panelData.y = _this._movingY + e.dy;\n      if (width > 200 && height > 200) {\n        if (panelData.y < 0) {\n          panelData.y = 0;\n        } else if (panelData.y > height - 16) {\n          panelData.y = height - 16;\n        }\n        if (panelData.x + panelData.w < 16) {\n          panelData.x = 16 - panelData.w;\n        } else if (panelData.x > width - 16) {\n          panelData.x = width - 16;\n        }\n      }\n      _this.forceUpdate();\n    };\n    _this.onPanelHeaderDragEnd = function (e) {\n      if (!_this._unmounted) {\n        _this.setState({\n          draggingHeader: false\n        });\n        _this.context.onSilentChange(_this.props.panelData.activeId, 'move');\n      }\n    };\n    _this.onPanelCornerDragTL = function (e) {\n      _this.onPanelCornerDrag(e, 'tl');\n    };\n    _this.onPanelCornerDragTR = function (e) {\n      _this.onPanelCornerDrag(e, 'tr');\n    };\n    _this.onPanelCornerDragBL = function (e) {\n      _this.onPanelCornerDrag(e, 'bl');\n    };\n    _this.onPanelCornerDragBR = function (e) {\n      _this.onPanelCornerDrag(e, 'br');\n    };\n    _this.onPanelCornerDragMove = function (e) {\n      var panelData = _this.props.panelData;\n      var dx = e.dx,\n        dy = e.dy;\n      if (_this._movingCorner.startsWith('t')) {\n        // when moving top corners, dont let it move header out of screen\n        var _this$context$getLayo2 = _this.context.getLayoutSize(),\n          width = _this$context$getLayo2.width,\n          height = _this$context$getLayo2.height;\n        if (_this._movingY + dy < 0) {\n          dy = -_this._movingY;\n        } else if (_this._movingY + dy > height - 16) {\n          dy = height - 16 - _this._movingY;\n        }\n      }\n      switch (_this._movingCorner) {\n        case 'tl':\n          {\n            panelData.x = _this._movingX + dx;\n            panelData.w = _this._movingW - dx;\n            panelData.y = _this._movingY + dy;\n            panelData.h = _this._movingH - dy;\n            break;\n          }\n        case 'tr':\n          {\n            panelData.w = _this._movingW + dx;\n            panelData.y = _this._movingY + dy;\n            panelData.h = _this._movingH - dy;\n            break;\n          }\n        case 'bl':\n          {\n            panelData.x = _this._movingX + dx;\n            panelData.w = _this._movingW - dx;\n            panelData.h = _this._movingH + dy;\n            break;\n          }\n        case 'br':\n          {\n            panelData.w = _this._movingW + dx;\n            panelData.h = _this._movingH + dy;\n            break;\n          }\n      }\n      _this.forceUpdate();\n    };\n    _this.onPanelCornerDragEnd = function (e) {\n      _this.context.onSilentChange(_this.props.panelData.activeId, 'move');\n    };\n    _this.onFloatPointerDown = function () {\n      var panelData = _this.props.panelData;\n      var z = panelData.z;\n      var newZ = nextZIndex(z);\n      if (newZ !== z) {\n        panelData.z = newZ;\n        _this.forceUpdate();\n      }\n    };\n    _this.onPanelClicked = function (e) {\n      var target = e.nativeEvent.target;\n      if (!_this._ref.contains(_this._ref.ownerDocument.activeElement) && target instanceof Node && _this._ref.contains(target)) {\n        _this._ref.querySelector('.dock-bar').focus();\n      }\n    };\n    _this._unmounted = false;\n    return _this;\n  }\n  _createClass(DockPanel, [{\n    key: \"onDragOverOtherPanel\",\n    value: function onDragOverOtherPanel() {\n      if (this.state.dropFromPanel) {\n        this.setState({\n          dropFromPanel: null\n        });\n      }\n    }\n  }, {\n    key: \"onPanelCornerDrag\",\n    value: function onPanelCornerDrag(e, corner) {\n      var _this$props$panelData = this.props.panelData,\n        parent = _this$props$panelData.parent,\n        x = _this$props$panelData.x,\n        y = _this$props$panelData.y,\n        w = _this$props$panelData.w,\n        h = _this$props$panelData.h;\n      if (parent && parent.mode === 'float') {\n        this._movingCorner = corner;\n        this._movingX = x;\n        this._movingY = y;\n        this._movingW = w;\n        this._movingH = h;\n        e.startDrag(null, null);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        dropFromPanel = _this$state.dropFromPanel,\n        draggingHeader = _this$state.draggingHeader;\n      var _this$props = this.props,\n        panelData = _this$props.panelData,\n        size = _this$props.size;\n      var minWidth = panelData.minWidth,\n        minHeight = panelData.minHeight,\n        styleName = panelData.group,\n        id = panelData.id,\n        parent = panelData.parent,\n        panelLock = panelData.panelLock;\n      if (panelLock) {\n        if (panelLock.panelStyle) {\n          styleName = panelLock.panelStyle;\n        }\n      }\n      var panelClass;\n      if (styleName) {\n        panelClass = styleName.split(' ').map(function (name) {\n          return \"dock-style-\".concat(name);\n        }).join(' ');\n      }\n      var isMax = parent && parent.mode === 'maximize';\n      var isFloat = parent && parent.mode === 'float';\n      var pointerDownCallback = this.onFloatPointerDown;\n      var onPanelHeaderDragStart = this.onPanelHeaderDragStart;\n      if (!isFloat || isMax) {\n        pointerDownCallback = null;\n      }\n      if (isMax) {\n        dropFromPanel = null;\n        onPanelHeaderDragStart = null;\n      }\n      var cls = \"dock-panel \".concat(panelClass ? panelClass : '').concat(dropFromPanel ? ' dock-panel-dropping' : '').concat(draggingHeader ? ' dragging' : '');\n      var style = {\n        minWidth: minWidth,\n        minHeight: minHeight,\n        flex: \"\".concat(size, \" 1 \").concat(size, \"px\")\n      };\n      if (isFloat) {\n        style.left = panelData.x;\n        style.top = panelData.y;\n        style.width = panelData.w;\n        style.height = panelData.h;\n        style.zIndex = panelData.z;\n      }\n      var droppingLayer;\n      if (dropFromPanel) {\n        var tabGroup = this.context.getGroup(dropFromPanel.group);\n        var dockId = this.context.getDockId();\n        if (!tabGroup.tabLocked || DragState.getData('tab', dockId) == null) {\n          // not allowed locked tab to create new panel\n          var DockDropClass = this.context.useEdgeDrop() ? DockDropEdge : DockDropLayer;\n          droppingLayer = React.createElement(DockDropClass, {\n            panelData: panelData,\n            panelElement: this._ref,\n            dropFromPanel: dropFromPanel\n          });\n        }\n      }\n      return React.createElement(DragDropDiv, {\n        getRef: this.getRef,\n        className: cls,\n        style: style,\n        \"data-dockid\": id,\n        onMouseDownCapture: pointerDownCallback,\n        onTouchStartCapture: pointerDownCallback,\n        onDragOverT: isFloat ? null : this.onDragOver,\n        onClick: this.onPanelClicked\n      }, React.createElement(DockTabs, {\n        panelData: panelData,\n        onPanelDragStart: onPanelHeaderDragStart,\n        onPanelDragMove: this.onPanelHeaderDragMove,\n        onPanelDragEnd: this.onPanelHeaderDragEnd\n      }), isFloat ? [React.createElement(DragDropDiv, {\n        key: \"drag-size-t-l\",\n        className: \"dock-panel-drag-size dock-panel-drag-size-t-l\",\n        onDragStartT: this.onPanelCornerDragTL,\n        onDragMoveT: this.onPanelCornerDragMove,\n        onDragEndT: this.onPanelCornerDragEnd\n      }), React.createElement(DragDropDiv, {\n        key: \"drag-size-t-r\",\n        className: \"dock-panel-drag-size dock-panel-drag-size-t-r\",\n        onDragStartT: this.onPanelCornerDragTR,\n        onDragMoveT: this.onPanelCornerDragMove,\n        onDragEndT: this.onPanelCornerDragEnd\n      }), React.createElement(DragDropDiv, {\n        key: \"drag-size-b-l\",\n        className: \"dock-panel-drag-size dock-panel-drag-size-b-l\",\n        onDragStartT: this.onPanelCornerDragBL,\n        onDragMoveT: this.onPanelCornerDragMove,\n        onDragEndT: this.onPanelCornerDragEnd\n      }), React.createElement(DragDropDiv, {\n        key: \"drag-size-b-r\",\n        className: \"dock-panel-drag-size dock-panel-drag-size-b-r\",\n        onDragStartT: this.onPanelCornerDragBR,\n        onDragMoveT: this.onPanelCornerDragMove,\n        onDragEndT: this.onPanelCornerDragEnd\n      })] : null, droppingLayer);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (DockPanel._droppingPanel === this) {\n        DockPanel.droppingPanel = null;\n      }\n      this._unmounted = true;\n    }\n  }], [{\n    key: \"droppingPanel\",\n    set: function set(panel) {\n      if (DockPanel._droppingPanel === panel) {\n        return;\n      }\n      if (DockPanel._droppingPanel) {\n        DockPanel._droppingPanel.onDragOverOtherPanel();\n      }\n      DockPanel._droppingPanel = panel;\n    }\n  }]);\n  return DockPanel;\n}(React.PureComponent);\nDockPanel.contextType = DockContextType;","map":{"version":3,"names":["React","DockContextType","DockTabs","DragDropDiv","DragState","DockDropLayer","getFloatPanelSize","nextZIndex","DockDropEdge","DockPanel","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","getRef","r","_ref","state","dropFromPanel","draggingHeader","onDragOver","e","_droppingPanel","_assertThisInitialized","panelData","props","dockId","context","getDockId","tab","getData","panel","droppingPanel","parent","setState","activeId","tabs","group","onPanelHeaderDragStart","event","x","y","z","mode","_movingX","_movingY","setData","startDrag","onFloatPointerDown","tabGroup","getGroup","_getFloatPanelSize","_getFloatPanelSize2","_slicedToArray","panelWidth","panelHeight","panelSize","onPanelHeaderDragMove","_this$context$getLayo","getLayoutSize","width","height","dx","dy","w","forceUpdate","onPanelHeaderDragEnd","_unmounted","onSilentChange","onPanelCornerDragTL","onPanelCornerDrag","onPanelCornerDragTR","onPanelCornerDragBL","onPanelCornerDragBR","onPanelCornerDragMove","_movingCorner","startsWith","_this$context$getLayo2","_movingW","h","_movingH","onPanelCornerDragEnd","newZ","onPanelClicked","target","nativeEvent","contains","ownerDocument","activeElement","Node","querySelector","focus","_createClass","key","value","onDragOverOtherPanel","corner","_this$props$panelData","render","_this$state","_this$props","size","minWidth","minHeight","styleName","id","panelLock","panelStyle","panelClass","split","map","name","concat","join","isMax","isFloat","pointerDownCallback","cls","style","flex","left","top","zIndex","droppingLayer","tabLocked","DockDropClass","useEdgeDrop","createElement","panelElement","className","onMouseDownCapture","onTouchStartCapture","onDragOverT","onClick","onPanelDragStart","onPanelDragMove","onPanelDragEnd","onDragStartT","onDragMoveT","onDragEndT","componentWillUnmount","set","PureComponent","contextType"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-dock/es/DockPanel.js"],"sourcesContent":["import React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport { DockTabs } from \"./DockTabs\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DragState } from \"./dragdrop/DragManager\";\nimport { DockDropLayer } from \"./DockDropLayer\";\nimport { getFloatPanelSize, nextZIndex } from \"./Algorithm\";\nimport { DockDropEdge } from \"./DockDropEdge\";\nexport class DockPanel extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.getRef = (r) => {\n            this._ref = r;\n        };\n        this.state = { dropFromPanel: null, draggingHeader: false };\n        this.onDragOver = (e) => {\n            if (DockPanel._droppingPanel === this) {\n                return;\n            }\n            let { panelData } = this.props;\n            let dockId = this.context.getDockId();\n            let tab = DragState.getData('tab', dockId);\n            let panel = DragState.getData('panel', dockId);\n            if (tab || panel) {\n                DockPanel.droppingPanel = this;\n            }\n            if (tab) {\n                if (tab.parent) {\n                    this.setState({ dropFromPanel: tab.parent });\n                }\n                else {\n                    // add a fake panel\n                    this.setState({ dropFromPanel: { activeId: '', tabs: [], group: tab.group } });\n                }\n            }\n            else if (panel) {\n                this.setState({ dropFromPanel: panel });\n            }\n        };\n        // drop to move in float mode\n        this.onPanelHeaderDragStart = (event) => {\n            let { panelData } = this.props;\n            let { parent, x, y, z } = panelData;\n            let dockId = this.context.getDockId();\n            if (parent && parent.mode === 'float') {\n                this._movingX = x;\n                this._movingY = y;\n                // hide the panel, but not create drag layer element\n                event.setData({ panel: this.props.panelData }, dockId);\n                event.startDrag(null, null);\n                this.onFloatPointerDown();\n            }\n            else {\n                let tabGroup = this.context.getGroup(panelData.group);\n                let [panelWidth, panelHeight] = getFloatPanelSize(this._ref, tabGroup);\n                event.setData({ panel: panelData, panelSize: [panelWidth, panelHeight] }, dockId);\n                event.startDrag(null);\n            }\n            this.setState({ draggingHeader: true });\n        };\n        this.onPanelHeaderDragMove = (e) => {\n            let { width, height } = this.context.getLayoutSize();\n            let { panelData } = this.props;\n            panelData.x = this._movingX + e.dx;\n            panelData.y = this._movingY + e.dy;\n            if (width > 200 && height > 200) {\n                if (panelData.y < 0) {\n                    panelData.y = 0;\n                }\n                else if (panelData.y > height - 16) {\n                    panelData.y = height - 16;\n                }\n                if (panelData.x + panelData.w < 16) {\n                    panelData.x = 16 - panelData.w;\n                }\n                else if (panelData.x > width - 16) {\n                    panelData.x = width - 16;\n                }\n            }\n            this.forceUpdate();\n        };\n        this.onPanelHeaderDragEnd = (e) => {\n            if (!this._unmounted) {\n                this.setState({ draggingHeader: false });\n                this.context.onSilentChange(this.props.panelData.activeId, 'move');\n            }\n        };\n        this.onPanelCornerDragTL = (e) => {\n            this.onPanelCornerDrag(e, 'tl');\n        };\n        this.onPanelCornerDragTR = (e) => {\n            this.onPanelCornerDrag(e, 'tr');\n        };\n        this.onPanelCornerDragBL = (e) => {\n            this.onPanelCornerDrag(e, 'bl');\n        };\n        this.onPanelCornerDragBR = (e) => {\n            this.onPanelCornerDrag(e, 'br');\n        };\n        this.onPanelCornerDragMove = (e) => {\n            let { panelData } = this.props;\n            let { dx, dy } = e;\n            if (this._movingCorner.startsWith('t')) {\n                // when moving top corners, dont let it move header out of screen\n                let { width, height } = this.context.getLayoutSize();\n                if (this._movingY + dy < 0) {\n                    dy = -this._movingY;\n                }\n                else if (this._movingY + dy > height - 16) {\n                    dy = height - 16 - this._movingY;\n                }\n            }\n            switch (this._movingCorner) {\n                case 'tl': {\n                    panelData.x = this._movingX + dx;\n                    panelData.w = this._movingW - dx;\n                    panelData.y = this._movingY + dy;\n                    panelData.h = this._movingH - dy;\n                    break;\n                }\n                case 'tr': {\n                    panelData.w = this._movingW + dx;\n                    panelData.y = this._movingY + dy;\n                    panelData.h = this._movingH - dy;\n                    break;\n                }\n                case 'bl': {\n                    panelData.x = this._movingX + dx;\n                    panelData.w = this._movingW - dx;\n                    panelData.h = this._movingH + dy;\n                    break;\n                }\n                case 'br': {\n                    panelData.w = this._movingW + dx;\n                    panelData.h = this._movingH + dy;\n                    break;\n                }\n            }\n            this.forceUpdate();\n        };\n        this.onPanelCornerDragEnd = (e) => {\n            this.context.onSilentChange(this.props.panelData.activeId, 'move');\n        };\n        this.onFloatPointerDown = () => {\n            let { panelData } = this.props;\n            let { z } = panelData;\n            let newZ = nextZIndex(z);\n            if (newZ !== z) {\n                panelData.z = newZ;\n                this.forceUpdate();\n            }\n        };\n        this.onPanelClicked = (e) => {\n            const target = e.nativeEvent.target;\n            if (!this._ref.contains(this._ref.ownerDocument.activeElement) && target instanceof Node && this._ref.contains(target)) {\n                this._ref.querySelector('.dock-bar').focus();\n            }\n        };\n        this._unmounted = false;\n    }\n    static set droppingPanel(panel) {\n        if (DockPanel._droppingPanel === panel) {\n            return;\n        }\n        if (DockPanel._droppingPanel) {\n            DockPanel._droppingPanel.onDragOverOtherPanel();\n        }\n        DockPanel._droppingPanel = panel;\n    }\n    onDragOverOtherPanel() {\n        if (this.state.dropFromPanel) {\n            this.setState({ dropFromPanel: null });\n        }\n    }\n    onPanelCornerDrag(e, corner) {\n        let { parent, x, y, w, h } = this.props.panelData;\n        if (parent && parent.mode === 'float') {\n            this._movingCorner = corner;\n            this._movingX = x;\n            this._movingY = y;\n            this._movingW = w;\n            this._movingH = h;\n            e.startDrag(null, null);\n        }\n    }\n    render() {\n        let { dropFromPanel, draggingHeader } = this.state;\n        let { panelData, size } = this.props;\n        let { minWidth, minHeight, group: styleName, id, parent, panelLock } = panelData;\n        if (panelLock) {\n            if (panelLock.panelStyle) {\n                styleName = panelLock.panelStyle;\n            }\n        }\n        let panelClass;\n        if (styleName) {\n            panelClass = styleName\n                .split(' ')\n                .map((name) => `dock-style-${name}`)\n                .join(' ');\n        }\n        let isMax = parent && parent.mode === 'maximize';\n        let isFloat = parent && parent.mode === 'float';\n        let pointerDownCallback = this.onFloatPointerDown;\n        let onPanelHeaderDragStart = this.onPanelHeaderDragStart;\n        if (!isFloat || isMax) {\n            pointerDownCallback = null;\n        }\n        if (isMax) {\n            dropFromPanel = null;\n            onPanelHeaderDragStart = null;\n        }\n        let cls = `dock-panel ${panelClass ? panelClass : ''}${dropFromPanel ? ' dock-panel-dropping' : ''}${draggingHeader ? ' dragging' : ''}`;\n        let style = { minWidth, minHeight, flex: `${size} 1 ${size}px` };\n        if (isFloat) {\n            style.left = panelData.x;\n            style.top = panelData.y;\n            style.width = panelData.w;\n            style.height = panelData.h;\n            style.zIndex = panelData.z;\n        }\n        let droppingLayer;\n        if (dropFromPanel) {\n            let tabGroup = this.context.getGroup(dropFromPanel.group);\n            let dockId = this.context.getDockId();\n            if (!tabGroup.tabLocked || DragState.getData('tab', dockId) == null) {\n                // not allowed locked tab to create new panel\n                let DockDropClass = this.context.useEdgeDrop() ? DockDropEdge : DockDropLayer;\n                droppingLayer = React.createElement(DockDropClass, { panelData: panelData, panelElement: this._ref, dropFromPanel: dropFromPanel });\n            }\n        }\n        return (React.createElement(DragDropDiv, { getRef: this.getRef, className: cls, style: style, \"data-dockid\": id, onMouseDownCapture: pointerDownCallback, onTouchStartCapture: pointerDownCallback, onDragOverT: isFloat ? null : this.onDragOver, onClick: this.onPanelClicked },\n            React.createElement(DockTabs, { panelData: panelData, onPanelDragStart: onPanelHeaderDragStart, onPanelDragMove: this.onPanelHeaderDragMove, onPanelDragEnd: this.onPanelHeaderDragEnd }),\n            isFloat ?\n                [\n                    React.createElement(DragDropDiv, { key: \"drag-size-t-l\", className: \"dock-panel-drag-size dock-panel-drag-size-t-l\", onDragStartT: this.onPanelCornerDragTL, onDragMoveT: this.onPanelCornerDragMove, onDragEndT: this.onPanelCornerDragEnd }),\n                    React.createElement(DragDropDiv, { key: \"drag-size-t-r\", className: \"dock-panel-drag-size dock-panel-drag-size-t-r\", onDragStartT: this.onPanelCornerDragTR, onDragMoveT: this.onPanelCornerDragMove, onDragEndT: this.onPanelCornerDragEnd }),\n                    React.createElement(DragDropDiv, { key: \"drag-size-b-l\", className: \"dock-panel-drag-size dock-panel-drag-size-b-l\", onDragStartT: this.onPanelCornerDragBL, onDragMoveT: this.onPanelCornerDragMove, onDragEndT: this.onPanelCornerDragEnd }),\n                    React.createElement(DragDropDiv, { key: \"drag-size-b-r\", className: \"dock-panel-drag-size dock-panel-drag-size-b-r\", onDragStartT: this.onPanelCornerDragBR, onDragMoveT: this.onPanelCornerDragMove, onDragEndT: this.onPanelCornerDragEnd })\n                ]\n                : null,\n            droppingLayer));\n    }\n    componentWillUnmount() {\n        if (DockPanel._droppingPanel === this) {\n            DockPanel.droppingPanel = null;\n        }\n        this._unmounted = true;\n    }\n}\nDockPanel.contextType = DockContextType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}