{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Measurable.tsx\",\n  _dec,\n  _class,\n  _class2;\nimport React, { Component } from \"react\";\nimport { DGraphElement, Log, RuntimeAccessible, Size, U } from \"../../joiner\";\nimport $ from \"jquery\";\n\n// todo\n\n// private\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let MeasurableComponent = (_dec = RuntimeAccessible('MeasurableComponent'), _dec(_class = (_class2 = class MeasurableComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.html = null;\n    this.$html = void 0;\n    this.dragOptionsChanged = true;\n    this.resizeOptionsChanged = true;\n    this.rotateOptionsChanged = true;\n    this.defaultOptions = {\n      draggable: {\n        cursor: 'grabbing',\n        // containment: 'parent',\n        distance: 5\n        // helper: 'clone', // 'original' or 'csselector'? or func=>html\n        // disabled: !(view.draggable),}\n      },\n      resizable: {},\n      rotatable: {}\n    };\n    this.oldPos = {\n      left: 0,\n      top: 0\n    };\n  }\n  componentDidMount() {\n    this.afterUpdate();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.afterUpdate();\n  }\n  afterUpdate() {\n    if (!this.html) return;\n    this.$html = $(this.html);\n    if (this.dragOptionsChanged) {\n      this.afterUpdateSingle(\"draggable\");\n    }\n    if (this.resizeOptionsChanged) {\n      this.afterUpdateSingle(\"resizable\");\n    }\n    if (this.rotateOptionsChanged) {\n      this.afterUpdateSingle(\"rotatable\");\n    }\n  }\n  afterUpdateSingle(type) {\n    if (!this.$html) return;\n    let $measurable = this.$html;\n\n    // todo: changing options at runtime works, but changing children does not update\n\n    let eventmap = {\n      's': {\n        'draggable': 'onDragStart',\n        'rotatable': 'onRotateStart',\n        'resizable': 'onResizeStart'\n      },\n      'ing': {\n        'draggable': 'whileDragging',\n        'rotatable': 'whileRotating',\n        'resizable': 'whileResizing'\n      },\n      'e': {\n        'draggable': 'onDragEnd',\n        'rotatable': 'onRotateEnd',\n        'resizable': 'onResizeEnd'\n      }\n    };\n    let childmodekeys = ['left', 'top', 'transform', 'position'];\n    //let positionMap = new WeakMap<HTMLElement, {left: number; top: number}>();\n    let childmode = (e, evt, evtkind, ui) => {\n      let oc = this.props.onChildren;\n      if (!oc) {\n        Log.ee('not oc', {\n          evt,\n          oc,\n          e,\n          p: this.props\n        });\n        return;\n      }\n      let child;\n      if (typeof oc === 'function') child = oc(e);else child = e.children[0];\n      if (!child) {\n        Log.ee('child not found', {\n          child,\n          evt,\n          oc,\n          e\n        });\n        return;\n      }\n      let oldpos = this.oldPos; // positionMap.get(e);\n      console.log('measurable default event child ' + evtkind, {\n        ui,\n        e,\n        oc,\n        oldpos\n      });\n      //if (evtkind === 'e') { positionMap.set(e, ui.position); }\n\n      /*if (evtkind === 's') {\r\n          ui.originalPosition.left = 300;\r\n          ui.offset.left = 300;\r\n          ui.position.left = 300;\r\n          console.log('measurable sstart ', {type, e, oc, ui, el: e.style.left, cl: child.style.left});\r\n      }*/\n\n      let key;\n      for (key of childmodekeys) {\n        let fixpos = () => {\n          if (oldpos && oldpos[key] !== undefined) {\n            if (key === 'left') console.log('measurable fixpos ' + evtkind, oldpos[key] + ui.position[key] + 'px', oldpos[key]);\n            let newpos = oldpos[key] + ui.position[key];\n            child.style[key] = newpos + 'px';\n            if (evtkind === 'e') this.oldPos[key] = newpos;\n          } else child.style[key] = e.style[key];\n        };\n        fixpos();\n        if (evtkind === 'e') setTimeout(fixpos, 1000);\n        if (evtkind === 's' && !e.classList.contains('draggable-child-mode')) e.classList.add('draggable-child-mode');\n        // delete e.style[key]\n      }\n    };\n    function absoluteToTransform(e, evt, evtkind) {\n      let x = e.style.left;\n      let y = e.style.top; /*\r\n                           e.style.left = '0px';\r\n                           e.style.top = '0px';*/\n      //e.style.position = 'unset';\n      e.style.transform = `translate(${x}, ${y})`;\n    }\n    let translateeevents = {\n      'draggable': {\n        's': (e, ui) => {\n          absoluteToTransform(e.target, e, 's');\n        },\n        'ing': (e, ui) => {\n          absoluteToTransform(e.target, e, 'ing');\n        },\n        'e': (e, ui) => {\n          absoluteToTransform(e.target, e, 'e');\n        }\n      },\n      'resizable': {\n        's': (e, ui) => {},\n        'ing': (e, ui) => {},\n        'e': (e, ui) => {}\n      },\n      'rotatable': {\n        's': (e, ui) => {},\n        'ing': (e, ui) => {},\n        'e': (e, ui) => {}\n      }\n    };\n    let defaulteevent = evtkind => {\n      if (!this.props.transformMode && !this.props.onChildren) return null;\n      return (e, ui) => {\n        //console.log('measurable default event', {type, evtkind, translateeevents, e, t: e.target});\n        if (this.props.transformMode === true) translateeevents[type][evtkind](e, ui);\n        childmode(e.target, e, evtkind, ui);\n      };\n    };\n    let jqui_ing;\n    switch (type) {\n      default:\n        jqui_ing = Log.eDevv(\"unexpected measurable event: \" + type);\n        return;\n      case \"draggable\":\n        jqui_ing = 'drag';\n        break;\n      case \"resizable\":\n        jqui_ing = 'resize';\n        break;\n      case \"rotatable\":\n        jqui_ing = 'rotate';\n        break;\n    }\n    /*\r\n    defaultoptions.start = (event: GObject, obj: GObject) => {\r\n        TRANSACTION(()=>{\r\n            //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n        })\r\n    }\r\n    defaultoptions[jqui_ing] = (event: GObject, obj: GObject) => {\r\n        TRANSACTION(()=>{\r\n            //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n        })\r\n    };\r\n    defaultoptions.stop = (event: GObject, obj: GObject) => {\r\n        TRANSACTION(()=>{\r\n            //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n        })\r\n    }*/\n    let options;\n    const props = this.props;\n    const datamap = {\n      draggable: \"uiDraggable\",\n      resizable: \"uiResizable\",\n      rotatable: \"uiRotatable\"\n    };\n    const optionmap = {\n      draggable: \"draggable\",\n      resizable: \"resizable\",\n      rotatable: \"rotatable\"\n    };\n    const optionkey = optionmap[type];\n    if (props[optionkey] === false || !props[optionkey]) {\n      console.log(\"measurable off \" + type, {\n        $measurable,\n        type,\n        datamap,\n        optionkey,\n        props\n      });\n      if ($measurable.data(datamap[type])) $measurable[type]('disable');\n      return;\n    }\n    if (props[optionkey] === true) {\n      options = {};\n    } else options = {\n      ...props[optionkey]\n    };\n\n    //let jodelevent = {'s': eventmap.s[type], 'ing': eventmap.ing[type], 'e': eventmap.e[type]};\n    let jquievent = {\n      's': 'start',\n      'ing': jqui_ing,\n      'e': 'stop'\n    };\n    let evtkey0;\n    for (evtkey0 in jquievent) {\n      let evtkey = evtkey0; // for closure\n      let jqkey = jquievent[evtkey] || '';\n      let propsevent = props[eventmap[evtkey][type]];\n      if (propsevent && typeof propsevent !== \"function\") {\n        Log.ee(\"<Measurable /> \" + eventmap[evtkey][type] + \" props must be a function\");\n        continue;\n      }\n      options[jqkey + \"_debug\"] = propsevent;\n      // call ondragend... jodel events\n      let jquievt = options[jqkey];\n      // let jodelevt = propsevent; // (...params: any) => propsevent(...params); // was made to preserve \"this\"?\n      let defaultevt = defaulteevent(evtkey);\n      let allevents = [jquievt, propsevent, defaultevt].filter(e => !!e);\n      console.log('checking for jodelevent 00', {\n        propsevent,\n        allevents,\n        props,\n        k: eventmap[evtkey][type],\n        pe: props[eventmap[evtkey][type]],\n        evtkey,\n        type,\n        eventmap\n      });\n      let thiss = this;\n      if (allevents.length) options[jqkey] = function (evt, ui) {\n        let allevents_i = allevents;\n        for (let e of allevents_i) {\n          let evtkey_i = evtkey;\n          let jodelevt = propsevent = props[eventmap[evtkey_i][type]]; // if i don't redeclare it here, closure makes a mess taking always the last jodelevt for all iterations.\n          console.log('checking for jodelevent', e === jodelevt, {\n            e,\n            jodelevt,\n            allevents,\n            props,\n            k: eventmap[evtkey_i][type],\n            pe: props[eventmap[evtkey_i][type]],\n            evtkey,\n            evtkey_i,\n            type,\n            eventmap\n          });\n          if (e === jodelevt) {\n            e(thiss.getCoords(evt, ui), evt, ui);\n          } else e(thiss.getCoords(evt, ui), evt, ui);\n        }\n      };\n    }\n    let propsOptions = {\n      ...options\n    };\n    let defaultOptions = this.defaultOptions[type];\n    U.objectMergeInPlace(options, defaultOptions);\n    //console.log(\"measurable\", {type, $measurable, options, propsOptions, defaultOptions});\n    $measurable[type](options);\n  }\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    //console.log(\"measurable shouldup\", {nc:nextProps.children, tc:this.props.children, eq: nextProps.children == this.props.children});\n    // todo: would need to check if pros.children has changed, but that requires a deep search of subcomponents props and state.\n    // currently with just return true it works and rerenders every time the parent component rerenders. not when other elements are interacted.\n    // it works also with <Input> as direct child and it updates.\n    if (window) return true;\n    const oldProps = this.props || {};\n    this.dragOptionsChanged = false;\n    this.resizeOptionsChanged = false;\n    this.rotateOptionsChanged = false;\n    let ret = false;\n    const nestederr = \"Options cannot contain functions or nested objects\";\n    if (!U.isShallowEqualWithProxies(oldProps.draggable, nextProps.draggable)) {\n      const opt = oldProps.draggable;\n      if (opt && typeof opt === \"object\") for (let k in opt) {\n        switch (typeof opt[k]) {\n          case \"function\":\n          case \"object\":\n            Log.ee(\"drag\" + nestederr, k);\n        }\n      }\n      this.dragOptionsChanged = true;\n      ret = true;\n    }\n    if (!U.isShallowEqualWithProxies(oldProps.resizable, nextProps.resizable)) {\n      const opt = oldProps.resizable;\n      if (opt && typeof opt === \"object\") for (let k in opt) {\n        switch (typeof opt[k]) {\n          case \"function\":\n          case \"object\":\n            Log.ee(\"resize\" + nestederr, k);\n        }\n      }\n      this.resizeOptionsChanged = true;\n      ret = true;\n    }\n    if (!U.isShallowEqualWithProxies(oldProps.rotatable, nextProps.rotatable)) {\n      const opt = oldProps.rotatable;\n      if (opt && typeof opt === \"object\") for (let k in opt) {\n        switch (typeof opt[k]) {\n          case \"function\":\n          case \"object\":\n            Log.ee(\"rotate\" + nestederr, k);\n        }\n      }\n      this.rotateOptionsChanged = true;\n      return true;\n    }\n    if (ret) return true; // i don't need to set more this.variable stuff and i already determined something changed.\n    if (Object.keys(oldProps).length !== Object.keys(nextProps).length) return true;\n    let k;\n    for (k in oldProps) {\n      switch (k) {\n        //case \"axis\": if (ok)\n        case \"draggable\":\n        case \"resizable\":\n        case \"rotatable\":\n          continue;\n        case \"children\":\n          continue;\n      }\n      if (!(k in nextProps)) return false;\n      let ok = oldProps[k];\n      let nk = nextProps[k];\n      if (ok === nk) continue;\n      let tk = typeof ok;\n      if (tk !== typeof nk) return false;\n      switch (tk) {\n        case \"object\":\n          Log.ee(\"unexpected object in <Measurable/> props\", {\n            k,\n            nk,\n            ok\n          });\n          return true;\n        case \"function\":\n          if (ok.toString() !== nk.toString()) return true;\n          break;\n        default:\n          return false;\n        // already checked they are !==\n      }\n    }\n    return false;\n  }\n  updateDefaultOptions() {\n    /*let addClasses = this.props.children ? 'on-children' as any : undefined;\r\n                                      jqui.classes does not owrk? and addclass is only for draggable?\r\n    if (this.defaultOptions.draggable.addClasses !== addClasses) {\r\n        this.defaultOptions.resizable.classes = addClasses;\r\n        // this.defaultOptions.rotatable.classes = addClasses;\r\n    }*/\n  }\n  render() {\n    let child = this.props.children;\n    this.updateDefaultOptions();\n    if (!child) return child || null; // sometimes react passes {} as props.children?\n    if (!Object.keys(child).length) return Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\n    if (Array.isArray(child)) {\n      if (child.length !== 1) {\n        Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\n        return child;\n      } else child = child[0];\n    }\n    if (child.type.toString() === React.Fragment.toString()) {\n      Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\n      return child;\n    }\n    let oldProps = child.props;\n    let newProps = {\n      ref: html => {\n        if (html && !U.isHtmlNode(html)) {\n          Log.ee('ref tring to set non-html element', html);\n          return;\n        }\n        this.html = html;\n      }\n    };\n    U.objectMergeInPlace(newProps, oldProps);\n    let clonedChild = /*#__PURE__*/React.cloneElement(child, newProps);\n    return clonedChild;\n  }\n  getCoords(evt, ui) {\n    let size = Size.of(evt.target);\n    let graph = DGraphElement.graphLFromHtml(evt.target);\n    return graph === null || graph === void 0 ? void 0 : graph.translateHtmlSize(size);\n  }\n}, _class2.cname = \"MeasurableComponent\", _class2)) || _class);\n/*\r\n@RuntimeAccessible('InfiniteScrollComponent')\r\nexport class InfiniteScrollComponent extends Component<ScrollOwnProps, ScrollState>{\r\n    static cname: string = \"InfiniteScrollComponent\";\r\n    render(){\r\n        return <Measurable transformMode={false} onChildren={true}>{ this.props.children}</Measurable>\r\n    }\r\n}\r\n*/\n// private\n\n// private\n\n// private\n\n// private\n\n////// mapper func\n/*\r\nfunction mapStateToProps(state: DState, ownProps: MeasurableOwnProps): MeasurableStateProps {\r\n    const ret: MeasurableStateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n*/\n\nMeasurableComponent.defaultProps = {\n  autosizex: true,\n  autosizey: true,\n  style: undefined,\n  children: []\n};\nexport class InfiniteScrollComponent extends Component {}\nexport function Measurable(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(MeasurableComponent, {\n    ...props,\n    children,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 12\n  }, this);\n}\n// todo: shortcuts for Draggable Resizable Rotatable with whileDragging onDragStart props simplified to start, while, end\n_c = Measurable;\nexport function InfiniteScroll(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(Measurable, {\n    ...props,\n    children,\n    transformMode: false,\n    onChildren: true,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 12\n  }, this);\n} /*\r\n  export function InfiniteScroll(props: MeasurableAllProps, children: ReactChild[] = []): ReactElement {\r\n     return <InfiniteScrollComponent {...{...props, children}}>{children}</InfiniteScrollComponent>;\r\n  }*/\n\n/*connect<MeasurableStateProps, DispatchProps, MeasurableOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeasurableComponent);*/\n_c2 = InfiniteScroll;\nvar _c, _c2;\n$RefreshReg$(_c, \"Measurable\");\n$RefreshReg$(_c2, \"InfiniteScroll\");","map":{"version":3,"names":["React","Component","DGraphElement","Log","RuntimeAccessible","Size","U","$","jsxDEV","_jsxDEV","MeasurableComponent","_dec","_class","_class2","constructor","arguments","html","$html","dragOptionsChanged","resizeOptionsChanged","rotateOptionsChanged","defaultOptions","draggable","cursor","distance","resizable","rotatable","oldPos","left","top","componentDidMount","afterUpdate","componentDidUpdate","prevProps","prevState","snapshot","afterUpdateSingle","type","$measurable","eventmap","childmodekeys","childmode","e","evt","evtkind","ui","oc","props","onChildren","ee","p","child","children","oldpos","console","log","key","fixpos","undefined","position","newpos","style","setTimeout","classList","contains","add","absoluteToTransform","x","y","transform","translateeevents","s","target","ing","defaulteevent","transformMode","jqui_ing","eDevv","options","datamap","optionmap","optionkey","data","jquievent","evtkey0","evtkey","jqkey","propsevent","jquievt","defaultevt","allevents","filter","k","pe","thiss","length","allevents_i","evtkey_i","jodelevt","getCoords","propsOptions","objectMergeInPlace","shouldComponentUpdate","nextProps","nextState","nextContext","window","oldProps","ret","nestederr","isShallowEqualWithProxies","opt","Object","keys","ok","nk","tk","toString","updateDefaultOptions","render","Array","isArray","Fragment","newProps","ref","isHtmlNode","clonedChild","cloneElement","size","of","graph","graphLFromHtml","translateHtmlSize","cname","defaultProps","autosizex","autosizey","InfiniteScrollComponent","Measurable","fileName","_jsxFileName","lineNumber","columnNumber","_c","InfiniteScroll","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Measurable.tsx"],"sourcesContent":["import React, {Component, CSSProperties, PureComponent, ReactChild, ReactElement, ReactNode} from \"react\";\r\nimport {DGraphElement, Dictionary, GObject, GraphSize, LGraph, Log, RuntimeAccessible, Size, TRANSACTION, U} from \"../../joiner\";\r\nimport $ from \"jquery\";\r\nimport {JQueryUI} from \"../../common/libraries/jqui-types\";\r\nimport {OwnProps} from \"../rightbar/structureEditor/ModelMetaData\";\r\ntype ResizableEvent = JQueryUI.ResizableEvent;\r\ntype DraggableEvent = JQueryUI.DraggableEvent;\r\ntype RotatableEvent = ()=>void; // todo\r\n\r\n// private\r\ninterface MeasurableState {\r\n}\r\ninterface ScrollState {\r\n}\r\n\r\ntype MeasurableUIEvent = ResizableEvent | DraggableEvent | RotatableEvent;\r\n\r\n@RuntimeAccessible('MeasurableComponent')\r\nexport class MeasurableComponent extends Component<MeasurableAllProps, MeasurableState>{\r\n    static cname: string = \"MeasurableComponent\";\r\n\r\n\r\n    private html: Element | null = null;\r\n    private $html!:  JQuery<Element>;\r\n    dragOptionsChanged: boolean = true;\r\n    resizeOptionsChanged: boolean = true;\r\n    rotateOptionsChanged: boolean = true;\r\n    defaultOptions: {\"draggable\": JQueryUI.DraggableOptions, resizable: JQueryUI.ResizableOptions, rotatable: GObject} = {\r\n        draggable: {\r\n            cursor: 'grabbing',\r\n            // containment: 'parent',\r\n            distance: 5,\r\n            // helper: 'clone', // 'original' or 'csselector'? or func=>html\r\n            // disabled: !(view.draggable),}\r\n        },\r\n        resizable: {},\r\n        rotatable: {},\r\n    }\r\n    oldPos: Dictionary<string, number> =  {left: 0, top: 0};\r\n\r\n    componentDidMount() {\r\n        this.afterUpdate();\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MeasurableAllProps>, prevState: Readonly<MeasurableState>, snapshot?: any) {\r\n        this.afterUpdate();\r\n    }\r\n    afterUpdate(): void{\r\n        if (!this.html) return;\r\n        this.$html = $(this.html);\r\n        if (this.dragOptionsChanged) { this.afterUpdateSingle(\"draggable\"); }\r\n        if (this.resizeOptionsChanged) { this.afterUpdateSingle(\"resizable\"); }\r\n        if (this.rotateOptionsChanged) { this.afterUpdateSingle(\"rotatable\"); }\r\n    }\r\n\r\n    afterUpdateSingle(type: \"draggable\" | \"resizable\" | \"rotatable\"): void{\r\n        if (!this.$html) return;\r\n        let $measurable = this.$html;\r\n\r\n        // todo: changing options at runtime works, but changing children does not update\r\n\r\n\r\n        type EventLetter = 's'|'ing'|'e';\r\n        let eventmap = {\r\n            's':    {'draggable': 'onDragStart',    'rotatable': 'onRotateStart',   'resizable': 'onResizeStart'},\r\n            'ing':  {'draggable': 'whileDragging',  'rotatable': 'whileRotating',   'resizable': 'whileResizing'},\r\n            'e':    {'draggable': 'onDragEnd',      'rotatable': 'onRotateEnd',     'resizable': 'onResizeEnd'  },\r\n        }\r\n        let childmodekeys: (keyof CSSStyleDeclaration)[] = ['left', 'top', 'transform', 'position'];\r\n        //let positionMap = new WeakMap<HTMLElement, {left: number; top: number}>();\r\n        let childmode = (e: HTMLElement, evt?: any, evtkind?: EventLetter, ui?:any): void => {\r\n            let oc = this.props.onChildren;\r\n            if (!oc) {\r\n                Log.ee('not oc', {evt, oc, e, p: this.props}); return;\r\n            }\r\n            let child: HTMLElement;\r\n            if (typeof oc === 'function') child = oc(e);\r\n            else child = e.children[0] as HTMLElement;\r\n            if (!child) {\r\n                Log.ee('child not found', {child, evt, oc, e}); return;\r\n            }\r\n            let oldpos = this.oldPos; // positionMap.get(e);\r\n            console.log('measurable default event child ' + evtkind, {ui, e, oc, oldpos});\r\n            //if (evtkind === 'e') { positionMap.set(e, ui.position); }\r\n\r\n            /*if (evtkind === 's') {\r\n                ui.originalPosition.left = 300;\r\n                ui.offset.left = 300;\r\n                ui.position.left = 300;\r\n                console.log('measurable sstart ', {type, e, oc, ui, el: e.style.left, cl: child.style.left});\r\n            }*/\r\n\r\n            let key: any;\r\n            for (key of childmodekeys) {\r\n                let fixpos = () => {\r\n                    if (oldpos && (oldpos as any)[key] !== undefined) {\r\n                        if (key ==='left') console.log('measurable fixpos ' + evtkind, (oldpos as any)[key] + ui.position[key] + 'px', (oldpos as any)[key]);\r\n                        let newpos = (oldpos as any)[key] + ui.position[key];\r\n                        child.style[key] = (newpos) + 'px';\r\n                        if (evtkind === 'e') this.oldPos[key] = newpos;\r\n                    }\r\n                    else child.style[key] = e.style[key];\r\n                }\r\n                fixpos();\r\n                if (evtkind === 'e')  setTimeout(fixpos, 1000);\r\n                if (evtkind === 's' && !e.classList.contains('draggable-child-mode')) e.classList.add('draggable-child-mode');\r\n                // delete e.style[key]\r\n            }\r\n        }\r\n        function absoluteToTransform(e: HTMLElement, evt?: any, evtkind?: EventLetter): void {\r\n            let x = e.style.left;\r\n            let y = e.style.top;/*\r\n            e.style.left = '0px';\r\n            e.style.top = '0px';*/\r\n            //e.style.position = 'unset';\r\n            e.style.transform = `translate(${x}, ${y})`;\r\n        }\r\n        let translateeevents: Dictionary<string, Dictionary<string, DraggableEvent>> = {\r\n            'draggable': {\r\n                's': (e, ui)=>{ absoluteToTransform(e.target as HTMLElement, e, 's'); },\r\n                'ing': (e, ui)=>{ absoluteToTransform(e.target as HTMLElement, e, 'ing'); },\r\n                'e': (e, ui)=>{ absoluteToTransform(e.target as HTMLElement, e, 'e'); }},\r\n            'resizable': {\r\n                's': (e, ui)=>{},\r\n                'ing': (e, ui)=>{},\r\n                'e': (e, ui)=>{}},\r\n            'rotatable': {\r\n                's': (e, ui)=>{},\r\n                'ing': (e, ui)=>{},\r\n                'e': (e, ui)=>{}},\r\n        };\r\n        let defaulteevent = (evtkind: EventLetter): MeasurableUIEvent | null =>{\r\n            if (!this.props.transformMode && !this.props.onChildren) return null;\r\n            return (e: any, ui: any) => {\r\n                //console.log('measurable default event', {type, evtkind, translateeevents, e, t: e.target});\r\n                if (this.props.transformMode === true) translateeevents[type][evtkind](e, ui);\r\n                childmode(e.target, e, evtkind, ui);\r\n            }\r\n        };\r\n        let jqui_ing: string;\r\n        switch (type){\r\n            default: jqui_ing = Log.eDevv(\"unexpected measurable event: \" + type); return;\r\n            case \"draggable\": jqui_ing = 'drag'; break;\r\n            case \"resizable\": jqui_ing = 'resize'; break;\r\n            case \"rotatable\": jqui_ing = 'rotate'; break;\r\n        }\r\n        /*\r\n        defaultoptions.start = (event: GObject, obj: GObject) => {\r\n            TRANSACTION(()=>{\r\n                //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n            })\r\n        }\r\n        defaultoptions[jqui_ing] = (event: GObject, obj: GObject) => {\r\n            TRANSACTION(()=>{\r\n                //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n            })\r\n        };\r\n        defaultoptions.stop = (event: GObject, obj: GObject) => {\r\n            TRANSACTION(()=>{\r\n                //for (let vid of allviews) this.doMeasurableEvent((EMeasurableEvents as any)[eventmap.s[type]], vid);\r\n            })\r\n        }*/\r\n        let options: GObject;\r\n        const props: GObject = this.props;\r\n        const datamap = {draggable: \"uiDraggable\", resizable: \"uiResizable\", rotatable: \"uiRotatable\"};\r\n        const optionmap = {draggable: \"draggable\", resizable: \"resizable\", rotatable: \"rotatable\"};\r\n        const optionkey = optionmap[type];\r\n        if (props[optionkey] === false || !props[optionkey]) {\r\n            console.log(\"measurable off \" + type, {$measurable, type, datamap, optionkey, props});\r\n            if ($measurable.data(datamap[type])) ($measurable as GObject)[type]('disable');\r\n            return;\r\n        }\r\n        if (props[optionkey] === true) {\r\n            options = {};\r\n        } else options = {...props[optionkey]};\r\n\r\n        //let jodelevent = {'s': eventmap.s[type], 'ing': eventmap.ing[type], 'e': eventmap.e[type]};\r\n        let jquievent = {'s': 'start', 'ing': jqui_ing, 'e':'stop'};\r\n        let evtkey0: keyof typeof jquievent;\r\n        for (evtkey0 in jquievent) {\r\n            let evtkey: keyof typeof jquievent = evtkey0; // for closure\r\n            let jqkey = jquievent[evtkey] || '';\r\n            let propsevent = props[eventmap[evtkey][type]];\r\n\r\n            if (propsevent && typeof propsevent !== \"function\") {\r\n                Log.ee(\"<Measurable /> \" + eventmap[evtkey][type] + \" props must be a function\");\r\n                continue;\r\n            }\r\n            options[jqkey+\"_debug\"] = propsevent;\r\n            // call ondragend... jodel events\r\n            let jquievt = options[jqkey];\r\n            // let jodelevt = propsevent; // (...params: any) => propsevent(...params); // was made to preserve \"this\"?\r\n            let defaultevt: null | MeasurableUIEvent = defaulteevent(evtkey);\r\n            let allevents = [jquievt, propsevent, defaultevt].filter((e)=>!!e);\r\n            console.log('checking for jodelevent 00', {propsevent, allevents, props, k: eventmap[evtkey][type], pe: props[eventmap[evtkey][type]], evtkey, type, eventmap});\r\n            let thiss = this;\r\n            if (allevents.length) options[jqkey] = (function(evt, ui) {\r\n                let allevents_i = allevents;\r\n                for (let e of allevents_i) {\r\n                    let evtkey_i = evtkey;\r\n                    let jodelevt = propsevent = props[eventmap[evtkey_i][type]]; // if i don't redeclare it here, closure makes a mess taking always the last jodelevt for all iterations.\r\n                    console.log('checking for jodelevent', e === jodelevt, {e, jodelevt, allevents, props, k: eventmap[evtkey_i][type], pe: props[eventmap[evtkey_i][type]], evtkey, evtkey_i, type, eventmap});\r\n                    if (e === jodelevt) { e(thiss.getCoords(evt, ui), evt, ui); }\r\n                    else e(thiss.getCoords(evt, ui), evt, ui);\r\n                }\r\n            }) as DraggableEvent;\r\n        }\r\n        let propsOptions = {...options};\r\n        let defaultOptions = this.defaultOptions[type];\r\n        U.objectMergeInPlace(options, defaultOptions);\r\n        //console.log(\"measurable\", {type, $measurable, options, propsOptions, defaultOptions});\r\n        ($measurable as GObject)[type](options);\r\n    }\r\n    shouldComponentUpdate(nextProps: Readonly<MeasurableAllProps>, nextState: Readonly<MeasurableState>, nextContext: any): boolean {\r\n        //console.log(\"measurable shouldup\", {nc:nextProps.children, tc:this.props.children, eq: nextProps.children == this.props.children});\r\n        // todo: would need to check if pros.children has changed, but that requires a deep search of subcomponents props and state.\r\n        // currently with just return true it works and rerenders every time the parent component rerenders. not when other elements are interacted.\r\n        // it works also with <Input> as direct child and it updates.\r\n        if (window) return true;\r\n        const oldProps = this.props || {};\r\n        this.dragOptionsChanged = false;\r\n        this.resizeOptionsChanged = false;\r\n        this.rotateOptionsChanged = false;\r\n        let ret: boolean = false;\r\n        const nestederr = \"Options cannot contain functions or nested objects\";\r\n        if (!U.isShallowEqualWithProxies(oldProps.draggable, nextProps.draggable)) {\r\n            const opt: GObject = oldProps.draggable as any;\r\n            if (opt && typeof opt === \"object\") for(let k in opt){ switch (typeof opt[k]){ case \"function\": case \"object\": Log.ee(\"drag\" + nestederr, k); } }\r\n            this.dragOptionsChanged = true;\r\n            ret = true;\r\n        }\r\n        if (!U.isShallowEqualWithProxies(oldProps.resizable, nextProps.resizable)) {\r\n            const opt: GObject = oldProps.resizable as any;\r\n            if (opt && typeof opt === \"object\") for(let k in opt){ switch (typeof opt[k]){ case \"function\": case \"object\": Log.ee(\"resize\" + nestederr, k); } }\r\n            this.resizeOptionsChanged = true;\r\n            ret = true;\r\n        }\r\n        if (!U.isShallowEqualWithProxies(oldProps.rotatable, nextProps.rotatable)) {\r\n            const opt: GObject = oldProps.rotatable as any;\r\n            if (opt && typeof opt === \"object\") for(let k in opt){ switch (typeof opt[k]){ case \"function\": case \"object\": Log.ee(\"rotate\" + nestederr, k); } }\r\n            this.rotateOptionsChanged = true;\r\n            return true;\r\n        }\r\n        if (ret) return true; // i don't need to set more this.variable stuff and i already determined something changed.\r\n        if (Object.keys(oldProps).length !== Object.keys(nextProps).length) return true;\r\n        let k: keyof typeof nextProps;\r\n        for (k in oldProps){\r\n            switch(k){\r\n                //case \"axis\": if (ok)\r\n                case \"draggable\": case \"resizable\": case \"rotatable\": continue;\r\n                case \"children\": continue;\r\n            }\r\n            if (!(k in nextProps)) return false;\r\n            let ok = oldProps[k];\r\n            let nk = nextProps[k];\r\n            if (ok === nk) continue;\r\n            let tk = typeof ok;\r\n            if (tk !== typeof nk) return false;\r\n            switch (tk) {\r\n                case \"object\": Log.ee(\"unexpected object in <Measurable/> props\", {k, nk, ok}); return true;\r\n                case \"function\": if (ok!.toString() !== nk!.toString()) return true; break;\r\n                default: return false; // already checked they are !==\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateDefaultOptions(){\r\n        /*let addClasses = this.props.children ? 'on-children' as any : undefined;\r\n                                          jqui.classes does not owrk? and addclass is only for draggable?\r\n        if (this.defaultOptions.draggable.addClasses !== addClasses) {\r\n            this.defaultOptions.resizable.classes = addClasses;\r\n            // this.defaultOptions.rotatable.classes = addClasses;\r\n        }*/\r\n    }\r\n    render(): ReactNode {\r\n        let child: ReactElement = this.props.children as any;\r\n\r\n        this.updateDefaultOptions();\r\n        if (!child) return child || null; // sometimes react passes {} as props.children?\r\n        if (!Object.keys(child).length) return Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\r\n        if (Array.isArray(child)) {\r\n            if (child.length !== 1) {\r\n                Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\r\n                return child;\r\n            }\r\n            else child = child[0];\r\n        }\r\n        if (child.type.toString() === React.Fragment.toString()) {\r\n            Log.ee(\"Measurable can have only 1 subelement and it cannot be an array or a <>React.fragment</>\", child, this.props);\r\n            return child; }\r\n\r\n        let oldProps = child.props;\r\n        let newProps = {\r\n            ref: (html: Element | null)=>{\r\n                if (html && !U.isHtmlNode(html)) {\r\n                    Log.ee('ref tring to set non-html element', html);\r\n                    return;\r\n                }\r\n                this.html = html;\r\n            }\r\n        };\r\n        U.objectMergeInPlace(newProps, oldProps);\r\n        let clonedChild = React.cloneElement(child, newProps);\r\n        return clonedChild;\r\n    }\r\n\r\n    private getCoords(evt: JQueryEventObject, ui: JQueryUI.DraggableEventUIParams): GraphSize {\r\n        let size = Size.of(evt.target);\r\n        let graph: LGraph = DGraphElement.graphLFromHtml(evt.target) as LGraph;\r\n        return graph?.translateHtmlSize(size);\r\n    }\r\n}\r\n/*\r\n@RuntimeAccessible('InfiniteScrollComponent')\r\nexport class InfiniteScrollComponent extends Component<ScrollOwnProps, ScrollState>{\r\n    static cname: string = \"InfiniteScrollComponent\";\r\n    render(){\r\n        return <Measurable transformMode={false} onChildren={true}>{ this.props.children}</Measurable>\r\n    }\r\n}\r\n*/\r\n// private\r\ninterface ScrollOwnProps {\r\n    children: ReactChild[] | ReactChild;\r\n}\r\ninterface MeasurableOwnProps {\r\n    children: ReactChild[] | ReactChild;\r\n    //dragOptions?: Options;\r\n    //drag?: Options;\r\n    draggable?: JQueryUI.DraggableOptions | boolean;\r\n    onDragStart?: DraggableEvent;\r\n    whileDragging?: DraggableEvent;\r\n    onDragEnd?: DraggableEvent;\r\n    onChildren?: boolean | ((e: HTMLElement)=>HTMLElement);\r\n\r\n    //resizeOptions?: Options;\r\n    //resize?: Options;\r\n    resizable?: JQueryUI.ResizableOptions | boolean;\r\n    onResizeStart?: ResizableEvent;\r\n    whileResizing?: ResizableEvent;\r\n    onResizeEnd?: ResizableEvent;\r\n    transformMode?: boolean; // if true uses transform: translate() instead of pos:absolute; left; & top;\r\n\r\n    //rotateOptions?: Options;\r\n    //rotate?: Options;\r\n    rotatable?: GObject | boolean;\r\n    onRotationStart?: RotatableEvent;\r\n    whileRotating?: RotatableEvent;\r\n    onRotationEnd?: RotatableEvent;\r\n}\r\n// private\r\ninterface MeasurableStateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype MeasurableAllProps = MeasurableOwnProps & MeasurableStateProps & DispatchProps;\r\n\r\n////// mapper func\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: MeasurableOwnProps): MeasurableStateProps {\r\n    const ret: MeasurableStateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n*/\r\n\r\n(MeasurableComponent as any).defaultProps = {\r\n    autosizex: true,\r\n    autosizey: true,\r\n    style: undefined,\r\n    children: [],\r\n} as MeasurableOwnProps;\r\n\r\nexport class InfiniteScrollComponent extends Component<any, any>{ }\r\n\r\nexport function Measurable(props: MeasurableAllProps, children: ReactChild[] = []): ReactElement {\r\n    return <MeasurableComponent {...{...props, children}}>{children}</MeasurableComponent>;\r\n}\r\n// todo: shortcuts for Draggable Resizable Rotatable with whileDragging onDragStart props simplified to start, while, end\r\nexport function InfiniteScroll(props: MeasurableAllProps, children: ReactChild[] = []): ReactElement {\r\n    return <Measurable {...{...props, children}} transformMode={false} onChildren={true}>{children}</Measurable>;\r\n}/*\r\nexport function InfiniteScroll(props: MeasurableAllProps, children: ReactChild[] = []): ReactElement {\r\n    return <InfiniteScrollComponent {...{...props, children}}>{children}</InfiniteScrollComponent>;\r\n}*/\r\n\r\n/*connect<MeasurableStateProps, DispatchProps, MeasurableOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeasurableComponent);*/\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAA0E,OAAO;AACzG,SAAQC,aAAa,EAA0CC,GAAG,EAAEC,iBAAiB,EAAEC,IAAI,EAAeC,CAAC,QAAO,cAAc;AAChI,OAAOC,CAAC,MAAM,QAAQ;;AAKU;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,WACaC,mBAAmB,IAAAC,IAAA,GAD/BP,iBAAiB,CAAC,qBAAqB,CAAC,EAAAO,IAAA,CAAAC,MAAA,IAAAC,OAAA,GAAzC,MACaH,mBAAmB,SAAST,SAAS,CAAqC;EAAAa,YAAA;IAAA,SAAAC,SAAA;IAAA,KAI3EC,IAAI,GAAmB,IAAI;IAAA,KAC3BC,KAAK;IAAA,KACbC,kBAAkB,GAAY,IAAI;IAAA,KAClCC,oBAAoB,GAAY,IAAI;IAAA,KACpCC,oBAAoB,GAAY,IAAI;IAAA,KACpCC,cAAc,GAAuG;MACjHC,SAAS,EAAE;QACPC,MAAM,EAAE,UAAU;QAClB;QACAC,QAAQ,EAAE;QACV;QACA;MACJ,CAAC;MACDC,SAAS,EAAE,CAAC,CAAC;MACbC,SAAS,EAAE,CAAC;IAChB,CAAC;IAAA,KACDC,MAAM,GAAgC;MAACC,IAAI,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC,CAAC;EAAA;EAEvDC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB;EACAC,kBAAkBA,CAACC,SAAuC,EAAEC,SAAoC,EAAEC,QAAc,EAAE;IAC9G,IAAI,CAACJ,WAAW,CAAC,CAAC;EACtB;EACAA,WAAWA,CAAA,EAAQ;IACf,IAAI,CAAC,IAAI,CAACf,IAAI,EAAE;IAChB,IAAI,CAACC,KAAK,GAAGV,CAAC,CAAC,IAAI,CAACS,IAAI,CAAC;IACzB,IAAI,IAAI,CAACE,kBAAkB,EAAE;MAAE,IAAI,CAACkB,iBAAiB,CAAC,WAAW,CAAC;IAAE;IACpE,IAAI,IAAI,CAACjB,oBAAoB,EAAE;MAAE,IAAI,CAACiB,iBAAiB,CAAC,WAAW,CAAC;IAAE;IACtE,IAAI,IAAI,CAAChB,oBAAoB,EAAE;MAAE,IAAI,CAACgB,iBAAiB,CAAC,WAAW,CAAC;IAAE;EAC1E;EAEAA,iBAAiBA,CAACC,IAA6C,EAAO;IAClE,IAAI,CAAC,IAAI,CAACpB,KAAK,EAAE;IACjB,IAAIqB,WAAW,GAAG,IAAI,CAACrB,KAAK;;IAE5B;;IAIA,IAAIsB,QAAQ,GAAG;MACX,GAAG,EAAK;QAAC,WAAW,EAAE,aAAa;QAAK,WAAW,EAAE,eAAe;QAAI,WAAW,EAAE;MAAe,CAAC;MACrG,KAAK,EAAG;QAAC,WAAW,EAAE,eAAe;QAAG,WAAW,EAAE,eAAe;QAAI,WAAW,EAAE;MAAe,CAAC;MACrG,GAAG,EAAK;QAAC,WAAW,EAAE,WAAW;QAAO,WAAW,EAAE,aAAa;QAAM,WAAW,EAAE;MAAe;IACxG,CAAC;IACD,IAAIC,aAA4C,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC;IAC3F;IACA,IAAIC,SAAS,GAAGA,CAACC,CAAc,EAAEC,GAAS,EAAEC,OAAqB,EAAEC,EAAO,KAAW;MACjF,IAAIC,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,UAAU;MAC9B,IAAI,CAACF,EAAE,EAAE;QACL3C,GAAG,CAAC8C,EAAE,CAAC,QAAQ,EAAE;UAACN,GAAG;UAAEG,EAAE;UAAEJ,CAAC;UAAEQ,CAAC,EAAE,IAAI,CAACH;QAAK,CAAC,CAAC;QAAE;MACnD;MACA,IAAII,KAAkB;MACtB,IAAI,OAAOL,EAAE,KAAK,UAAU,EAAEK,KAAK,GAAGL,EAAE,CAACJ,CAAC,CAAC,CAAC,KACvCS,KAAK,GAAGT,CAAC,CAACU,QAAQ,CAAC,CAAC,CAAgB;MACzC,IAAI,CAACD,KAAK,EAAE;QACRhD,GAAG,CAAC8C,EAAE,CAAC,iBAAiB,EAAE;UAACE,KAAK;UAAER,GAAG;UAAEG,EAAE;UAAEJ;QAAC,CAAC,CAAC;QAAE;MACpD;MACA,IAAIW,MAAM,GAAG,IAAI,CAAC1B,MAAM,CAAC,CAAC;MAC1B2B,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGX,OAAO,EAAE;QAACC,EAAE;QAAEH,CAAC;QAAEI,EAAE;QAAEO;MAAM,CAAC,CAAC;MAC7E;;MAEA;AACZ;AACA;AACA;AACA;AACA;;MAEY,IAAIG,GAAQ;MACZ,KAAKA,GAAG,IAAIhB,aAAa,EAAE;QACvB,IAAIiB,MAAM,GAAGA,CAAA,KAAM;UACf,IAAIJ,MAAM,IAAKA,MAAM,CAASG,GAAG,CAAC,KAAKE,SAAS,EAAE;YAC9C,IAAIF,GAAG,KAAI,MAAM,EAAEF,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGX,OAAO,EAAGS,MAAM,CAASG,GAAG,CAAC,GAAGX,EAAE,CAACc,QAAQ,CAACH,GAAG,CAAC,GAAG,IAAI,EAAGH,MAAM,CAASG,GAAG,CAAC,CAAC;YACpI,IAAII,MAAM,GAAIP,MAAM,CAASG,GAAG,CAAC,GAAGX,EAAE,CAACc,QAAQ,CAACH,GAAG,CAAC;YACpDL,KAAK,CAACU,KAAK,CAACL,GAAG,CAAC,GAAII,MAAM,GAAI,IAAI;YAClC,IAAIhB,OAAO,KAAK,GAAG,EAAE,IAAI,CAACjB,MAAM,CAAC6B,GAAG,CAAC,GAAGI,MAAM;UAClD,CAAC,MACIT,KAAK,CAACU,KAAK,CAACL,GAAG,CAAC,GAAGd,CAAC,CAACmB,KAAK,CAACL,GAAG,CAAC;QACxC,CAAC;QACDC,MAAM,CAAC,CAAC;QACR,IAAIb,OAAO,KAAK,GAAG,EAAGkB,UAAU,CAACL,MAAM,EAAE,IAAI,CAAC;QAC9C,IAAIb,OAAO,KAAK,GAAG,IAAI,CAACF,CAAC,CAACqB,SAAS,CAACC,QAAQ,CAAC,sBAAsB,CAAC,EAAEtB,CAAC,CAACqB,SAAS,CAACE,GAAG,CAAC,sBAAsB,CAAC;QAC7G;MACJ;IACJ,CAAC;IACD,SAASC,mBAAmBA,CAACxB,CAAc,EAAEC,GAAS,EAAEC,OAAqB,EAAQ;MACjF,IAAIuB,CAAC,GAAGzB,CAAC,CAACmB,KAAK,CAACjC,IAAI;MACpB,IAAIwC,CAAC,GAAG1B,CAAC,CAACmB,KAAK,CAAChC,GAAG,CAAC;AAChC;AACA;MACY;MACAa,CAAC,CAACmB,KAAK,CAACQ,SAAS,GAAG,aAAaF,CAAC,KAAKC,CAAC,GAAG;IAC/C;IACA,IAAIE,gBAAwE,GAAG;MAC3E,WAAW,EAAE;QACT,GAAG,EAAEC,CAAC7B,CAAC,EAAEG,EAAE,KAAG;UAAEqB,mBAAmB,CAACxB,CAAC,CAAC8B,MAAM,EAAiB9B,CAAC,EAAE,GAAG,CAAC;QAAE,CAAC;QACvE,KAAK,EAAE+B,CAAC/B,CAAC,EAAEG,EAAE,KAAG;UAAEqB,mBAAmB,CAACxB,CAAC,CAAC8B,MAAM,EAAiB9B,CAAC,EAAE,KAAK,CAAC;QAAE,CAAC;QAC3E,GAAG,EAAEA,CAACA,CAAC,EAAEG,EAAE,KAAG;UAAEqB,mBAAmB,CAACxB,CAAC,CAAC8B,MAAM,EAAiB9B,CAAC,EAAE,GAAG,CAAC;QAAE;MAAC,CAAC;MAC5E,WAAW,EAAE;QACT,GAAG,EAAE6B,CAAC7B,CAAC,EAAEG,EAAE,KAAG,CAAC,CAAC;QAChB,KAAK,EAAE4B,CAAC/B,CAAC,EAAEG,EAAE,KAAG,CAAC,CAAC;QAClB,GAAG,EAAEH,CAACA,CAAC,EAAEG,EAAE,KAAG,CAAC;MAAC,CAAC;MACrB,WAAW,EAAE;QACT,GAAG,EAAE0B,CAAC7B,CAAC,EAAEG,EAAE,KAAG,CAAC,CAAC;QAChB,KAAK,EAAE4B,CAAC/B,CAAC,EAAEG,EAAE,KAAG,CAAC,CAAC;QAClB,GAAG,EAAEH,CAACA,CAAC,EAAEG,EAAE,KAAG,CAAC;MAAC;IACxB,CAAC;IACD,IAAI6B,aAAa,GAAI9B,OAAoB,IAA8B;MACnE,IAAI,CAAC,IAAI,CAACG,KAAK,CAAC4B,aAAa,IAAI,CAAC,IAAI,CAAC5B,KAAK,CAACC,UAAU,EAAE,OAAO,IAAI;MACpE,OAAO,CAACN,CAAM,EAAEG,EAAO,KAAK;QACxB;QACA,IAAI,IAAI,CAACE,KAAK,CAAC4B,aAAa,KAAK,IAAI,EAAEL,gBAAgB,CAACjC,IAAI,CAAC,CAACO,OAAO,CAAC,CAACF,CAAC,EAAEG,EAAE,CAAC;QAC7EJ,SAAS,CAACC,CAAC,CAAC8B,MAAM,EAAE9B,CAAC,EAAEE,OAAO,EAAEC,EAAE,CAAC;MACvC,CAAC;IACL,CAAC;IACD,IAAI+B,QAAgB;IACpB,QAAQvC,IAAI;MACR;QAASuC,QAAQ,GAAGzE,GAAG,CAAC0E,KAAK,CAAC,+BAA+B,GAAGxC,IAAI,CAAC;QAAE;MACvE,KAAK,WAAW;QAAEuC,QAAQ,GAAG,MAAM;QAAE;MACrC,KAAK,WAAW;QAAEA,QAAQ,GAAG,QAAQ;QAAE;MACvC,KAAK,WAAW;QAAEA,QAAQ,GAAG,QAAQ;QAAE;IAC3C;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAIE,OAAgB;IACpB,MAAM/B,KAAc,GAAG,IAAI,CAACA,KAAK;IACjC,MAAMgC,OAAO,GAAG;MAACzD,SAAS,EAAE,aAAa;MAAEG,SAAS,EAAE,aAAa;MAAEC,SAAS,EAAE;IAAa,CAAC;IAC9F,MAAMsD,SAAS,GAAG;MAAC1D,SAAS,EAAE,WAAW;MAAEG,SAAS,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAW,CAAC;IAC1F,MAAMuD,SAAS,GAAGD,SAAS,CAAC3C,IAAI,CAAC;IACjC,IAAIU,KAAK,CAACkC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAClC,KAAK,CAACkC,SAAS,CAAC,EAAE;MACjD3B,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGlB,IAAI,EAAE;QAACC,WAAW;QAAED,IAAI;QAAE0C,OAAO;QAAEE,SAAS;QAAElC;MAAK,CAAC,CAAC;MACrF,IAAIT,WAAW,CAAC4C,IAAI,CAACH,OAAO,CAAC1C,IAAI,CAAC,CAAC,EAAGC,WAAW,CAAaD,IAAI,CAAC,CAAC,SAAS,CAAC;MAC9E;IACJ;IACA,IAAIU,KAAK,CAACkC,SAAS,CAAC,KAAK,IAAI,EAAE;MAC3BH,OAAO,GAAG,CAAC,CAAC;IAChB,CAAC,MAAMA,OAAO,GAAG;MAAC,GAAG/B,KAAK,CAACkC,SAAS;IAAC,CAAC;;IAEtC;IACA,IAAIE,SAAS,GAAG;MAAC,GAAG,EAAE,OAAO;MAAE,KAAK,EAAEP,QAAQ;MAAE,GAAG,EAAC;IAAM,CAAC;IAC3D,IAAIQ,OAA+B;IACnC,KAAKA,OAAO,IAAID,SAAS,EAAE;MACvB,IAAIE,MAA8B,GAAGD,OAAO,CAAC,CAAC;MAC9C,IAAIE,KAAK,GAAGH,SAAS,CAACE,MAAM,CAAC,IAAI,EAAE;MACnC,IAAIE,UAAU,GAAGxC,KAAK,CAACR,QAAQ,CAAC8C,MAAM,CAAC,CAAChD,IAAI,CAAC,CAAC;MAE9C,IAAIkD,UAAU,IAAI,OAAOA,UAAU,KAAK,UAAU,EAAE;QAChDpF,GAAG,CAAC8C,EAAE,CAAC,iBAAiB,GAAGV,QAAQ,CAAC8C,MAAM,CAAC,CAAChD,IAAI,CAAC,GAAG,2BAA2B,CAAC;QAChF;MACJ;MACAyC,OAAO,CAACQ,KAAK,GAAC,QAAQ,CAAC,GAAGC,UAAU;MACpC;MACA,IAAIC,OAAO,GAAGV,OAAO,CAACQ,KAAK,CAAC;MAC5B;MACA,IAAIG,UAAoC,GAAGf,aAAa,CAACW,MAAM,CAAC;MAChE,IAAIK,SAAS,GAAG,CAACF,OAAO,EAAED,UAAU,EAAEE,UAAU,CAAC,CAACE,MAAM,CAAEjD,CAAC,IAAG,CAAC,CAACA,CAAC,CAAC;MAClEY,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;QAACgC,UAAU;QAAEG,SAAS;QAAE3C,KAAK;QAAE6C,CAAC,EAAErD,QAAQ,CAAC8C,MAAM,CAAC,CAAChD,IAAI,CAAC;QAAEwD,EAAE,EAAE9C,KAAK,CAACR,QAAQ,CAAC8C,MAAM,CAAC,CAAChD,IAAI,CAAC,CAAC;QAAEgD,MAAM;QAAEhD,IAAI;QAAEE;MAAQ,CAAC,CAAC;MAC/J,IAAIuD,KAAK,GAAG,IAAI;MAChB,IAAIJ,SAAS,CAACK,MAAM,EAAEjB,OAAO,CAACQ,KAAK,CAAC,GAAI,UAAS3C,GAAG,EAAEE,EAAE,EAAE;QACtD,IAAImD,WAAW,GAAGN,SAAS;QAC3B,KAAK,IAAIhD,CAAC,IAAIsD,WAAW,EAAE;UACvB,IAAIC,QAAQ,GAAGZ,MAAM;UACrB,IAAIa,QAAQ,GAAGX,UAAU,GAAGxC,KAAK,CAACR,QAAQ,CAAC0D,QAAQ,CAAC,CAAC5D,IAAI,CAAC,CAAC,CAAC,CAAC;UAC7DiB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEb,CAAC,KAAKwD,QAAQ,EAAE;YAACxD,CAAC;YAAEwD,QAAQ;YAAER,SAAS;YAAE3C,KAAK;YAAE6C,CAAC,EAAErD,QAAQ,CAAC0D,QAAQ,CAAC,CAAC5D,IAAI,CAAC;YAAEwD,EAAE,EAAE9C,KAAK,CAACR,QAAQ,CAAC0D,QAAQ,CAAC,CAAC5D,IAAI,CAAC,CAAC;YAAEgD,MAAM;YAAEY,QAAQ;YAAE5D,IAAI;YAAEE;UAAQ,CAAC,CAAC;UAC3L,IAAIG,CAAC,KAAKwD,QAAQ,EAAE;YAAExD,CAAC,CAACoD,KAAK,CAACK,SAAS,CAACxD,GAAG,EAAEE,EAAE,CAAC,EAAEF,GAAG,EAAEE,EAAE,CAAC;UAAE,CAAC,MACxDH,CAAC,CAACoD,KAAK,CAACK,SAAS,CAACxD,GAAG,EAAEE,EAAE,CAAC,EAAEF,GAAG,EAAEE,EAAE,CAAC;QAC7C;MACJ,CAAoB;IACxB;IACA,IAAIuD,YAAY,GAAG;MAAC,GAAGtB;IAAO,CAAC;IAC/B,IAAIzD,cAAc,GAAG,IAAI,CAACA,cAAc,CAACgB,IAAI,CAAC;IAC9C/B,CAAC,CAAC+F,kBAAkB,CAACvB,OAAO,EAAEzD,cAAc,CAAC;IAC7C;IACCiB,WAAW,CAAaD,IAAI,CAAC,CAACyC,OAAO,CAAC;EAC3C;EACAwB,qBAAqBA,CAACC,SAAuC,EAAEC,SAAoC,EAAEC,WAAgB,EAAW;IAC5H;IACA;IACA;IACA;IACA,IAAIC,MAAM,EAAE,OAAO,IAAI;IACvB,MAAMC,QAAQ,GAAG,IAAI,CAAC5D,KAAK,IAAI,CAAC,CAAC;IACjC,IAAI,CAAC7B,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAIwF,GAAY,GAAG,KAAK;IACxB,MAAMC,SAAS,GAAG,oDAAoD;IACtE,IAAI,CAACvG,CAAC,CAACwG,yBAAyB,CAACH,QAAQ,CAACrF,SAAS,EAAEiF,SAAS,CAACjF,SAAS,CAAC,EAAE;MACvE,MAAMyF,GAAY,GAAGJ,QAAQ,CAACrF,SAAgB;MAC9C,IAAIyF,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,KAAI,IAAInB,CAAC,IAAImB,GAAG,EAAC;QAAE,QAAQ,OAAOA,GAAG,CAACnB,CAAC,CAAC;UAAG,KAAK,UAAU;UAAE,KAAK,QAAQ;YAAEzF,GAAG,CAAC8C,EAAE,CAAC,MAAM,GAAG4D,SAAS,EAAEjB,CAAC,CAAC;QAAE;MAAE;MAChJ,IAAI,CAAC1E,kBAAkB,GAAG,IAAI;MAC9B0F,GAAG,GAAG,IAAI;IACd;IACA,IAAI,CAACtG,CAAC,CAACwG,yBAAyB,CAACH,QAAQ,CAAClF,SAAS,EAAE8E,SAAS,CAAC9E,SAAS,CAAC,EAAE;MACvE,MAAMsF,GAAY,GAAGJ,QAAQ,CAAClF,SAAgB;MAC9C,IAAIsF,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,KAAI,IAAInB,CAAC,IAAImB,GAAG,EAAC;QAAE,QAAQ,OAAOA,GAAG,CAACnB,CAAC,CAAC;UAAG,KAAK,UAAU;UAAE,KAAK,QAAQ;YAAEzF,GAAG,CAAC8C,EAAE,CAAC,QAAQ,GAAG4D,SAAS,EAAEjB,CAAC,CAAC;QAAE;MAAE;MAClJ,IAAI,CAACzE,oBAAoB,GAAG,IAAI;MAChCyF,GAAG,GAAG,IAAI;IACd;IACA,IAAI,CAACtG,CAAC,CAACwG,yBAAyB,CAACH,QAAQ,CAACjF,SAAS,EAAE6E,SAAS,CAAC7E,SAAS,CAAC,EAAE;MACvE,MAAMqF,GAAY,GAAGJ,QAAQ,CAACjF,SAAgB;MAC9C,IAAIqF,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,KAAI,IAAInB,CAAC,IAAImB,GAAG,EAAC;QAAE,QAAQ,OAAOA,GAAG,CAACnB,CAAC,CAAC;UAAG,KAAK,UAAU;UAAE,KAAK,QAAQ;YAAEzF,GAAG,CAAC8C,EAAE,CAAC,QAAQ,GAAG4D,SAAS,EAAEjB,CAAC,CAAC;QAAE;MAAE;MAClJ,IAAI,CAACxE,oBAAoB,GAAG,IAAI;MAChC,OAAO,IAAI;IACf;IACA,IAAIwF,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC;IACtB,IAAII,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAACZ,MAAM,KAAKiB,MAAM,CAACC,IAAI,CAACV,SAAS,CAAC,CAACR,MAAM,EAAE,OAAO,IAAI;IAC/E,IAAIH,CAAyB;IAC7B,KAAKA,CAAC,IAAIe,QAAQ,EAAC;MACf,QAAOf,CAAC;QACJ;QACA,KAAK,WAAW;QAAE,KAAK,WAAW;QAAE,KAAK,WAAW;UAAE;QACtD,KAAK,UAAU;UAAE;MACrB;MACA,IAAI,EAAEA,CAAC,IAAIW,SAAS,CAAC,EAAE,OAAO,KAAK;MACnC,IAAIW,EAAE,GAAGP,QAAQ,CAACf,CAAC,CAAC;MACpB,IAAIuB,EAAE,GAAGZ,SAAS,CAACX,CAAC,CAAC;MACrB,IAAIsB,EAAE,KAAKC,EAAE,EAAE;MACf,IAAIC,EAAE,GAAG,OAAOF,EAAE;MAClB,IAAIE,EAAE,KAAK,OAAOD,EAAE,EAAE,OAAO,KAAK;MAClC,QAAQC,EAAE;QACN,KAAK,QAAQ;UAAEjH,GAAG,CAAC8C,EAAE,CAAC,0CAA0C,EAAE;YAAC2C,CAAC;YAAEuB,EAAE;YAAED;UAAE,CAAC,CAAC;UAAE,OAAO,IAAI;QAC3F,KAAK,UAAU;UAAE,IAAIA,EAAE,CAAEG,QAAQ,CAAC,CAAC,KAAKF,EAAE,CAAEE,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;UAAE;QACrE;UAAS,OAAO,KAAK;QAAE;MAC3B;IACJ;IACA,OAAO,KAAK;EAChB;EAEAC,oBAAoBA,CAAA,EAAE;IAClB;AACR;AACA;AACA;AACA;AACA;EALQ;EAOJC,MAAMA,CAAA,EAAc;IAChB,IAAIpE,KAAmB,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAe;IAEpD,IAAI,CAACkE,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACnE,KAAK,EAAE,OAAOA,KAAK,IAAI,IAAI,CAAC,CAAC;IAClC,IAAI,CAAC6D,MAAM,CAACC,IAAI,CAAC9D,KAAK,CAAC,CAAC4C,MAAM,EAAE,OAAO5F,GAAG,CAAC8C,EAAE,CAAC,0FAA0F,EAAEE,KAAK,EAAE,IAAI,CAACJ,KAAK,CAAC;IAC5J,IAAIyE,KAAK,CAACC,OAAO,CAACtE,KAAK,CAAC,EAAE;MACtB,IAAIA,KAAK,CAAC4C,MAAM,KAAK,CAAC,EAAE;QACpB5F,GAAG,CAAC8C,EAAE,CAAC,0FAA0F,EAAEE,KAAK,EAAE,IAAI,CAACJ,KAAK,CAAC;QACrH,OAAOI,KAAK;MAChB,CAAC,MACIA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC;IACzB;IACA,IAAIA,KAAK,CAACd,IAAI,CAACgF,QAAQ,CAAC,CAAC,KAAKrH,KAAK,CAAC0H,QAAQ,CAACL,QAAQ,CAAC,CAAC,EAAE;MACrDlH,GAAG,CAAC8C,EAAE,CAAC,0FAA0F,EAAEE,KAAK,EAAE,IAAI,CAACJ,KAAK,CAAC;MACrH,OAAOI,KAAK;IAAE;IAElB,IAAIwD,QAAQ,GAAGxD,KAAK,CAACJ,KAAK;IAC1B,IAAI4E,QAAQ,GAAG;MACXC,GAAG,EAAG5G,IAAoB,IAAG;QACzB,IAAIA,IAAI,IAAI,CAACV,CAAC,CAACuH,UAAU,CAAC7G,IAAI,CAAC,EAAE;UAC7Bb,GAAG,CAAC8C,EAAE,CAAC,mCAAmC,EAAEjC,IAAI,CAAC;UACjD;QACJ;QACA,IAAI,CAACA,IAAI,GAAGA,IAAI;MACpB;IACJ,CAAC;IACDV,CAAC,CAAC+F,kBAAkB,CAACsB,QAAQ,EAAEhB,QAAQ,CAAC;IACxC,IAAImB,WAAW,gBAAG9H,KAAK,CAAC+H,YAAY,CAAC5E,KAAK,EAAEwE,QAAQ,CAAC;IACrD,OAAOG,WAAW;EACtB;EAEQ3B,SAASA,CAACxD,GAAsB,EAAEE,EAAmC,EAAa;IACtF,IAAImF,IAAI,GAAG3H,IAAI,CAAC4H,EAAE,CAACtF,GAAG,CAAC6B,MAAM,CAAC;IAC9B,IAAI0D,KAAa,GAAGhI,aAAa,CAACiI,cAAc,CAACxF,GAAG,CAAC6B,MAAM,CAAW;IACtE,OAAO0D,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,iBAAiB,CAACJ,IAAI,CAAC;EACzC;AACJ,CAAC,EAAAnH,OAAA,CApSUwH,KAAK,GAAW,qBAAqB,EAAAxH,OAAA,MAAAD,MAAA;AAqShD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA6BA;;AAKA;;AAMA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAECF,mBAAmB,CAAS4H,YAAY,GAAG;EACxCC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,IAAI;EACf3E,KAAK,EAAEH,SAAS;EAChBN,QAAQ,EAAE;AACd,CAAuB;AAEvB,OAAO,MAAMqF,uBAAuB,SAASxI,SAAS,CAAU;AAEhE,OAAO,SAASyI,UAAUA,CAAC3F,KAAyB,EAA6C;EAAA,IAA3CK,QAAsB,GAAArC,SAAA,CAAAgF,MAAA,QAAAhF,SAAA,QAAA2C,SAAA,GAAA3C,SAAA,MAAG,EAAE;EAC7E,oBAAON,OAAA,CAACC,mBAAmB;IAAM,GAAGqC,KAAK;IAAEK,QAAQ;IAAAA,QAAA,EAAIA;EAAQ;IAAAuF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsB,CAAC;AAC1F;AACA;AAAAC,EAAA,GAHgBL,UAAU;AAI1B,OAAO,SAASM,cAAcA,CAACjG,KAAyB,EAA6C;EAAA,IAA3CK,QAAsB,GAAArC,SAAA,CAAAgF,MAAA,QAAAhF,SAAA,QAAA2C,SAAA,GAAA3C,SAAA,MAAG,EAAE;EACjF,oBAAON,OAAA,CAACiI,UAAU;IAAM,GAAG3F,KAAK;IAAEK,QAAQ;IAAGuB,aAAa,EAAE,KAAM;IAAC3B,UAAU,EAAE,IAAK;IAAAI,QAAA,EAAEA;EAAQ;IAAAuF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC;AAChH,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHAG,GAAA,GAPgBD,cAAc;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}