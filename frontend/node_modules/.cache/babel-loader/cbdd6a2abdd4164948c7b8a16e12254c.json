{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\topbar\\\\undoredocomponent.tsx\";\nimport React, { PureComponent } from 'react';\nimport { DUser, U, RedoAction, statehistory, UndoAction, store, DPointerTargetable } from '../../joiner';\nimport { connect } from \"react-redux\";\nimport \"./undoredo.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UndoRedoState {\n  constructor(jsx) {\n    this.hover = false;\n    this.jsx = void 0;\n    this.jsx = jsx;\n  }\n}\n\n// private\n\n// private\n\n// private\n\n// private\n\n// private\n\nexport class SaveManagerComponent extends PureComponent {\n  printablePointer(pathsegment, state) {\n    let obj = DPointerTargetable.from(pathsegment, state);\n    if (!obj) return pathsegment;\n    if (obj.name) return \"$\" + obj.name;\n    if (obj.className) return \"#\" + obj.className;\n    return pathsegment;\n  }\n\n  // redo list is updated only when the user mouse-enters it. for efficiency.\n\n  improveText(e, s) {\n    if (e.fullstr.includes(\"Pointer\")) {\n      let editedfullpath = e.fullpath.map(pathsegment => {\n        //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\n        return this.printablePointer(pathsegment, s);\n      });\n      e.str = editedfullpath.join(\".\") + \" = \" + e.val;\n      console.log(\"undoredo replace attempt\", {\n        editedfullpath,\n        beststr: e.str,\n        best: e\n      });\n    }\n    if (e.path[0] === \"idlookup\") e.str = \"\" + e.str.substring(\"idlookup.\".length);\n    if (e.fullvalue.includes(\"Pointer\")) {\n      e.val = this.printablePointer(e.fullvalue.substring(1, e.fullvalue.length - 1), s); // 1, -1 because string values have quotes \"\"\n      e.str = e.str.substring(0, e.str.lastIndexOf(\"=\")) + \"= \" + e.val;\n    }\n  }\n  constructor(props, context) {\n    var _this;\n    super(props, context);\n    _this = this;\n    this.undoredolistoutdated = void 0;\n    this.do_undo = index => {\n      UndoAction.new(index + 1, this.state.user, false).commit();\n      this.undoenter(); // updates list\n    };\n    this.do_redo = index => {\n      console.log(\"redo(\" + index + \")\");\n      RedoAction.new(index + 1, this.state.user, false).commit();\n      this.redoenter();\n    };\n    this.undoredoenter2 = function () {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"undo\";\n      let history = _this.get_history(_this.state.user);\n      let undoarr = history.undoable;\n      let redoarr = history.redoable;\n      console.log(\"statemanager undo update\", {\n        thiss: _this,\n        undoarr,\n        redoarr,\n        user: _this.state.user,\n        props: _this.props,\n        state: _this.state\n      });\n      if (!_this.undoredolistoutdated) return;\n      let s = store.getState();\n      let arr = [...(key === 'undo' ? undoarr : redoarr)].reverse().slice(0, _this.props.maxlistsize);\n      let out = [];\n      let strings = arr.map(delta => U.ObjectToAssignementStrings(delta, 10, 6, 20, \"…\", out, true));\n      //todo: make it just for current index, then get the next val from index+1 or current state, using R.path and replacing just the value. on mouseover switch it val of the delta vs next val\n      let list = arr.map((delta, index) => {});\n    };\n    this.undoredoenter = function () {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"undo\";\n      let history = _this.get_history(_this.state.user);\n      let undoarr = history.undoable;\n      let redoarr = history.redoable;\n      console.log(\"statemanager undo update\", {\n        thiss: _this,\n        undoarr,\n        redoarr,\n        user: _this.state.user,\n        props: _this.props,\n        state: _this.state\n      });\n      if (!_this.undoredolistoutdated) return;\n      let s = store.getState();\n      // let arr = [...(this.props as GObject)[key]].reverse().slice(0, this.props.maxlistsize);\n      let fullarr = [...(key === 'undo' ? undoarr : redoarr)].reverse();\n      let arr = fullarr.slice(0, _this.props.maxlistsize);\n      let out = [];\n      let out_otherdelta = [];\n      let list = arr.map((delta, index) => {\n        let prevDelta = delta; // arr[index + 1]; //[index + (key === 'undo' ? -1 : +1)]\n        let otherDelta = arr[index + 1]; //[index + (key === 'undo' ? -1 : +1)]\n        // let actiodesc = key ==='undo' ? arr[index + 1] : ) || s;\n        U.ObjectToAssignementStrings(delta, 10, 6, 20, \"…\", out, true);\n        if (otherDelta) U.ObjectToAssignementStrings(otherDelta, 10, 6, 20, \"…\", out_otherdelta, true);\n        // if (!index) console.log('debug undoredo', {out, delta, arr});\n        if ((prevDelta || s).action_title) out.best.str = (prevDelta || s).action_title;\n        if (otherDelta === null || otherDelta === void 0 ? void 0 : otherDelta.action_title) out_otherdelta.best.str = (otherDelta || s).action_title;\n        if ((prevDelta || s).action_description) out.best.fullstr = (prevDelta || s).action_description;\n        if (otherDelta === null || otherDelta === void 0 ? void 0 : otherDelta.action_description) out_otherdelta.best.fullstr = (otherDelta || s).action_description;\n        out.best.str = U.cropStr(out.best.str, 1, 0, 13, 12);\n        out.best.fullstr = U.cropStr(out.best.fullstr, 1, 0, 250, 250);\n        //out_otherdelta.best.str = U.cropStr(out_otherdelta.best.str, 1, 0, 13, 12);\n        //out_otherdelta.best.fullstr = U.cropStr(out_otherdelta.best.fullstr, 1, 0, 250, 250);\n        //this.improveText(out.best, s);\n        let other = out.slice(0, _this.props.maxDetailSize); //.map(e=>this.improveText(e));\n        let other2 = out_otherdelta.slice(0, _this.props.maxDetailSize); //.map(e=>this.improveText(e));\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => _this[\"do_\" + key](index),\n          className: \"hoverable\",\n          tabIndex: 0,\n          style: {\n            overflow: \"visible\",\n            height: \"24px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview\",\n            children: out.best.str\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content inline\",\n            children: out.best.fullstr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content detail-list\",\n            children: [other.map((row, ii) => {\n              let row2 = other2[ii];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'detail-entry hoverable',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview inline\",\n                  children: row.fullpath.join(\".\") + \" = \" + row.fullvalue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 29\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"content inline\",\n                  children: row2 && row2.fullpath.join(\".\") + \" = \" + row2.fullvalue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 29\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 32\n              }, _this);\n            }), out.length !== other.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'detail-entry',\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 52\n            }, _this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 20\n        }, _this);\n      });\n      let jsx = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: list\n      }, void 0, false);\n      let obj = {};\n      obj[key] = {\n        ..._this.state[key],\n        hover: true,\n        jsx\n      };\n      // {undo: {...this.state.undo, hover: true, jsx}}\n      _this.undoredolistoutdated = false;\n      _this.setState(obj);\n    };\n    this.undoenter = () => {\n      return this.undoredoenter(\"undo\");\n    };\n    this.redoenter = () => {\n      return this.undoredoenter(\"redo\");\n    };\n    this.undoleave = () => {\n      this.setState({\n        undo: {\n          ...this.state.undo,\n          hover: false\n        }\n      });\n    };\n    this.redoleave = () => {\n      this.setState({\n        redo: {\n          ...this.state.redo,\n          hover: false\n        }\n      });\n    };\n    let undo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"undo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 38\n    }, void 0));\n    let redo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"redo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 38\n    }, void 0));\n    this.state = {\n      undo,\n      redo,\n      user: DUser.current\n    };\n    this.undoredolistoutdated = true;\n    // this.setState({undo, redo});\n  }\n  get_history(user) {\n    // let ret = {redoable: [] as GObject[], undoable: [] as GObject[]};\n    return statehistory[user];\n  }\n  erase_history(user, project) {\n    if (user === 'all') {\n      /*\r\n      for (let user of project.collaborators){\r\n      this.erase_history(user.id, project);\r\n      }\r\n      this.erase_history(DUser.current, project);*/\n      for (let user in statehistory) {\n        statehistory[user].undoable = [];\n        statehistory[user].redoable = [];\n      }\n    } else {\n      statehistory[user].undoable = [];\n      statehistory[user].redoable = [];\n    }\n  }\n  render() {\n    let user = this.state.user;\n    this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\n    // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\n    let history = this.get_history(user);\n    let undo = history.undoable;\n    let redo = history.redoable;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"undoredo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.undoenter,\n          onMouseLeave: this.undoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_undo(0);\n            },\n            children: [\"Undo (\", undo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), this.props.debug && undo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.undo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.redoenter,\n          onMouseLeave: this.redoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_redo(0);\n            },\n            children: [\"Redo (\", redo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), this.props.debug && redo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.redo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 56\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.erase_history(user, this.props.project);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nSaveManagerComponent.cname = \"SaveManagerComponent\";\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  //ret.undo = statehistory[DUser.current].undoable;\n  //ret.redo = statehistory[DUser.current].redoable;\n  ret.maxlistsize = 10;\n  ret.maxDetailSize = 20;\n  ret.debug = state.debug;\n  /// to fill\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  /// to fill\n  return ret;\n}\nexport const SaveManagerConnected = connect(mapStateToProps, mapDispatchToProps)(SaveManagerComponent);\nexport default SaveManagerConnected;\nexport const Undoredocomponent = SaveManagerConnected;","map":{"version":3,"names":["React","PureComponent","DUser","U","RedoAction","statehistory","UndoAction","store","DPointerTargetable","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","UndoRedoState","constructor","jsx","hover","SaveManagerComponent","printablePointer","pathsegment","state","obj","from","name","className","improveText","e","s","fullstr","includes","editedfullpath","fullpath","map","str","join","val","console","log","beststr","best","path","substring","length","fullvalue","lastIndexOf","props","context","_this","this","undoredolistoutdated","do_undo","index","new","user","commit","undoenter","do_redo","redoenter","undoredoenter2","key","arguments","undefined","history","get_history","undoarr","undoable","redoarr","redoable","thiss","getState","arr","reverse","slice","maxlistsize","out","strings","delta","ObjectToAssignementStrings","list","undoredoenter","fullarr","out_otherdelta","prevDelta","otherDelta","action_title","action_description","cropStr","other","maxDetailSize","other2","onClick","tabIndex","style","overflow","height","children","fileName","_jsxFileName","lineNumber","columnNumber","row","ii","row2","setState","undoleave","undo","redoleave","redo","current","erase_history","project","render","position","background","onMouseEnter","onMouseLeave","debug","width","zIndex","cname","mapStateToProps","ownProps","ret","mapDispatchToProps","dispatch","SaveManagerConnected","Undoredocomponent"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/topbar/undoredocomponent.tsx"],"sourcesContent":["import React, {Dispatch, PureComponent, ReactNode} from 'react';\r\nimport {\r\n    Dictionary, DUser,\r\n    GObject, DState,\r\n    Log, U, RedoAction,\r\n    statehistory,\r\n    UndoAction, store, DPointerTargetable, Pointer, LProject,\r\n} from '../../joiner';\r\nimport {connect} from \"react-redux\";\r\nimport \"./undoredo.scss\"\r\n\r\ninterface SaveManagerProps {}\r\n\r\nclass UndoRedoState{\r\n    hover: boolean = false;\r\n    jsx: any | null;\r\n    constructor(jsx: any) {  this.jsx = jsx; }\r\n}\r\n\r\n// private\r\ninterface ThisState {\r\n    undo: UndoRedoState;\r\n    redo: UndoRedoState;\r\n    user: Pointer<DUser>|'all';\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n    project: LProject;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n    maxlistsize: number;\r\n    maxDetailSize: number;\r\n    //undo: GObject<\"delta\">[],\r\n    // redo: GObject<\"delta\">[],\r\n    debug: boolean\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\ntype R = {str: string, fullstr: string, path:string[], fullpath:string[], val: string, fullvalue: string, pathlength?: number};\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\nexport class SaveManagerComponent extends PureComponent<AllProps, ThisState>{\r\n    public static cname: string = \"SaveManagerComponent\";\r\n    private undoredolistoutdated: boolean;\r\n    do_undo = (index: number) => {\r\n        UndoAction.new(index+1, this.state.user, false).commit();\r\n        this.undoenter(); // updates list\r\n    }\r\n    do_redo = (index: number) => {\r\n        console.log(\"redo(\" + index + \")\");\r\n        RedoAction.new(index+1, this.state.user, false).commit();\r\n        this.redoenter();\r\n    }\r\n    printablePointer(pathsegment: string, state: DState){\r\n        let obj = DPointerTargetable.from(pathsegment, state) as GObject;\r\n        if (!obj) return pathsegment;\r\n        if (obj.name) return \"$\"+obj.name;\r\n        if (obj.className) return \"#\"+obj.className;\r\n        return pathsegment;\r\n    }\r\n\r\n    // redo list is updated only when the user mouse-enters it. for efficiency.\r\n    undoredoenter2 = (key: \"undo\"|\"redo\" = \"undo\") => {\r\n        let history = this.get_history(this.state.user);\r\n        let undoarr = history.undoable;\r\n        let redoarr = history.redoable;\r\n        console.log(\"statemanager undo update\", {thiss:this, undoarr, redoarr, user: this.state.user, props: this.props, state:this.state});\r\n        if (!this.undoredolistoutdated) return;\r\n        let s: DState = store.getState();\r\n        let arr = [...(key === 'undo' ? undoarr : redoarr)].reverse().slice(0, this.props.maxlistsize);\r\n        let out: {best: R, obj: GObject}&R[] = [] as any;\r\n        let strings = arr.map( delta => U.ObjectToAssignementStrings(delta, 10, 6, 20, \"…\", out, true));\r\n        //todo: make it just for current index, then get the next val from index+1 or current state, using R.path and replacing just the value. on mouseover switch it val of the delta vs next val\r\n            let list = arr.map((delta, index) => {})\r\n\r\n    }\r\n\r\n    improveText(e: R, s: DState) {\r\n        if (e.fullstr.includes(\"Pointer\")) {\r\n            let editedfullpath = e.fullpath.map( (pathsegment) => {\r\n                //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\r\n                return this.printablePointer(pathsegment, s); });\r\n            e.str = editedfullpath.join(\".\") + \" = \" + e.val;\r\n            console.log(\"undoredo replace attempt\", {editedfullpath, beststr:e.str, best: e});\r\n        }\r\n        if (e.path[0] === \"idlookup\") e.str = \"\" + e.str.substring(\"idlookup.\".length);\r\n        if (e.fullvalue.includes(\"Pointer\")) {\r\n            e.val = this.printablePointer(e.fullvalue.substring(1, e.fullvalue.length-1), s); // 1, -1 because string values have quotes \"\"\r\n            e.str = e.str.substring(0, e.str.lastIndexOf(\"=\")) + \"= \" + e.val;\r\n        }\r\n    }\r\n    undoredoenter = (key: \"undo\"|\"redo\" = \"undo\") => {\r\n        let history = this.get_history(this.state.user);\r\n        let undoarr = history.undoable;\r\n        let redoarr = history.redoable;\r\n        console.log(\"statemanager undo update\", {thiss:this, undoarr, redoarr, user: this.state.user, props: this.props, state:this.state});\r\n        if (!this.undoredolistoutdated) return;\r\n        let s: DState = store.getState();\r\n        // let arr = [...(this.props as GObject)[key]].reverse().slice(0, this.props.maxlistsize);\r\n        let fullarr = [...(key === 'undo' ? undoarr : redoarr)].reverse()\r\n        let arr = fullarr.slice(0, this.props.maxlistsize);\r\n        let out: {best: R, obj: GObject}&R[] = [] as GObject as any;\r\n        let out_otherdelta: {best: R, obj: GObject}&R[] = [] as any;\r\n        let list = arr.map((delta, index) => {\r\n            let prevDelta = delta; // arr[index + 1]; //[index + (key === 'undo' ? -1 : +1)]\r\n            let otherDelta = arr[index + 1]; //[index + (key === 'undo' ? -1 : +1)]\r\n            // let actiodesc = key ==='undo' ? arr[index + 1] : ) || s;\r\n            U.ObjectToAssignementStrings(delta, 10, 6, 20, \"…\", out, true);\r\n            if (otherDelta) U.ObjectToAssignementStrings(otherDelta, 10, 6, 20, \"…\", out_otherdelta, true);\r\n            // if (!index) console.log('debug undoredo', {out, delta, arr});\r\n            if ((prevDelta||s).action_title) out.best.str = (prevDelta||s).action_title;\r\n            if ((otherDelta)?.action_title) out_otherdelta.best.str = (otherDelta||s).action_title;\r\n            if ((prevDelta||s).action_description) out.best.fullstr = (prevDelta||s).action_description;\r\n            if ((otherDelta)?.action_description) out_otherdelta.best.fullstr = (otherDelta||s).action_description;\r\n            out.best.str = U.cropStr(out.best.str, 1, 0, 13, 12);\r\n            out.best.fullstr = U.cropStr(out.best.fullstr, 1, 0, 250, 250);\r\n            //out_otherdelta.best.str = U.cropStr(out_otherdelta.best.str, 1, 0, 13, 12);\r\n            //out_otherdelta.best.fullstr = U.cropStr(out_otherdelta.best.fullstr, 1, 0, 250, 250);\r\n            //this.improveText(out.best, s);\r\n            let other = out.slice(0, this.props.maxDetailSize); //.map(e=>this.improveText(e));\r\n            let other2 = out_otherdelta.slice(0, this.props.maxDetailSize); //.map(e=>this.improveText(e));\r\n            return <li onClick={() => ((this as GObject)[\"do_\" + key](index))} className=\"hoverable\" key={index} tabIndex={0}\r\n                       style={{overflow: \"visible\", height: \"24px\"}}>\r\n                <div className={\"preview\"}>{out.best.str}</div>\r\n                <div className={\"content inline\"}>{out.best.fullstr}</div>\r\n                <div className={\"content detail-list\"}>{\r\n                    other.map((row, ii) => {\r\n                        let row2 = other2[ii];\r\n                        return <div className={'detail-entry hoverable'}>\r\n                            <span className='preview inline'>{row.fullpath.join(\".\") + \" = \" + row.fullvalue}</span>\r\n                            <span className='content inline'>{row2 && (row2.fullpath.join(\".\") + \" = \" + row2.fullvalue)}</span>\r\n                        </div>\r\n                    })}\r\n                    {out.length !== other.length ? <div className={'detail-entry'}>...</div> : null}\r\n                </div>\r\n            </li>\r\n        });\r\n        let jsx = <>{list}</>;\r\n        let obj: GObject = {};\r\n        obj[key] = {...(this.state as GObject)[key], hover: true, jsx};\r\n        // {undo: {...this.state.undo, hover: true, jsx}}\r\n        this.undoredolistoutdated = false;\r\n        this.setState(obj as ThisState);\r\n    }\r\n\r\n    undoenter = ()=>{ return this.undoredoenter(\"undo\"); }\r\n    redoenter = ()=>{ return this.undoredoenter(\"redo\"); }\r\n    undoleave = ()=>{ this.setState({undo: {...this.state.undo, hover: false}}); }\r\n    redoleave = ()=>{ this.setState({redo: {...this.state.redo, hover: false}}); }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        let undo = new UndoRedoState(<div>undo list example</div>);\r\n        let redo = new UndoRedoState(<div>redo list example</div>);\r\n        this.state = {undo, redo, user: DUser.current};\r\n        this.undoredolistoutdated = true;\r\n        // this.setState({undo, redo});\r\n    }\r\n    get_history(user: Pointer<DUser> | 'all'): {redoable: GObject[], undoable: GObject[]}{\r\n        // let ret = {redoable: [] as GObject[], undoable: [] as GObject[]};\r\n            return statehistory[user];\r\n    }\r\n    erase_history(user: Pointer<DUser> | 'all', project: LProject){\r\n        if (user === 'all'){/*\r\n            for (let user of project.collaborators){\r\n                this.erase_history(user.id, project);\r\n            }\r\n            this.erase_history(DUser.current, project);*/\r\n            for (let user in statehistory){\r\n                statehistory[user].undoable = [];\r\n                statehistory[user].redoable = [];\r\n            }\r\n        } else {\r\n            statehistory[user].undoable = [];\r\n            statehistory[user].redoable = [];\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        let user = this.state.user;\r\n        this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\r\n        // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\r\n        let history = this.get_history(user);\r\n        let undo = history.undoable;\r\n        let redo = history.redoable;\r\n        return(<>\r\n            <div className='undoredo'>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.undoenter} onMouseLeave={this.undoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_undo(0) }}>Undo ({undo.length})</button>\r\n                    {this.props.debug && undo.length ?\r\n                        <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>\r\n                            {this.state.undo.jsx}\r\n                        </ul>\r\n                        : null}\r\n                </span>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.redoenter} onMouseLeave={this.redoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_redo(0) }}>Redo ({redo.length})</button>\r\n                    {this.props.debug && redo.length ? <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.redo.jsx}</ul> : null}\r\n                </span>\r\n                <button onClick={()=>{this.erase_history(user, this.props.project)}}>x</button>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    //ret.undo = statehistory[DUser.current].undoable;\r\n    //ret.redo = statehistory[DUser.current].redoable;\r\n    ret.maxlistsize = 10;\r\n    ret.maxDetailSize = 20;\r\n    ret.debug = state.debug;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const SaveManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SaveManagerComponent);\r\n\r\nexport default SaveManagerConnected;\r\nexport const Undoredocomponent = SaveManagerConnected;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}