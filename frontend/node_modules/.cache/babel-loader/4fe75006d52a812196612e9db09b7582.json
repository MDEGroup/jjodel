{"ast":null,"code":"import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class;import React from\"react\";import{connect}from\"react-redux\";import{DV,GraphElementComponent,GraphElementDispatchProps,GraphElementOwnProps,GraphElementReduxStateProps,GraphElementStatee,Log,RuntimeAccessibleClass,SetRootFieldAction,windoww,Field,Graph,GraphVertex,Vertex,VoidVertex,RuntimeAccessible,LPointerTargetable,transientProperties}from\"../../joiner\";import{GraphElements}from\"../../joiner/components\";// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";var superclass=RuntimeAccessibleClass.classes.GraphElementComponent;// private\nvar DefaultNodeStatee=/*#__PURE__*/function(_GraphElementStatee){_inherits(DefaultNodeStatee,_GraphElementStatee);var _super=_createSuper(DefaultNodeStatee);function DefaultNodeStatee(){_classCallCheck(this,DefaultNodeStatee);return _super.apply(this,arguments);}return DefaultNodeStatee;}(GraphElementStatee);// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\n// Giordano: add ignore for webpack\nexport var DefaultNodeComponent=(_dec=RuntimeAccessible('DefaultNodeComponent'),_dec(_class=/*#__PURE__*/function(_superclass){_inherits(DefaultNodeComponent,_superclass);var _super2=_createSuper(DefaultNodeComponent);function DefaultNodeComponent(props,context){_classCallCheck(this,DefaultNodeComponent);return _super2.call(this,props,context);}_createClass(DefaultNodeComponent,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState,nextContext){// i want to avoid double check on this and Vertex or graph.\n// actually should not use this and avoid double mapstatetoprops execution too\nreturn true;}},{key:\"render\",value:function render(){var _this$props$node;if(this.props.skiparenderforloading){windoww.bugged=this;console.log(\"realoading render: \",{thiss:this,data:this.props.data});SetRootFieldAction.new(\"rerenderforloading\",new Date().getTime());return/*#__PURE__*/_jsx(\"div\",{children:\"loading...\"});}var view=this.props.view;var modelElement=this.props.data;if(!view){Log.exx(\"cannot find view in DefaultNode\",{props:this.props,thiss:this});}// if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\nvar componentMap=windoww.components;var dmodelMap=RuntimeAccessibleClass.classes;var serializableProps=_objectSpread(_objectSpread({},this.props),{},{data:this.props.data,view:this.props.view,views:this.props.views});// let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\n// console.log('dnode render', {props: {...this.props}, serializableProps});\nvar componentfunction=null;if(view.forceNodeType){componentfunction=GraphElements[view.forceNodeType];Log.exDev(!componentfunction,'unrecognized View.forceNodeType:'+view.forceNodeType,{view:view,modelElement:modelElement,nt:view.forceNodeType,GraphElements:GraphElements});// console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\nreturn componentfunction(serializableProps,this.props.children);}if(modelElement===null||modelElement===void 0?void 0:modelElement.className)switch(modelElement.className){case\"DModel\":componentfunction=Graph;break;case\"DPackage\":componentfunction=GraphVertex;break;case\"DClassifier\":case\"DEnumerator\":case\"DObject\":case\"DClass\":componentfunction=Vertex;break;case\"DAnnotation\":case\"DAttribute\":case\"DOperation\":case\"DParameter\":case\"DReference\":case\"DEnumLiteral\":case\"DValue\":case\"DModelElement\":componentfunction=Field;break;default:Log.exDevv('invalid model class, add a case in the switch',{modelElement:modelElement,view:view,dmodelMap:dmodelMap,componentMap:componentMap});// const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\n// Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\n// return dmodel.defaultComponent(serializableProps, this.props.children);\n}else componentfunction=VoidVertex;// model-less, VoidVertex\nif(componentfunction)return componentfunction(serializableProps,this.props.children);// errore: questoon passa gli id correttamente al sottoelemento vertex o field\nreturn DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\",'','DefaultNode',modelElement===null||modelElement===void 0?void 0:modelElement.__raw,(_this$props$node=this.props.node)===null||_this$props$node===void 0?void 0:_this$props$node.__raw,view===null||view===void 0?void 0:view.__raw);}}],[{key:\"mapStateToProps\",value:function mapStateToProps(state,ownProps){var ret={};// NB: cannot use a constructor, must be pojo\n// GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\n// GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\n/*        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.node = undefined as any; // because DefaultNode is all about determining the correct node to create, so there is no node yet.\r\n        ret.nodeid = ownProps.nodeid as Pointer<DGraphElement>; // but nodeid exists, passed from the parent along graphid and parentview\r\n*/ // try{\nret.data=LPointerTargetable.wrap(ownProps.data);ret.dataid=ownProps.data?typeof ownProps.data===\"string\"?ownProps.data:ownProps.data.id:undefined;// if node does not exist yet it's fine, don't create it. let Vertex or Graph or Edge make it with appropriate constructor according fo first matching view on model.\n// problem: what kind of node to make / initial view assign on shapeless objects? they have both data and node undefined at first render.\nret.node=LPointerTargetable.wrap(ownProps.nodeid);if(ret.dataid){// set up transient model-> node map\nif(!transientProperties.modelElement[ret.dataid])transientProperties.modelElement[ret.dataid]={nodes:{}};transientProperties.modelElement[ret.dataid].nodes[ownProps.nodeid]=ret.node;transientProperties.modelElement[ret.dataid].node=ret.node;}GraphElementComponent.mapViewStuff(state,ret,ownProps);// GraphElementComponent.mapViewStuff(state, ret, ownProps);\nret.skiparenderforloading=false;//} catch(e) {\n//(ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\n/* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/ // Log.eDev(!ret.data, \"can't find model data:\", {state, ret, ownpropsdata:ownProps.data, ownProps});\n// Log.eDevv(\"cannot map state to props:\", {e, state, ret, ownpropsdata:ownProps.data, ownProps});\n//}\nreturn ret;}}]);return DefaultNodeComponent;}(superclass))||_class);// private\nvar DefaultNodeOwnProps=/*#__PURE__*/function(_GraphElementOwnProps){_inherits(DefaultNodeOwnProps,_GraphElementOwnProps);var _super3=_createSuper(DefaultNodeOwnProps);function DefaultNodeOwnProps(){_classCallCheck(this,DefaultNodeOwnProps);return _super3.apply(this,arguments);}return DefaultNodeOwnProps;}(GraphElementOwnProps);var DefaultNodeReduxStateProps=/*#__PURE__*/function(_GraphElementReduxSta){_inherits(DefaultNodeReduxStateProps,_GraphElementReduxSta);var _super4=_createSuper(DefaultNodeReduxStateProps);function DefaultNodeReduxStateProps(){_classCallCheck(this,DefaultNodeReduxStateProps);return _super4.apply(this,arguments);}return DefaultNodeReduxStateProps;}(GraphElementReduxStateProps);var DefaultNodeDispatchProps=/*#__PURE__*/function(_GraphElementDispatch){_inherits(DefaultNodeDispatchProps,_GraphElementDispatch);var _super5=_createSuper(DefaultNodeDispatchProps);function DefaultNodeDispatchProps(){_classCallCheck(this,DefaultNodeDispatchProps);return _super5.apply(this,arguments);}return DefaultNodeDispatchProps;}(GraphElementDispatchProps);var DefaultNodeConnected=connect(DefaultNodeComponent.mapStateToProps,DefaultNodeComponent.mapDispatchToProps)(DefaultNodeComponent);// export const Vertex = VertexConnected;\nexport var DefaultNode=function DefaultNode(props){var children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(DefaultNodeConnected,_objectSpread({},_objectSpread(_objectSpread({},props),{},{children:children})));};DefaultNodeComponent.cname=\"DefaultNodeComponent\";DefaultNodeConnected.cname=\"DefaultNodeConnected\";DefaultNode.cname=\"DefaultNode\";","map":{"version":3,"names":["React","connect","DV","GraphElementComponent","GraphElementDispatchProps","GraphElementOwnProps","GraphElementReduxStateProps","GraphElementStatee","Log","RuntimeAccessibleClass","SetRootFieldAction","windoww","Field","Graph","GraphVertex","Vertex","VoidVertex","RuntimeAccessible","LPointerTargetable","transientProperties","GraphElements","jsx","_jsx","superclass","classes","DefaultNodeStatee","_GraphElementStatee","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","DefaultNodeComponent","_dec","_class","_superclass","_super2","props","context","call","_createClass","key","value","shouldComponentUpdate","nextProps","nextState","nextContext","render","_this$props$node","skiparenderforloading","bugged","console","log","thiss","data","new","Date","getTime","children","view","modelElement","exx","componentMap","components","dmodelMap","serializableProps","_objectSpread","views","componentfunction","forceNodeType","exDev","nt","className","exDevv","errorView","__raw","node","mapStateToProps","state","ownProps","ret","wrap","dataid","id","undefined","nodeid","nodes","mapViewStuff","DefaultNodeOwnProps","_GraphElementOwnProps","_super3","DefaultNodeReduxStateProps","_GraphElementReduxSta","_super4","DefaultNodeDispatchProps","_GraphElementDispatch","_super5","DefaultNodeConnected","mapDispatchToProps","DefaultNode","length","cname"],"sources":["C:/d/Programming/web/jodel-mde/src/graph/defaultNode/DefaultNode.tsx"],"sourcesContent":["import React, {ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DClassifier,\r\n    DEnumerator,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DPackage,\r\n    DV,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    DState,\r\n    LModelElement,\r\n    Log,\r\n    LViewElement,\r\n    RuntimeAccessibleClass,\r\n    SetRootFieldAction,\r\n    windoww,\r\n    Field,\r\n    Graph,\r\n    GraphVertex,\r\n    Vertex,\r\n    VoidVertex,\r\n    RuntimeAccessible,\r\n    Polygon,\r\n    Circle,\r\n    Cross,\r\n    Decagon,\r\n    Asterisk,\r\n    Ellipse,\r\n    Enneagon,\r\n    Hexagon,\r\n    Nonagon,\r\n    Octagon,\r\n    Heptagon,\r\n    Pentagon,\r\n    Rectangle,\r\n    Septagon,\r\n    Square,\r\n    Star,\r\n    SimpleStar,\r\n    DecoratedStar,\r\n    Trapezoid,\r\n    Triangle,\r\n    Selectors,\r\n    LPointerTargetable,\r\n    Pointer,\r\n    DGraphElement,\r\n    DPointerTargetable, LGraphElement, transientProperties\r\n} from \"../../joiner\";\r\nimport { GraphElements } from \"../../joiner/components\";\r\n// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\r\n\r\nconst superclass: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\n\r\n// private\r\nclass DefaultNodeStatee extends GraphElementStatee { }\r\n\r\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\r\n\r\n// Giordano: add ignore for webpack\r\n@RuntimeAccessible('DefaultNodeComponent')\r\n//@ts-ignore\r\nexport class DefaultNodeComponent<AllProps extends AllPropss = AllPropss, NodeState = DefaultNodeStatee> extends superclass<AllProps, NodeState>{\r\n\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps): GraphElementReduxStateProps {\r\n        let ret: GraphElementReduxStateProps = {} as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        // GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\r\n        // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\r\n/*        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.node = undefined as any; // because DefaultNode is all about determining the correct node to create, so there is no node yet.\r\n        ret.nodeid = ownProps.nodeid as Pointer<DGraphElement>; // but nodeid exists, passed from the parent along graphid and parentview\r\n*/\r\n        // try{\r\n        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.dataid = ownProps.data ? (typeof ownProps.data === \"string\" ? ownProps.data : ownProps.data.id) : undefined;\r\n        // if node does not exist yet it's fine, don't create it. let Vertex or Graph or Edge make it with appropriate constructor according fo first matching view on model.\r\n        // problem: what kind of node to make / initial view assign on shapeless objects? they have both data and node undefined at first render.\r\n        ret.node = LPointerTargetable.wrap(ownProps.nodeid) as LGraphElement;\r\n        if (ret.dataid) {\r\n            // set up transient model-> node map\r\n            if (!transientProperties.modelElement[ret.dataid]) transientProperties.modelElement[ret.dataid] = {nodes: {}} as any;\r\n            transientProperties.modelElement[ret.dataid].nodes[ownProps.nodeid as string] = ret.node;\r\n            transientProperties.modelElement[ret.dataid].node = ret.node;\r\n        }\r\n\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n\r\n            // GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n            (ret as any).skiparenderforloading = false;\r\n        //} catch(e) {\r\n            //(ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\r\n            /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/\r\n            // Log.eDev(!ret.data, \"can't find model data:\", {state, ret, ownpropsdata:ownProps.data, ownProps});\r\n            // Log.eDevv(\"cannot map state to props:\", {e, state, ret, ownpropsdata:ownProps.data, ownProps});\r\n        //}\r\n        return ret; }\r\n\r\n    constructor(props: AllProps, context: any) { super(props, context); }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<NodeState>, nextContext: any): boolean {\r\n        // i want to avoid double check on this and Vertex or graph.\r\n        // actually should not use this and avoid double mapstatetoprops execution too\r\n        return true;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        if ((this.props as any).skiparenderforloading) {\r\n            windoww.bugged = this;\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime()); return <div>loading...</div>;}\r\n        const view: LViewElement = this.props.view;\r\n        const modelElement: LModelElement | undefined = this.props.data;\r\n        if (!view) { Log.exx(\"cannot find view in DefaultNode\", {props: this.props, thiss:this}); }\r\n        // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\r\n\r\n        let componentMap: Dictionary<string, (props: GObject, children?: (string | React.Component)[]) => ReactElement> = windoww.components;\r\n        let dmodelMap: Dictionary<string, typeof DModelElement> = RuntimeAccessibleClass.classes as any;\r\n\r\n        let serializableProps = {...this.props, data: this.props.data, view: this.props.view, views: this.props.views};\r\n        // let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\r\n\r\n        // console.log('dnode render', {props: {...this.props}, serializableProps});\r\n        let componentfunction: typeof Graph = null as any;\r\n        if (view.forceNodeType) {\r\n            componentfunction = GraphElements[view.forceNodeType] as any;\r\n            Log.exDev(!componentfunction, 'unrecognized View.forceNodeType:' + view.forceNodeType, {view, modelElement, nt: view.forceNodeType, GraphElements, });\r\n            // console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\r\n            return componentfunction(serializableProps, this.props.children); }\r\n\r\n        if (modelElement?.className) switch(modelElement.className) {\r\n            case \"DModel\": componentfunction = Graph; break;\r\n            case \"DPackage\": componentfunction = GraphVertex; break;\r\n            case \"DClassifier\":\r\n            case \"DEnumerator\":\r\n            case \"DObject\":\r\n            case \"DClass\": componentfunction = Vertex; break;\r\n            case \"DAnnotation\":\r\n            case \"DAttribute\":\r\n            case \"DOperation\":\r\n            case \"DParameter\":\r\n            case \"DReference\":\r\n            case \"DEnumLiteral\":\r\n            case \"DValue\":\r\n            case \"DModelElement\": componentfunction = Field; break;\r\n            default:\r\n                Log.exDevv('invalid model class, add a case in the switch', {modelElement, view, dmodelMap, componentMap});\r\n                // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\r\n                // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\r\n                // return dmodel.defaultComponent(serializableProps, this.props.children);\r\n        } else componentfunction = VoidVertex; // model-less, VoidVertex\r\n\r\n        if (componentfunction) return componentfunction(serializableProps, this.props.children);\r\n        // errore: questoon passa gli id correttamente al sottoelemento vertex o field\r\n        return DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\",\r\n            '', 'DefaultNode', modelElement?.__raw, this.props.node?.__raw, view?.__raw);\r\n    }\r\n\r\n}\r\n\r\n// private\r\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\r\nclass DefaultNodeReduxStateProps  extends GraphElementReduxStateProps {}\r\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\r\ntype AllPropss = DefaultNodeOwnProps & DefaultNodeReduxStateProps & DefaultNodeDispatchProps;\r\n\r\n\r\nconst DefaultNodeConnected = connect<DefaultNodeReduxStateProps, DefaultNodeDispatchProps, DefaultNodeOwnProps, DState>(\r\n    DefaultNodeComponent.mapStateToProps,\r\n    DefaultNodeComponent.mapDispatchToProps\r\n)(DefaultNodeComponent as any);\r\n// export const Vertex = VertexConnected;\r\n\r\n\r\nexport const DefaultNode = (props: DefaultNodeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <DefaultNodeConnected {...{...props, children}} />; }\r\n\r\n\r\nDefaultNodeComponent.cname = \"DefaultNodeComponent\";\r\nDefaultNodeConnected.cname = \"DefaultNodeConnected\";\r\nDefaultNode.cname = \"DefaultNode\";\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}