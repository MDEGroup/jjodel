{"ast":null,"code":"var _dec,_class,_class2,_dec2,_class3,_dec3,_class5,_dec4,_class7,_class8;import{BEGIN,Constructors,CreateElementAction,DClass,Defaults,DPointerTargetable,DViewElement,DViewPoint,EdgeHead,END,GraphPoint,Log,LPointerTargetable,Pointers,RuntimeAccessible,RuntimeAccessibleClass,SetRootFieldAction,ShortAttribETypes,store}from'../joiner';import{DV}from\"../common/DV\";//import {Selected} from \"../joiner/types\";\nimport{DefaultEClasses,ShortDefaultEClasses}from\"../common/U\";import DefaultViews from\"./defaults/views\";import tinycolor from\"tinycolor2\";import{VersionFixer}from\"./VersionFixer\";console.warn('ts loading store');// @RuntimeAccessible\n// NB: le voci che iniziano con '_' sono personali e non condivise\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\nexport const statehistory={globalcanundostate:false};window.statehistory=statehistory;export let DState=(_dec=RuntimeAccessible('DState'),_dec(_class=(_class2=class DState extends DPointerTargetable{constructor(){super(...arguments);this.version={n:VersionFixer.get_highestversion(),date:new Date().toString(),conversionList:[]};this.env=process.env;this.debug=false;this.logs=[];this.models=[];this.m2models=[];this.m1models=[];this.viewelements=[];this.stackViews=[];this.idlookup={};this.graphs=[];this.voidvertexs=[];this.vertexs=[];this.graphvertexs=[];this.graphelements=[];this.edgepoints=[];this.edges=[];this.classifiers=[];this.enumerators=[];this.packages=[];this.primitiveTypes=[];this.attributes=[];this.enumliterals=[];this.references=[];this.classs=[];this.operations=[];this.parameters=[];this.ecoreClasses=[];this.returnTypes=[];this.isEdgePending={user:'',source:''};this.contextMenu={display:false,x:0,y:0,nodeid:''};this.objects=[];this.values=[];this._lastSelected=void 0;this.users=[];this.viewpoint='';this.viewpoints=[];this.isLoading=false;this.projects=[];this.collaborativeSession=false;this.NODES_RECOMPILE_labels=[];this.NODES_RECOMPILE_longestLabel=[];this.VIEWS_RECOMPILE_labels=[];this.VIEWS_RECOMPILE_longestLabel=[];this.VIEWS_RECOMPILE_onDataUpdate=[];this.VIEWS_RECOMPILE_onDragStart=[];this.VIEWS_RECOMPILE_onDragEnd=[];this.VIEWS_RECOMPILE_whileDragging=[];this.VIEWS_RECOMPILE_onResizeStart=[];this.VIEWS_RECOMPILE_onResizeEnd=[];this.VIEWS_RECOMPILE_whileResizing=[];this.VIEWS_RECOMPILE_onRotationStart=[];this.VIEWS_RECOMPILE_onRotationEnd=[];this.VIEWS_RECOMPILE_whileRotating=[];this.VIEWS_RECOMPILE_constants=[];this.VIEWS_RECOMPILE_usageDeclarations=[];this.VIEWS_RECOMPILE_jsxString=[];this.VIEWS_RECOMPILE_preconditions=[];this.VIEWS_RECOMPILE_jsCondition=[];this.VIEWS_RECOMPILE_ocl=[];this.VIEWS_RECOMPILE_events=[];this.VIEWS_RECOMPILE_all=void 0;this.ELEMENT_CREATED=[];this.ELEMENT_DELETED=[];this.ClassNameChanged={};this.tooltip='';this.topics={};this.advanced=false;this.alert='';}static new(){let ds=new DState('dwc');new Constructors(ds,undefined,false,undefined).DPointerTargetable().DState();// .end();\nreturn ds;// do not trigger persist and CreateElement for state, or it will be stored in idlookup making a loop\n}// no need to manually update for each update\n//damiano: this might make problems on load\n// Pointer<DModel, 0, 'N'>[] = [];\n// users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\n// collaborators: UserState[];\n//// DClass section to fill\n// actually fields\n/// DClass section end\n// private, non-shared fields\n////////////////     flags shared, but handled locally      /////////////////////////////\n/* RECOMPILES MODULE */ // for ocl matchings by m2 class name: \"context inv Human: ...\"\n/* IoT: Topic Table */static fixcolors(){window.tinycolor=tinycolor;let tofix=[\"tetrad\",\"triad\",\"splitcomplement\"];for(let f of tofix){let f0=f+'0';if(tinycolor.prototype[f0])return;tinycolor.prototype[f0]=tinycolor.prototype[f];tinycolor.prototype[f]=function(){let a=this.getAlpha();return this[f0]().map(t=>t.setAlpha(a));};}}static init(store){this.fixcolors();BEGIN();const viewpoint=DViewPoint.newVP('Default',undefined,true,'Pointer_ViewPointDefault');const validationViewpoint=DViewPoint.newVP('Validation default',vp=>{vp.isExclusiveView=false;vp.isValidation=true;},true,'Pointer_ViewPointValidation');Log.exDev(viewpoint.id!==Defaults.viewpoints[0],\"wrong vp id initialization\",{viewpoint,def:Defaults.viewpoints});const views=makeDefaultGraphViews(viewpoint,validationViewpoint);for(let view of views){CreateElementAction.new(view);}for(let primitiveType of Object.values(ShortAttribETypes)){let dPrimitiveType;if(primitiveType===ShortAttribETypes.EVoid)continue;// or make void too without primitiveType = true, but with returnType = true?\ndPrimitiveType=DClass.new(primitiveType,false,false,true,false,'',undefined,true,'Pointer_'+primitiveType.toUpperCase());SetRootFieldAction.new('primitiveTypes',dPrimitiveType.id,'+=',true);}/// creating m3 \"Object\" metaclass\nlet dObject=DClass.new(ShortDefaultEClasses.EObject,false,false,false,false,'',undefined,true,'Pointer_'+ShortDefaultEClasses.EObject.toUpperCase());SetRootFieldAction.new('ecoreClasses',dObject.id,'+=',true);for(let defaultEcoreClass of Object.values(DefaultEClasses)){// todo: creat everyone and not just object, make the whole m3 populated.\n}/*\r\n        let tmp = Object.values(GraphElements);\r\n        for (let k in tmp) {\r\n            let v: any = tmp[k];\r\n            Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n            if (!v.cname) continue; // it is a subdictionary\r\n            GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n        }*/END();}},_class2.subclasses=[],_class2._extends=[],_class2))||_class);function makeDefaultGraphViews(vp,validationVP){let errorOverlayView=DViewElement.new2('Generic error view',DV.semanticErrorOverlay(),validationVP,v=>{v.jsCondition='let nstate = node?.state || {};\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';v.usageDeclarations=\"(ret)=>{\\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\"+\"ret.nstate = node.state\\n\"+\"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\"+\"\\n}\";v.isExclusiveView=false;v.css=\"/* -- v2.0 - */\\n&.mainView { text-decoration-line: spelling-error; }\\n&.decorativeView {\\n    text-decoration-line: spelling-error;\\n    \\n    .overlap{\\n      outline: 1px dotted var(--failure);\\n      display: flex;\\n    }\\n\\n    .error-message{\\n        color: var(--accent);\\n        background: var(--bg-2-5);\\n        border-radius: var(--radius);\\n        margin: auto;\\n        padding: 8px 14px 16px 10px;\\n        position:absolute;\\n        top:50%; right:0;\\n        transform: translate(calc(100% + 20px), calc(-50%));\\n\\n    }\\n    .error-message::before {\\n      position: relative;\\n      top: 4px;\\n      font-family: bootstrap-icons;\\n      font-size: 1.2rem;\\n      content: '\\\\F333';\\n      margin-right: 10px;\\n      padding-top: 10px!important;\\n    }\\n}\\n\";},false,'Pointer_ViewOverlay');let errorCheckName=DViewElement.new2('Naming error view',DV.invisibleJsx(),validationVP,v=>{v.isExclusiveView=false;v.usageDeclarations=\"(ret)=>{ // scope: data, node, view, state, \\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.name = data && data.name || '';\\n\"+\"ret.type = data && data.className.substring(1) || 'shapeless';\\n\"+\"}\";v.onDataUpdate=\"\\nlet err = undefined;\\n//if (name.indexOf(\\\" \\\") >= 0) err = \\\"\\\" + type + \\\" names cannot contain white spaces.\\\"; else\\nif (name.length === 0 && type !== \\\"shapeless\\\") err = type + \\\"es must be named.\\\";\\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \\\" names must begin with an alphabet letter or $_ symbols.\\\";\\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \\\" names can only contain an alphanumeric chars or or $_ symbols\\\";\\nnode.state = {error_naming:err};\\n\";},false,'Pointer_ViewCheckName');let errorCheckLowerbound=DViewElement.new2('Lowerbound error view',DV.invisibleJsx(),validationVP,v=>{// v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\nv.appliableToClasses=['DValue'];v.isExclusiveView=false;v.usageDeclarations=\"(ret)=>{ // scope: data, node, view, state, \\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\"+\"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\"+\"}\";v.onDataUpdate=\"\\nlet err = undefined;\\n\\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\\nnode.state = {error_lowerbound: err};\\n\\n\";},false,'Pointer_ViewLowerbound');// errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\nlet valuecolormap={};valuecolormap[ShortAttribETypes.EBoolean]=\"orange\";valuecolormap[ShortAttribETypes.EByte]=\"orange\";valuecolormap[ShortAttribETypes.EShort]=\"orange\";valuecolormap[ShortAttribETypes.EInt]=\"orange\";valuecolormap[ShortAttribETypes.ELong]=\"orange\";valuecolormap[ShortAttribETypes.EFloat]=\"orange\";valuecolormap[ShortAttribETypes.EDouble]=\"orange\";valuecolormap[ShortAttribETypes.EDate]=\"green\";valuecolormap[ShortAttribETypes.EString]=\"green\";valuecolormap[ShortAttribETypes.EChar]=\"green\";valuecolormap[ShortAttribETypes.EVoid]=\"gray\";let voidView=DViewElement.new2('Fallback',DV.fallbackView(),vp,undefined,false,'fallback');let edgeViews=[];let size0=new GraphPoint(0,0),size1=new GraphPoint(12,12),size2=new GraphPoint(18,12);let model=DefaultViews.model(vp);let packagee=DefaultViews.package(model);let classs=DefaultViews.class(packagee);let enumm=DefaultViews.enum(packagee);let attr=DefaultViews.attribute(classs);let ref=DefaultViews.reference(classs);let op=DefaultViews.operation(classs);let par=DefaultViews.parameter(op);let lit=DefaultViews.literal(enumm);let obj=DefaultViews.object(model);/* ALFONSO */let single=DefaultViews.singleton(model);let val=DefaultViews.value(obj);let anchorView=DefaultViews.anchor(model);function makeEdgeView(name,type,headSize,tailSize,dashing){let ev=DV.edgeView(type,headSize||size0,tailSize||size0,dashing?\"10.5,9,0,0\":undefined,model,name);edgeViews.push(ev);return ev;}makeEdgeView(\"Association\",EdgeHead.reference,size1,undefined,false);makeEdgeView(\"Dependency\",EdgeHead.reference,size1,undefined,true);makeEdgeView(\"Inheritance\",EdgeHead.extend,size1,undefined,false);makeEdgeView(\"Aggregation\",EdgeHead.aggregation,undefined,size2,false);makeEdgeView(\"Composition\",EdgeHead.composition,undefined,size2,false);// edgeView.forceNodeType=\"Edge\"\n/*\r\n    for (let ev of edgeViews){\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/ // nb: Error is not a view, just jsx. transform it in a view so users can edit it\nlet dv_subviews=[model,packagee,classs,enumm,attr,ref,op,par,lit,obj,val,single,voidView,...edgeViews,DefaultViews.edgepoint(model),anchorView];let validation_subviews=[errorOverlayView,errorCheckLowerbound,errorCheckName];// SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\n// SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\nconst ret=[...dv_subviews,...validation_subviews];console.clear();for(let v of ret)Log.e(!v.events,\"missing events on view \"+v.name,{v,ret});for(let v of ret)Log.w(!!!v.events,\"found events on view \"+v.name,{v,ret});return ret;}export let ViewPointState=(_dec2=RuntimeAccessible('ViewPointState'),_dec2(_class3=class ViewPointState extends DPointerTargetable{constructor(){super(...arguments);this.name='';}})||_class3);// to delete?\nexport let ModelStore=(_dec3=RuntimeAccessible('ModelStore'),_dec3(_class5=class ModelStore{constructor(){this._meta=void 0;this.instances=void 0;}// getter e setter senza proxy\nget meta(){return this._meta;}set meta(value){this._meta=value;}})||_class5);export let LState=(_dec4=RuntimeAccessible('LState'),_dec4(_class7=(_class8=class LState extends LPointerTargetable{constructor(){super(...arguments);this.__raw=void 0;this.contextMenu=void 0;this.user=void 0;this.debug=void 0;this.room=void 0;this._lastSelected=void 0;this.idlookup=void 0;}// return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\nstatic get(){return LState.wrap(store.getState());}get__lastSelected(c){let ls=c.data._lastSelected;return ls&&{modelElement:LState.wrap(ls.modelElement),node:LState.wrap(ls.node),view:LState.wrap(ls.view)};}_defaultCollectionGetter(c,k){return LPointerTargetable.fromPointer(c.data[k]);}_defaultGetter(c,k){let v=c.data[k];if(Array.isArray(v)){if(v.length===0)return[];else if(Pointers.isPointer(v[0]))return this._defaultCollectionGetter(c,k);return v;}return v;}},_class8.subclasses=[],_class8._extends=[],_class8.structure=void 0,_class8.singleton=void 0,_class8))||_class7);RuntimeAccessibleClass.set_extend(DPointerTargetable,DState);RuntimeAccessibleClass.set_extend(LPointerTargetable,LState);","map":{"version":3,"names":["BEGIN","Constructors","CreateElementAction","DClass","Defaults","DPointerTargetable","DViewElement","DViewPoint","EdgeHead","END","GraphPoint","Log","LPointerTargetable","Pointers","RuntimeAccessible","RuntimeAccessibleClass","SetRootFieldAction","ShortAttribETypes","store","DV","DefaultEClasses","ShortDefaultEClasses","DefaultViews","tinycolor","VersionFixer","console","warn","statehistory","globalcanundostate","window","DState","_dec","_class","_class2","constructor","arguments","version","n","get_highestversion","date","Date","toString","conversionList","env","process","debug","logs","models","m2models","m1models","viewelements","stackViews","idlookup","graphs","voidvertexs","vertexs","graphvertexs","graphelements","edgepoints","edges","classifiers","enumerators","packages","primitiveTypes","attributes","enumliterals","references","classs","operations","parameters","ecoreClasses","returnTypes","isEdgePending","user","source","contextMenu","display","x","y","nodeid","objects","values","_lastSelected","users","viewpoint","viewpoints","isLoading","projects","collaborativeSession","NODES_RECOMPILE_labels","NODES_RECOMPILE_longestLabel","VIEWS_RECOMPILE_labels","VIEWS_RECOMPILE_longestLabel","VIEWS_RECOMPILE_onDataUpdate","VIEWS_RECOMPILE_onDragStart","VIEWS_RECOMPILE_onDragEnd","VIEWS_RECOMPILE_whileDragging","VIEWS_RECOMPILE_onResizeStart","VIEWS_RECOMPILE_onResizeEnd","VIEWS_RECOMPILE_whileResizing","VIEWS_RECOMPILE_onRotationStart","VIEWS_RECOMPILE_onRotationEnd","VIEWS_RECOMPILE_whileRotating","VIEWS_RECOMPILE_constants","VIEWS_RECOMPILE_usageDeclarations","VIEWS_RECOMPILE_jsxString","VIEWS_RECOMPILE_preconditions","VIEWS_RECOMPILE_jsCondition","VIEWS_RECOMPILE_ocl","VIEWS_RECOMPILE_events","VIEWS_RECOMPILE_all","ELEMENT_CREATED","ELEMENT_DELETED","ClassNameChanged","tooltip","topics","advanced","alert","new","ds","undefined","fixcolors","tofix","f","f0","prototype","a","getAlpha","map","t","setAlpha","init","newVP","validationViewpoint","vp","isExclusiveView","isValidation","exDev","id","def","views","makeDefaultGraphViews","view","primitiveType","Object","dPrimitiveType","EVoid","toUpperCase","dObject","EObject","defaultEcoreClass","subclasses","_extends","validationVP","errorOverlayView","new2","semanticErrorOverlay","v","jsCondition","usageDeclarations","css","errorCheckName","invisibleJsx","onDataUpdate","errorCheckLowerbound","appliableToClasses","valuecolormap","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","EDate","EString","EChar","voidView","fallbackView","edgeViews","size0","size1","size2","model","packagee","package","class","enumm","enum","attr","attribute","ref","reference","op","operation","par","parameter","lit","literal","obj","object","single","singleton","val","value","anchorView","anchor","makeEdgeView","name","type","headSize","tailSize","dashing","ev","edgeView","push","extend","aggregation","composition","dv_subviews","edgepoint","validation_subviews","ret","clear","e","events","w","ViewPointState","_dec2","_class3","ModelStore","_dec3","_class5","_meta","instances","meta","LState","_dec4","_class7","_class8","__raw","room","get","wrap","getState","get__lastSelected","c","ls","data","modelElement","node","_defaultCollectionGetter","k","fromPointer","_defaultGetter","Array","isArray","length","isPointer","structure","set_extend"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/redux/store.tsx"],"sourcesContent":["import {\r\n    Asterisk,\r\n    BEGIN, Circle,\r\n    Constructors,\r\n    CoordinateMode,\r\n    CreateElementAction, Cross,\r\n    DAttribute,\r\n    DClass,\r\n    DClassifier, Decagon, DecoratedStar, DEdge,\r\n    DEdgePoint,\r\n    Defaults,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DExtEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    Dictionary,\r\n    DLog,\r\n    DModel,\r\n    DModelElement,\r\n    DObject, DocString,\r\n    DOperation,\r\n    DPackage,\r\n    DParameter,\r\n    DPointerTargetable,\r\n    DProject,\r\n    DRefEdge,\r\n    DReference,\r\n    DUser,\r\n    DValue,\r\n    DVertex,\r\n    DViewElement,\r\n    DViewPoint,\r\n    DVoidEdge, Edge,\r\n    EdgeBendingMode,\r\n    EdgeHead, EdgePoint, Ellipse,\r\n    END, Enneagon, Field,\r\n    GObject, Graph, GraphElement,\r\n    GraphPoint,\r\n    GraphSize, GraphVertex, Heptagon, Hexagon,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LObject, Log,\r\n    LogicContext,\r\n    LOperation,\r\n    LPackage,\r\n    LParameter,\r\n    LPointerTargetable, LProject,\r\n    LRefEdge,\r\n    LReference,\r\n    LUser,\r\n    LValue,\r\n    LViewElement,\r\n    LViewPoint, Nonagon, Octagon,\r\n    Pentagon,\r\n    Pointer,\r\n    Pointers, Polygon, Rectangle,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass, Septagon, SetFieldAction,\r\n    SetRootFieldAction,\r\n    ShortAttribETypes, SimpleStar, Square, Star,\r\n    store, Trapezoid, Triangle, U, Vertex, VoidVertex,\r\n} from '../joiner';\r\nimport {DV} from \"../common/DV\";\r\n//import {Selected} from \"../joiner/types\";\r\nimport {DefaultEClasses, ShortDefaultEClasses} from \"../common/U\";\r\nimport { GraphElements, Graphs, Vertexes, Edges, Fields } from '../joiner';\r\nimport DefaultViews from \"./defaults/views\";\r\nimport tinycolor, {Instance} from \"tinycolor2\";\r\nimport {ReactNode} from \"react\";\r\nimport {VersionFixer} from \"./VersionFixer\";\r\n\r\nconsole.warn('ts loading store');\r\n\r\n// @RuntimeAccessible\r\n// NB: le voci che iniziano con '_' sono personali e non condivise\r\n\r\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\r\nexport const statehistory: {\r\n        [userpointer:Pointer<DUser>]: {undoable:GObject<\"delta\">[], redoable: GObject<\"delta\">[]}\r\n} & {\r\n    globalcanundostate: boolean // set to true at first user click }\r\n} = { globalcanundostate: false} as any;\r\n(window as any).statehistory = statehistory;\r\n\r\n@RuntimeAccessible('DState')\r\nexport class DState extends DPointerTargetable{\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static new(): DState {\r\n        let ds = new DState('dwc');\r\n        new Constructors(ds, undefined, false, undefined)\r\n            .DPointerTargetable().DState();\r\n        // .end();\r\n        return ds; // do not trigger persist and CreateElement for state, or it will be stored in idlookup making a loop\r\n    }\r\n\r\n    // no need to manually update for each update\r\n    version:{n:number, date:string, conversionList: number[]} = {n:VersionFixer.get_highestversion(), date: new Date().toString(), conversionList: []};\r\n\r\n    env: Dictionary = process.env;  //damiano: this might make problems on load\r\n    debug: boolean = false;\r\n    logs: Pointer<DLog>[] = [];\r\n    models: Pointer<DModel, 0, 'N'> = []; // Pointer<DModel, 0, 'N'>[] = [];\r\n    m2models: Pointer<DModel, 0, 'N'> = [];\r\n    m1models: Pointer<DModel, 0, 'N'> = [];\r\n\r\n\r\n    viewelements: Pointer<DViewElement, 0, 'N'> = [];\r\n    stackViews: Pointer<DViewElement, 0, 'N'> = [];\r\n\r\n    // users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\r\n    // collaborators: UserState[];\r\n    idlookup: Record<Pointer<DPointerTargetable>, DPointerTargetable> = {};\r\n\r\n    //// DClass section to fill\r\n    graphs: Pointer<DGraph, 0, 'N'> = [];\r\n    voidvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    vertexs: Pointer<DVertex, 0, 'N'> = [];\r\n    graphvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    graphelements: Pointer<DGraphVertex, 0, 'N'> = []; // actually fields\r\n    edgepoints: Pointer<DEdgePoint, 0, 'N'> = [];\r\n    edges: Pointer<DEdge, 0, \"N\"> = [];\r\n\r\n    classifiers: Pointer<DClassifier, 0, 'N'> = [];\r\n    enumerators: Pointer<DEnumerator, 0, 'N'> = [];\r\n    packages: Pointer<DPackage, 0, 'N'> = [];\r\n    primitiveTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    attributes: Pointer<DAttribute, 0, \"N\"> = [];\r\n    enumliterals: Pointer<DEnumLiteral, 0, \"N\"> = [];\r\n    references: Pointer<DReference, 0, \"N\"> = [];\r\n    classs: Pointer<DClass, 0, \"N\"> = [];\r\n    operations: Pointer<DOperation, 0, \"N\"> = [];\r\n    parameters: Pointer<DParameter, 0, \"N\"> = [];\r\n    ecoreClasses: Pointer<DClass, 0, \"N\"> = [];\r\n    returnTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    /// DClass section end\r\n\r\n    isEdgePending: {user: Pointer<DUser>, source: Pointer<DClass>} = {user: '', source: ''};\r\n\r\n    contextMenu: { display: boolean, x: number, y: number, nodeid: Pointer} = {display: false, x: 0, y: 0, nodeid:''};\r\n\r\n    objects: Pointer<DObject, 0, 'N', LObject> = [];\r\n    values: Pointer<DValue, 0, 'N', LValue> = [];\r\n\r\n    // private, non-shared fields\r\n    _lastSelected?: {\r\n        node: Pointer<DGraphElement, 1, 1>,\r\n        view: Pointer<DViewElement, 1, 1>,\r\n        modelElement: Pointer<DModelElement, 0, 1> // if a node is clicked: a node and a view are present, a modelElement might be. a node can exist without a modelElement counterpart.\r\n    };\r\n\r\n    users: Pointer<DUser, 0, 'N', LUser> = [];\r\n\r\n    viewpoint: Pointer<DViewPoint> = '';\r\n    viewpoints: Pointer<DViewPoint, 0, 'N'> = [];\r\n\r\n\r\n    isLoading: boolean = false;\r\n\r\n    projects: Pointer<DProject, 0, 'N'> = [];\r\n    collaborativeSession: boolean = false;\r\n    ////////////////     flags shared, but handled locally      /////////////////////////////\r\n\r\n    /* RECOMPILES MODULE */\r\n    NODES_RECOMPILE_labels: Pointer<DGraphElement>[] = [];\r\n    NODES_RECOMPILE_longestLabel: Pointer<DGraphElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_labels: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_longestLabel: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onDataUpdate: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onDragStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onDragEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileDragging: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onResizeStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onResizeEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileResizing: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onRotationStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onRotationEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileRotating: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_constants: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_usageDeclarations: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsxString: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_preconditions: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsCondition: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_ocl: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_events: (Pointer<DViewElement> | {vid: Pointer<DViewElement>, keys: string[] | undefined})[] = [];\r\n    VIEWS_RECOMPILE_all?: boolean | Pointer<any>[];\r\n    ELEMENT_CREATED: Pointer[] = [];\r\n    ELEMENT_DELETED: Pointer[] = [];\r\n\r\n    ClassNameChanged: Dictionary<Pointer<DModelElement>, DocString<\"name\">> = {}; // for ocl matchings by m2 class name: \"context inv Human: ...\"\r\n\r\n    tooltip: string = '';\r\n\r\n    /* IoT: Topic Table */\r\n    topics: Dictionary<string, unknown> = {};\r\n\r\n    advanced: boolean = false;\r\n    alert: string = '';\r\n\r\n\r\n    static fixcolors(){\r\n        (window as any).tinycolor = tinycolor;\r\n        let tofix = [\"tetrad\", \"triad\", \"splitcomplement\"];\r\n        for (let f of tofix) {\r\n            let f0 = f + '0';\r\n            if (tinycolor.prototype[f0]) return;\r\n            tinycolor.prototype[f0] = tinycolor.prototype[f];\r\n            tinycolor.prototype[f] = function (){ let a = this.getAlpha(); return this[f0]().map((t: Instance) => t.setAlpha(a)); }\r\n        }\r\n    }\r\n    static init(store?: DState): void {\r\n        this.fixcolors();\r\n        BEGIN()\r\n        const viewpoint = DViewPoint.newVP('Default', undefined,true, 'Pointer_ViewPointDefault');\r\n        const validationViewpoint = DViewPoint.newVP('Validation default',\r\n            (vp)=>{ vp.isExclusiveView = false; vp.isValidation = true;}, true, 'Pointer_ViewPointValidation');\r\n\r\n        Log.exDev(viewpoint.id !== Defaults.viewpoints[0], \"wrong vp id initialization\", {viewpoint, def:Defaults.viewpoints});\r\n        const views: DViewElement[] = makeDefaultGraphViews(viewpoint, validationViewpoint);\r\n\r\n        for (let view of views) { CreateElementAction.new(view); }\r\n\r\n        for (let primitiveType of Object.values(ShortAttribETypes)) {\r\n            let dPrimitiveType;\r\n            if (primitiveType === ShortAttribETypes.EVoid) continue; // or make void too without primitiveType = true, but with returnType = true?\r\n            dPrimitiveType = DClass.new(primitiveType, false, false, true, false, '', undefined, true, 'Pointer_' + primitiveType.toUpperCase());\r\n            SetRootFieldAction.new('primitiveTypes', dPrimitiveType.id, '+=', true);\r\n        }\r\n\r\n        /// creating m3 \"Object\" metaclass\r\n        let dObject = DClass.new(ShortDefaultEClasses.EObject, false, false, false, false,\r\n            '', undefined, true, 'Pointer_' + ShortDefaultEClasses.EObject.toUpperCase());\r\n\r\n        SetRootFieldAction.new('ecoreClasses', dObject.id, '+=', true);\r\n        for (let defaultEcoreClass of Object.values(DefaultEClasses)) {\r\n            // todo: creat everyone and not just object, make the whole m3 populated.\r\n        }\r\n\r\n        /*\r\n        let tmp = Object.values(GraphElements);\r\n        for (let k in tmp) {\r\n            let v: any = tmp[k];\r\n            Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n            if (!v.cname) continue; // it is a subdictionary\r\n            GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n        }*/\r\n        END();\r\n    }\r\n}\r\n\r\n\r\nfunction makeDefaultGraphViews(vp: DViewPoint, validationVP: DViewPoint): DViewElement[] {\r\n\r\n    let errorOverlayView: DViewElement = DViewElement.new2('Generic error view', DV.semanticErrorOverlay(), validationVP, (v) => {\r\n        v.jsCondition = 'let nstate = node?.state || {};\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';\r\n        v.usageDeclarations = \"(ret)=>{\\n\" +\r\n        \"// ** preparations and default behaviour here ** //\\n\" +\r\n        \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n        \"// ** declarations here ** //\\n\" +\r\n        \"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\" +\r\n        \"ret.nstate = node.state\\n\" +\r\n        \"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\" +\r\n        \"\\n}\"\r\n        v.isExclusiveView = false;\r\n        v.css =\r\n`/* -- v2.0 - */\r\n&.mainView { text-decoration-line: spelling-error; }\r\n&.decorativeView {\r\n    text-decoration-line: spelling-error;\r\n    \r\n    .overlap{\r\n      outline: 1px dotted var(--failure);\r\n      display: flex;\r\n    }\r\n\r\n    .error-message{\r\n        color: var(--accent);\r\n        background: var(--bg-2-5);\r\n        border-radius: var(--radius);\r\n        margin: auto;\r\n        padding: 8px 14px 16px 10px;\r\n        position:absolute;\r\n        top:50%; right:0;\r\n        transform: translate(calc(100% + 20px), calc(-50%));\r\n\r\n    }\r\n    .error-message::before {\r\n      position: relative;\r\n      top: 4px;\r\n      font-family: bootstrap-icons;\r\n      font-size: 1.2rem;\r\n      content: '\\\\F333';\r\n      margin-right: 10px;\r\n      padding-top: 10px!important;\r\n    }\r\n}\r\n`\r\n    }, false, 'Pointer_ViewOverlay' );\r\n\r\n    let errorCheckName: DViewElement = DViewElement.new2('Naming error view', DV.invisibleJsx(), validationVP, (v) => {\r\n        v.isExclusiveView = false;\r\n        v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.name = data && data.name || '';\\n\"+\r\n            \"ret.type = data && data.className.substring(1) || 'shapeless';\\n\"+\r\n            \"}\";\r\n        v.onDataUpdate = `\r\nlet err = undefined;\r\n//if (name.indexOf(\" \") >= 0) err = \"\" + type + \" names cannot contain white spaces.\"; else\r\nif (name.length === 0 && type !== \"shapeless\") err = type + \"es must be named.\";\r\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \" names must begin with an alphabet letter or $_ symbols.\";\r\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \" names can only contain an alphanumeric chars or or $_ symbols\";\r\nnode.state = {error_naming:err};\r\n`;}, false, 'Pointer_ViewCheckName' );\r\n\r\nlet errorCheckLowerbound: DViewElement = DViewElement.new2('Lowerbound error view', DV.invisibleJsx(), validationVP, (v) => {\r\n            // v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\r\n            v.appliableToClasses = ['DValue'];\r\n            v.isExclusiveView = false;\r\n            v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n                \"// ** preparations and default behaviour here ** //\\n\" +\r\n                \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n                \"// ** declarations here ** //\\n\" +\r\n                \"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\"+\r\n                \"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\" +\r\n                \"}\";\r\n            v.onDataUpdate = `\r\nlet err = undefined;\\n\r\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\r\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\r\nnode.state = {error_lowerbound: err};\\n\r\n`;\r\n    }, false, 'Pointer_ViewLowerbound' );\r\n    // errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\r\n\r\n    let valuecolormap: GObject = {};\r\n    valuecolormap[ShortAttribETypes.EBoolean] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EByte] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EShort] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EInt] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.ELong] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EFloat] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDouble] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDate] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EString] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EChar] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EVoid] = \"gray\";\r\n\r\n\r\n    let voidView: DViewElement = DViewElement.new2('Fallback', DV.fallbackView(), vp, undefined, false, 'fallback');\r\n\r\n\r\n    let edgeViews: DViewElement[] = [];\r\n    let size0: GraphPoint = new GraphPoint(0, 0), size1: GraphPoint = new GraphPoint(12, 12), size2: GraphPoint = new GraphPoint(18, 12);\r\n\r\n\r\n    let model = DefaultViews.model(vp);\r\n    let packagee = DefaultViews.package(model);\r\n    let classs = DefaultViews.class(packagee);\r\n    let enumm = DefaultViews.enum(packagee);\r\n    let attr = DefaultViews.attribute(classs);\r\n    let ref = DefaultViews.reference(classs);\r\n    let op = DefaultViews.operation(classs);\r\n    let par = DefaultViews.parameter(op);\r\n    let lit = DefaultViews.literal(enumm);\r\n    let obj = DefaultViews.object(model);\r\n    /* ALFONSO */\r\n    let single = DefaultViews.singleton(model);\r\n    let val = DefaultViews.value(obj);\r\n    let anchorView = DefaultViews.anchor(model);\r\n\r\n    function makeEdgeView(name: string, type: EdgeHead, headSize: GraphPoint | undefined, tailSize: GraphPoint | undefined, dashing: boolean): DViewElement{\r\n        let ev = DV.edgeView(type, headSize || size0, tailSize || size0, dashing ? \"10.5,9,0,0\" : undefined, model, name);\r\n        edgeViews.push(ev);\r\n        return ev;\r\n    }\r\n\r\n    makeEdgeView(\"Association\", EdgeHead.reference,             size1,   undefined,  false);\r\n    makeEdgeView(\"Dependency\",  EdgeHead.reference,             size1,   undefined,  true);\r\n    makeEdgeView(\"Inheritance\", EdgeHead.extend,                size1,   undefined,  false);\r\n    makeEdgeView(\"Aggregation\", EdgeHead.aggregation,   undefined,      size2,      false);\r\n    makeEdgeView(\"Composition\", EdgeHead.composition,   undefined,      size2,      false);\r\n\r\n    // edgeView.forceNodeType=\"Edge\"\r\n\r\n    /*\r\n    for (let ev of edgeViews){\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/\r\n    // nb: Error is not a view, just jsx. transform it in a view so users can edit it\r\n\r\n\r\n\r\n    let dv_subviews = [model, packagee, classs, enumm, attr, ref, op, par,\r\n        lit, obj, val, single, voidView,\r\n        ...edgeViews,\r\n        DefaultViews.edgepoint(model),\r\n        anchorView];\r\n\r\n    let validation_subviews = [errorOverlayView, errorCheckLowerbound, errorCheckName];\r\n    // SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\r\n    // SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\r\n    const ret = [...dv_subviews, ...validation_subviews];\r\n    console.clear();\r\n    for (let v of ret) Log.e(!v.events, \"missing events on view \" + v.name, {v, ret});\r\n    for (let v of ret) Log.w(!!!v.events, \"found events on view \" + v.name, {v, ret});\r\n    return ret;\r\n}\r\n\r\n@RuntimeAccessible('ViewPointState')\r\nexport class ViewPointState extends DPointerTargetable{\r\n    name: string = '';\r\n}\r\n\r\n// to delete?\r\n@RuntimeAccessible('ModelStore')\r\nexport class ModelStore {\r\n    private _meta!: ModelStore | string;\r\n    instances!: (ModelStore | string)[];\r\n\r\n    // getter e setter senza proxy\r\n    get meta(): ModelStore | string {\r\n        return this._meta;\r\n    }\r\n\r\n    set meta(value: ModelStore | string) {\r\n        this._meta = value;\r\n    }\r\n}\r\n\r\n\r\n\r\n@RuntimeAccessible('LState')\r\nexport class LState<Context extends LogicContext<DState> = any, C extends Context = Context, D extends DState = DState> extends LPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DPointerTargetable & DState;\r\n    public static structure: typeof DPointerTargetable;\r\n    public static singleton: LPointerTargetable;\r\n    // return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\r\n    static get<T2 extends typeof RuntimeAccessibleClass & { logic?: typeof LPointerTargetable | undefined; }>(): T2 & LState { return LState.wrap(store.getState() as any) as any; }\r\n    contextMenu!: {display: boolean, x: number, y: number};\r\n    user!: LUser;\r\n    debug!: boolean;\r\n    room!: string;\r\n    _lastSelected?: {modelElement?: LModelElement, node?: LGraphElement, view?: LViewElement};\r\n    idlookup!:Dictionary<Pointer, DPointerTargetable>;\r\n\r\n    get__lastSelected(c: Context): this[\"_lastSelected\"] {\r\n        let ls = c.data._lastSelected;\r\n        return ls && {modelElement: LState.wrap(ls.modelElement), node: LState.wrap(ls.node), view: LState.wrap(ls.view)}; }\r\n\r\n    _defaultCollectionGetter(c: Context, k: keyof DState): LPointerTargetable[] {\r\n        return LPointerTargetable.fromPointer(c.data[k] as any);\r\n    }\r\n    _defaultGetter(c: Context, k: keyof DState) {\r\n        let v = c.data[k];\r\n        if (Array.isArray(v)) {\r\n            if (v.length === 0) return [];\r\n            else if (Pointers.isPointer(v[0] as any)) return this._defaultCollectionGetter(c, k);\r\n            return v;\r\n        }\r\n        return v;\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DState);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LState);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}