{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Tooltip.tsx\",\n  _dec,\n  _class,\n  _class2;\nimport React, { isValidElement } from 'react';\nimport { Log, RuntimeAccessible, Size, Point } from '../../joiner';\nimport './tooltip.scss';\nimport { PositionStr } from \"../../common/Geom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TooltipVisualizerState {\n  constructor() {\n    this.tooltip = void 0;\n    this.baseElement = void 0;\n    this.position = void 0;\n    this.offsetX = void 0;\n    this.offsetY = void 0;\n    this.position = 'b';\n  }\n}\nexport class TooltipVisualizer extends React.Component {\n  constructor() {\n    super({});\n    this.tooltip = null;\n    this.root = null;\n    this.innerText = void 0;\n    this.tsize = void 0;\n    this.state = new TooltipVisualizerState();\n    TooltipVisualizer.component = this;\n  }\n  onMouseEnter() {\n    var _TooltipVisualizer$co;\n    let position = PositionStr.invertPosStr((_TooltipVisualizer$co = TooltipVisualizer.component.state.position) !== null && _TooltipVisualizer$co !== void 0 ? _TooltipVisualizer$co : \"b\");\n    TooltipVisualizer.component.setState({\n      position\n    });\n  }\n  setRef(e) {\n    this.root = e;\n    this.componentDidUpdate();\n  }\n  componentDidMount() {\n    return this.componentDidUpdate();\n  }\n  componentDidUpdate() {\n    let e = this.root;\n    if (!e) return;\n    let innerText = e.innerText;\n    if (innerText === this.innerText) return;\n    this.innerText = innerText;\n    this.tooltip = e.children[0];\n    this.tsize = this.tooltip ? Size.of(this.tooltip) : undefined;\n    this.forceUpdate();\n  }\n  render() {\n    let tooltip = this.state.tooltip;\n    if (!tooltip) return null;\n    const style = {};\n    let position = this.state.position;\n    let offsetX = this.state.offsetX || 0;\n    let offsetY = this.state.offsetY || 0;\n    /* debug stuff override\r\n    let positions = ['t', 'b', 'l', 'r', 'tl', 'tr', 'bl', 'br', ''] as any;\r\n    let windoww = window as any\r\n    position = positions[windoww.ii || 0];//Math.floor(Math.random()*positions.length)];\r\n    offsetX = windoww.xx || 0;\r\n    offsetY = windoww.yy || 0;*/\n    if (this.state.baseElement) {\n      //style.position = 'absolute';\n      let size = Size.of(this.state.baseElement);\n      let tsize = this.tsize;\n      let x = size.x;\n      let y = size.y;\n      let pos = PositionStr.fromPosString(position);\n      x += (pos.x + 1) / 2 * size.w + pos.x * offsetX;\n      y += (pos.y + 1) / 2 * size.h + pos.y * offsetY;\n      // -1 -> 0\n      // 0 -> 0.5\n      // 1 -> 1\n\n      let xmin = 'calc(' + size.w + 'px / 2 - 50vw)';\n      let ymin = 'calc(' + size.h + 'px / 2 - 50vh)';\n      let xmax = 'calc(50vw - ' + size.w + 'px / 2)';\n      let ymax = 'calc(50vh - ' + size.h + 'px / 2)';\n      let l = 'max(' + xmin + ', min(' + xmax + ', calc( ' + x + 'px - 50vw)))';\n      let t = 'max(' + ymin + ', min(' + ymax + ', calc( ' + y + 'px - 50vh)))';\n      // style.left = l; style.top = t;\n      style['--mid-x'] = 'calc(' + x + 'px - 50vw)';\n      style['--mid-y'] = 'calc(' + y + 'px - 50vh)';\n      style['--source-size-w'] = size.w + 'px';\n      style['--source-size-h'] = size.h + 'px';\n      if (tsize) {\n        style['--size-w'] = tsize.w + 'px';\n        style['--size-h'] = tsize.h + 'px';\n      }\n      console.log(\"inlinepos:\", {\n        position,\n        pos,\n        x,\n        y,\n        size,\n        offsetX,\n        offsetY,\n        l,\n        t\n      });\n      // style.right = 'calc( 100vw - '+size.w+'px)';\n      // currently center of tooltip is topleft of baseelem\n    }\n\n    // wrapper cannot contain only rawtext without subelements to be rendered\n    if (typeof tooltip !== 'object') tooltip = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 52\n    }, this);\n    if (Array.isArray(tooltip)) tooltip = tooltip.map(e => typeof e !== 'object' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: e\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 88\n    }, this) : e);\n    // NB: arrays are allowed but currently show elements in an horizontal line\n    console.log('tooltip', style, this.state);\n    // debugg stuff\n    let tooltip2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...style,\n        padding: 0,\n        width: 0,\n        height: 0,\n        border: '2px solid red',\n        borderRadius: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }, this);\n    style.padding = 0;\n    // debug stuff end\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip-wrapper \" + PositionStr.toSeparateFullLabels(position !== null && position !== void 0 ? position : 't') + (this.state.baseElement ? \" inline\" : \" fixed\"),\n        onMouseEnter: this.onMouseEnter,\n        style: style,\n        ref: e => this.setRef(e),\n        children: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip-wrapper \" + PositionStr.toSeparateFullLabels(position !== null && position !== void 0 ? position : 't') + (this.state.baseElement ? \" inline\" : \" fixed\"),\n        onMouseEnter: this.onMouseEnter,\n        style: style,\n        children: tooltip2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nTooltipVisualizer.component = void 0;\nexport let Tooltip = (_dec = RuntimeAccessible('Tooltip'), _dec(_class = (_class2 = class Tooltip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tooltip = void 0;\n    this.childhtml = null;\n    this.state = {};\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n  static show(tooltip, pos, baseElement) {\n    var _offset$x, _offset$y;\n    let seconds = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    let offset = arguments.length > 4 ? arguments[4] : undefined;\n    tooltip = Tooltip.fixTooltip(tooltip);\n    const statepatch = {\n      tooltip,\n      baseElement,\n      offsetX: (_offset$x = offset === null || offset === void 0 ? void 0 : offset.x) !== null && _offset$x !== void 0 ? _offset$x : 0,\n      offsetY: (_offset$y = offset === null || offset === void 0 ? void 0 : offset.y) !== null && _offset$y !== void 0 ? _offset$y : 0\n    };\n    statepatch.position = pos !== null && pos !== void 0 ? pos : 'b';\n    TooltipVisualizer.component.setState(statepatch);\n    if (seconds > 0) setTimeout(() => {\n      if (TooltipVisualizer.component.state.tooltip !== tooltip) return;\n      if (TooltipVisualizer.component.state.baseElement !== baseElement) return;\n      TooltipVisualizer.component.setState({\n        tooltip: undefined,\n        baseElement: undefined,\n        offsetX: 0,\n        offsetY: 0\n      });\n    }, seconds * 1000);\n  }\n  static hide() {\n    TooltipVisualizer.component.setState({\n      tooltip: undefined\n    });\n  }\n  onMouseEnter(e) {\n    let inline = this.props.inline;\n    let x = this.props.offsetX;\n    let y = this.props.offsetY;\n    let offset = x || x === 0 || y || y === 0 ? new Point(this.props.offsetX || 0, this.props.offsetY || 0) : undefined;\n    Tooltip.show(this.tooltip, this.props.position, inline ? this.childhtml || undefined : undefined, -1, offset);\n  }\n  onMouseLeave(e) {\n    Tooltip.hide();\n  }\n  componentWillUnmount() {\n    this.onMouseLeave();\n  }\n  static fixTooltip(t) {\n    return t;\n    // const onMouseEnter = Tooltip.mergeEvents(t, \"onMouseEnter\", ()=> TooltipVisualizer.component.setState({position: !TooltipVisualizer.component.position}));\n    //return React.cloneElement(t, {onMouseEnter});\n  }\n  static mergeEvents(c, key, func) {\n    if (!c.props[key]) return func;\n    let evt = function () {\n      let ret = undefined;\n      if (typeof c.props[key] !== \"function\") Log.ww(\"<Tooltip /> component requires his child to have \" + key + \" props either missing or a valid function\");else {\n        ret = c.props[key](...arguments);\n      }\n      func(...arguments);\n      return ret;\n    };\n    return evt;\n  }\n  render() {\n    var _this = this;\n    if (!this.props.tooltip) return this.props.children;\n    if (Array.isArray(this.props.children)) return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"<Tooltip /> component requires exactly 1 element as children. Wrap the subelements in a container element.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 56\n    }, this);\n    if (!this.props.children || ! /*#__PURE__*/isValidElement(this.props.children)) return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"<Tooltip /> component requires a html or react node as children.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 82\n    }, this);\n    for (let k of Object.keys(this.props)) switch (k) {\n      default:\n        Log.ww('<Tooltip /> component cannot accept props other than \"key\", \"position\", and \"tooltip\".');\n        break;\n      case 'children':\n      case 'key':\n      case 'tooltip':\n      case 'position':\n        break;\n      // case \"inline\": break;\n    }\n    this.tooltip = Tooltip.fixTooltip(this.props.tooltip);\n    let c = this.props.children;\n    const onMouseEnter = Tooltip.mergeEvents(c, 'onMouseEnter', this.onMouseEnter);\n    const onMouseLeave = Tooltip.mergeEvents(c, 'onMouseLeave', this.onMouseLeave);\n    let ref = undefined;\n    if (c.props.ref) {\n      const pref = c.props.ref;\n      switch (typeof pref) {\n        case \"object\":\n          this.childhtml = pref.current;\n          break;\n        case \"function\":\n          ref = function (e) {\n            for (var _len = arguments.length, a = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              a[_key - 1] = arguments[_key];\n            }\n            pref(e, a);\n            _this.childhtml = e;\n          };\n          break;\n        case \"string\":\n          Log.ee(\"Found React-ref of type string in Tooltip children which is unsupported. Use object or funcional refs.\");\n          break;\n      }\n    } else ref = ref => {\n      this.childhtml = ref;\n    };\n    const injectProps = {\n      onMouseEnter,\n      onMouseLeave\n    };\n    if (ref) injectProps.ref = ref;\n    let ret = /*#__PURE__*/React.cloneElement(c, injectProps);\n    return ret;\n  }\n}, _class2.cname = \"Tooltip\", _class2)) || _class);\n// const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(mapStateToProps, mapDispatchToProps)(TooltipComponent);\n\n// export function Tooltip(props: OwnProps): ReactElement { return <TooltipConnected {...{...props}}>{props.children}</TooltipConnected>; }\n\n//TooltipComponent.cname = 'TooltipComponent';\n//TooltipConnected.cname = 'TooltipConnected';\nTooltip.cname = 'Tooltip';","map":{"version":3,"names":["React","isValidElement","Log","RuntimeAccessible","Size","Point","PositionStr","jsxDEV","_jsxDEV","Fragment","_Fragment","TooltipVisualizerState","constructor","tooltip","baseElement","position","offsetX","offsetY","TooltipVisualizer","Component","root","innerText","tsize","state","component","onMouseEnter","_TooltipVisualizer$co","invertPosStr","setState","setRef","e","componentDidUpdate","componentDidMount","children","of","undefined","forceUpdate","render","style","size","x","y","pos","fromPosString","w","h","xmin","ymin","xmax","ymax","l","t","console","log","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","tooltip2","padding","width","height","border","borderRadius","className","toSeparateFullLabels","ref","Tooltip","_dec","_class","_class2","props","childhtml","bind","onMouseLeave","show","_offset$x","_offset$y","seconds","arguments","length","offset","fixTooltip","statepatch","setTimeout","hide","inline","componentWillUnmount","mergeEvents","c","key","func","evt","ret","ww","_this","k","Object","keys","pref","current","_len","a","_key","ee","injectProps","cloneElement","cname"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Tooltip.tsx"],"sourcesContent":["import React, {\r\n    Dispatch,\r\n    isValidElement,\r\n    KeyboardEvent,\r\n    LegacyRef,\r\n    ReactElement,\r\n    ReactNode,\r\n    Ref,\r\n    RefObject\r\n} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {\r\n    Defaults,\r\n    DPointerTargetable,\r\n    DV,\r\n    GObject,\r\n    Keystrokes,\r\n    Log,\r\n    LPointerTargetable,\r\n    Overlap,\r\n    Pointer, store,\r\n    U, LoggerCategoryState, RuntimeAccessible, Size, Point\r\n} from '../../joiner';\r\nimport './tooltip.scss';\r\nimport {IPoint, PositionStr, PositionStrTypes} from \"../../common/Geom\";\r\n\r\nclass TooltipVisualizerState{\r\n    tooltip?: ReactNode;\r\n    baseElement?: Element;\r\n    position?: PositionStrTypes;\r\n    offsetX?: number;\r\n    offsetY?: number\r\n    constructor() {\r\n        this.position = 'b';\r\n    }\r\n}\r\nexport class TooltipVisualizer extends React.Component<{}, TooltipVisualizerState> {\r\n    public static component: TooltipVisualizer;\r\n    constructor(){\r\n        super({});\r\n        this.state = new TooltipVisualizerState();\r\n        TooltipVisualizer.component = this;\r\n    }\r\n    onMouseEnter(){\r\n        let position = PositionStr.invertPosStr(TooltipVisualizer.component.state.position ?? \"b\");\r\n        TooltipVisualizer.component.setState({position});\r\n    }\r\n\r\n    private tooltip: HTMLElement | null = null;\r\n    private root: HTMLElement | null = null;\r\n    private innerText?: string;\r\n    private tsize?: Size;\r\n    setRef(e: HTMLElement | null) { this.root = e; this.componentDidUpdate(); }\r\n    componentDidMount(){\r\n        return this.componentDidUpdate();\r\n    }\r\n    componentDidUpdate(){\r\n        let e = this.root;\r\n        if (!e) return;\r\n        let innerText = e.innerText;\r\n        if (innerText === this.innerText) return;\r\n        this.innerText = innerText;\r\n        this.tooltip = e.children[0] as any;\r\n        this.tsize = this.tooltip ? Size.of(this.tooltip) : undefined;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(){\r\n        let tooltip = this.state.tooltip;\r\n        if (!tooltip) return null;\r\n        const style: GObject = {};\r\n        let position = this.state.position;\r\n        let offsetX = this.state.offsetX || 0;\r\n        let offsetY = this.state.offsetY || 0;\r\n        /* debug stuff override\r\n        let positions = ['t', 'b', 'l', 'r', 'tl', 'tr', 'bl', 'br', ''] as any;\r\n        let windoww = window as any\r\n        position = positions[windoww.ii || 0];//Math.floor(Math.random()*positions.length)];\r\n        offsetX = windoww.xx || 0;\r\n        offsetY = windoww.yy || 0;*/\r\n        if (this.state.baseElement){\r\n            //style.position = 'absolute';\r\n            let size = Size.of(this.state.baseElement);\r\n            let tsize = this.tsize;\r\n            let x = size.x;\r\n            let y = size.y;\r\n            let pos = PositionStr.fromPosString(position);\r\n            x += (pos.x+1)/2 * size.w + pos.x * offsetX;\r\n            y += (pos.y+1)/2 * size.h + pos.y * offsetY;\r\n            // -1 -> 0\r\n            // 0 -> 0.5\r\n            // 1 -> 1\r\n\r\n            let xmin = 'calc(' + size.w + 'px / 2 - 50vw)';\r\n            let ymin = 'calc(' +  size.h + 'px / 2 - 50vh)';\r\n\r\n            let xmax = 'calc(50vw - ' + size.w + 'px / 2)';\r\n            let ymax = 'calc(50vh - ' +  size.h + 'px / 2)';\r\n\r\n            let l = 'max(' + xmin + ', min(' + xmax +', calc( '+ x +'px - 50vw)))';\r\n            let t = 'max(' + ymin + ', min(' + ymax + ', calc( '+ y +'px - 50vh)))';\r\n            // style.left = l; style.top = t;\r\n            style['--mid-x'] = 'calc(' + x + 'px - 50vw)';\r\n            style['--mid-y'] = 'calc(' + y + 'px - 50vh)';\r\n            style['--source-size-w'] = size.w + 'px';\r\n            style['--source-size-h'] = size.h + 'px';\r\n            if (tsize) {\r\n                style['--size-w'] = tsize.w + 'px';\r\n                style['--size-h'] = tsize.h + 'px';\r\n            }\r\n            console.log(\"inlinepos:\", {position, pos, x, y, size, offsetX, offsetY, l, t});\r\n            // style.right = 'calc( 100vw - '+size.w+'px)';\r\n            // currently center of tooltip is topleft of baseelem\r\n        }\r\n\r\n        // wrapper cannot contain only rawtext without subelements to be rendered\r\n        if (typeof tooltip !== 'object') tooltip = <div>{tooltip}</div>;\r\n        if (Array.isArray(tooltip)) tooltip = tooltip.map(e => typeof e !== 'object' ? <div>{e}</div> : e)\r\n        // NB: arrays are allowed but currently show elements in an horizontal line\r\n        console.log('tooltip', style, this.state);\r\n        // debugg stuff\r\n        let tooltip2 = <div style={{...style, padding:0, width:0, height:0, border:'2px solid red', borderRadius: '100%'}} />;\r\n        style.padding = 0;\r\n        // debug stuff end\r\n        return <>\r\n            <div className={\"tooltip-wrapper \" +\r\n                (PositionStr.toSeparateFullLabels(position ?? 't'))+\r\n                (this.state.baseElement ? \" inline\" : \" fixed\")\r\n            } onMouseEnter={this.onMouseEnter}\r\n                 style={style} ref={(e)=> this.setRef(e)}>\r\n                {tooltip}</div>\r\n            <div className={\"tooltip-wrapper \" +\r\n                (PositionStr.toSeparateFullLabels(position ?? 't'))+\r\n                (this.state.baseElement ? \" inline\" : \" fixed\")\r\n            } onMouseEnter={this.onMouseEnter}\r\n                 style={style}>\r\n                {tooltip2}</div>\r\n        </>;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible('Tooltip')\r\nexport class Tooltip extends React.Component<AllProps, State> {\r\n    static cname: string = \"Tooltip\";\r\n    tooltip!: ReactNode;\r\n\r\n    constructor(props: AllProps) {\r\n        super(props);\r\n        this.state = {};\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    }\r\n\r\n    public static show(tooltip: ReactNode, pos?: PositionStrTypes, baseElement?: Element, seconds: number = -1, offset?: IPoint): void{\r\n        tooltip = Tooltip.fixTooltip(tooltip);\r\n        const statepatch: Partial<TooltipVisualizerState> = {tooltip, baseElement, offsetX: offset?.x ?? 0, offsetY: offset?.y ?? 0};\r\n         statepatch.position = pos ?? 'b';\r\n        TooltipVisualizer.component.setState(statepatch);\r\n        if (seconds>0) setTimeout( () => {\r\n            if (TooltipVisualizer.component.state.tooltip !== tooltip) return;\r\n            if (TooltipVisualizer.component.state.baseElement !== baseElement) return;\r\n            TooltipVisualizer.component.setState({tooltip: undefined, baseElement: undefined, offsetX: 0, offsetY: 0});\r\n            }, seconds * 1000);\r\n    }\r\n\r\n    public static hide(): void {\r\n        TooltipVisualizer.component.setState({tooltip: undefined});\r\n    }\r\n\r\n    onMouseEnter(e?: MouseEvent): void{\r\n        let inline = this.props.inline;\r\n        let x = this.props.offsetX;\r\n        let y = this.props.offsetY;\r\n        let offset: Point | undefined = (x || x === 0) || (y || y === 0) ? new Point(this.props.offsetX || 0, this.props.offsetY || 0) : undefined;\r\n        Tooltip.show(this.tooltip, this.props.position, inline ? (this.childhtml || undefined) : undefined, -1, offset);\r\n    }\r\n    onMouseLeave(e?: MouseEvent): void{\r\n        Tooltip.hide();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.onMouseLeave();\r\n    }\r\n    private static fixTooltip(t: ReactNode): ReactNode{\r\n        return t;\r\n        // const onMouseEnter = Tooltip.mergeEvents(t, \"onMouseEnter\", ()=> TooltipVisualizer.component.setState({position: !TooltipVisualizer.component.position}));\r\n        //return React.cloneElement(t, {onMouseEnter});\r\n    }\r\n    private static mergeEvents(c: React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactPortal, key: string, func: (...a:any)=>any): ((...a:any)=>any) {\r\n        if (!c.props[key]) return func;\r\n\r\n        let evt = (...a:any[])=>{\r\n            let ret: any = undefined;\r\n            if (typeof c.props[key] !== \"function\") Log.ww(\"<Tooltip /> component requires his child to have \"+key+\" props either missing or a valid function\");\r\n            else { ret = c.props[key](...a); }\r\n            func(...a);\r\n            return ret;\r\n        }\r\n        return evt;\r\n\r\n\r\n    }\r\n    childhtml: Element | null = null;\r\n\r\n    render() {\r\n        if (!this.props.tooltip) return this.props.children;\r\n        if (Array.isArray(this.props.children)) return <span>\r\n            &lt;Tooltip /&gt; component requires exactly 1 element as children. Wrap the subelements in a container element.\r\n        </span>\r\n        if (!this.props.children || !isValidElement(this.props.children)) return <span>\r\n            &lt;Tooltip /&gt; component requires a html or react node as children.\r\n        </span>\r\n        for (let k of Object.keys(this.props)) switch (k){\r\n            default: Log.ww('<Tooltip /> component cannot accept props other than \"key\", \"position\", and \"tooltip\".'); break;\r\n            case 'children': case 'key': case 'tooltip': case 'position': break;\r\n            // case \"inline\": break;\r\n        }\r\n        this.tooltip = Tooltip.fixTooltip(this.props.tooltip);\r\n\r\n        let c = this.props.children;\r\n        const onMouseEnter = Tooltip.mergeEvents(c, 'onMouseEnter', this.onMouseEnter);\r\n        const onMouseLeave = Tooltip.mergeEvents(c, 'onMouseLeave', this.onMouseLeave);\r\n        let ref: Ref<Element> | undefined = undefined;\r\n        if (c.props.ref) {\r\n            const pref = c.props.ref;\r\n            switch(typeof pref){\r\n                case \"object\": this.childhtml = (pref as RefObject<Element>).current; break;\r\n                case \"function\": ref = (e: Element, ...a:any)=> { pref(e, a); this.childhtml = e;}; break;\r\n                case \"string\": Log.ee(\"Found React-ref of type string in Tooltip children which is unsupported. Use object or funcional refs.\"); break;\r\n            }\r\n        } else ref = ((ref: Element | null) => { this.childhtml = ref; } );\r\n\r\n        const injectProps: GObject = {onMouseEnter, onMouseLeave};\r\n        if (ref) injectProps.ref = ref;\r\n        let ret = React.cloneElement(c, injectProps);\r\n        return ret;\r\n    }\r\n\r\n}\r\ninterface State{\r\n}\r\ninterface OwnProps {\r\n    key?: React.Key | null;\r\n    catch?: ReactNode | ((error: Error, info?: React.ErrorInfo) => ReactNode);\r\n    children: ReactNode;\r\n    tooltip: ReactNode;\r\n    inline?: boolean;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    position?: PositionStrTypes;\r\n}\r\ninterface StateProps {\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<OwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\n// const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(mapStateToProps, mapDispatchToProps)(TooltipComponent);\r\n\r\n\r\n// export function Tooltip(props: OwnProps): ReactElement { return <TooltipConnected {...{...props}}>{props.children}</TooltipConnected>; }\r\n\r\n//TooltipComponent.cname = 'TooltipComponent';\r\n//TooltipConnected.cname = 'TooltipConnected';\r\nTooltip.cname = 'Tooltip';\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}