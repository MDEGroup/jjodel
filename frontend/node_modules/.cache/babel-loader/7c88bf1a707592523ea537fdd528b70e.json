{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\dock\\\\MyRcDock.tsx\",\n  _dec,\n  _class,\n  _class2,\n  _dec2,\n  _class3,\n  _class4,\n  _dec3,\n  _class5,\n  _class6;\nimport React, { PureComponent } from \"react\";\nimport { Log, Point, RuntimeAccessible, Size, Try, U, windoww } from \"../../joiner\";\nimport $ from \"jquery\";\nimport { DockLayout } from \"rc-dock\";\nimport { MyPortal } from \"./MyDock\";\nimport \"./DockManagerStyles.scss\";\n\n// needs to be class component because needs setState() to be called externally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TabHeaderState {\n  constructor() {\n    this.pinned = void 0;\n    this.pinned = '';\n  }\n}\nclass TabContentState extends TabHeaderState {}\nexport let TabHeader = (_dec = RuntimeAccessible('TabHeader'), _dec(_class = (_class2 = class TabHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.html = null;\n    TabHeader.instances[props.tid] = this;\n    this.state = new TabHeaderState();\n  }\n  unpin() {\n    let oldPinned = this.state.pinned;\n    if (oldPinned === \"\") return Log.ee(\"tab already unpinned\", this.props.tid);\n    TabContent.instances[this.props.tid].setState({\n      pinned: ''\n    });\n    this.setState({\n      pinned: ''\n    }, () => {\n      let strip = PinnableStrip[oldPinned];\n      strip.unpin(this.props.tid);\n    });\n  }\n  onMouseHoverExpand() {\n    this.setAsActiveTab();\n  }\n  onMouseLeaveExpand() {}\n  getTabStrip() {\n    Log.exDev(!this.state.pinned, \"Cannot get strip, tab is not pinned\");\n    return PinnableStrip[this.state.pinned];\n  }\n  setAsActiveTab() {\n    var _tabcontent$parentEle;\n    let strip = this.getTabStrip();\n    const tabdata = strip.dockLayout.find(this.props.tid + \"_pinned\");\n    if (!this.html) return; // not pinned\n    strip.dockLayout.updateTab(tabdata.id, tabdata, true);\n    // if (windoww) return;\n    let tabcontent = document.getElementById(this.props.tid + \"_pinned\");\n    if (!tabcontent) return Log.eDevv(\"cannot find pinned tab content\", {\n      tid: this.props.tid,\n      tabdata\n    });\n    // let e: HTMLElement = strip.html!.querySelector('.dock-content-holder') as HTMLElement;\n    let csize = Size.of(tabcontent);\n    let tabh = this.html;\n    let tabsize = Size.of(tabh);\n    //let tabcenter: Point = new Point(tabsize.x + tabsize.w/2, tabsize.y + tabsize.h/2);\n    console.log(\"setActiveTab\", {\n      strip,\n      tabdata,\n      tabcontent,\n      csize,\n      tabh,\n      tabsize\n    });\n    let offset = new Point(tabsize.x + tabsize.w / 2 - csize.w / 2, tabsize.y + tabsize.h / 2 - csize.h / 2);\n    let s;\n    let tabcontentholder = (_tabcontent$parentEle = tabcontent.parentElement) === null || _tabcontent$parentEle === void 0 ? void 0 : _tabcontent$parentEle.parentElement;\n    if (!(tabcontentholder === null || tabcontentholder === void 0 ? void 0 : tabcontentholder.classList.contains('dock-content-holder'))) return Log.exDevv('rc-dock changed structure, need code update or downgrading of rc-dock library.', {\n      tabcontent,\n      tabcontentholder\n    });\n    let $tabholder = $(tabcontentholder);\n    if (!$tabholder.data(\"uiResizable\")) {\n      let handles;\n      switch (strip.props.side) {\n        default:\n          handles = \"\";\n          break;\n        case \"t\":\n          handles = \"s, se, sw\";\n          break;\n        case \"b\":\n          handles = \"n, ne, nw\";\n          break;\n        case \"l\":\n          handles = \"e, se, ne\";\n          break;\n        case \"r\":\n          handles = \"w, sw, nw\";\n          break;\n      }\n      $tabholder.resizable({\n        handles\n      });\n      tabcontentholder.tabIndex = 0;\n    }\n    switch (strip.props.side) {\n      default:\n        return;\n      case \"t\":\n      case \"b\":\n        s = \"clamp(0px, \" + offset.x + \"px, 100vw)\";\n        //s = \"clamp(0px, calc(\" + tabcenter.x + \"px ), 100vw)\";\n        console.log(\"clamp: \", s);\n        tabcontentholder.style.left = s;\n        break;\n      case \"l\":\n      case \"r\":\n        s = \"clamp(0px, \" + offset.y + \"px, 100vw)\";\n        //s = \"clamp(0px, calc(\" + tabcenter.y + \"px ), 100vw)\";\n        console.log(\"clamp: \", s);\n        tabcontentholder.style.top = s;\n        break;\n    }\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: () => {\n        console.log(\"tab dragging start\");\n      },\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pin-button bi bi-pin-angle-fill\",\n        onClick: () => this.unpin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 98\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }, this);\n    console.log(\"tabheader portal pre pin\", {\n      pinned\n    });\n    if (!pinned) {\n      let selectTab = () => PinnableDock.instance.setAsActiveTab(props.tid);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-on-mouseenter not-pinned\",\n        onMouseDown: selectTab /*onMouseEnter={selectTab}*/,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 20\n      }, this);\n    }\n    const strip = PinnableStrip[pinned];\n    const html = tabdict_title[props.tid + '_pinned'];\n    console.log(\"tabheader portal\", {\n      html,\n      content,\n      tabdict: tabdict_title,\n      td: {\n        ...tabdict_title\n      }\n    });\n    if (!html) {\n      // unpinned tab\n      Log.exDevv(\"cannot find html\", {\n        html,\n        pinned,\n        'this': this\n      });\n      let selectTab = () => PinnableDock.instance.setAsActiveTab(props.tid);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-on-mouseenter\",\n        onMouseDown: selectTab /*onMouseEnter={selectTab}*/,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    }\n    function preventFocusOnOriginDock(e) {\n      e.stopPropagation(); // otherwise the pinned tab will focus the hidden-tab on original dock\n    }\n\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-on-mouseenter\",\n      ref: e => this.html = e,\n      onMouseDown: preventFocusOnOriginDock,\n      onClick: preventFocusOnOriginDock,\n      onMouseEnter: () => this.onMouseHoverExpand(),\n      onMouseLeave: () => this.onMouseLeaveExpand(),\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyPortal, {\n        container: html,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moved-content\",\n        children: \"moved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true);\n  }\n}, _class2.cname = 'TabHeader', _class2.instances = {}, _class2)) || _class);\nexport let TabContent = (_dec2 = RuntimeAccessible('TabHeader'), _dec2(_class3 = (_class4 = class TabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    TabContent.instances[props.tid] = this;\n    this.state = new TabContentState();\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    const content = /*#__PURE__*/_jsxDEV(Try, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }, this);\n    console.log(\"tabcontent portal pre pin\", {\n      pinned\n    });\n    if (!pinned) return content;\n    const strip = PinnableStrip[pinned];\n    const html = tabdict_content[props.tid + '_pinned'];\n    console.log(\"tabcontent portal\", {\n      html,\n      content,\n      tabdict: tabdict_content,\n      td: {\n        ...tabdict_content\n      }\n    });\n    if (!html) return content;\n    return /*#__PURE__*/_jsxDEV(MyPortal, {\n      container: html,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  }\n}, _class4.cname = 'TabContent', _class4.instances = {}, _class4)) || _class3);\nclass PinnableStripState {\n  // pinnedTabs: TabData[];// or what?\n  //pinnedTabsid: Dictionary<string, true>;\n\n  constructor() {\n    // this.pinnedTabsid = {};\n  }\n}\nexport let PinnableStrip = (_dec3 = RuntimeAccessible(\"PinnableStrip\"), _dec3(_class5 = (_class6 = class PinnableStrip extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.html = null;\n    this.headerHtml = null;\n    this.contentHtml = null;\n    this.panel = void 0;\n    this.dockLayout = null;\n    this.layout = void 0;\n    this.groups = void 0;\n    this.tabs = {};\n    this.afterUpdateCallback_funcs = [];\n    PinnableStrip[props.side] = this;\n    this.state = new PinnableStripState();\n    this.groups = {\n      'pinned': {\n        floatable: false,\n        maximizable: false,\n        tabLocked: true\n      }\n    };\n    const tabsData = [];\n    /*\r\n    let tabdict: Dictionary<string, TabData> = {};\r\n    for (let tabid in this.state.pinnedTabsid) {\r\n        const id: string = tabid+'_pinned';\r\n        const tabdata: TabData = {\r\n            id,\r\n            group: 'pinned',\r\n            closable: false,\r\n            title: <div ref={(curr)=>this.tabdict_title[id] = curr}></div>,\r\n            content: <div ref={(curr)=>this.tabdict_content[id] = curr}></div>,\r\n            //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n        };\r\n        tabdict[tabdata.id as string] = tabdata;\r\n        tabsData.push(tabdata);\r\n    }*/\n    this.layout = {\n      dockbox: {\n        mode: 'horizontal',\n        children: []\n      }\n    };\n    this.panel = {\n      id: 'side_panel' + this.props.side,\n      tabs: tabsData\n    };\n    this.layout.dockbox.children.push(this.panel);\n  }\n  unpin(tid) {\n    const stripdock = this.dockLayout;\n    let tabData = stripdock.find(tid + \"_pinned\");\n    delete this.tabs[tid + \"_pinned\"];\n    stripdock.dockMove(tabData, null, 'remove');\n    if (!Object.keys(this.tabs).length) this.forceUpdate();\n    PinnableDock.instance.restoreTab(tid);\n  }\n  setAfterUpdateCallback(c) {\n    this.afterUpdateCallback_funcs.push(c);\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.onupdate();\n  }\n  componentDidMount() {\n    this.onupdate();\n  }\n  onupdate() {\n    console.log('strip updated', [...this.afterUpdateCallback_funcs]);\n    for (let c of this.afterUpdateCallback_funcs) c();\n    this.afterUpdateCallback_funcs = [];\n  }\n  addTab(t) {\n    const tid = t.id;\n    if (this.tabs[tid]) Log.eDevv(\"docking tab already exist\", this, t);\n    this.tabs[tid] = t;\n    // if (Object.keys(this.tabs).length === 1) this.forceUpdate(); // updates .empty class\n    console.log(\"addTab\", {\n      t,\n      pp1: this.dockLayout.getLayout().dockbox.children[0],\n      pp0: this.panel\n    });\n    window.pinnableStrip = this;\n    //this.dockLayout!.dockMove(t, 'side_panel' + this.props.side, 'middle');\n    window.addTab = t => this.addTab(t);\n    this.dockLayout.dockMove(t, this.dockLayout.getLayout().dockbox.children[0], 'middle');\n    this.forceUpdate();\n    //this.dockLayout!.dockMove(t, this.panel, 'middle');\n  }\n\n  removeTab(tid) {\n    if (!this.tabs[tid]) Log.eDevv(\"docking tab already removed\", this, tid);\n    Log.eDevv(\"docking removeTab() todo\", this, tid);\n    delete this.tabs[tid];\n    if (Object.keys(this.tabs).length === 0) this.forceUpdate(); // updates .empty class\n  }\n\n  render() {\n    const layout = this.layout;\n    const groups = this.groups;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (Object.keys(this.tabs).length ? '' : 'empty') + \" pinnable-strip pinnable-strip-\" + this.props.side,\n      ref: curr => this.html = curr,\n      children: /*#__PURE__*/_jsxDEV(DockLayout, {\n        ref: e => this.dockLayout = e,\n        defaultLayout: layout,\n        groups: groups,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, \"thestripdock\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 16\n    }, this);\n  }\n}, _class6.cname = 'PinnableStrip', _class6.t = void 0, _class6.b = void 0, _class6.l = void 0, _class6.r = void 0, _class6)) || _class5);\n\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\n\nlet currentDropRect;\nlet currentDropArea;\nlet dockLayout;\nlet dropIndicator = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;');\nfunction getStrip(side) {\n  let s = side[0];\n  return PinnableStrip[s];\n}\nfunction getStripHtml(side) {\n  return getStrip(side).html;\n}\nwindoww.highlightAnchorArea = function (side) {\n  //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\n  //if (!highlightdiv) return;\n  //highlightdiv.style.background = '#ff000077';\n  let strip = getStripHtml(side);\n  console.log(\"highlightpin\", {\n    strip,\n    side,\n    PinnableStrip\n  });\n  strip.classList.add('dock-drop-indicator');\n};\nwindoww.hideAnchorArea = function (side) {\n  let strip = getStripHtml(side);\n  strip.classList.remove('dock-drop-indicator');\n};\nconst tabdict_title = {};\nconst tabdict_content = {};\nwindoww.confirmSetAnchor = function (side) {\n  windoww.hideAnchorArea(side);\n  const tabdata = PinnableDock.getTabFromDropRect(currentDropRect);\n  let strip = getStrip(side);\n  let content = TabContent.instances[tabdata.id];\n  let title = TabHeader.instances[tabdata.id];\n  const id = tabdata.id + '_pinned'; // + '_' + side;\n  const newtabdata = {\n    //...tabdata, parent: undefined,\n    id,\n    group: 'pinned',\n    closable: false,\n    title: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: curr => tabdict_title[id] = curr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 16\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: curr => tabdict_content[id] = curr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 18\n    }, this)\n    //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\n  };\n\n  strip.setAfterUpdateCallback(() => {\n    content.setState({\n      pinned: side\n    });\n    title.setState({\n      pinned: side\n    });\n    console.log(\"confirm pin anchor\", {\n      content,\n      title,\n      strip,\n      side,\n      tabdata,\n      newtabdata,\n      currentDropRect\n    });\n  });\n  strip.addTab(newtabdata);\n  PinnableDock.instance.hideTab(tabdata.id, side);\n\n  /*strip.setState({pinnedTabsid:{...strip.state.pinnedTabsid, [tabdata.id as string]:true}},\r\n      ()=>{\r\n      content.setState({pinned: side}); title.setState({pinned: side});\r\n      console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, currentDropRect});\r\n  });*/\n  console.log(\"confirm pin anchor 0\", {\n    tid: tabdata.id,\n    TabHeader,\n    TabContent\n  });\n\n  // how to? i create a new dockiing here for each strip?\n  // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\n  //strip.classList.remove('dock-drop-indicator');\n};\n/*\r\nlet htmltablist = <div className=\"dock-bar drag-initiator\" role=\"tablist\" tabIndex=\"-1\">\r\n    <div role=\"tablist\" className=\"dock-nav\">\r\n        <div className=\"dock-nav-wrap\">\r\n            <div className=\"dock-nav-list\" style=\"transform: translate(0px, 0px);\">\r\n                <div className=\"dock-tab dock-tab-active\">\r\n                    <div role=\"tab\" aria-selected=\"true\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid+'_pinned'} aria-controls={tabid+'_pinned'}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-tab\">\r\n                    <div role=\"tab\" aria-selected=\"false\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid} aria-controls={tabid}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-ink-bar dock-ink-bar-animated\" style=\"left: 0px; width: 30px;\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dock-nav-operations dock-nav-operations-hidden\">\r\n            <button type=\"button\" className=\"dock-nav-more\" tabIndex=\"-1\" aria-hidden=\"true\" aria-haspopup=\"listbox\"\r\n                    aria-controls=\"rc-tabs-1-more-popup\" id=\"rc-tabs-1-more\" aria-expanded=\"false\"\r\n                    style=\"visibility: hidden; order: 1;\">...\r\n            </button>\r\n        </div>\r\n        <div className=\"dock-extra-content\">\r\n            <div className=\"dock-panel-max-btn\"></div>\r\n        </div>\r\n    </div>\r\n</div>;\r\n    */\n// <LayoutProps, LayoutState>\nfunction makeAnchorControl(side) {\n  let s = side[0];\n  const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"\">\n<div class=\"dock-drop-square-box\">\n<i class=\"bi bi-pin-angle-fill\"></i>\n</div>\n</div>`;\n  return U.toHtml(str);\n}\nconst anchorControls = [makeAnchorControl('top'), makeAnchorControl('bottom'), makeAnchorControl('left'), makeAnchorControl('right')];\n\n// todo: how to drop pinned tabs in the main layout https://github.com/ticlo/rc-dock/issues/97there is also an official example with a different strat\nexport class PinnableDock extends DockLayout {\n  constructor(props) {\n    super(props);\n    console.trace(\"pinnableDock instance\", this);\n    //Log.exDevv(PinnableDock.instance, \"current PinnableDock is a singleton, cannot make 2 instances\", {thiss:this, oldnstance: PinnableDock.instance});\n    PinnableDock.instance = this;\n    let debug = false;\n    if (!debug) return;\n    let t = this;\n    // for debug only, discovery of inner events\n    for (let k in t) {\n      let originalfunc = t[k];\n      if (typeof t[k] === \"function\") t[k] = function () {\n        for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n          a[_key] = arguments[_key];\n        }\n        console.warn('PinnableDock called ' + k, {\n          arguments\n        });\n        return originalfunc(...a);\n      };\n    }\n  }\n  hideTab(tid, pinnedSide) {\n    let tabdata = this.find(tid);\n    this.updateTab(tid, {\n      ...tabdata,\n      pinned: pinnedSide\n    }, false);\n    let siblings = this.getSiblings(tid);\n    let i = siblings.findIndex(t => t.id === tid);\n    let newActiveTab = this.getAdiacentTab(tid);\n    console.log(\"hideTab\", {\n      siblings,\n      i,\n      newActiveTab,\n      tabdata\n    });\n    if (newActiveTab) this.updateTab(newActiveTab.id, newActiveTab, true);else this.hidePanel(this.getPanelFromTab(tabdata));\n  }\n  getPanelFromTab(t) {\n    return t.parent;\n  }\n  hidePanel(p) {\n    // document.findElementById(p.id)\n  }\n  restoreTab(tid) {\n    let tabdata = this.find(tid);\n    this.updateTab(tid, {\n      ...tabdata,\n      pinned: undefined\n    }, true);\n  }\n  setAsActiveTab(tid, tabdata) {\n    // todo: on mousehover on unpinned tabs\n    tabdata = tabdata || this.find(tid);\n    this.updateTab(tid, tabdata, true);\n  }\n  setState(state, callback) {\n    // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\n    super.setState(state, callback);\n  }\n  getSiblings(tid) {\n    let tabdata = this.find(tid);\n    let panel = tabdata.parent;\n    return panel.tabs;\n  }\n  getAdiacentTab(tid) {\n    let siblings = this.getSiblings(tid);\n    let i0 = siblings.findIndex(t => t.id === tid);\n    let i = i0;\n    while (++i < siblings.length) if (!siblings[i].pinned) return siblings[i];\n    i = i0;\n    while (--i >= 0) if (!siblings[i].pinned) return siblings[i];\n    return undefined;\n  }\n  getNextTab(tid) {\n    let siblings = this.getSiblings(tid);\n    let i = siblings.findIndex(t => t.id === tid);\n    while (++i < siblings.length) if (!siblings[i].pinned) return siblings[i];\n    return undefined;\n  }\n  getPrevTab(tid) {\n    let siblings = this.getSiblings(tid);\n    let i = siblings.findIndex(t => t.id === tid);\n    while (--i >= 0) if (!siblings[i].pinned) return siblings[i];\n    return undefined;\n  }\n  static getTabFromDropRect(dropRect) {\n    if (!dropRect.source) return undefined;\n    const panel = dropRect.source.props.panelData;\n    console.log(\"getTabFromDropRect\", {\n      dropRect,\n      panel,\n      active: panel.activeId\n    });\n    const tabdata = panel.tabs.filter(t => t.id === panel.activeId)[0];\n    return tabdata;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    super.componentDidUpdate(prevProps, prevState, snapshot);\n    if (this.state.dropRect) {\n      let droparea = this.state.dropRect.element;\n      if (!droparea) return;\n      /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\n      let droplayer = droparea.querySelector('.dock-drop-layer');\n      currentDropArea = droparea;\n      dockLayout = this._ref;\n      currentDropRect = this.state.dropRect;\n      windoww.htmldockLayout = this._ref;\n      if (!droplayer) return;\n      droplayer.append(...anchorControls);\n      let tab = PinnableDock.getTabFromDropRect(droparea);\n      // todo: tabfocus but not the active one, the clicked one\n      // droparea.style.backgroundColor = \"red\";\n    }\n    // document.querySelectorAll('.dock-drop-layer')\n  }\n  //\n  // onDragStateChange = (draggingScope: any) => void{\n  //     //super.onDragStateChange(draggingScope);\n  // }\n  // onSilentChange(currentTabId?: string, direction?: DropDirection) {\n  //     super.onSilentChange(currentTabId, direction);\n  // }\n  // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\n  //     super.dockMove(source, target, direction);\n  // }\n  //\n  // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\n  //     super.setDropRect(element, direction, source, event, panelSize);\n  // }\n  //\n  // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\n  //     super.changeLayout(layoutData, currentTabId, direction, silent);\n  // }\n  // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\n  //     return super.updateTab(id, newTab, makeActive);\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pinnable-dock-root gray-style\",\n      children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinnable-dock-middle-strip\",\n        children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"l\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"not-strip\",\n          children: super.render()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 16\n    }, this);\n  }\n}\nPinnableDock.instance = void 0;","map":{"version":3,"names":["React","PureComponent","Log","Point","RuntimeAccessible","Size","Try","U","windoww","$","DockLayout","MyPortal","jsxDEV","_jsxDEV","Fragment","_Fragment","TabHeaderState","constructor","pinned","TabContentState","TabHeader","_dec","_class","_class2","Component","props","html","instances","tid","state","unpin","oldPinned","ee","TabContent","setState","strip","PinnableStrip","onMouseHoverExpand","setAsActiveTab","onMouseLeaveExpand","getTabStrip","exDev","_tabcontent$parentEle","tabdata","dockLayout","find","updateTab","id","tabcontent","document","getElementById","eDevv","csize","of","tabh","tabsize","console","log","offset","x","w","y","h","s","tabcontentholder","parentElement","classList","contains","exDevv","$tabholder","data","handles","side","resizable","tabIndex","style","left","top","render","content","onMouseDown","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","selectTab","PinnableDock","instance","tabdict_title","tabdict","td","preventFocusOnOriginDock","e","stopPropagation","ref","onMouseEnter","onMouseLeave","container","cname","_dec2","_class3","_class4","tabdict_content","PinnableStripState","_dec3","_class5","_class6","headerHtml","contentHtml","panel","layout","groups","tabs","afterUpdateCallback_funcs","floatable","maximizable","tabLocked","tabsData","dockbox","mode","push","stripdock","tabData","dockMove","Object","keys","length","forceUpdate","restoreTab","setAfterUpdateCallback","c","componentDidUpdate","prevProps","prevState","snapshot","onupdate","componentDidMount","addTab","t","pp1","getLayout","pp0","window","pinnableStrip","removeTab","curr","defaultLayout","width","height","b","l","r","currentDropRect","currentDropArea","dropIndicator","toHtml","getStrip","getStripHtml","highlightAnchorArea","add","hideAnchorArea","remove","confirmSetAnchor","getTabFromDropRect","title","newtabdata","group","closable","hideTab","makeAnchorControl","str","anchorControls","trace","debug","k","originalfunc","_len","arguments","a","Array","_key","warn","pinnedSide","siblings","getSiblings","i","findIndex","newActiveTab","getAdiacentTab","hidePanel","getPanelFromTab","parent","p","undefined","callback","i0","getNextTab","getPrevTab","dropRect","source","panelData","active","activeId","filter","droparea","element","droplayer","querySelector","_ref","htmldockLayout","append","tab"],"sources":["C:/d/Programming/web/jodel-mde/src/components/dock/MyRcDock.tsx"],"sourcesContent":["import React, {Component, PureComponent, ReactElement, ReactNode, useState} from \"react\";\r\nimport {\r\n    Dictionary,\r\n    DocString,\r\n    GObject,\r\n    Log,\r\n    LoggerComponent,\r\n    Point,\r\n    RuntimeAccessible,\r\n    Size,\r\n    Try,\r\n    U,\r\n    windoww\r\n} from \"../../joiner\";\r\nimport {DockingLayout} from \"smart-webcomponents-react/dockinglayout\";\r\nimport $ from \"jquery\";\r\nimport {BoxData, DockLayout, LayoutProps, PanelData, TabData, TabGroup} from \"rc-dock\";\r\nimport {MyPortal} from \"./MyDock\";\r\nimport \"./DockManagerStyles.scss\";\r\nimport {LayoutData} from \"rc-dock/src/DockData\";\r\nimport TestTab from \"../abstract/tabs/TestTab\";\r\nimport StructureEditor from \"../rightbar/structureEditor/StructureEditor\";\r\nimport {ModelMetaData} from \"../rightbar/structureEditor/ModelMetaData\";\r\nimport TreeEditor from \"../rightbar/treeEditor/treeEditor\";\r\nimport NodeEditor from \"../rightbar/styleEditor/StyleEditor\";\r\nimport ViewpointEditor from \"../rightbar/viewpointsEditor/ViewpointsEditor\";\r\nimport CollaboratorsEditor from \"../rightbar/collaboratorsEditor/CollaboratorsEditor\";\r\nimport MqttEditor from \"../rightbar/mqtt/MqttEditor\";\r\nimport Console from \"../rightbar/console/Console\";\r\n\r\n\r\n// needs to be class component because needs setState() to be called externally\r\ninterface TabHeaderProps{\r\n    tid: string;\r\n    children: ReactNode;\r\n}\r\nclass TabHeaderState{\r\n    pinned: AnchorTypes | \"\";\r\n    constructor() {\r\n        this.pinned = '';\r\n    }\r\n}\r\ninterface TabContentProps extends TabHeaderProps{}\r\nclass TabContentState extends TabHeaderState{}\r\n\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabHeader extends React.Component<TabHeaderProps, TabHeaderState>{\r\n    static cname: string = 'TabHeader';\r\n    static instances: Dictionary<string, TabHeader> = {};\r\n    constructor(props:TabHeaderProps) {\r\n        super(props);\r\n        TabHeader.instances[props.tid] = this;\r\n        this.state = new TabHeaderState();\r\n    }\r\n\r\n    unpin(){\r\n        let oldPinned = this.state.pinned;\r\n        if (oldPinned === \"\") return Log.ee(\"tab already unpinned\", this.props.tid);\r\n        TabContent.instances[this.props.tid].setState({pinned: ''});\r\n        this.setState({pinned: ''}, ()=>{\r\n            let strip: PinnableStrip = PinnableStrip[oldPinned as AnchorTypes];\r\n            strip.unpin(this.props.tid);\r\n        });\r\n    }\r\n    onMouseHoverExpand(){\r\n        this.setAsActiveTab();\r\n    }\r\n    onMouseLeaveExpand(){\r\n\r\n    }\r\n    getTabStrip(): PinnableStrip{\r\n        Log.exDev(!this.state.pinned, \"Cannot get strip, tab is not pinned\");\r\n        return PinnableStrip[this.state.pinned as AnchorTypes];\r\n    }\r\n    setAsActiveTab(){\r\n        let strip = this.getTabStrip();\r\n        const tabdata: TabData = strip.dockLayout!.find(this.props.tid+\"_pinned\") as TabData;\r\n        if (!this.html) return; // not pinned\r\n        strip.dockLayout!.updateTab(tabdata.id as string, tabdata, true);\r\n        // if (windoww) return;\r\n        let tabcontent: HTMLElement = document.getElementById(this.props.tid+\"_pinned\") as HTMLElement;\r\n        if (!tabcontent) return Log.eDevv(\"cannot find pinned tab content\", {tid: this.props.tid, tabdata});\r\n        // let e: HTMLElement = strip.html!.querySelector('.dock-content-holder') as HTMLElement;\r\n        let csize = Size.of(tabcontent);\r\n        let tabh: HTMLElement = this.html;\r\n        let tabsize = Size.of(tabh);\r\n        //let tabcenter: Point = new Point(tabsize.x + tabsize.w/2, tabsize.y + tabsize.h/2);\r\n        console.log(\"setActiveTab\", {strip, tabdata, tabcontent, csize, tabh, tabsize});\r\n        let offset: Point = new Point(tabsize.x + tabsize.w/2 - csize.w/2, tabsize.y + tabsize.h/2 - csize.h/2);\r\n        let s: string;\r\n        let tabcontentholder: HTMLElement|null|undefined = tabcontent.parentElement?.parentElement;\r\n        if (!tabcontentholder?.classList.contains('dock-content-holder'))\r\n            return Log.exDevv('rc-dock changed structure, need code update or downgrading of rc-dock library.', {tabcontent, tabcontentholder});\r\n        let $tabholder = $(tabcontentholder);\r\n        if (!$tabholder.data(\"uiResizable\")) {\r\n            let handles: string;\r\n            switch(strip.props.side){\r\n                default: handles = \"\"; break;\r\n                case \"t\": handles = \"s, se, sw\"; break;\r\n                case \"b\": handles = \"n, ne, nw\"; break;\r\n                case \"l\": handles = \"e, se, ne\"; break;\r\n                case \"r\": handles = \"w, sw, nw\"; break;\r\n            }\r\n            $tabholder.resizable({handles});\r\n            tabcontentholder.tabIndex = 0;\r\n        }\r\n        switch(strip.props.side){\r\n            default: return;\r\n            case \"t\": case \"b\":\r\n                s = \"clamp(0px, \" + offset.x + \"px, 100vw)\";\r\n                //s = \"clamp(0px, calc(\" + tabcenter.x + \"px ), 100vw)\";\r\n                console.log(\"clamp: \", s);\r\n                tabcontentholder.style.left = s;\r\n                break;\r\n            case \"l\": case \"r\":\r\n                s = \"clamp(0px, \" + offset.y + \"px, 100vw)\";\r\n                //s = \"clamp(0px, calc(\" + tabcenter.y + \"px ), 100vw)\";\r\n                console.log(\"clamp: \", s);\r\n                tabcontentholder.style.top = s;\r\n                break;\r\n        }\r\n    }\r\n\r\n    private html: HTMLElement | null = null\r\n    render(): ReactNode {\r\n        const props: TabHeaderProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        let content = <div onMouseDown={()=>{console.log(\"tab dragging start\")}}>{props.children}<i className={\"pin-button bi bi-pin-angle-fill\"} onClick={()=>this.unpin()}/></div>;\r\n        console.log(\"tabheader portal pre pin\", {pinned});\r\n        if (!pinned) {\r\n            let selectTab = () => PinnableDock.instance.setAsActiveTab(props.tid);\r\n            return <div className={\"active-on-mouseenter not-pinned\"} onMouseDown={selectTab} /*onMouseEnter={selectTab}*/>{content}</div>;\r\n        }\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = tabdict_title[props.tid + '_pinned'];\r\n        console.log(\"tabheader portal\", {html, content, tabdict:tabdict_title, td:{...tabdict_title}});\r\n        if (!html) { // unpinned tab\r\n            Log.exDevv(\"cannot find html\", {html, pinned, 'this': this});\r\n            let selectTab = () => PinnableDock.instance.setAsActiveTab(props.tid);\r\n            return <div className={\"active-on-mouseenter\"} onMouseDown={selectTab} /*onMouseEnter={selectTab}*/>{content}</div>;\r\n        }\r\n        function preventFocusOnOriginDock(e: any): void{\r\n            e.stopPropagation(); // otherwise the pinned tab will focus the hidden-tab on original dock\r\n        }\r\n        content = <div className={\"active-on-mouseenter\"} ref={(e) => this.html = e} onMouseDown={preventFocusOnOriginDock} onClick={preventFocusOnOriginDock} onMouseEnter={()=>this.onMouseHoverExpand()} onMouseLeave={()=>this.onMouseLeaveExpand()}>{content}</div>\r\n        return <><MyPortal container={html}>{content}</MyPortal><div className={\"moved-content\"}>moved</div></>;\r\n    }\r\n}\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabContent extends React.Component<TabContentProps, TabContentState>{\r\n    static cname: string = 'TabContent';\r\n    static instances: Dictionary<string, TabContent> = {};\r\n    constructor(props:TabContentProps) {\r\n        super(props);\r\n        TabContent.instances[props.tid] = this;\r\n        this.state = new TabContentState();\r\n    }\r\n    render() {\r\n        const props: TabContentProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        const content = <Try>{props.children}</Try>;\r\n        console.log(\"tabcontent portal pre pin\", {pinned});\r\n        if (!pinned) return content;\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = tabdict_content[props.tid + '_pinned'];\r\n        console.log(\"tabcontent portal\", {html, content, tabdict:tabdict_content, td:{...tabdict_content}});\r\n        if (!html) return content;\r\n        return <MyPortal container={html}>{content}</MyPortal>;\r\n    }\r\n}\r\n\r\ntype AnchorTypes = \"t\" | \"l\" | \"r\" | \"b\";\r\ninterface PinnableStripProps{\r\n    side: AnchorTypes;\r\n}\r\nclass PinnableStripState{\r\n    // pinnedTabs: TabData[];// or what?\r\n    //pinnedTabsid: Dictionary<string, true>;\r\n\r\n    constructor() {\r\n       // this.pinnedTabsid = {};\r\n    }\r\n}\r\n@RuntimeAccessible(\"PinnableStrip\")\r\nexport class PinnableStrip extends PureComponent<PinnableStripProps, PinnableStripState>{\r\n    static cname = 'PinnableStrip';\r\n    public static t: PinnableStrip;\r\n    public static b: PinnableStrip;\r\n    public static l: PinnableStrip;\r\n    public static r: PinnableStrip;\r\n\r\n    html: Element | null = null;\r\n    headerHtml: Element | null = null;\r\n    contentHtml: Element | null = null;\r\n\r\n    constructor(props: PinnableStripProps) {\r\n        super(props);\r\n        PinnableStrip[props.side] = this;\r\n        this.state = new PinnableStripState();\r\n        this.groups = {\r\n            'pinned': {floatable: false, maximizable: false, tabLocked: true}\r\n        };\r\n        const tabsData: TabData[] = [];\r\n        /*\r\n        let tabdict: Dictionary<string, TabData> = {};\r\n        for (let tabid in this.state.pinnedTabsid) {\r\n            const id: string = tabid+'_pinned';\r\n            const tabdata: TabData = {\r\n                id,\r\n                group: 'pinned',\r\n                closable: false,\r\n                title: <div ref={(curr)=>this.tabdict_title[id] = curr}></div>,\r\n                content: <div ref={(curr)=>this.tabdict_content[id] = curr}></div>,\r\n                //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n            };\r\n            tabdict[tabdata.id as string] = tabdata;\r\n            tabsData.push(tabdata);\r\n        }*/\r\n        this.layout = {dockbox: {mode: 'horizontal', children: []}};\r\n        this.panel = {id: 'side_panel' + this.props.side, tabs: tabsData};\r\n        this.layout.dockbox.children.push(this.panel);\r\n    }\r\n\r\n    private panel: PanelData;\r\n    dockLayout: DockLayout | null = null;\r\n\r\n    private layout: LayoutData;\r\n    private groups: {[p: string]: TabGroup};\r\n    private tabs: Dictionary<string, TabData> = {};\r\n    private afterUpdateCallback_funcs: ((...a:any)=>any)[] = [];\r\n\r\n    unpin(tid: string){\r\n        const stripdock: DockLayout = this.dockLayout as DockLayout;\r\n        let tabData: TabData = stripdock.find(tid+\"_pinned\") as TabData;\r\n        delete this.tabs[tid+\"_pinned\"];\r\n        stripdock.dockMove(tabData, null, 'remove');\r\n        if (!Object.keys(this.tabs).length) this.forceUpdate();\r\n        PinnableDock.instance.restoreTab(tid);\r\n    }\r\n    setAfterUpdateCallback(c: (...a:any)=>any){\r\n        this.afterUpdateCallback_funcs.push(c);\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<PinnableStripProps>, prevState: Readonly<PinnableStripState>, snapshot?: any) {\r\n        this.onupdate();\r\n    }\r\n    componentDidMount() {\r\n        this.onupdate();\r\n    }\r\n    onupdate(){\r\n        console.log('strip updated', [...this.afterUpdateCallback_funcs]);\r\n        for (let c of this.afterUpdateCallback_funcs) c();\r\n        this.afterUpdateCallback_funcs = [];\r\n    }\r\n\r\n    addTab(t: TabData): void{\r\n        const tid: string = t.id as string;\r\n        if (this.tabs[tid]) Log.eDevv(\"docking tab already exist\", this, t);\r\n        this.tabs[tid] = t;\r\n        // if (Object.keys(this.tabs).length === 1) this.forceUpdate(); // updates .empty class\r\n        console.log(\"addTab\", {t, pp1:this.dockLayout!.getLayout().dockbox.children[0], pp0: this.panel});\r\n        (window as any ).pinnableStrip = this;\r\n        //this.dockLayout!.dockMove(t, 'side_panel' + this.props.side, 'middle');\r\n        (window as any).addTab = (t: any)=> this.addTab(t);\r\n\r\n\r\n        this.dockLayout!.dockMove(t, this.dockLayout!.getLayout().dockbox.children[0], 'middle');\r\n        this.forceUpdate();\r\n        //this.dockLayout!.dockMove(t, this.panel, 'middle');\r\n\r\n    }\r\n    removeTab(tid: string): void{\r\n        if (!this.tabs[tid]) Log.eDevv(\"docking tab already removed\", this, tid);\r\n        Log.eDevv(\"docking removeTab() todo\", this, tid);\r\n        delete this.tabs[tid];\r\n        if (Object.keys(this.tabs).length === 0) this.forceUpdate(); // updates .empty class\r\n    }\r\n\r\n    render(){\r\n        const layout = this.layout;\r\n        const groups = this.groups;\r\n        return <div className={(Object.keys(this.tabs).length ? '' : 'empty') +\" pinnable-strip pinnable-strip-\" + this.props.side} ref={(curr)=>this.html = curr}>\r\n            {/* loadTab={(d)=>tabdict[d.id as string]} */}\r\n            <DockLayout key=\"thestripdock\" ref={(e)=>this.dockLayout = e} defaultLayout={layout} groups={groups} style={{width: '100%', height: '100%'}} />\r\n            {/*<div className={\"tab-row\"} ref={(curr)=>this.headerHtml = curr}></div>\r\n            <div className={\"content-row\"} ref={(curr)=>this.contentHtml = curr}></div>*/}\r\n        </div>;\r\n    }\r\n}\r\n\r\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\r\ninterface LayoutState {\r\n    layout: LayoutData;\r\n    /** @ignore */\r\n    dropRect?: any;// {left: number, width: number, top: number, height: number, element: HTMLElement, source?: any, direction?: DropDirection};\r\n}\r\nlet currentDropRect!: LayoutState[\"dropRect\"];\r\nlet currentDropArea!: Element;\r\nlet dockLayout!: Element;\r\nlet dropIndicator: Element = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;')\r\n\r\nfunction getStrip(side: string): PinnableStrip {\r\n    let s = side[0];\r\n    return (PinnableStrip as any)[s];\r\n}\r\nfunction getStripHtml(side: string): Element {\r\n    return getStrip(side).html as Element;\r\n}\r\n\r\nwindoww.highlightAnchorArea = function(side: string){\r\n    //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\r\n    //if (!highlightdiv) return;\r\n    //highlightdiv.style.background = '#ff000077';\r\n    let strip = getStripHtml(side);\r\n    console.log(\"highlightpin\", {strip, side, PinnableStrip});\r\n    strip.classList.add('dock-drop-indicator');\r\n}\r\nwindoww.hideAnchorArea = function(side: string){\r\n    let strip = getStripHtml(side);\r\n    strip.classList.remove('dock-drop-indicator');\r\n}\r\n\r\n\r\nconst tabdict_title: Dictionary<DocString<\"tabdata.id\">, HTMLElement | null> = {};\r\nconst tabdict_content: Dictionary<DocString<\"tabdata.id\">, HTMLElement | null> = {};\r\nwindoww.confirmSetAnchor = function(side: AnchorTypes){\r\n    windoww.hideAnchorArea(side);\r\n    const tabdata: TabData = PinnableDock.getTabFromDropRect(currentDropRect);\r\n    let strip = getStrip(side);\r\n    let content: TabContent = TabContent.instances[tabdata.id as string];\r\n    let title: TabHeader = TabHeader.instances[tabdata.id as string];\r\n    const id: string = tabdata.id+'_pinned';// + '_' + side;\r\n    const newtabdata: TabData = {\r\n        //...tabdata, parent: undefined,\r\n        id,\r\n        group: 'pinned',\r\n        closable: false,\r\n        title: <div ref={(curr)=>tabdict_title[id] = curr}></div>,\r\n        content: <div ref={(curr)=>tabdict_content[id] = curr}></div>,\r\n        //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n    };\r\n    strip.setAfterUpdateCallback(()=>{\r\n        content.setState({pinned: side}); title.setState({pinned: side});\r\n        console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, newtabdata, currentDropRect});\r\n    });\r\n    strip.addTab( newtabdata );\r\n    PinnableDock.instance.hideTab(tabdata.id as string, side);\r\n\r\n    /*strip.setState({pinnedTabsid:{...strip.state.pinnedTabsid, [tabdata.id as string]:true}},\r\n        ()=>{\r\n        content.setState({pinned: side}); title.setState({pinned: side});\r\n        console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, currentDropRect});\r\n    });*/\r\n    console.log(\"confirm pin anchor 0\", {tid:tabdata.id, TabHeader, TabContent});\r\n\r\n\r\n    // how to? i create a new dockiing here for each strip?\r\n    // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\r\n    //strip.classList.remove('dock-drop-indicator');\r\n}\r\n/*\r\nlet htmltablist = <div className=\"dock-bar drag-initiator\" role=\"tablist\" tabIndex=\"-1\">\r\n    <div role=\"tablist\" className=\"dock-nav\">\r\n        <div className=\"dock-nav-wrap\">\r\n            <div className=\"dock-nav-list\" style=\"transform: translate(0px, 0px);\">\r\n                <div className=\"dock-tab dock-tab-active\">\r\n                    <div role=\"tab\" aria-selected=\"true\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid+'_pinned'} aria-controls={tabid+'_pinned'}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-tab\">\r\n                    <div role=\"tab\" aria-selected=\"false\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid} aria-controls={tabid}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-ink-bar dock-ink-bar-animated\" style=\"left: 0px; width: 30px;\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dock-nav-operations dock-nav-operations-hidden\">\r\n            <button type=\"button\" className=\"dock-nav-more\" tabIndex=\"-1\" aria-hidden=\"true\" aria-haspopup=\"listbox\"\r\n                    aria-controls=\"rc-tabs-1-more-popup\" id=\"rc-tabs-1-more\" aria-expanded=\"false\"\r\n                    style=\"visibility: hidden; order: 1;\">...\r\n            </button>\r\n        </div>\r\n        <div className=\"dock-extra-content\">\r\n            <div className=\"dock-panel-max-btn\"></div>\r\n        </div>\r\n    </div>\r\n</div>;\r\n    */\r\n// <LayoutProps, LayoutState>\r\nfunction makeAnchorControl(side: string){\r\n    let s = side[0];\r\n\r\n\r\n    const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"\">\r\n<div class=\"dock-drop-square-box\">\r\n<i class=\"bi bi-pin-angle-fill\"></i>\r\n</div>\r\n</div>`;\r\n    return U.toHtml(str);\r\n}\r\nconst anchorControls = [\r\n    makeAnchorControl('top'),\r\n    makeAnchorControl('bottom'),\r\n    makeAnchorControl('left'),\r\n    makeAnchorControl('right'),\r\n];\r\n\r\n// todo: how to drop pinned tabs in the main layout https://github.com/ticlo/rc-dock/issues/97there is also an official example with a different strat\r\nexport class PinnableDock extends DockLayout{\r\n    static instance: PinnableDock;\r\n    constructor(props: any) {\r\n        super(props);\r\n        console.trace(\"pinnableDock instance\", this);\r\n        //Log.exDevv(PinnableDock.instance, \"current PinnableDock is a singleton, cannot make 2 instances\", {thiss:this, oldnstance: PinnableDock.instance});\r\n        PinnableDock.instance = this;\r\n        let debug:boolean = false;\r\n        if (!debug) return;\r\n        let t: GObject = this;\r\n        // for debug only, discovery of inner events\r\n        for (let k in t) {\r\n            let originalfunc = t[k];\r\n            if (typeof t[k] === \"function\") t[k] = function (...a:any): any {\r\n                console.warn('PinnableDock called ' + k, {arguments});\r\n                return originalfunc(...a);\r\n            }\r\n        }\r\n    }\r\n\r\n    hideTab(tid: string, pinnedSide: AnchorTypes){\r\n        let tabdata: TabData = this.find(tid) as TabData;\r\n        this.updateTab(tid, {...tabdata, pinned:pinnedSide} as any, false);\r\n        let siblings = this.getSiblings(tid);\r\n        let i = siblings.findIndex((t)=> t.id === tid);\r\n        let newActiveTab = this.getAdiacentTab(tid);\r\n        console.log(\"hideTab\", {siblings, i, newActiveTab, tabdata});\r\n        if (newActiveTab) this.updateTab(newActiveTab.id as string, newActiveTab, true);\r\n        else this.hidePanel(this.getPanelFromTab(tabdata));\r\n    }\r\n    getPanelFromTab(t: TabData): PanelData{\r\n        return t.parent as any;\r\n    }\r\n    hidePanel(p:PanelData): void {\r\n        // document.findElementById(p.id)\r\n    }\r\n    restoreTab(tid: string){\r\n        let tabdata = this.find(tid);\r\n        this.updateTab(tid, {...tabdata, pinned:undefined} as any, true);\r\n    }\r\n    setAsActiveTab(tid: string, tabdata?: TabData): void{ // todo: on mousehover on unpinned tabs\r\n        tabdata = tabdata || this.find(tid) as TabData;\r\n        this.updateTab(tid, tabdata, true);\r\n    }\r\n    setState<K extends keyof LayoutState>(state: ((prevState: Readonly<LayoutState>, props: Readonly<LayoutProps>) => (Pick<LayoutState, K> | LayoutState | null)) | Pick<LayoutState, K> | LayoutState | null, callback?: () => void) {\r\n        // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\r\n        super.setState(state, callback);\r\n    }\r\n    getSiblings(tid: string): TabData[]{\r\n        let tabdata = this.find(tid);\r\n        let panel: PanelData = tabdata.parent as PanelData;\r\n        return panel.tabs;\r\n    }\r\n    getAdiacentTab(tid: string): TabData | undefined{\r\n        let siblings: GObject<TabData>[] = this.getSiblings(tid);\r\n        let i0 = siblings.findIndex((t)=> t.id === tid);\r\n        let i = i0;\r\n        while (++i < siblings.length) if(!siblings[i].pinned) return siblings[i];\r\n        i = i0;\r\n        while (--i >= 0) if(!siblings[i].pinned) return siblings[i];\r\n        return undefined;\r\n    }\r\n    getNextTab(tid: string): TabData | undefined{\r\n        let siblings: GObject<TabData>[] = this.getSiblings(tid);\r\n        let i = siblings.findIndex((t)=> t.id === tid);\r\n        while (++i < siblings.length) if(!siblings[i].pinned) return siblings[i];\r\n        return undefined;\r\n    }\r\n    getPrevTab(tid: string): TabData | undefined{\r\n        let siblings: GObject<TabData>[] = this.getSiblings(tid);\r\n        let i = siblings.findIndex((t)=> t.id === tid);\r\n        while (--i >= 0) if(!siblings[i].pinned) return siblings[i];\r\n        return undefined;\r\n    }\r\n    public static getTabFromDropRect(dropRect: LayoutState['dropRect']): TabData{\r\n        if (!dropRect.source) return undefined as any;\r\n        const panel: PanelData = dropRect.source.props.panelData;\r\n        console.log(\"getTabFromDropRect\", {dropRect, panel, active: panel.activeId});\r\n        const tabdata: TabData = panel.tabs.filter(t=> t.id === panel.activeId)[0];\r\n        return tabdata;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<LayoutProps>, prevState: Readonly<LayoutState>, snapshot?: any) {\r\n        super.componentDidUpdate(prevProps, prevState, snapshot);\r\n        if (this.state.dropRect) {\r\n            let droparea = this.state.dropRect.element;\r\n            if (!droparea) return;\r\n            /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\r\n            let droplayer = droparea.querySelector('.dock-drop-layer');\r\n            currentDropArea = droparea;\r\n            dockLayout = this._ref;\r\n            currentDropRect = this.state.dropRect;\r\n            windoww.htmldockLayout = this._ref;\r\n            if (!droplayer) return;\r\n            droplayer.append(...anchorControls);\r\n            let tab = PinnableDock.getTabFromDropRect(droparea);\r\n            // todo: tabfocus but not the active one, the clicked one\r\n            // droparea.style.backgroundColor = \"red\";\r\n        }\r\n        // document.querySelectorAll('.dock-drop-layer')\r\n    }\r\n    //\r\n    // onDragStateChange = (draggingScope: any) => void{\r\n    //     //super.onDragStateChange(draggingScope);\r\n    // }\r\n    // onSilentChange(currentTabId?: string, direction?: DropDirection) {\r\n    //     super.onSilentChange(currentTabId, direction);\r\n    // }\r\n    // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\r\n    //     super.dockMove(source, target, direction);\r\n    // }\r\n    //\r\n    // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\r\n    //     super.setDropRect(element, direction, source, event, panelSize);\r\n    // }\r\n    //\r\n    // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\r\n    //     super.changeLayout(layoutData, currentTabId, direction, silent);\r\n    // }\r\n    // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\r\n    //     return super.updateTab(id, newTab, makeActive);\r\n    // }\r\n\r\n    render(): React.ReactNode {\r\n        return <div className={\"pinnable-dock-root gray-style\"}>\r\n            <PinnableStrip side={\"t\"} />\r\n            <div className={\"pinnable-dock-middle-strip\"}>\r\n                <PinnableStrip side={\"l\"} />\r\n                <div className={\"not-strip\"}>{super.render()}</div>\r\n                <PinnableStrip side={\"r\"} />\r\n            </div>\r\n            <PinnableStrip side={\"b\"} />\r\n        </div>\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAcC,aAAa,QAA0C,OAAO;AACxF,SAIIC,GAAG,EAEHC,KAAK,EACLC,iBAAiB,EACjBC,IAAI,EACJC,GAAG,EACHC,CAAC,EACDC,OAAO,QACJ,cAAc;AAErB,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAAiBC,UAAU,QAAkD,SAAS;AACtF,SAAQC,QAAQ,QAAO,UAAU;AACjC,OAAO,0BAA0B;;AAajC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKA,MAAMC,cAAc;EAEhBC,WAAWA,CAAA,EAAG;IAAA,KADdC,MAAM;IAEF,IAAI,CAACA,MAAM,GAAG,EAAE;EACpB;AACJ;AAEA,MAAMC,eAAe,SAASH,cAAc;AAE5C,WACaI,SAAS,IAAAC,IAAA,GADrBjB,iBAAiB,CAAC,WAAW,CAAC,EAAAiB,IAAA,CAAAC,MAAA,IAAAC,OAAA,GAA/B,MACaH,SAAS,SAASpB,KAAK,CAACwB,SAAS,CAAgC;EAG1EP,WAAWA,CAACQ,KAAoB,EAAE;IAC9B,KAAK,CAACA,KAAK,CAAC;IAAC,KAyETC,IAAI,GAAuB,IAAI;IAxEnCN,SAAS,CAACO,SAAS,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI;IACrC,IAAI,CAACC,KAAK,GAAG,IAAIb,cAAc,CAAC,CAAC;EACrC;EAEAc,KAAKA,CAAA,EAAE;IACH,IAAIC,SAAS,GAAG,IAAI,CAACF,KAAK,CAACX,MAAM;IACjC,IAAIa,SAAS,KAAK,EAAE,EAAE,OAAO7B,GAAG,CAAC8B,EAAE,CAAC,sBAAsB,EAAE,IAAI,CAACP,KAAK,CAACG,GAAG,CAAC;IAC3EK,UAAU,CAACN,SAAS,CAAC,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC,CAACM,QAAQ,CAAC;MAAChB,MAAM,EAAE;IAAE,CAAC,CAAC;IAC3D,IAAI,CAACgB,QAAQ,CAAC;MAAChB,MAAM,EAAE;IAAE,CAAC,EAAE,MAAI;MAC5B,IAAIiB,KAAoB,GAAGC,aAAa,CAACL,SAAS,CAAgB;MAClEI,KAAK,CAACL,KAAK,CAAC,IAAI,CAACL,KAAK,CAACG,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN;EACAS,kBAAkBA,CAAA,EAAE;IAChB,IAAI,CAACC,cAAc,CAAC,CAAC;EACzB;EACAC,kBAAkBA,CAAA,EAAE,CAEpB;EACAC,WAAWA,CAAA,EAAiB;IACxBtC,GAAG,CAACuC,KAAK,CAAC,CAAC,IAAI,CAACZ,KAAK,CAACX,MAAM,EAAE,qCAAqC,CAAC;IACpE,OAAOkB,aAAa,CAAC,IAAI,CAACP,KAAK,CAACX,MAAM,CAAgB;EAC1D;EACAoB,cAAcA,CAAA,EAAE;IAAA,IAAAI,qBAAA;IACZ,IAAIP,KAAK,GAAG,IAAI,CAACK,WAAW,CAAC,CAAC;IAC9B,MAAMG,OAAgB,GAAGR,KAAK,CAACS,UAAU,CAAEC,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACG,GAAG,GAAC,SAAS,CAAY;IACpF,IAAI,CAAC,IAAI,CAACF,IAAI,EAAE,OAAO,CAAC;IACxBS,KAAK,CAACS,UAAU,CAAEE,SAAS,CAACH,OAAO,CAACI,EAAE,EAAYJ,OAAO,EAAE,IAAI,CAAC;IAChE;IACA,IAAIK,UAAuB,GAAGC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACzB,KAAK,CAACG,GAAG,GAAC,SAAS,CAAgB;IAC9F,IAAI,CAACoB,UAAU,EAAE,OAAO9C,GAAG,CAACiD,KAAK,CAAC,gCAAgC,EAAE;MAACvB,GAAG,EAAE,IAAI,CAACH,KAAK,CAACG,GAAG;MAAEe;IAAO,CAAC,CAAC;IACnG;IACA,IAAIS,KAAK,GAAG/C,IAAI,CAACgD,EAAE,CAACL,UAAU,CAAC;IAC/B,IAAIM,IAAiB,GAAG,IAAI,CAAC5B,IAAI;IACjC,IAAI6B,OAAO,GAAGlD,IAAI,CAACgD,EAAE,CAACC,IAAI,CAAC;IAC3B;IACAE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACtB,KAAK;MAAEQ,OAAO;MAAEK,UAAU;MAAEI,KAAK;MAAEE,IAAI;MAAEC;IAAO,CAAC,CAAC;IAC/E,IAAIG,MAAa,GAAG,IAAIvD,KAAK,CAACoD,OAAO,CAACI,CAAC,GAAGJ,OAAO,CAACK,CAAC,GAAC,CAAC,GAAGR,KAAK,CAACQ,CAAC,GAAC,CAAC,EAAEL,OAAO,CAACM,CAAC,GAAGN,OAAO,CAACO,CAAC,GAAC,CAAC,GAAGV,KAAK,CAACU,CAAC,GAAC,CAAC,CAAC;IACvG,IAAIC,CAAS;IACb,IAAIC,gBAA4C,IAAAtB,qBAAA,GAAGM,UAAU,CAACiB,aAAa,cAAAvB,qBAAA,uBAAxBA,qBAAA,CAA0BuB,aAAa;IAC1F,IAAI,EAACD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEE,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,GAC5D,OAAOjE,GAAG,CAACkE,MAAM,CAAC,gFAAgF,EAAE;MAACpB,UAAU;MAAEgB;IAAgB,CAAC,CAAC;IACvI,IAAIK,UAAU,GAAG5D,CAAC,CAACuD,gBAAgB,CAAC;IACpC,IAAI,CAACK,UAAU,CAACC,IAAI,CAAC,aAAa,CAAC,EAAE;MACjC,IAAIC,OAAe;MACnB,QAAOpC,KAAK,CAACV,KAAK,CAAC+C,IAAI;QACnB;UAASD,OAAO,GAAG,EAAE;UAAE;QACvB,KAAK,GAAG;UAAEA,OAAO,GAAG,WAAW;UAAE;QACjC,KAAK,GAAG;UAAEA,OAAO,GAAG,WAAW;UAAE;QACjC,KAAK,GAAG;UAAEA,OAAO,GAAG,WAAW;UAAE;QACjC,KAAK,GAAG;UAAEA,OAAO,GAAG,WAAW;UAAE;MACrC;MACAF,UAAU,CAACI,SAAS,CAAC;QAACF;MAAO,CAAC,CAAC;MAC/BP,gBAAgB,CAACU,QAAQ,GAAG,CAAC;IACjC;IACA,QAAOvC,KAAK,CAACV,KAAK,CAAC+C,IAAI;MACnB;QAAS;MACT,KAAK,GAAG;MAAE,KAAK,GAAG;QACdT,CAAC,GAAG,aAAa,GAAGL,MAAM,CAACC,CAAC,GAAG,YAAY;QAC3C;QACAH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEM,CAAC,CAAC;QACzBC,gBAAgB,CAACW,KAAK,CAACC,IAAI,GAAGb,CAAC;QAC/B;MACJ,KAAK,GAAG;MAAE,KAAK,GAAG;QACdA,CAAC,GAAG,aAAa,GAAGL,MAAM,CAACG,CAAC,GAAG,YAAY;QAC3C;QACAL,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEM,CAAC,CAAC;QACzBC,gBAAgB,CAACW,KAAK,CAACE,GAAG,GAAGd,CAAC;QAC9B;IACR;EACJ;EAGAe,MAAMA,CAAA,EAAc;IAChB,MAAMrD,KAAqB,GAAG,IAAI,CAACA,KAAK;IACxC,IAAIP,MAAM,GAAG,IAAI,CAACW,KAAK,CAACX,MAAM;IAC9B,IAAI6D,OAAO,gBAAGlE,OAAA;MAAKmE,WAAW,EAAEA,CAAA,KAAI;QAACxB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MAAA,CAAE;MAAAwB,QAAA,GAAExD,KAAK,CAACwD,QAAQ,eAACpE,OAAA;QAAGqE,SAAS,EAAE,iCAAkC;QAACC,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACrD,KAAK,CAAC;MAAE;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAC5K/B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE;MAACvC;IAAM,CAAC,CAAC;IACjD,IAAI,CAACA,MAAM,EAAE;MACT,IAAIsE,SAAS,GAAGA,CAAA,KAAMC,YAAY,CAACC,QAAQ,CAACpD,cAAc,CAACb,KAAK,CAACG,GAAG,CAAC;MACrE,oBAAOf,OAAA;QAAKqE,SAAS,EAAE,iCAAkC;QAACF,WAAW,EAAEQ,SAAU,CAAC;QAAAP,QAAA,EAA8BF;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAClI;IACA,MAAMpD,KAAoB,GAAIC,aAAa,CAAalB,MAAM,CAAC;IAC/D,MAAMQ,IAAkB,GAAGiE,aAAa,CAAClE,KAAK,CAACG,GAAG,GAAG,SAAS,CAAC;IAC/D4B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;MAAC/B,IAAI;MAAEqD,OAAO;MAAEa,OAAO,EAACD,aAAa;MAAEE,EAAE,EAAC;QAAC,GAAGF;MAAa;IAAC,CAAC,CAAC;IAC9F,IAAI,CAACjE,IAAI,EAAE;MAAE;MACTxB,GAAG,CAACkE,MAAM,CAAC,kBAAkB,EAAE;QAAC1C,IAAI;QAAER,MAAM;QAAE,MAAM,EAAE;MAAI,CAAC,CAAC;MAC5D,IAAIsE,SAAS,GAAGA,CAAA,KAAMC,YAAY,CAACC,QAAQ,CAACpD,cAAc,CAACb,KAAK,CAACG,GAAG,CAAC;MACrE,oBAAOf,OAAA;QAAKqE,SAAS,EAAE,sBAAuB;QAACF,WAAW,EAAEQ,SAAU,CAAC;QAAAP,QAAA,EAA8BF;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACvH;IACA,SAASO,wBAAwBA,CAACC,CAAM,EAAO;MAC3CA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACzB;;IACAjB,OAAO,gBAAGlE,OAAA;MAAKqE,SAAS,EAAE,sBAAuB;MAACe,GAAG,EAAGF,CAAC,IAAK,IAAI,CAACrE,IAAI,GAAGqE,CAAE;MAACf,WAAW,EAAEc,wBAAyB;MAACX,OAAO,EAAEW,wBAAyB;MAACI,YAAY,EAAEA,CAAA,KAAI,IAAI,CAAC7D,kBAAkB,CAAC,CAAE;MAAC8D,YAAY,EAAEA,CAAA,KAAI,IAAI,CAAC5D,kBAAkB,CAAC,CAAE;MAAA0C,QAAA,EAAEF;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAChQ,oBAAO1E,OAAA,CAAAE,SAAA;MAAAkE,QAAA,gBAAEpE,OAAA,CAACF,QAAQ;QAACyF,SAAS,EAAE1E,IAAK;QAAAuD,QAAA,EAAEF;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAAA1E,OAAA;QAAKqE,SAAS,EAAE,eAAgB;QAAAD,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAAE,CAAC;EAC3G;AACJ,CAAC,EAAAhE,OAAA,CApGU8E,KAAK,GAAW,WAAW,EAAA9E,OAAA,CAC3BI,SAAS,GAAkC,CAAC,CAAC,EAAAJ,OAAA,MAAAD,MAAA;AAoGxD,WACaW,UAAU,IAAAqE,KAAA,GADtBlG,iBAAiB,CAAC,WAAW,CAAC,EAAAkG,KAAA,CAAAC,OAAA,IAAAC,OAAA,GAA/B,MACavE,UAAU,SAASjC,KAAK,CAACwB,SAAS,CAAkC;EAG7EP,WAAWA,CAACQ,KAAqB,EAAE;IAC/B,KAAK,CAACA,KAAK,CAAC;IACZQ,UAAU,CAACN,SAAS,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI;IACtC,IAAI,CAACC,KAAK,GAAG,IAAIV,eAAe,CAAC,CAAC;EACtC;EACA2D,MAAMA,CAAA,EAAG;IACL,MAAMrD,KAAsB,GAAG,IAAI,CAACA,KAAK;IACzC,IAAIP,MAAM,GAAG,IAAI,CAACW,KAAK,CAACX,MAAM;IAC9B,MAAM6D,OAAO,gBAAGlE,OAAA,CAACP,GAAG;MAAA2E,QAAA,EAAExD,KAAK,CAACwD;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAC3C/B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MAACvC;IAAM,CAAC,CAAC;IAClD,IAAI,CAACA,MAAM,EAAE,OAAO6D,OAAO;IAC3B,MAAM5C,KAAoB,GAAIC,aAAa,CAAalB,MAAM,CAAC;IAC/D,MAAMQ,IAAkB,GAAG+E,eAAe,CAAChF,KAAK,CAACG,GAAG,GAAG,SAAS,CAAC;IACjE4B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE;MAAC/B,IAAI;MAAEqD,OAAO;MAAEa,OAAO,EAACa,eAAe;MAAEZ,EAAE,EAAC;QAAC,GAAGY;MAAe;IAAC,CAAC,CAAC;IACnG,IAAI,CAAC/E,IAAI,EAAE,OAAOqD,OAAO;IACzB,oBAAOlE,OAAA,CAACF,QAAQ;MAACyF,SAAS,EAAE1E,IAAK;MAAAuD,QAAA,EAAEF;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAC1D;AACJ,CAAC,EAAAiB,OAAA,CAnBUH,KAAK,GAAW,YAAY,EAAAG,OAAA,CAC5B7E,SAAS,GAAmC,CAAC,CAAC,EAAA6E,OAAA,MAAAD,OAAA;AAwBzD,MAAMG,kBAAkB;EACpB;EACA;;EAEAzF,WAAWA,CAAA,EAAG;IACX;EAAA;AAEP;AACA,WACamB,aAAa,IAAAuE,KAAA,GADzBvG,iBAAiB,CAAC,eAAe,CAAC,EAAAuG,KAAA,CAAAC,OAAA,IAAAC,OAAA,GAAnC,MACazE,aAAa,SAASnC,aAAa,CAAwC;EAWpFgB,WAAWA,CAACQ,KAAyB,EAAE;IACnC,KAAK,CAACA,KAAK,CAAC;IAAC,KALjBC,IAAI,GAAmB,IAAI;IAAA,KAC3BoF,UAAU,GAAmB,IAAI;IAAA,KACjCC,WAAW,GAAmB,IAAI;IAAA,KA8B1BC,KAAK;IAAA,KACbpE,UAAU,GAAsB,IAAI;IAAA,KAE5BqE,MAAM;IAAA,KACNC,MAAM;IAAA,KACNC,IAAI,GAAgC,CAAC,CAAC;IAAA,KACtCC,yBAAyB,GAAwB,EAAE;IAhCvDhF,aAAa,CAACX,KAAK,CAAC+C,IAAI,CAAC,GAAG,IAAI;IAChC,IAAI,CAAC3C,KAAK,GAAG,IAAI6E,kBAAkB,CAAC,CAAC;IACrC,IAAI,CAACQ,MAAM,GAAG;MACV,QAAQ,EAAE;QAACG,SAAS,EAAE,KAAK;QAAEC,WAAW,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAI;IACpE,CAAC;IACD,MAAMC,QAAmB,GAAG,EAAE;IAC9B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACP,MAAM,GAAG;MAACQ,OAAO,EAAE;QAACC,IAAI,EAAE,YAAY;QAAEzC,QAAQ,EAAE;MAAE;IAAC,CAAC;IAC3D,IAAI,CAAC+B,KAAK,GAAG;MAACjE,EAAE,EAAE,YAAY,GAAG,IAAI,CAACtB,KAAK,CAAC+C,IAAI;MAAE2C,IAAI,EAAEK;IAAQ,CAAC;IACjE,IAAI,CAACP,MAAM,CAACQ,OAAO,CAACxC,QAAQ,CAAC0C,IAAI,CAAC,IAAI,CAACX,KAAK,CAAC;EACjD;EAUAlF,KAAKA,CAACF,GAAW,EAAC;IACd,MAAMgG,SAAqB,GAAG,IAAI,CAAChF,UAAwB;IAC3D,IAAIiF,OAAgB,GAAGD,SAAS,CAAC/E,IAAI,CAACjB,GAAG,GAAC,SAAS,CAAY;IAC/D,OAAO,IAAI,CAACuF,IAAI,CAACvF,GAAG,GAAC,SAAS,CAAC;IAC/BgG,SAAS,CAACE,QAAQ,CAACD,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;IAC3C,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,IAAI,CAAC,CAACc,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACtDzC,YAAY,CAACC,QAAQ,CAACyC,UAAU,CAACvG,GAAG,CAAC;EACzC;EACAwG,sBAAsBA,CAACC,CAAkB,EAAC;IACtC,IAAI,CAACjB,yBAAyB,CAACO,IAAI,CAACU,CAAC,CAAC;EAC1C;EACAC,kBAAkBA,CAACC,SAAuC,EAAEC,SAAuC,EAAEC,QAAc,EAAE;IACjH,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,QAAQ,CAAC,CAAC;EACnB;EACAA,QAAQA,CAAA,EAAE;IACNlF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,CAAC,GAAG,IAAI,CAAC2D,yBAAyB,CAAC,CAAC;IACjE,KAAK,IAAIiB,CAAC,IAAI,IAAI,CAACjB,yBAAyB,EAAEiB,CAAC,CAAC,CAAC;IACjD,IAAI,CAACjB,yBAAyB,GAAG,EAAE;EACvC;EAEAwB,MAAMA,CAACC,CAAU,EAAO;IACpB,MAAMjH,GAAW,GAAGiH,CAAC,CAAC9F,EAAY;IAClC,IAAI,IAAI,CAACoE,IAAI,CAACvF,GAAG,CAAC,EAAE1B,GAAG,CAACiD,KAAK,CAAC,2BAA2B,EAAE,IAAI,EAAE0F,CAAC,CAAC;IACnE,IAAI,CAAC1B,IAAI,CAACvF,GAAG,CAAC,GAAGiH,CAAC;IAClB;IACArF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE;MAACoF,CAAC;MAAEC,GAAG,EAAC,IAAI,CAAClG,UAAU,CAAEmG,SAAS,CAAC,CAAC,CAACtB,OAAO,CAACxC,QAAQ,CAAC,CAAC,CAAC;MAAE+D,GAAG,EAAE,IAAI,CAAChC;IAAK,CAAC,CAAC;IAChGiC,MAAM,CAAUC,aAAa,GAAG,IAAI;IACrC;IACCD,MAAM,CAASL,MAAM,GAAIC,CAAM,IAAI,IAAI,CAACD,MAAM,CAACC,CAAC,CAAC;IAGlD,IAAI,CAACjG,UAAU,CAAEkF,QAAQ,CAACe,CAAC,EAAE,IAAI,CAACjG,UAAU,CAAEmG,SAAS,CAAC,CAAC,CAACtB,OAAO,CAACxC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;IACxF,IAAI,CAACiD,WAAW,CAAC,CAAC;IAClB;EAEJ;;EACAiB,SAASA,CAACvH,GAAW,EAAO;IACxB,IAAI,CAAC,IAAI,CAACuF,IAAI,CAACvF,GAAG,CAAC,EAAE1B,GAAG,CAACiD,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAEvB,GAAG,CAAC;IACxE1B,GAAG,CAACiD,KAAK,CAAC,0BAA0B,EAAE,IAAI,EAAEvB,GAAG,CAAC;IAChD,OAAO,IAAI,CAACuF,IAAI,CAACvF,GAAG,CAAC;IACrB,IAAImG,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,IAAI,CAAC,CAACc,MAAM,KAAK,CAAC,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EACjE;;EAEApD,MAAMA,CAAA,EAAE;IACJ,MAAMmC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,oBAAOrG,OAAA;MAAKqE,SAAS,EAAE,CAAC6C,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,IAAI,CAAC,CAACc,MAAM,GAAG,EAAE,GAAG,OAAO,IAAG,iCAAiC,GAAG,IAAI,CAACxG,KAAK,CAAC+C,IAAK;MAACyB,GAAG,EAAGmD,IAAI,IAAG,IAAI,CAAC1H,IAAI,GAAG0H,IAAK;MAAAnE,QAAA,eAEtJpE,OAAA,CAACH,UAAU;QAAoBuF,GAAG,EAAGF,CAAC,IAAG,IAAI,CAACnD,UAAU,GAAGmD,CAAE;QAACsD,aAAa,EAAEpC,MAAO;QAACC,MAAM,EAAEA,MAAO;QAACvC,KAAK,EAAE;UAAC2E,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAM;MAAE,GAA5H,cAAc;QAAAnE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG9I,CAAC;EACV;AACJ,CAAC,EAAAsB,OAAA,CAtGUR,KAAK,GAAG,eAAe,EAAAQ,OAAA,CAChBgC,CAAC,WAAAhC,OAAA,CACD2C,CAAC,WAAA3C,OAAA,CACD4C,CAAC,WAAA5C,OAAA,CACD6C,CAAC,WAAA7C,OAAA,MAAAD,OAAA;;AAoGnB;;AAMA,IAAI+C,eAAyC;AAC7C,IAAIC,eAAyB;AAC7B,IAAIhH,UAAoB;AACxB,IAAIiH,aAAsB,GAAGtJ,CAAC,CAACuJ,MAAM,CAAC,wGAAwG,CAAC;AAE/I,SAASC,QAAQA,CAACvF,IAAY,EAAiB;EAC3C,IAAIT,CAAC,GAAGS,IAAI,CAAC,CAAC,CAAC;EACf,OAAQpC,aAAa,CAAS2B,CAAC,CAAC;AACpC;AACA,SAASiG,YAAYA,CAACxF,IAAY,EAAW;EACzC,OAAOuF,QAAQ,CAACvF,IAAI,CAAC,CAAC9C,IAAI;AAC9B;AAEAlB,OAAO,CAACyJ,mBAAmB,GAAG,UAASzF,IAAY,EAAC;EAChD;EACA;EACA;EACA,IAAIrC,KAAK,GAAG6H,YAAY,CAACxF,IAAI,CAAC;EAC9BhB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;IAACtB,KAAK;IAAEqC,IAAI;IAAEpC;EAAa,CAAC,CAAC;EACzDD,KAAK,CAAC+B,SAAS,CAACgG,GAAG,CAAC,qBAAqB,CAAC;AAC9C,CAAC;AACD1J,OAAO,CAAC2J,cAAc,GAAG,UAAS3F,IAAY,EAAC;EAC3C,IAAIrC,KAAK,GAAG6H,YAAY,CAACxF,IAAI,CAAC;EAC9BrC,KAAK,CAAC+B,SAAS,CAACkG,MAAM,CAAC,qBAAqB,CAAC;AACjD,CAAC;AAGD,MAAMzE,aAAsE,GAAG,CAAC,CAAC;AACjF,MAAMc,eAAwE,GAAG,CAAC,CAAC;AACnFjG,OAAO,CAAC6J,gBAAgB,GAAG,UAAS7F,IAAiB,EAAC;EAClDhE,OAAO,CAAC2J,cAAc,CAAC3F,IAAI,CAAC;EAC5B,MAAM7B,OAAgB,GAAG8C,YAAY,CAAC6E,kBAAkB,CAACX,eAAe,CAAC;EACzE,IAAIxH,KAAK,GAAG4H,QAAQ,CAACvF,IAAI,CAAC;EAC1B,IAAIO,OAAmB,GAAG9C,UAAU,CAACN,SAAS,CAACgB,OAAO,CAACI,EAAE,CAAW;EACpE,IAAIwH,KAAgB,GAAGnJ,SAAS,CAACO,SAAS,CAACgB,OAAO,CAACI,EAAE,CAAW;EAChE,MAAMA,EAAU,GAAGJ,OAAO,CAACI,EAAE,GAAC,SAAS,CAAC;EACxC,MAAMyH,UAAmB,GAAG;IACxB;IACAzH,EAAE;IACF0H,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,KAAK;IACfH,KAAK,eAAE1J,OAAA;MAAKoF,GAAG,EAAGmD,IAAI,IAAGzD,aAAa,CAAC5C,EAAE,CAAC,GAAGqG;IAAK;MAAAhE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IACzDR,OAAO,eAAElE,OAAA;MAAKoF,GAAG,EAAGmD,IAAI,IAAG3C,eAAe,CAAC1D,EAAE,CAAC,GAAGqG;IAAK;MAAAhE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;IAC5D;EACJ,CAAC;;EACDpD,KAAK,CAACiG,sBAAsB,CAAC,MAAI;IAC7BrD,OAAO,CAAC7C,QAAQ,CAAC;MAAChB,MAAM,EAAEsD;IAAI,CAAC,CAAC;IAAE+F,KAAK,CAACrI,QAAQ,CAAC;MAAChB,MAAM,EAAEsD;IAAI,CAAC,CAAC;IAChEhB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;MAACsB,OAAO;MAAEwF,KAAK;MAAEpI,KAAK;MAAEqC,IAAI;MAAE7B,OAAO;MAAE6H,UAAU;MAAEb;IAAe,CAAC,CAAC;EAC1G,CAAC,CAAC;EACFxH,KAAK,CAACyG,MAAM,CAAE4B,UAAW,CAAC;EAC1B/E,YAAY,CAACC,QAAQ,CAACiF,OAAO,CAAChI,OAAO,CAACI,EAAE,EAAYyB,IAAI,CAAC;;EAEzD;AACJ;AACA;AACA;AACA;EACIhB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE;IAAC7B,GAAG,EAACe,OAAO,CAACI,EAAE;IAAE3B,SAAS;IAAEa;EAAU,CAAC,CAAC;;EAG5E;EACA;EACA;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2I,iBAAiBA,CAACpG,IAAY,EAAC;EACpC,IAAIT,CAAC,GAAGS,IAAI,CAAC,CAAC,CAAC;EAGf,MAAMqG,GAAG,GAAI,0CAAyCrG,IAAK,yCAAwCT,CAAE,0CAAyCA,CAAE,qCAAoCA,CAAE;AAC1L;AACA;AACA;AACA,OAAO;EACH,OAAOxD,CAAC,CAACuJ,MAAM,CAACe,GAAG,CAAC;AACxB;AACA,MAAMC,cAAc,GAAG,CACnBF,iBAAiB,CAAC,KAAK,CAAC,EACxBA,iBAAiB,CAAC,QAAQ,CAAC,EAC3BA,iBAAiB,CAAC,MAAM,CAAC,EACzBA,iBAAiB,CAAC,OAAO,CAAC,CAC7B;;AAED;AACA,OAAO,MAAMnF,YAAY,SAAS/E,UAAU;EAExCO,WAAWA,CAACQ,KAAU,EAAE;IACpB,KAAK,CAACA,KAAK,CAAC;IACZ+B,OAAO,CAACuH,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC;IAC5C;IACAtF,YAAY,CAACC,QAAQ,GAAG,IAAI;IAC5B,IAAIsF,KAAa,GAAG,KAAK;IACzB,IAAI,CAACA,KAAK,EAAE;IACZ,IAAInC,CAAU,GAAG,IAAI;IACrB;IACA,KAAK,IAAIoC,CAAC,IAAIpC,CAAC,EAAE;MACb,IAAIqC,YAAY,GAAGrC,CAAC,CAACoC,CAAC,CAAC;MACvB,IAAI,OAAOpC,CAAC,CAACoC,CAAC,CAAC,KAAK,UAAU,EAAEpC,CAAC,CAACoC,CAAC,CAAC,GAAG,YAAyB;QAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAnD,MAAA,EAAZoD,CAAC,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;UAADF,CAAC,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;QAAA;QACjD/H,OAAO,CAACgI,IAAI,CAAC,sBAAsB,GAAGP,CAAC,EAAE;UAACG;QAAS,CAAC,CAAC;QACrD,OAAOF,YAAY,CAAC,GAAGG,CAAC,CAAC;MAC7B,CAAC;IACL;EACJ;EAEAV,OAAOA,CAAC/I,GAAW,EAAE6J,UAAuB,EAAC;IACzC,IAAI9I,OAAgB,GAAG,IAAI,CAACE,IAAI,CAACjB,GAAG,CAAY;IAChD,IAAI,CAACkB,SAAS,CAAClB,GAAG,EAAE;MAAC,GAAGe,OAAO;MAAEzB,MAAM,EAACuK;IAAU,CAAC,EAAS,KAAK,CAAC;IAClE,IAAIC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC/J,GAAG,CAAC;IACpC,IAAIgK,CAAC,GAAGF,QAAQ,CAACG,SAAS,CAAEhD,CAAC,IAAIA,CAAC,CAAC9F,EAAE,KAAKnB,GAAG,CAAC;IAC9C,IAAIkK,YAAY,GAAG,IAAI,CAACC,cAAc,CAACnK,GAAG,CAAC;IAC3C4B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;MAACiI,QAAQ;MAAEE,CAAC;MAAEE,YAAY;MAAEnJ;IAAO,CAAC,CAAC;IAC5D,IAAImJ,YAAY,EAAE,IAAI,CAAChJ,SAAS,CAACgJ,YAAY,CAAC/I,EAAE,EAAY+I,YAAY,EAAE,IAAI,CAAC,CAAC,KAC3E,IAAI,CAACE,SAAS,CAAC,IAAI,CAACC,eAAe,CAACtJ,OAAO,CAAC,CAAC;EACtD;EACAsJ,eAAeA,CAACpD,CAAU,EAAY;IAClC,OAAOA,CAAC,CAACqD,MAAM;EACnB;EACAF,SAASA,CAACG,CAAW,EAAQ;IACzB;EAAA;EAEJhE,UAAUA,CAACvG,GAAW,EAAC;IACnB,IAAIe,OAAO,GAAG,IAAI,CAACE,IAAI,CAACjB,GAAG,CAAC;IAC5B,IAAI,CAACkB,SAAS,CAAClB,GAAG,EAAE;MAAC,GAAGe,OAAO;MAAEzB,MAAM,EAACkL;IAAS,CAAC,EAAS,IAAI,CAAC;EACpE;EACA9J,cAAcA,CAACV,GAAW,EAAEe,OAAiB,EAAO;IAAE;IAClDA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACE,IAAI,CAACjB,GAAG,CAAY;IAC9C,IAAI,CAACkB,SAAS,CAAClB,GAAG,EAAEe,OAAO,EAAE,IAAI,CAAC;EACtC;EACAT,QAAQA,CAA8BL,KAAoK,EAAEwK,QAAqB,EAAE;IAC/N;IACA,KAAK,CAACnK,QAAQ,CAACL,KAAK,EAAEwK,QAAQ,CAAC;EACnC;EACAV,WAAWA,CAAC/J,GAAW,EAAY;IAC/B,IAAIe,OAAO,GAAG,IAAI,CAACE,IAAI,CAACjB,GAAG,CAAC;IAC5B,IAAIoF,KAAgB,GAAGrE,OAAO,CAACuJ,MAAmB;IAClD,OAAOlF,KAAK,CAACG,IAAI;EACrB;EACA4E,cAAcA,CAACnK,GAAW,EAAsB;IAC5C,IAAI8J,QAA4B,GAAG,IAAI,CAACC,WAAW,CAAC/J,GAAG,CAAC;IACxD,IAAI0K,EAAE,GAAGZ,QAAQ,CAACG,SAAS,CAAEhD,CAAC,IAAIA,CAAC,CAAC9F,EAAE,KAAKnB,GAAG,CAAC;IAC/C,IAAIgK,CAAC,GAAGU,EAAE;IACV,OAAO,EAAEV,CAAC,GAAGF,QAAQ,CAACzD,MAAM,EAAE,IAAG,CAACyD,QAAQ,CAACE,CAAC,CAAC,CAAC1K,MAAM,EAAE,OAAOwK,QAAQ,CAACE,CAAC,CAAC;IACxEA,CAAC,GAAGU,EAAE;IACN,OAAO,EAAEV,CAAC,IAAI,CAAC,EAAE,IAAG,CAACF,QAAQ,CAACE,CAAC,CAAC,CAAC1K,MAAM,EAAE,OAAOwK,QAAQ,CAACE,CAAC,CAAC;IAC3D,OAAOQ,SAAS;EACpB;EACAG,UAAUA,CAAC3K,GAAW,EAAsB;IACxC,IAAI8J,QAA4B,GAAG,IAAI,CAACC,WAAW,CAAC/J,GAAG,CAAC;IACxD,IAAIgK,CAAC,GAAGF,QAAQ,CAACG,SAAS,CAAEhD,CAAC,IAAIA,CAAC,CAAC9F,EAAE,KAAKnB,GAAG,CAAC;IAC9C,OAAO,EAAEgK,CAAC,GAAGF,QAAQ,CAACzD,MAAM,EAAE,IAAG,CAACyD,QAAQ,CAACE,CAAC,CAAC,CAAC1K,MAAM,EAAE,OAAOwK,QAAQ,CAACE,CAAC,CAAC;IACxE,OAAOQ,SAAS;EACpB;EACAI,UAAUA,CAAC5K,GAAW,EAAsB;IACxC,IAAI8J,QAA4B,GAAG,IAAI,CAACC,WAAW,CAAC/J,GAAG,CAAC;IACxD,IAAIgK,CAAC,GAAGF,QAAQ,CAACG,SAAS,CAAEhD,CAAC,IAAIA,CAAC,CAAC9F,EAAE,KAAKnB,GAAG,CAAC;IAC9C,OAAO,EAAEgK,CAAC,IAAI,CAAC,EAAE,IAAG,CAACF,QAAQ,CAACE,CAAC,CAAC,CAAC1K,MAAM,EAAE,OAAOwK,QAAQ,CAACE,CAAC,CAAC;IAC3D,OAAOQ,SAAS;EACpB;EACA,OAAc9B,kBAAkBA,CAACmC,QAAiC,EAAU;IACxE,IAAI,CAACA,QAAQ,CAACC,MAAM,EAAE,OAAON,SAAS;IACtC,MAAMpF,KAAgB,GAAGyF,QAAQ,CAACC,MAAM,CAACjL,KAAK,CAACkL,SAAS;IACxDnJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;MAACgJ,QAAQ;MAAEzF,KAAK;MAAE4F,MAAM,EAAE5F,KAAK,CAAC6F;IAAQ,CAAC,CAAC;IAC5E,MAAMlK,OAAgB,GAAGqE,KAAK,CAACG,IAAI,CAAC2F,MAAM,CAACjE,CAAC,IAAGA,CAAC,CAAC9F,EAAE,KAAKiE,KAAK,CAAC6F,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1E,OAAOlK,OAAO;EAClB;EAEA2F,kBAAkBA,CAACC,SAAgC,EAAEC,SAAgC,EAAEC,QAAc,EAAE;IACnG,KAAK,CAACH,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,CAAC;IACxD,IAAI,IAAI,CAAC5G,KAAK,CAAC4K,QAAQ,EAAE;MACrB,IAAIM,QAAQ,GAAG,IAAI,CAAClL,KAAK,CAAC4K,QAAQ,CAACO,OAAO;MAC1C,IAAI,CAACD,QAAQ,EAAE;MACf;MACA,IAAIE,SAAS,GAAGF,QAAQ,CAACG,aAAa,CAAC,kBAAkB,CAAC;MAC1DtD,eAAe,GAAGmD,QAAQ;MAC1BnK,UAAU,GAAG,IAAI,CAACuK,IAAI;MACtBxD,eAAe,GAAG,IAAI,CAAC9H,KAAK,CAAC4K,QAAQ;MACrCjM,OAAO,CAAC4M,cAAc,GAAG,IAAI,CAACD,IAAI;MAClC,IAAI,CAACF,SAAS,EAAE;MAChBA,SAAS,CAACI,MAAM,CAAC,GAAGvC,cAAc,CAAC;MACnC,IAAIwC,GAAG,GAAG7H,YAAY,CAAC6E,kBAAkB,CAACyC,QAAQ,CAAC;MACnD;MACA;IACJ;IACA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAjI,MAAMA,CAAA,EAAoB;IACtB,oBAAOjE,OAAA;MAAKqE,SAAS,EAAE,+BAAgC;MAAAD,QAAA,gBACnDpE,OAAA,CAACuB,aAAa;QAACoC,IAAI,EAAE;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5B1E,OAAA;QAAKqE,SAAS,EAAE,4BAA6B;QAAAD,QAAA,gBACzCpE,OAAA,CAACuB,aAAa;UAACoC,IAAI,EAAE;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5B1E,OAAA;UAAKqE,SAAS,EAAE,WAAY;UAAAD,QAAA,EAAE,KAAK,CAACH,MAAM,CAAC;QAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnD1E,OAAA,CAACuB,aAAa;UAACoC,IAAI,EAAE;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACN1E,OAAA,CAACuB,aAAa;QAACoC,IAAI,EAAE;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EACV;AACJ;AAtIaE,YAAY,CACdC,QAAQ"},"metadata":{},"sourceType":"module"}