{"ast":null,"code":"var _class;\n// npm i react-json-view\nimport { U, Log } from \"../joiner\";\nimport { windoww, RuntimeAccessible } from \"../joiner\";\nimport React from \"react\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\n\n// U-functions that require jsx\nexport let UX = RuntimeAccessible(_class = class UX {\n  static recursiveMap(children, fn) {\n    const innermap = child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return child;\n      }\n      if (child.props.children) {\n        // Giordano: add ignore for webpack\n        //@ts-ignore\n        child = /*#__PURE__*/React.cloneElement(child, {\n          children: UX.recursiveMap(child.props.children, fn)\n        });\n      }\n      return fn(child);\n    };\n    if (!Array.isArray(children)) return innermap(children);\n    return React.Children.map(children, innermap);\n  }\n  static injectProp(parentComponent, e, gvidmap) {\n    var _WrappedComponent, _parentComponent$prop, _re$props$data;\n    const re = UX.ReactNodeAsElement(e);\n    if (!re) return e;\n    // @ts-ignore this\n    // const parentComponent = this;\n    let type = ((_WrappedComponent = re.type.WrappedComponent) === null || _WrappedComponent === void 0 ? void 0 : _WrappedComponent.name) || re.type;\n    // const windoww = window as any;\n    // console.log('relement ', {type: (re.type as any).WrappedComponent?.name || re.type}, {thiss, mycomponents: windoww.mycomponents, re, props:re.props});\n    // add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\n    switch (type) {\n      default:\n        // console.count('injectingProp case default: ' + type);\n        return re;\n      /*\r\n      case windoww.Components.Input.name:\r\n      case windoww.Components.Textarea.name:\r\n          const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n          const ret = React.cloneElement(re, {key: re.props.key || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n          //console.log('relement Input set props',\r\n          //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n          return ret;*/\n      case windoww.Components.GraphElement.name:\n      case windoww.Components.GraphElementComponent.name:\n      case windoww.Components.DefaultNode.name:\n      case windoww.Components.DefaultNodeComponent.name:\n      case windoww.Components.Graph.name:\n      case windoww.Components.GraphComponent.name:\n      // case windoww.Components.Field.name:\n      // case windoww.Components.FieldComponent.name:\n      case windoww.Components.Vertex.name:\n      case windoww.Components.VertexComponent.name:\n        const injectProps = {};\n        injectProps.parentViewId = parentComponent.props.view.id || parentComponent.props.view; // re.props.view ||  thiss.props.view\n        injectProps.parentnodeid = (_parentComponent$prop = parentComponent.props.node) === null || _parentComponent$prop === void 0 ? void 0 : _parentComponent$prop.id;\n        injectProps.graphid = parentComponent.props.graphid;\n        // const vidmap = GraphElementRaw.graphVertexID_counter;\n        // if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\n        // const gvidmap = vidmap[injectProps.graphid];\n        const validVertexIdCondition = id => gvidmap[id];\n        // todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando?\n        const dataid = typeof re.props.data === \"string\" ? re.props.data : (_re$props$data = re.props.data) === null || _re$props$data === void 0 ? void 0 : _re$props$data.id;\n        const idbasename = injectProps.graphid + '^' + dataid;\n        // console.log(\"setting nodeid\", {injectProps, props:re.props, re});\n        Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {\n          graphid: injectProps.graphid,\n          dataid,\n          props: re.props\n        });\n        injectProps.nodeid = U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\n        gvidmap[injectProps.nodeid] = true;\n        injectProps.key = injectProps.nodeid; // re.props.key || thiss.props.view.id + '_' + thiss.props.data.id;\n        return /*#__PURE__*/React.cloneElement(re, injectProps);\n    }\n  }\n  static ReactNodeAsElement(e) {\n    return e && e.type ? e : null;\n  }\n  static async deleteWithAlarm(lItem) {\n    const MySwal = withReactContent(Swal);\n    const confirm = await MySwal.fire({\n      title: \"Delete \" + lItem.toString() + \"?\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n      showLoaderOnConfirm: true\n    });\n    if (confirm.value === true) {\n      lItem.delete();\n    }\n  }\n  static async info(text) {\n    const MySwal = withReactContent(Swal);\n    const confirm = await MySwal.fire({\n      title: text,\n      showCancelButton: false,\n      confirmButtonText: \"Got It\"\n    });\n  }\n}) || _class;","map":{"version":3,"names":["U","Log","windoww","RuntimeAccessible","React","withReactContent","Swal","UX","_class","recursiveMap","children","fn","innermap","child","isValidElement","props","cloneElement","Array","isArray","Children","map","injectProp","parentComponent","e","gvidmap","_WrappedComponent","_parentComponent$prop","_re$props$data","re","ReactNodeAsElement","type","WrappedComponent","name","Components","GraphElement","GraphElementComponent","DefaultNode","DefaultNodeComponent","Graph","GraphComponent","Vertex","VertexComponent","injectProps","parentViewId","view","id","parentnodeid","node","graphid","validVertexIdCondition","dataid","data","idbasename","exDev","nodeid","increaseEndingNumber","key","deleteWithAlarm","lItem","MySwal","confirm","fire","title","toString","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","value","delete","info","text"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/common/UX.tsx"],"sourcesContent":["import ReactJson from 'react-json-view' // npm i react-json-view\r\nimport {GObject, Dictionary, DocString, LPointerTargetable, U, Log, GraphElementComponent} from \"../joiner\";\r\nimport type {GraphElementOwnProps} from \"../joiner\";\r\nimport {windoww, JsType, RuntimeAccessible} from \"../joiner\";\r\nimport React, {ReactElement, ReactNode} from \"react\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// U-functions that require jsx\r\n@RuntimeAccessible\r\nexport class UX{\r\n    static recursiveMap<T extends ReactNode | ReactNode[] | null | undefined>(children: T, fn: (rn: T)=>T): T {\r\n        const innermap = (child: ReactNode): T => {\r\n            if (!React.isValidElement(child)) { return child as T; }\r\n            if (child.props.children) {\r\n                // Giordano: add ignore for webpack\r\n                //@ts-ignore\r\n                child = React.cloneElement(child, { children: UX.recursiveMap(child.props.children, fn) });\r\n            }\r\n            return fn(child as T);\r\n        };\r\n        if (!Array.isArray(children)) return innermap(children as ReactNode) as T;\r\n        return React.Children.map(children, innermap) as T;\r\n    }\r\n    static injectProp(parentComponent: GraphElementComponent, e: ReactNode, gvidmap: Dictionary<DocString<'VertexID'>, boolean>): ReactNode {\r\n        const re: ReactElement | null = UX.ReactNodeAsElement(e);\r\n        if (!re) return e;\r\n        // @ts-ignore this\r\n        // const parentComponent = this;\r\n        let type = (re.type as any).WrappedComponent?.name || re.type;\r\n        // const windoww = window as any;\r\n        // console.log('relement ', {type: (re.type as any).WrappedComponent?.name || re.type}, {thiss, mycomponents: windoww.mycomponents, re, props:re.props});\r\n        // add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\r\n        switch (type) {\r\n            default:\r\n                // console.count('injectingProp case default: ' + type);\r\n                return re;\r\n            /*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: re.props.key || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/\r\n            case windoww.Components.GraphElement.name:\r\n            case windoww.Components.GraphElementComponent.name:\r\n            case windoww.Components.DefaultNode.name:\r\n            case windoww.Components.DefaultNodeComponent.name:\r\n            case windoww.Components.Graph.name:\r\n            case windoww.Components.GraphComponent.name:\r\n            // case windoww.Components.Field.name:\r\n            // case windoww.Components.FieldComponent.name:\r\n            case windoww.Components.Vertex.name:\r\n            case windoww.Components.VertexComponent.name:\r\n                const injectProps: GraphElementOwnProps = {} as any;\r\n                injectProps.parentViewId = parentComponent.props.view.id || (parentComponent.props.view as any); // re.props.view ||  thiss.props.view\r\n                injectProps.parentnodeid = parentComponent.props.node?.id;\r\n                injectProps.graphid = parentComponent.props.graphid;\r\n                // const vidmap = GraphElementRaw.graphVertexID_counter;\r\n                // if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\r\n                // const gvidmap = vidmap[injectProps.graphid];\r\n                const validVertexIdCondition = (id: string): boolean => gvidmap[id];\r\n                // todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando?\r\n                const dataid = typeof re.props.data === \"string\" ? re.props.data : re.props.data?.id;\r\n                const idbasename: string = injectProps.graphid + '^' + dataid;\r\n                // console.log(\"setting nodeid\", {injectProps, props:re.props, re});\r\n                Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                injectProps.nodeid = U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\r\n                gvidmap[injectProps.nodeid] = true;\r\n                injectProps.key = injectProps.nodeid; // re.props.key || thiss.props.view.id + '_' + thiss.props.data.id;\r\n                return React.cloneElement(re, injectProps);\r\n        }}\r\n\r\n    static ReactNodeAsElement(e: React.ReactNode): React.ReactElement | null { return e && (e as ReactElement).type ? e as ReactElement : null; }\r\n\r\n    public static async deleteWithAlarm(lItem: LPointerTargetable) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: \"Delete \" + lItem.toString() + \"?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            cancelButtonText: \"No\",\r\n            showLoaderOnConfirm: true\r\n        });\r\n        if (confirm.value === true) {\r\n            lItem.delete();\r\n        }\r\n    }\r\n    public static async info(text: string) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: text,\r\n            showCancelButton: false,\r\n            confirmButtonText: \"Got It\"\r\n        });\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}