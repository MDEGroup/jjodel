{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Color.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Defaults, LPointerTargetable } from '../../joiner';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport './color.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorComponent(props) {\n  _s();\n  var _props$data, _props$data2;\n  const [showTooltip, setShowTooltip] = useStateIfMounted(false);\n  if (!props.data && (!props.getter || !props.setter)) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const getter = props.getter || (() => props.data[props.field]);\n  const setter = props.setter || (value => {\n    props.data[props.field] = value;\n  });\n  //const field = props.field;\n  // const oldValue = (!data) ? undefined : (getter) ? getter(data) : data[field]; // !== undefined); ? data[field] : 'undefined'\n  const readOnly = props.readonly !== undefined ? props.readonly : props.debugmodee !== 'true' && Defaults.check(props.data.id);\n  const type = props.type ? props.type : 'text';\n  const label = props.label;\n  const jsxLabel = props.jsxLabel;\n  let tooltip = (props.tooltip === true ? (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data2 = _props$data['__info_of__' + props.field]) === null || _props$data2 === void 0 ? void 0 : _props$data2.txt : props.tooltip) || '';\n  let css = 'my-auto input ';\n  css += jsxLabel ? 'ms-1' : label ? 'ms-auto' : '';\n  css += props.hidden ? ' hidden-input' : '';\n  let autosize = props.autosize === undefined ? false : props.autosize; // props.type==='text'\n  css += autosize ? ' autosize-input' : '';\n  const blur = evt => {\n    if (readOnly) return;\n    const newValue = evt.target.value;\n    const oldValue = getter(props.data, props.field); // !== undefined) ? data[field] : 'undefined'\n    if (newValue !== oldValue) setter(newValue);\n  };\n  const otherprops = {\n    ...props\n  };\n  delete otherprops.data;\n  delete otherprops.field;\n  delete otherprops.getter;\n  delete otherprops.setter;\n  delete otherprops.label;\n  delete otherprops.jsxLabel;\n  delete otherprops.tooltip;\n  delete otherprops.hidden;\n  delete otherprops.inputStyle;\n  delete otherprops.children;\n  delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\n  let input = /*#__PURE__*/_jsxDEV(\"input\", {\n    ...otherprops,\n    // key={props.data?.id + props.field}\n    className: props.inputClassName || css,\n    style: props.inputStyle,\n    spellCheck: false,\n    readOnly: readOnly,\n    type: 'color',\n    value: getter(props.data, props.field),\n    onChange: blur,\n    onBlur: blur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }, this);\n  console.log(\"color component\", {\n    label,\n    jsxLabel,\n    tooltip,\n    c: props.children\n  });\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: (props.className ? props.className : 'p-1 color-picker-root') + ' hoverable',\n    ...otherprops,\n    style: {\n      display: jsxLabel || label ? 'flex' : 'block',\n      cursor: tooltip ? 'help' : 'auto',\n      ...(props.style || {})\n    },\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: 'my-auto',\n      onMouseEnter: e => setShowTooltip(true),\n      onMouseLeave: e => setShowTooltip(false),\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), jsxLabel && /*#__PURE__*/_jsxDEV(\"label\", {\n      onMouseEnter: e => setShowTooltip(true),\n      onMouseLeave: e => setShowTooltip(false),\n      children: jsxLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this), tooltip && showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'my-tooltip',\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'text-center text-capitalize',\n        children: props.field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }, this), input, props.canDelete && false && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"p-1\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'content delete-color mt-2',\n        style: {\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 38\n    }, this), props.children && Object.keys(props.children).length > 0 ? props.children : undefined, props.childrenn && Object.keys(props.childrenn).length > 0 ? props.childrenn : undefined]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n_s(ColorComponent, \"xyAd280tFd5ABD3D2xYZXtOlLvA=\", false, function () {\n  return [useStateIfMounted];\n});\n_c = ColorComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  const pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\n  ret.debugmodee = state.debug ? 'true' : 'false';\n  ret.data = LPointerTargetable.fromPointer(pointer);\n  /*\r\n  const selected = state.selected;\r\n  ret.selected = {};\r\n  for(let user of Object.keys(selected)) {\r\n      const pointer = selected[user];\r\n      if(pointer) ret.selected[user] = LModelElement.fromPointer(pointer);\r\n      else ret.selected[user] = null;\r\n  }\r\n    */\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ColorConnected = connect(mapStateToProps, mapDispatchToProps)(ColorComponent);\nexport function Color(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ColorConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Color;\nColorComponent.cname = 'ColorComponent';\nColorConnected.cname = 'ColorConnected';\nColor.cname = 'Color';\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorComponent\");\n$RefreshReg$(_c2, \"Color\");","map":{"version":3,"names":["React","connect","Defaults","LPointerTargetable","useStateIfMounted","Fragment","_Fragment","jsxDEV","_jsxDEV","ColorComponent","props","_s","_props$data","_props$data2","showTooltip","setShowTooltip","data","getter","setter","field","value","readOnly","readonly","undefined","debugmodee","check","id","type","label","jsxLabel","tooltip","txt","css","hidden","autosize","blur","evt","newValue","target","oldValue","otherprops","inputStyle","children","input","className","inputClassName","style","spellCheck","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","console","log","c","display","cursor","onMouseEnter","e","onMouseLeave","canDelete","position","Object","keys","length","childrenn","_c","mapStateToProps","state","ownProps","ret","pointer","debug","fromPointer","mapDispatchToProps","dispatch","ColorConnected","Color","arguments","_c2","cname","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Color.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {Defaults, DPointerTargetable, GObject, LPointerTargetable, Overlap, Pointer} from '../../joiner';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './color.scss';\r\n\r\n\r\nfunction ColorComponent(props: AllProps) {\r\n    const [showTooltip, setShowTooltip] = useStateIfMounted(false);\r\n\r\n    if (!props.data && (!props.getter || !props.setter)) return(<></>);\r\n\r\n    const getter = props.getter || (() => props.data[props.field]);\r\n    const setter = props.setter || ((value:string) => { props.data[props.field] = value; });\r\n    //const field = props.field;\r\n    // const oldValue = (!data) ? undefined : (getter) ? getter(data) : data[field]; // !== undefined); ? data[field] : 'undefined'\r\n    const readOnly = (props.readonly !== undefined) ? props.readonly : props.debugmodee !== 'true' && Defaults.check(props.data.id);\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    let tooltip: ReactNode|string|undefined = ((props.tooltip === true) ? props.data?.['__info_of__' + props.field]?.txt : props.tooltip) || '';\r\n\r\n    let css = 'my-auto input ';\r\n    css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type==='text'\r\n    css += autosize ? ' autosize-input' : '';\r\n\r\n    const blur = (evt: React.FocusEvent<HTMLInputElement>) => {\r\n        if (readOnly) return;\r\n        const newValue = evt.target.value;\r\n        const oldValue = getter(props.data, props.field); // !== undefined) ? data[field] : 'undefined'\r\n        if (newValue !== oldValue) setter(newValue);\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.field;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.label;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.tooltip;\r\n    delete otherprops.hidden;\r\n    delete otherprops.inputStyle;\r\n    delete otherprops.children;\r\n    delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\r\n    let input = <input {...otherprops}\r\n                       // key={props.data?.id + props.field}\r\n                       className={props.inputClassName || css}\r\n                       style={props.inputStyle}\r\n                       spellCheck={false}\r\n                       readOnly={readOnly}\r\n                       type={'color'} value={getter(props.data, props.field)} onChange={blur} onBlur={blur}\r\n    />\r\n\r\n    console.log(\"color component\", {label, jsxLabel, tooltip, c:props.children})\r\n    return(<label className={(props.className ? props.className : 'p-1 color-picker-root') + ' hoverable'} {...otherprops}\r\n                  style={{display: (jsxLabel || label) ? 'flex' : 'block', cursor: tooltip ? 'help' : 'auto', ...((props as any).style || {})}}>\r\n\r\n        {label && <label className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                         onMouseLeave={e => setShowTooltip(false)}>{label}\r\n        </label>}\r\n\r\n        {jsxLabel && <label onMouseEnter={e => setShowTooltip(true)}\r\n                            onMouseLeave={e => setShowTooltip(false)}>{jsxLabel}\r\n        </label>}\r\n\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n            <b className={'text-center text-capitalize'}>{props.field}</b>\r\n            <br />\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n        {input}\r\n        {props.canDelete && false && <label className=\"p-1\"><button className={'content delete-color mt-2'} style={{position:'relative'}}/></label>}\r\n        {props.children && Object.keys(props.children).length > 0 ? props.children : undefined}\r\n        {props.childrenn && Object.keys(props.childrenn).length > 0 ? props.childrenn : undefined}\r\n    </label>);\r\n}\r\n\r\nexport interface InputOwnProps {\r\n    data: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field: string;\r\n    getter?: (data: LPointerTargetable, field: string) => string;\r\n    setter?: (value: string) => void;\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n        'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    className?: string;\r\n    style?: GObject;\r\n    readonly?: boolean;\r\n    tooltip?: string | boolean | ReactElement;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    key?: React.Key | null;\r\n    canDelete?: boolean;\r\n    children?: any;\r\n    childrenn?: any;\r\n}\r\ninterface StateProps {\r\n    debugmodee: string;\r\n    data: LPointerTargetable & GObject;\r\n    // selected: Dictionary<Pointer<DUser>, LModelElement | null>;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<InputOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: InputOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\r\n    ret.debugmodee = state.debug ? 'true' : 'false';\r\n    ret.data = LPointerTargetable.fromPointer(pointer);\r\n    /*\r\n    const selected = state.selected;\r\n    ret.selected = {};\r\n    for(let user of Object.keys(selected)) {\r\n        const pointer = selected[user];\r\n        if(pointer) ret.selected[user] = LModelElement.fromPointer(pointer);\r\n        else ret.selected[user] = null;\r\n    }\r\n\r\n    */\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const ColorConnected =\r\n    connect<StateProps, DispatchProps, InputOwnProps, DState>(mapStateToProps, mapDispatchToProps)(ColorComponent);\r\n\r\n\r\nexport function Color(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <ColorConnected {...{...props, children}} />;\r\n}\r\n\r\nColorComponent.cname = 'ColorComponent';\r\nColorConnected.cname = 'ColorConnected';\r\nColor.cname = 'Color';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}