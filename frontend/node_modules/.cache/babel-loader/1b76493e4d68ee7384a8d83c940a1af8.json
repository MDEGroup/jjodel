{"ast":null,"code":"import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var DSL=/*#__PURE__*/function(){function DSL(){_classCallCheck(this,DSL);}_createClass(DSL,null,[{key:\"parser\",value:function parser(jsx){var children=DSL.Children(jsx);while(children){jsx=children;children=DSL.Children(children);}return jsx;}},{key:\"Children\",value:function Children(jsx){var params=DSL.extractParameters(jsx,'Children');if(!params)return undefined;var includes=DSL.extractParameter(params,'includes')||'[]';var excludes=DSL.extractParameter(params,'excludes')||'[]';var includesJsx=includes!=='[]'?\".filter(c => c.name && \".concat(includes,\".includes(c.name))\"):'';var excludesJsx=excludes!=='[]'?\".filter(c => c.name && !\".concat(excludes,\".includes(c.name))\"):'';var dsl=\"<div className={'children'}>\\n                {data.children\\n                    \".concat(includesJsx,\"\\n                    \").concat(excludesJsx,\"\\n                    .map(c => <DefaultNode key={c.id} data={c} />)\\n                }\\n        </div>\");return DSL.replace(jsx,'Children',dsl);}},{key:\"extractParameters\",value:function extractParameters(jsx,component){var regex=new RegExp(\"<\".concat(component,\"(.*?)\\\\/>\"));var match=jsx.match(regex);if(match&&match[1])return match[1];else return undefined;}},{key:\"extractParameter\",value:function extractParameter(params,name){var regex=new RegExp(\"\".concat(name,\"={(.*?)}\"));var match=params.match(regex);if(match&&match[1])return match[1];else return undefined;}},{key:\"replace\",value:function replace(jsx,component,dsl){var regex=new RegExp(\"<\".concat(component,\"(.*?)\\\\/>\"));return jsx.replace(regex,dsl);}}]);return DSL;}();export default DSL;","map":{"version":3,"names":["DSL","_classCallCheck","_createClass","key","value","parser","jsx","children","Children","params","extractParameters","undefined","includes","extractParameter","excludes","includesJsx","concat","excludesJsx","dsl","replace","component","regex","RegExp","match","name"],"sources":["C:/d/Programming/web/jodel-mde/src/DSL/DSL.ts"],"sourcesContent":["class DSL {\r\n    public static parser(jsx: string): string {\r\n        let children = DSL.Children(jsx);\r\n        while(children) {\r\n            jsx = children;\r\n            children = DSL.Children(children);\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    private static Children(jsx: string): string|undefined {\r\n        const params = DSL.extractParameters(jsx, 'Children');\r\n        if(!params) return undefined;\r\n        const includes = DSL.extractParameter(params, 'includes') || '[]';\r\n        const excludes = DSL.extractParameter(params, 'excludes') || '[]';\r\n        const includesJsx = (includes !== '[]') ? `.filter(c => c.name && ${includes}.includes(c.name))` : '';\r\n        const excludesJsx = (excludes !== '[]') ? `.filter(c => c.name && !${excludes}.includes(c.name))` : '';\r\n        const dsl = `<div className={'children'}>\r\n                {data.children\r\n                    ${includesJsx}\r\n                    ${excludesJsx}\r\n                    .map(c => <DefaultNode key={c.id} data={c} />)\r\n                }\r\n        </div>`;\r\n        return DSL.replace(jsx, 'Children', dsl);\r\n    }\r\n\r\n\r\n    private static extractParameters(jsx: string, component: string): string|undefined {\r\n        const regex = new RegExp(`<${component}(.*?)\\\\/>`);\r\n        const match = jsx.match(regex);\r\n        if (match && match[1]) return match[1];\r\n        else return undefined;\r\n    }\r\n\r\n    private static extractParameter(params: string, name: string): string|undefined {\r\n        const regex = new RegExp(`${name}={(.*?)}`);\r\n        const match = params.match(regex);\r\n        if (match && match[1]) return match[1];\r\n        else return undefined;\r\n    }\r\n\r\n    private static replace(jsx: string, component: string, dsl: string): string {\r\n        const regex = new RegExp(`<${component}(.*?)\\\\/>`);\r\n        return jsx.replace(regex, dsl);\r\n    }\r\n\r\n}\r\n\r\nexport default DSL;\r\n"],"mappings":"2SAAM,CAAAA,GAAG,kCAAAA,IAAA,EAAAC,eAAA,MAAAD,GAAA,GAAAE,YAAA,CAAAF,GAAA,QAAAG,GAAA,UAAAC,KAAA,CACL,SAAAC,OAAqBC,GAAW,CAAU,CACtC,GAAI,CAAAC,QAAQ,CAAGP,GAAG,CAACQ,QAAQ,CAACF,GAAG,CAAC,CAChC,MAAMC,QAAQ,CAAE,CACZD,GAAG,CAAGC,QAAQ,CACdA,QAAQ,CAAGP,GAAG,CAACQ,QAAQ,CAACD,QAAQ,CAAC,CACrC,CACA,MAAO,CAAAD,GAAG,CACd,CAAC,GAAAH,GAAA,YAAAC,KAAA,CAED,SAAAI,SAAwBF,GAAW,CAAoB,CACnD,GAAM,CAAAG,MAAM,CAAGT,GAAG,CAACU,iBAAiB,CAACJ,GAAG,CAAE,UAAU,CAAC,CACrD,GAAG,CAACG,MAAM,CAAE,MAAO,CAAAE,SAAS,CAC5B,GAAM,CAAAC,QAAQ,CAAGZ,GAAG,CAACa,gBAAgB,CAACJ,MAAM,CAAE,UAAU,CAAC,EAAI,IAAI,CACjE,GAAM,CAAAK,QAAQ,CAAGd,GAAG,CAACa,gBAAgB,CAACJ,MAAM,CAAE,UAAU,CAAC,EAAI,IAAI,CACjE,GAAM,CAAAM,WAAW,CAAIH,QAAQ,GAAK,IAAI,2BAAAI,MAAA,CAA8BJ,QAAQ,uBAAuB,EAAE,CACrG,GAAM,CAAAK,WAAW,CAAIH,QAAQ,GAAK,IAAI,4BAAAE,MAAA,CAA+BF,QAAQ,uBAAuB,EAAE,CACtG,GAAM,CAAAI,GAAG,sFAAAF,MAAA,CAEKD,WAAW,2BAAAC,MAAA,CACXC,WAAW,2GAGlB,CACP,MAAO,CAAAjB,GAAG,CAACmB,OAAO,CAACb,GAAG,CAAE,UAAU,CAAEY,GAAG,CAAC,CAC5C,CAAC,GAAAf,GAAA,qBAAAC,KAAA,CAGD,SAAAM,kBAAiCJ,GAAW,CAAEc,SAAiB,CAAoB,CAC/E,GAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,MAAM,KAAAN,MAAA,CAAKI,SAAS,aAAW,CAAC,CAClD,GAAM,CAAAG,KAAK,CAAGjB,GAAG,CAACiB,KAAK,CAACF,KAAK,CAAC,CAC9B,GAAIE,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,CAAE,MAAO,CAAAA,KAAK,CAAC,CAAC,CAAC,CAAC,IAClC,OAAO,CAAAZ,SAAS,CACzB,CAAC,GAAAR,GAAA,oBAAAC,KAAA,CAED,SAAAS,iBAAgCJ,MAAc,CAAEe,IAAY,CAAoB,CAC5E,GAAM,CAAAH,KAAK,CAAG,GAAI,CAAAC,MAAM,IAAAN,MAAA,CAAIQ,IAAI,YAAU,CAAC,CAC3C,GAAM,CAAAD,KAAK,CAAGd,MAAM,CAACc,KAAK,CAACF,KAAK,CAAC,CACjC,GAAIE,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,CAAE,MAAO,CAAAA,KAAK,CAAC,CAAC,CAAC,CAAC,IAClC,OAAO,CAAAZ,SAAS,CACzB,CAAC,GAAAR,GAAA,WAAAC,KAAA,CAED,SAAAe,QAAuBb,GAAW,CAAEc,SAAiB,CAAEF,GAAW,CAAU,CACxE,GAAM,CAAAG,KAAK,CAAG,GAAI,CAAAC,MAAM,KAAAN,MAAA,CAAKI,SAAS,aAAW,CAAC,CAClD,MAAO,CAAAd,GAAG,CAACa,OAAO,CAACE,KAAK,CAAEH,GAAG,CAAC,CAClC,CAAC,WAAAlB,GAAA,KAIL,cAAe,CAAAA,GAAG"},"metadata":{},"sourceType":"module"}