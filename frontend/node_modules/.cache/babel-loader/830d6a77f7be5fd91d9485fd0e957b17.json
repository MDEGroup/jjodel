{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\forEndUser\\\\Control.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport \"./control.scss\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\n\n/* Control */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ControlComponent = (props, children) => {\n  _s();\n  const [controlOpen, setControlOpen] = useStateIfMounted(false);\n  const toggleValue = () => {\n    setControlOpen(!controlOpen);\n  };\n\n  // <div className={'jjodel-control d-flex flex-row'}>\n  //     <div className={'control-title'}>\n  //         {props.title && <i className=\"bi bi-dpad\"></i>}\n  //         {props.title && <h1>{props.title}</h1>}\n  //         {props.payoff && <h2>{props.payoff}</h2>}\n  //     </div>\n  //     <div className={'control-children'}>\n  //         {children || props.children} \n  //     </div>\n  // </div>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `jjodel-control d-flex flex-row ${controlOpen ? 'opened' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'control-header',\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.payoff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), props.children || children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), controlOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'jjodel-control-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: e => {\n          toggleValue();\n        },\n        className: \"bi bi-toggles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'jjodel-control-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: e => {\n          toggleValue();\n        },\n        className: \"bi bi-toggles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(ControlComponent, \"Em9156EtKuGjFGYG6MpY13gM5yk=\", false, function () {\n  return [useStateIfMounted];\n});\n_c = ControlComponent;\nconst Control = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ControlComponent, {\n    ...props,\n    children: children || props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, _this);\n};\n\n/* Slider */\n_c2 = Control;\nconst Slider = props => {\n  // const min = props.min ? props.min : 0;\n  // const max = props.max ? props.max : 10;\n  // const step = props.step ? props.step : 1;\n  // const defaultValue = props.defaultValue ? props.defaultValue : max;\n\n  //const [value, setValue] = useState(defaultValue);\n\n  function updateValue(value) {\n    // @ts-ignore\n    props.node.state = {\n      level: value\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'control-widget control-slider',\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'range',\n      min: 0,\n      max: 3,\n      step: 1,\n      onChange: e => {\n        updateValue(+e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), props.title && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'tip',\n      children: [props.title, \" (\", props.node.state.level, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this);\n};\n_c3 = Slider;\nexport { Control, Slider };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ControlComponent\");\n$RefreshReg$(_c2, \"Control\");\n$RefreshReg$(_c3, \"Slider\");","map":{"version":3,"names":["useStateIfMounted","jsxDEV","_jsxDEV","Fragment","_Fragment","ControlComponent","props","children","_s","controlOpen","setControlOpen","toggleValue","className","title","fileName","_jsxFileName","lineNumber","columnNumber","payoff","onClick","e","_c","Control","arguments","length","undefined","_this","_c2","Slider","updateValue","value","node","state","level","type","min","max","step","onChange","target","_c3","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/forEndUser/Control.tsx"],"sourcesContent":["import { ControlPanel, LGraphElement, SetRootFieldAction } from \"../../joiner\";\r\nimport { ReactElement, ReactNode, useState } from \"react\";\r\n\r\nimport \"./control.scss\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport { Tooltip } from \"./Tooltip\";\r\nimport { VertexOwnProps } from \"../../graph/graphElement/sharedTypes/sharedTypes\";\r\n\r\n\r\n/* Control */\r\n\r\ntype ControlProps = {\r\n    children: any;\r\n    title?: string;\r\n    payoff?: string;\r\n    icon?: boolean;\r\n}\r\n\r\nconst ControlComponent = (props: ControlProps, children?:ReactNode) => {\r\n    \r\n    const [controlOpen, setControlOpen] = useStateIfMounted(false);\r\n  \r\n    const toggleValue = () => {\r\n        setControlOpen(!controlOpen);\r\n\r\n    }\r\n\r\n            // <div className={'jjodel-control d-flex flex-row'}>\r\n            //     <div className={'control-title'}>\r\n            //         {props.title && <i className=\"bi bi-dpad\"></i>}\r\n            //         {props.title && <h1>{props.title}</h1>}\r\n            //         {props.payoff && <h2>{props.payoff}</h2>}\r\n            //     </div>\r\n            //     <div className={'control-children'}>\r\n            //         {children || props.children} \r\n            //     </div>\r\n            // </div>\r\n    return (<>\r\n        \r\n            <div className={`jjodel-control d-flex flex-row ${controlOpen ? 'opened' : 'closed'}`}>\r\n                <div className={'control-header'}>\r\n                    <h1>{props.title}</h1>\r\n                    <h2>{props.payoff}</h2>\r\n                </div>\r\n                {props.children || children} \r\n            </div>\r\n\r\n            {controlOpen ?\r\n                <div className={'jjodel-control-icon'}>\r\n                    <i onClick={(e) => {toggleValue()}} className=\"bi bi-toggles\"></i>\r\n                </div>\r\n                :\r\n                <div className={'jjodel-control-icon'}>\r\n                    <i onClick={(e) => {toggleValue()}} className=\"bi bi-toggles\"></i>\r\n                </div>\r\n            }  \r\n    </>);\r\n}\r\n\r\nconst Control = (props: VertexOwnProps, children: ReactNode = []): ReactElement => {\r\n    return <ControlComponent {...props}>{children || props.children}</ControlComponent>;\r\n}\r\n\r\n\r\n/* Slider */\r\n\r\ntype SliderProps = {\r\n    node: LGraphElement;\r\n    name?: string;\r\n    defaultValue?:number;\r\n    title?:string;\r\n    min?: number;\r\n    max?: number;\r\n    step?: number;\r\n    label?: string;\r\n}\r\n\r\nconst Slider = (props: SliderProps) => {\r\n\r\n    // const min = props.min ? props.min : 0;\r\n    // const max = props.max ? props.max : 10;\r\n    // const step = props.step ? props.step : 1;\r\n    // const defaultValue = props.defaultValue ? props.defaultValue : max;\r\n\r\n    //const [value, setValue] = useState(defaultValue);\r\n\r\n\r\n    function updateValue(value: number) {\r\n        // @ts-ignore\r\n        props.node.state = {level: value};\r\n    }\r\n    return (<div className={'control-widget control-slider'}>\r\n        \r\n        <input \r\n            type={'range'} \r\n            min={0} \r\n            max={3} \r\n            step={1} \r\n            onChange={(e)=>{updateValue(+e.target.value)}} />\r\n        {/* @ts-ignore */}\r\n      {props.title && <div className={'tip'}>{props.title} ({props.node.state.level})</div>}\r\n    </div>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {Control, Slider};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}