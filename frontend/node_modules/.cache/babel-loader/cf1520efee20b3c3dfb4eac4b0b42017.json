{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\structureEditor\\\\Structure.tsx\";\nimport React from \"react\";\nimport { DAnnotation, Input, LObject, LOperation, LValue, Select, Selectors, SetFieldAction, TextArea } from \"../../../joiner\";\nimport Value from \"./editors/Value\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Structure {\n  static BaseEditor(lModelElement) {\n    if (!lModelElement) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        data: lModelElement,\n        field: \"name\",\n        label: \"Name\",\n        type: \"text\",\n        tooltip: \"Element name\"\n      }, `input.name.${lModelElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  static ModelEditor(lModel) {\n    if (!lModel) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Structure.BaseEditor(lModel)\n    }, void 0, false);\n  }\n  static PackageEditor(lPackage) {\n    if (!lPackage) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lPackage), /*#__PURE__*/_jsxDEV(Input, {\n        data: lPackage,\n        field: \"uri\",\n        label: \"NsURI\",\n        type: \"text\",\n        tooltip: \"Namespace URI of the package, i.e. the URI that is displayed in the xmlns tag to identify this package in an XMI document\"\n      }, `input.uri.${lPackage.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lPackage,\n        field: \"prefix\",\n        label: \"NsPrefix\",\n        type: \"text\",\n        tooltip: \"Namespace prefix that is used when references to instances of the classes in this package are serialized\"\n      }, `input.prefix.${lPackage.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  static ClassEditor(lClass) {\n    if (!lClass) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lClass), /*#__PURE__*/_jsxDEV(Input, {\n        data: lClass,\n        field: \"abstract\",\n        label: \"IsAbstract\",\n        type: \"checkbox\",\n        tooltip: \"If set to True, the generated implementation class will have the abstract keyword\"\n      }, `input.abstract.${lClass.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lClass,\n        field: \"interface\",\n        label: \"IsInterface\",\n        type: \"checkbox\",\n        tooltip: \"If set to True, only the java interface will be generated. There will be no corresponding implementation class and no create method in the factory\"\n      }, `input.interface.${lClass.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lClass,\n        field: \"partial\",\n        label: \"IsPartial\",\n        type: \"checkbox\",\n        tooltip: \"If set to True, the class will be partial.\"\n      }, `input.partial.${lClass.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: 'my-2'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex p-1',\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'my-auto',\n          children: \"ANNOTATIONS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'btn btn-primary ms-auto',\n          onClick: e => {\n            const annotation = DAnnotation.new('Empty Annotation');\n            SetFieldAction.new(lClass.id, 'annotations', annotation.id, '+=', true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: 'p-1 bi bi-plus'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), lClass.annotations.map((a, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'd-flex',\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          jsxLabel: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'my-auto',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Annotation #\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'ms-2 btn btn-danger',\n              onClick: e => a.delete(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: 'bi bi-trash-fill'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this),\n          data: a,\n          field: 'source'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, a.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 51\n      }, this))]\n    }, void 0, true);\n  }\n  static DataTypeEditor(lDataType) {\n    if (!lDataType) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(Input, {\n      data: lDataType,\n      field: \"serializable\",\n      label: \"IsSerializable\",\n      type: \"checkbox\",\n      tooltip: \"It represents whether values of this type will be serialized\"\n    }, `input.serializable.${lDataType.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  static EnumEditor(lEnum) {\n    if (!lEnum) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lEnum), Structure.DataTypeEditor(lEnum)]\n    }, void 0, true);\n  }\n  static TypedElementEditor(lTypedElement) {\n    if (!lTypedElement) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        data: lTypedElement,\n        field: \"type\",\n        label: \"Type\",\n        tooltip: \"Element Type\"\n      }, `input.type.${lTypedElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lTypedElement,\n        field: \"lowerBound\",\n        label: \"Lower Bound\",\n        type: \"number\",\n        tooltip: \"Determines the setting of the required property. If lowerBound is 0, the required property will be set to False. Otherwise, the required property will be set to True\"\n      }, `input.lowerBound.${lTypedElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lTypedElement,\n        field: \"upperBound\",\n        label: \"Upper Bound\",\n        type: \"number\",\n        tooltip: \"Determines the setting of the many property. If upperBound is 1, the many property will be set to False. Otherwise, the many property will be set to True\"\n      }, `input.upperBound.${lTypedElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lTypedElement,\n        field: \"ordered\",\n        label: \"IsOrdered\",\n        type: \"checkbox\",\n        tooltip: \"It represents whether order is meaningful\"\n      }, `input.ordered.${lTypedElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lTypedElement,\n        field: \"unique\",\n        label: \"IsUnique\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether a many-valued attribute is allowed to have duplicates\"\n      }, `input.unique.${lTypedElement.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  static StructuralFeatureEditor(lStructuralFeature) {\n    if (!lStructuralFeature) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"defaultValueLiteral\",\n        label: \"Default Value Literal\",\n        type: \"text\",\n        tooltip: \"Determines the value returned by the get method if the feature has never been set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"changeable\",\n        label: \"IsChangeable\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether the reference may be modified. If changeable is set to False, no set() method is generated for the reference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"volatile\",\n        label: \"IsVolatile\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether the reference cannot be cached. If volatile is set to True, the generated class does not contain a field to hold the reference and the generated get() and set() methods for the reference are empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"transient\",\n        label: \"IsTransient\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether the reference should not be stored\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"unsettable\",\n        label: \"IsUnsettable\",\n        type: \"checkbox\",\n        tooltip: \"Indicates that the feature may be unset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lStructuralFeature,\n        field: \"derived\",\n        label: \"IsDerived\",\n        type: \"checkbox\",\n        tooltip: \"A derived feature typically computes its value from those of other features. It will typically be transient and will often be volatile and not changeable. The default copier won't copy it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true); // damiano: derived description tooltip might be wrong\n  }\n\n  static AttributeEditor(lAttribute) {\n    if (!lAttribute) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lAttribute), Structure.TypedElementEditor(lAttribute), Structure.StructuralFeatureEditor(lAttribute), /*#__PURE__*/_jsxDEV(Input, {\n        data: lAttribute,\n        field: \"isID\",\n        label: \"IsID\",\n        type: \"checkbox\",\n        tooltip: \"An ID attribute explicitly models the one unique ID of an object\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  static ReferenceEditor(lReference) {\n    if (!lReference) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lReference), Structure.TypedElementEditor(lReference), Structure.StructuralFeatureEditor(lReference), /*#__PURE__*/_jsxDEV(Input, {\n        data: lReference,\n        field: \"containment\",\n        label: \"IsContainment\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether the reference is a containment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lReference,\n        field: \"container\",\n        label: \"IsContainer\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether the reference is a container. This is the opposite of a containment EReference. If container is true, the generated accessor methods will have container semantics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: lReference,\n        field: \"resolveProxies\",\n        label: \"IsResolveProxies\",\n        type: \"checkbox\",\n        tooltip: \"Indicates whether proxy references should be resolved automatically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  static EnumLiteralEditor(lEnumLiteral) {\n    if (!lEnumLiteral) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    console.log(\"eliteral editor\", {\n      lEnumLiteral\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(lEnumLiteral), /*#__PURE__*/_jsxDEV(Input, {\n        data: lEnumLiteral,\n        field: \"value\",\n        label: \"Ordinal\",\n        type: \"number\",\n        tooltip: \"Determines the integer value that is associated with this literal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  static OperationEditor(me) {\n    const operation = LOperation.fromPointer(me.id);\n    if (!operation) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [Structure.BaseEditor(operation), /*#__PURE__*/_jsxDEV(Select, {\n        data: operation.id,\n        field: 'type',\n        label: 'Return',\n        tooltip: \"Method return type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), operation.parameters.map((parameter, index) => {\n        if (index > 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'ms-1',\n              children: \"Parameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'ms-3',\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                data: parameter.id,\n                field: \"name\",\n                label: '• Name',\n                type: \"text\",\n                tooltip: \"Name of the generated argument\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                data: parameter.id,\n                field: \"type\",\n                label: '• Type',\n                tooltip: \"Argument type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 28\n          }, this);\n        }\n      }), operation.exceptions.map((exception, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            data: exception.id,\n            field: \"name\",\n            label: \"Exception\",\n            type: \"text\",\n            tooltip: \"Exception name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true);\n  }\n  static ObjectEditor(me) {\n    const object = LObject.fromPointer(me.id);\n    if (!object) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    let conform = true;\n    // damiano todo: this is redundant because it's always conform, but those kind of checks are\n    //                 better be done adding a property like lobject.conformsto(lclass)\n    for (let feature of object.features) {\n      let upperBound = feature.instanceof ? feature.instanceof.upperBound : -1;\n      upperBound = upperBound === -1 ? 999 : upperBound;\n      const lowerBound = feature.instanceof ? feature.instanceof.lowerBound : -1;\n      const value = feature.values;\n      // const length = (Array.isArray(value)) ? value.length : (value === '') ? 0 : 1;\n      conform = value.length >= lowerBound && value.length <= upperBound;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [object.instanceof && conform && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'p-1',\n        children: [\"The instance \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-success',\n          children: \"CONFORMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 84\n        }, this), \" to \", object.instanceof.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 46\n      }, this), object.instanceof && !conform && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'p-1',\n        children: [\"The instance \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-danger',\n          children: \"NOT CONFORMS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 85\n        }, this), \" to \", object.instanceof.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 47\n      }, this), !object.instanceof && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'p-1',\n        children: [\"The instance is \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-warning',\n          children: \"SHAPELESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 36\n      }, this), !object.partial ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: 'my-auto',\n          children: \"Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'btn btn-primary ms-auto',\n          onClick: () => {\n            object.addValue();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: 'p-1 bi bi-plus'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), this.forceConform(object)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 16\n    }, this);\n  }\n  static forceConform(me) {\n    var _me$instanceof;\n    let mm = Selectors.getLastSelectedModel().m2; // LPointerTargetable.fromPointer(store.getState().metamodel as any);\n\n    if (!mm) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex p-1',\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'my-auto',\n        children: \"Force Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: 'my-auto ms-auto select',\n        onChange: event => {\n          window.debugmm = mm;\n          window.debugm = me;\n          me.instanceof = event.target.value === \"undefined\" ? undefined : event.target.value;\n        },\n        value: ((_me$instanceof = me.instanceof) === null || _me$instanceof === void 0 ? void 0 : _me$instanceof.id) || \"undefined\",\n        children: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: mm.name,\n          children: [(mm.classes || []).map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.id,\n            children: (c === null || c === void 0 ? void 0 : c.name) || c.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"undefined\",\n            children: \"Object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 16\n    }, this);\n  }\n  static ValueEditor(me) {\n    const lValue = LValue.fromPointer(me.id);\n    if (!lValue) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Value, {\n        valueID: lValue.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 16\n    }, this);\n  }\n  static Editor(lModelElement) {\n    if (lModelElement) {\n      switch (lModelElement.className) {\n        case \"DModel\":\n          return Structure.ModelEditor(lModelElement);\n        case \"DPackage\":\n          return Structure.PackageEditor(lModelElement);\n        case \"DClass\":\n          return Structure.ClassEditor(lModelElement);\n        case \"DAttribute\":\n          return Structure.AttributeEditor(lModelElement);\n        case \"DReference\":\n          return Structure.ReferenceEditor(lModelElement);\n        case \"DEnumerator\":\n          return Structure.EnumEditor(lModelElement);\n        case \"DEnumLiteral\":\n          return Structure.EnumLiteralEditor(lModelElement);\n        case \"DOperation\":\n          return Structure.OperationEditor(lModelElement);\n        case \"DObject\":\n          return Structure.ObjectEditor(lModelElement);\n        case \"DValue\":\n          return Structure.ValueEditor(lModelElement);\n        default:\n          break;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 16\n    }, this);\n  }\n}\nStructure.cname = \"Structure\";","map":{"version":3,"names":["React","DAnnotation","Input","LObject","LOperation","LValue","Select","Selectors","SetFieldAction","TextArea","Value","Fragment","_Fragment","jsxDEV","_jsxDEV","Structure","BaseEditor","lModelElement","children","data","field","label","type","tooltip","id","fileName","_jsxFileName","lineNumber","columnNumber","ModelEditor","lModel","PackageEditor","lPackage","ClassEditor","lClass","className","onClick","e","annotation","new","annotations","map","a","index","jsxLabel","delete","DataTypeEditor","lDataType","EnumEditor","lEnum","TypedElementEditor","lTypedElement","StructuralFeatureEditor","lStructuralFeature","AttributeEditor","lAttribute","ReferenceEditor","lReference","EnumLiteralEditor","lEnumLiteral","console","log","OperationEditor","me","operation","fromPointer","parameters","parameter","exceptions","exception","ObjectEditor","object","conform","feature","features","upperBound","instanceof","lowerBound","value","values","length","name","partial","addValue","forceConform","_me$instanceof","mm","getLastSelectedModel","m2","onChange","event","window","debugmm","debugm","target","undefined","classes","c","ValueEditor","lValue","valueID","Editor","cname"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/structureEditor/Structure.tsx"],"sourcesContent":["import React, {ReactNode} from \"react\";\r\nimport type {GObject, LModelElement} from \"../../../joiner\";\r\nimport {\r\n    DAnnotation,\r\n    DObject,\r\n    DValue,\r\n    Input,\r\n    LModel,\r\n    LObject,\r\n    LOperation,\r\n    LPointerTargetable,\r\n    LValue,\r\n    Select, Selectors,\r\n    SetFieldAction,\r\n    store, TextArea\r\n} from \"../../../joiner\";\r\nimport Value from \"./editors/Value\";\r\n\r\nexport default class Structure {\r\n    public static cname: string = \"Structure\";\r\n\r\n    private static BaseEditor(lModelElement: LModelElement) : ReactNode {\r\n        if(!lModelElement) return(<></>);\r\n        return(<>\r\n            {/*<Input obj={lModelElement} field={\"id\"} label={\"ID\"} type={\"text\"} readonly={true} />*/}\r\n            <Input key={`input.name.${lModelElement.id}`} data={lModelElement} field={\"name\"} label={\"Name\"} type={\"text\"} tooltip={\"Element name\"} />\r\n        </>);\r\n    }\r\n    public static ModelEditor(lModel: LModelElement): ReactNode {\r\n        if(!lModel) return(<></>);\r\n        return(<>{Structure.BaseEditor(lModel)}</>);\r\n    }\r\n    public static PackageEditor(lPackage: LModelElement): ReactNode {\r\n        if(!lPackage) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lPackage)}\r\n            <Input key={`input.uri.${lPackage.id}`} data={lPackage} field={\"uri\"} label={\"NsURI\"} type={\"text\"} tooltip={\"Namespace URI of the package, i.e. the URI that is displayed in the xmlns tag to identify this package in an XMI document\"} />\r\n            <Input key={`input.prefix.${lPackage.id}`} data={lPackage} field={\"prefix\"} label={\"NsPrefix\"} type={\"text\"} tooltip={\"Namespace prefix that is used when references to instances of the classes in this package are serialized\"} />\r\n        </>);\r\n    }\r\n    public static ClassEditor(lClass: LModelElement): ReactNode {\r\n        if(!lClass) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lClass)}\r\n            <Input key={`input.abstract.${lClass.id}`} data={lClass} field={\"abstract\"} label={\"IsAbstract\"} type={\"checkbox\"} tooltip={\"If set to True, the generated implementation class will have the abstract keyword\"} />\r\n            <Input key={`input.interface.${lClass.id}`} data={lClass} field={\"interface\"} label={\"IsInterface\"} type={\"checkbox\"} tooltip={\"If set to True, only the java interface will be generated. There will be no corresponding implementation class and no create method in the factory\"} />\r\n            <Input key={`input.partial.${lClass.id}`} data={lClass} field={\"partial\"} label={\"IsPartial\"} type={\"checkbox\"} tooltip={\"If set to True, the class will be partial.\"} />\r\n            <hr className={'my-2'} />\r\n            <div className={'d-flex p-1'}>\r\n                <b className={'my-auto'}>ANNOTATIONS</b>\r\n                <button className={'btn btn-primary ms-auto'} onClick={e => {\r\n                    const annotation = DAnnotation.new('Empty Annotation');\r\n                    SetFieldAction.new(lClass.id, 'annotations', annotation.id, '+=', true);\r\n                }}>\r\n                    <i className={'p-1 bi bi-plus'}></i>\r\n                </button>\r\n            </div>\r\n            {lClass.annotations.map((a, index) => <div className={'d-flex'} key={a.id}>\r\n                <TextArea jsxLabel={<div className={'my-auto'}>\r\n                    <label >Annotation #{index + 1}</label>\r\n                    <button className={'ms-2 btn btn-danger'} onClick={e => a.delete()}>\r\n                        <i className={'bi bi-trash-fill'} />\r\n                    </button>\r\n                </div>} data={a} field={'source'} />\r\n            </div>)}\r\n        </>);\r\n    }\r\n    private static DataTypeEditor(lDataType: LModelElement): ReactNode {\r\n        if(!lDataType) return(<></>);\r\n        return(<Input key={`input.serializable.${lDataType.id}`} data={lDataType} field={\"serializable\"} label={\"IsSerializable\"} type={\"checkbox\"} tooltip={\"It represents whether values of this type will be serialized\"} />);\r\n    }\r\n    public static EnumEditor(lEnum: LModelElement): ReactNode {\r\n        if(!lEnum) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lEnum)}\r\n            {Structure.DataTypeEditor(lEnum)}\r\n        </>);\r\n    }\r\n    private static TypedElementEditor(lTypedElement: LModelElement): ReactNode {\r\n        if(!lTypedElement) return(<></>);\r\n        return(<>\r\n            <Select key={`input.type.${lTypedElement.id}`} data={lTypedElement} field={\"type\"} label={\"Type\"} tooltip={\"Element Type\"} />\r\n            <Input key={`input.lowerBound.${lTypedElement.id}`} data={lTypedElement} field={\"lowerBound\"} label={\"Lower Bound\"} type={\"number\"} tooltip={\"Determines the setting of the required property. If lowerBound is 0, the required property will be set to False. Otherwise, the required property will be set to True\"} />\r\n            <Input key={`input.upperBound.${lTypedElement.id}`} data={lTypedElement} field={\"upperBound\"} label={\"Upper Bound\"} type={\"number\"} tooltip={\"Determines the setting of the many property. If upperBound is 1, the many property will be set to False. Otherwise, the many property will be set to True\"} />\r\n            <Input key={`input.ordered.${lTypedElement.id}`} data={lTypedElement} field={\"ordered\"} label={\"IsOrdered\"} type={\"checkbox\"} tooltip={\"It represents whether order is meaningful\"} />\r\n            <Input key={`input.unique.${lTypedElement.id}`} data={lTypedElement} field={\"unique\"} label={\"IsUnique\"} type={\"checkbox\"} tooltip={\"Indicates whether a many-valued attribute is allowed to have duplicates\"} />\r\n        </>);\r\n    }\r\n    private static StructuralFeatureEditor(lStructuralFeature: LModelElement): ReactNode {\r\n        if(!lStructuralFeature) return(<></>);\r\n        return(<>\r\n            <Input data={lStructuralFeature} field={\"defaultValueLiteral\"} label={\"Default Value Literal\"} type={\"text\"} tooltip={\"Determines the value returned by the get method if the feature has never been set\"} />\r\n            <Input data={lStructuralFeature} field={\"changeable\"} label={\"IsChangeable\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference may be modified. If changeable is set to False, no set() method is generated for the reference\"} />\r\n            <Input data={lStructuralFeature} field={\"volatile\"} label={\"IsVolatile\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference cannot be cached. If volatile is set to True, the generated class does not contain a field to hold the reference and the generated get() and set() methods for the reference are empty\"} />\r\n            <Input data={lStructuralFeature} field={\"transient\"} label={\"IsTransient\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference should not be stored\"} />\r\n            <Input data={lStructuralFeature} field={\"unsettable\"} label={\"IsUnsettable\"} type={\"checkbox\"} tooltip={\"Indicates that the feature may be unset\"} />\r\n            <Input data={lStructuralFeature} field={\"derived\"} label={\"IsDerived\"} type={\"checkbox\"} tooltip={\"A derived feature typically computes its value from those of other features. It will typically be transient and will often be volatile and not changeable. The default copier won't copy it\"} />\r\n        </>); // damiano: derived description tooltip might be wrong\r\n    }\r\n    public static AttributeEditor(lAttribute: LModelElement): ReactNode {\r\n        if(!lAttribute) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lAttribute)}\r\n            {Structure.TypedElementEditor(lAttribute)}\r\n            {Structure.StructuralFeatureEditor(lAttribute)}\r\n            <Input data={lAttribute} field={\"isID\"} label={\"IsID\"} type={\"checkbox\"} tooltip={\"An ID attribute explicitly models the one unique ID of an object\"} />\r\n            {/*<Input data={lAttribute} field={\"isIoT\"} label={\"IsIoT\"} type={\"checkbox\"} tooltip={\"A Boolean value that allows the connection to an MQTT Broker\"} />*/}\r\n        </>);\r\n    }\r\n    public static ReferenceEditor(lReference: LModelElement): ReactNode {\r\n        if(!lReference) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(lReference)}\r\n            {Structure.TypedElementEditor(lReference)}\r\n            {Structure.StructuralFeatureEditor(lReference)}\r\n            <Input data={lReference} field={\"containment\"} label={\"IsContainment\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference is a containment\"} />\r\n            <Input data={lReference} field={\"container\"} label={\"IsContainer\"} type={\"checkbox\"} tooltip={\"Indicates whether the reference is a container. This is the opposite of a containment EReference. If container is true, the generated accessor methods will have container semantics\"} />\r\n            <Input data={lReference} field={\"resolveProxies\"} label={\"IsResolveProxies\"} type={\"checkbox\"} tooltip={\"Indicates whether proxy references should be resolved automatically\"} />\r\n        </>);\r\n    }\r\n    public static EnumLiteralEditor(lEnumLiteral: LModelElement): ReactNode {\r\n        if(!lEnumLiteral) return(<></>);\r\n        console.log(\"eliteral editor\", {lEnumLiteral});\r\n        return(<>\r\n            {Structure.BaseEditor(lEnumLiteral)}\r\n            {\r\n                <Input data={lEnumLiteral} field={\"value\"} label={\"Ordinal\"} type={\"number\"} tooltip={\"Determines the integer value that is associated with this literal\"} />\r\n            }\r\n        </>);\r\n    }\r\n\r\n    public static OperationEditor(me: LModelElement): ReactNode {\r\n        const operation: LOperation = LOperation.fromPointer(me.id);\r\n        if(!operation) return(<></>);\r\n        return(<>\r\n            {Structure.BaseEditor(operation)}\r\n            <Select data={operation.id} field={'type'} label={'Return'} tooltip={\"Method return type\"} />\r\n            {operation.parameters.map((parameter, index) => {\r\n                if (index > 0) {\r\n                    return <div key={index}>\r\n                        <label className={'ms-1'}>Parameter</label>\r\n                        <div className={'ms-3'}>\r\n                            <Input data={parameter.id} field={\"name\"} label={'• Name'} type={\"text\"} tooltip={\"Name of the generated argument\"} />\r\n                            <Select data={parameter.id} field={\"type\"} label={'• Type'} tooltip={\"Argument type\"} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            })}\r\n            {operation.exceptions.map((exception, index) => {\r\n                return <div key={index}>\r\n                    <Input data={exception.id} field={\"name\"} label={\"Exception\"} type={\"text\"} tooltip={\"Exception name\"} />\r\n                </div>\r\n            })}\r\n        </>);\r\n    }\r\n    public static ObjectEditor(me: LModelElement): ReactNode {\r\n        const object: LObject = LObject.fromPointer(me.id);\r\n        if(!object) return(<></>);\r\n        let conform = true;\r\n        // damiano todo: this is redundant because it's always conform, but those kind of checks are\r\n        //                 better be done adding a property like lobject.conformsto(lclass)\r\n        for(let feature of object.features) {\r\n            let upperBound =  feature.instanceof ? feature.instanceof.upperBound : -1;\r\n            upperBound = (upperBound === -1) ? 999 : upperBound;\r\n            const lowerBound =  feature.instanceof ? feature.instanceof.lowerBound : -1;\r\n            const value = feature.values;\r\n            // const length = (Array.isArray(value)) ? value.length : (value === '') ? 0 : 1;\r\n            conform = (value.length >= lowerBound && value.length <= upperBound);\r\n        }\r\n\r\n        return(<div>\r\n\r\n            {object.instanceof && conform && <label className={'p-1'}>The instance <b className={'text-success'}>CONFORMS</b> to {object.instanceof.name}</label>}\r\n            {object.instanceof && !conform && <label className={'p-1'}>The instance <b className={'text-danger'}>NOT CONFORMS</b> to {object.instanceof.name}</label>}\r\n            {!object.instanceof && <label className={'p-1'}>The instance is <b className={'text-warning'}>SHAPELESS</b></label>}\r\n            {!object.partial ?\r\n                null :\r\n                <div className={\"d-flex p-1\"}>\r\n                    <label className={'my-auto'}>Features</label>\r\n                    <button className={'btn btn-primary ms-auto'} onClick={()=>{object.addValue()}}>\r\n                        <i className={'p-1 bi bi-plus'}></i>\r\n                    </button>\r\n                </div>\r\n            }\r\n            {this.forceConform(object)}\r\n        </div>);\r\n    }\r\n    public static forceConform(me: LObject) {\r\n        let mm: LModel = Selectors.getLastSelectedModel().m2 as LModel; // LPointerTargetable.fromPointer(store.getState().metamodel as any);\r\n\r\n        if (!mm) return <></>\r\n        return <div className={'d-flex p-1'}>\r\n            <label className={'my-auto'}>Force Type</label>\r\n            <select className={'my-auto ms-auto select'} onChange={ (event)=>{\r\n                (window as any).debugmm = mm;\r\n                (window as any).debugm = me;\r\n                me.instanceof = event.target.value === \"undefined\" ? undefined : event.target.value as any;\r\n            } } value={me.instanceof?.id || \"undefined\"}>\r\n                <optgroup label={mm.name}>\r\n                    {\r\n                        (mm.classes || []).map( c =>\r\n                            <option value={c.id}>{c?.name || c.id}</option>\r\n                        )\r\n                    }\r\n                    <option value={\"undefined\"}>Object</option>\r\n                </optgroup>\r\n            </select>\r\n        </div>\r\n    }\r\n    public static ValueEditor(me: LModelElement): ReactNode {\r\n        const lValue: LValue = LValue.fromPointer(me.id);\r\n        if(!lValue) return(<></>);\r\n        return(<div>\r\n            <Value valueID={lValue.id} />\r\n        </div>);\r\n    }\r\n    public static Editor(lModelElement: LModelElement|null) : ReactNode {\r\n        if(lModelElement){\r\n            switch (lModelElement.className){\r\n                case \"DModel\": return Structure.ModelEditor(lModelElement);\r\n                case \"DPackage\": return Structure.PackageEditor(lModelElement);\r\n                case \"DClass\": return Structure.ClassEditor(lModelElement);\r\n                case \"DAttribute\": return Structure.AttributeEditor(lModelElement);\r\n                case \"DReference\": return Structure.ReferenceEditor(lModelElement);\r\n                case \"DEnumerator\": return Structure.EnumEditor(lModelElement);\r\n                case \"DEnumLiteral\": return Structure.EnumLiteralEditor(lModelElement);\r\n                case \"DOperation\": return Structure.OperationEditor(lModelElement);\r\n                case \"DObject\" : return Structure.ObjectEditor(lModelElement);\r\n                case \"DValue\" : return Structure.ValueEditor(lModelElement);\r\n                default: break;\r\n            }\r\n        }\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}