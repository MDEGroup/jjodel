{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n  var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n    if (source != null && !this._sources.has(source)) {\n      this._sources.add(source);\n    }\n    if (name != null && !this._names.has(name)) {\n      this._names.add(name);\n    }\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = {};\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n      // Cases 2 and 3.\n      return;\n    } else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var mapping;\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          result += ';';\n          previousGeneratedLine++;\n        }\n      } else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          result += ',';\n        }\n      }\n      result += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n      if (mapping.source != null) {\n        result += base64VLQ.encode(this._sources.indexOf(mapping.source) - previousSource);\n        previousSource = this._sources.indexOf(mapping.source);\n\n        // lines are stored 0-based in SourceMap spec version 3\n        result += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n        result += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n        if (mapping.name != null) {\n          result += base64VLQ.encode(this._names.indexOf(mapping.name) - previousName);\n          previousName = this._names.indexOf(mapping.name);\n        }\n      }\n    }\n    return result;\n  };\n  SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n    }, this);\n  };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n    return map;\n  };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n  exports.SourceMapGenerator = SourceMapGenerator;\n});","map":{"version":3,"names":["define","require","module","exports","base64VLQ","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","prototype","_version","fromSourceMap","SourceMapGenerator_fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","generatedLine","column","generatedColumn","source","relative","original","originalLine","originalColumn","name","addMapping","sources","forEach","sourceFile","content","sourceContentFor","setSourceContent","SourceMapGenerator_addMapping","_validateMapping","has","add","SourceMapGenerator_setSourceContent","aSourceFile","aSourceContent","toSetString","Object","keys","length","applySourceMap","SourceMapGenerator_applySourceMap","aSourceMapPath","Error","newSources","newNames","unsortedForEach","originalPositionFor","join","SourceMapGenerator_validateMapping","aGenerated","aOriginal","aSource","aName","JSON","stringify","_serializeMappings","SourceMapGenerator_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","mappings","toArray","i","len","compareByGeneratedPositionsInflated","encode","indexOf","_generateSourcesContent","SourceMapGenerator_generateSourcesContent","aSources","aSourceRoot","map","key","hasOwnProperty","call","toJSON","SourceMapGenerator_toJSON","version","names","sourcesContent","toString","SourceMapGenerator_toString"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/node_modules/jstransform/node_modules/source-map/lib/source-map/source-map-generator.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this.toJSON());\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}