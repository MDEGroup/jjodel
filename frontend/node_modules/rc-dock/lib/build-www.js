"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const shelljs_1 = __importDefault(require("shelljs"));
const fs = __importStar(require("fs"));
const prismjs_1 = require("prismjs");
let reg = /(.|[\n\r])*\{(.*)\} from '..\/lib';/m;
function replacer(str, p1, p2) {
    return `import('./shared-import').then(({React, ReactDOM, jsxTab, htmlTab, ${p2}})=>{`;
}
function exportCodeHtml(lan, file, data) {
    let html = prismjs_1.highlight(data, prismjs_1.languages[lan], lan);
    html = `<html>
<head>
<link rel="stylesheet" href="./prism-coy.css">
</head>
<body>
<pre class="language-${lan}">
<code class="language-${lan}">${html}</code>
</pre>
</body>
</html>`;
    fs.writeFileSync(`./temp-example/${file}.html`, html);
}
// convert example to dynamic import
// compile all dependencies in shared-import.js
function buildExample() {
    shelljs_1.default.mkdir('-p', './temp-example');
    for (let file of fs.readdirSync('./example')) {
        let data = fs.readFileSync(`./example/${file}`, 'utf8');
        if (file.endsWith('.jsx')) {
            exportCodeHtml('javascript', file, data);
            if (file.startsWith('dark-theme')) {
                // don't build dark theme js
                continue;
            }
            data = `${data.replace(reg, replacer)} \n});`;
        }
        else if (file.endsWith('.html')) {
            exportCodeHtml('html', file, data);
        }
        fs.writeFileSync(`./temp-example/${file}`, data);
    }
    shelljs_1.default.exec('yarn parcel build ./temp-example/* --no-content-hash --no-source-maps --no-minify --out-dir www/examples --public-url ./');
}
function buildDocs() {
    shelljs_1.default.exec('yarn typedoc');
    shelljs_1.default.mv('./temp-doc/*', './www');
}
function main() {
    shelljs_1.default.rm('-rf', './www/examples');
    shelljs_1.default.rm('-rf', './www/interfaces');
    shelljs_1.default.rm('-rf', './www/classes');
    shelljs_1.default.rm('-rf', './www/assets');
    buildDocs();
    buildExample();
}
main();
