{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Defaults, Keystrokes, LPointerTargetable, store, U } from '../../joiner';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport './inputselect.scss';\nimport { Tooltip } from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function getSelectOptions(data, field, options) {\n  if (options) return options;\n  let returns;\n  let primitives;\n  let classes;\n  let enumerators;\n  let objects;\n  let m2classname;\n  let hasPrimitives = false;\n  let hasReturnTypes = false;\n  if (field === 'type') {\n    if (data) switch (data.className) {\n      case 'DValue':\n        let m2 = data.instanceof;\n        if (!m2) return data.model.allSubObjects;\n        let dm2 = m2.__raw;\n        if (dm2.className === \"DAttribute\") break;\n        m2classname = dm2.name;\n        let m1modelid = data.model.id;\n        return m2.instances.filter(o => o.model.id === m1modelid);\n      case 'DAttribute':\n        enumerators = data.enums;\n        hasPrimitives = true;\n        break;\n      case 'DReference':\n        classes = data.classes;\n        break;\n      case 'DOperation':\n        classes = data.classes;\n        enumerators = data.enums;\n        hasPrimitives = hasReturnTypes = true;\n        break;\n      case 'DParameter':\n        classes = data.classes;\n        enumerators = data.enums;\n        hasPrimitives = true;\n        break;\n    }\n  }\n  let state;\n  // todo: all this stuff might be better moved in mapstatetoprops, or the select list won't update properly.\n  if (hasPrimitives) {\n    if (!state) state = store.getState();\n    primitives = LPointerTargetable.fromPointer(state.primitiveTypes);\n  }\n  if (hasReturnTypes) {\n    if (!state) state = store.getState();\n    primitives = LPointerTargetable.fromPointer(state.returnTypes);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [returns && returns.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Defaults',\n      children: returns.map((returnType, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: returnType.id,\n          children: returnType.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 49\n    }, this), primitives && primitives.length && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Primitives',\n      children: primitives.map((primitive, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: primitive.id,\n          children: primitive.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 51\n    }, this), enumerators && enumerators.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Enumerators',\n      children: enumerators.map((enumerator, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: enumerator.id,\n          children: enumerator.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 57\n    }, this), classes && classes.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Classes',\n      children: classes.map((classifier, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: classifier.id,\n          children: classifier.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }, this), objects && objects.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: m2classname ? 'Instances of ' + m2classname : \"All objects\",\n      children: objects.map((classifier, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: classifier.id,\n          children: classifier.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true);\n}\nexport function InputComponent(props) {\n  _s();\n  var _data;\n  const data = props.data;\n  const getter = props.getter;\n  const setter = props.setter;\n  const field = props.field;\n  const oldValue = !data ? undefined : getter ? getter(data, field) : data[field]; // !== undefined); ? data[field] : 'undefined'\n  const [value, setValue] = useStateIfMounted(oldValue);\n  const [isTouched, setIsTouched] = useStateIfMounted(false);\n  const inputRef = useRef(null);\n\n  // I check if the value that I have in my local state is being edited by other <Input />\n  if (value !== oldValue && !isTouched) {\n    setValue(oldValue);\n    setIsTouched(false);\n  }\n  if (!(data || getter && setter)) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Either props.data or both getter & setter are required.\"\n  }, void 0, false);\n  let readOnly;\n  if (props.readonly !== undefined) readOnly = props.readonly;\n  // else if (props.disabled !== undefined) readOnly = props.disabled;\n  else readOnly = props.debugmodee !== 'true' && Defaults.check(data === null || data === void 0 ? void 0 : data.id);\n  const type = props.type ? props.type : 'text';\n  const label = props.jsxLabel || props.label;\n  let tooltip = (props.tooltip === true ? data === null || data === void 0 ? void 0 : (_data = data['__info_of__' + field]) === null || _data === void 0 ? void 0 : _data.txt : props.tooltip) || '';\n  let css = ''; //'my-auto input ';\n  //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\n  css += props.hidden ? ' hidden-input' : '';\n  let autosize = props.autosize === undefined ? false : props.autosize; // props.type==='text'\n  css += autosize ? ' autosize-input' : '';\n  const isBoolean = ['checkbox', 'radio'].includes(type);\n  const onChange = evt => {\n    if (readOnly) return;\n    if (isBoolean) {\n      const target = evt.target.checked;\n      if (setter) setter(target, data, field);else data[field] = target;\n      return;\n    }\n    if (props.tag === \"select\") {\n      onBlur(evt);\n    } else {\n      setValue(getValueFromEvent(evt));\n      setIsTouched(true); // I'm editing the element in my local state.\n      // the actual set is done in onBlur\n    }\n  };\n\n  const onKeyDown = evt => {\n    if (evt.key === Keystrokes.enter) onBlur(evt);\n    if (evt.key === Keystrokes.escape) {\n      const oldValue = getter ? getter(data, field) : data[field];\n      evt.target.value = oldValue;\n      setValue(oldValue);\n      setIsTouched(false);\n      evt.target.blur();\n      // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\n      // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\n    }\n  };\n\n  const getValueFromEvent = evt => {\n    switch (props.tag) {\n      case \"textarea\":\n      case \"input\":\n      case \"select\":\n      case \"\":\n      case null:\n      case \"undefined\":\n        return evt.target.value;\n      default:\n        return evt.target.innerText;\n    }\n  };\n  const onBlur = evt => {\n    if (readOnly || isBoolean) return;\n    const newValue = getValueFromEvent(evt);\n    const oldValue = getter ? getter(data, field) : data[field];\n    if (newValue !== oldValue) {\n      if (setter) setter(newValue, data, field);else data[field] = newValue;\n    }\n    // I terminate my editing, so I communicate it to other <Input /> that render the same field.\n    setIsTouched(false);\n  };\n  const otherprops = {\n    ...props\n  };\n  delete otherprops.data;\n  delete otherprops.field;\n  delete otherprops.getter;\n  delete otherprops.setter;\n  delete otherprops.label;\n  delete otherprops.jsxLabel;\n  delete otherprops.tooltip;\n  delete otherprops.hidden;\n  delete otherprops.inputStyle;\n  delete otherprops.children;\n  delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\n\n  let checked = undefined;\n  if (isBoolean) checked = typeof value === \"boolean\" ? value : typeof value === \"string\" ? U.fromBoolString(value) : !!value;\n  let cursor;\n  if (tooltip) cursor = 'help';else if (readOnly) cursor = 'not-allowed';else if (isBoolean) cursor = 'pointer';else cursor = 'auto';\n  let inputProps = {\n    spellCheck: props.spellCkeck || false,\n    readOnly,\n    disabled: readOnly,\n    type,\n    value,\n    checked,\n    className: [props.inputClassName, css].join(' '),\n    style: props.inputStyle || {},\n    onChange,\n    onBlur,\n    onKeyDown\n  }; // key:`${field}.${data?.id}`\n  if (!inputProps.style.cursor && cursor === 'not-allowed') {\n    inputProps.style.cursor = cursor;\n  }\n  let input;\n  let rootprops = {\n    ...otherprops\n  };\n  switch (typeof rootprops.ref) {\n    default:\n      rootprops.ref = inputRef;\n      break;\n    case \"object\":\n      let oldref = rootprops.ref;\n      rootprops.ref = v => {\n        oldref.current = inputRef.current = v;\n      };\n      break;\n    case \"function\":\n      let oldreff = rootprops.ref;\n      rootprops.ref = v => {\n        oldreff(v);\n        inputRef.current = v;\n      };\n      break;\n  }\n  if (tooltip) {\n    rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, rootprops.ref);\n    rootprops.onMouseLeave = () => Tooltip.hide();\n  }\n  let rootkeys = new Set(...Object.keys(rootprops));\n  //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\n  //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\n  for (let k of rootkeys) {\n    if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\n    if (inputProps[k]) inputProps[k] = function () {\n      for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n        a[_key] = arguments[_key];\n      }\n      inputProps[k](arguments);\n      rootprops[k](arguments);\n    };else inputProps[k] = rootprops[k];\n    delete rootprops[k];\n  }\n  if (!label && !autosize) {\n    if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\n    if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\n    inputProps = {\n      ...rootprops,\n      ...inputProps\n    };\n    switch (props.tag) {\n      case \"textarea\":\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ...inputProps,\n          children: inputProps.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 37\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          ...inputProps,\n          children: getSelectOptions(data, field, props.options || props.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 35\n        }, this);\n      case null:\n      case undefined:\n      case \"\":\n      case \"input\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          ...inputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 70\n        }, this);\n      default:\n        inputProps.contentEditable = inputProps.contentEditable !== false;\n        return /*#__PURE__*/React.createElement(props.tag, inputProps, props.children);\n    }\n  }\n  if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';\n  switch (props.tag) {\n    case \"textarea\":\n      input = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ...inputProps,\n        children: inputProps.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 34\n      }, this);\n      break;\n    case \"select\":\n      input = /*#__PURE__*/_jsxDEV(\"select\", {\n        ...inputProps,\n        children: getSelectOptions(data, field, props.options || props.children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 32\n      }, this);\n      break;\n    case null:\n    case undefined:\n    case \"\":\n    case \"input\":\n      input = /*#__PURE__*/_jsxDEV(\"input\", {\n        ...inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 67\n      }, this);\n      break;\n    default:\n      inputProps.contentEditable = inputProps.contentEditable !== false;\n      input = /*#__PURE__*/React.createElement(props.tag, inputProps, props.children);\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    ...rootprops,\n    children: [label || undefined, input]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 12\n  }, this);\n  /*\r\n  return(<label className={'p-1'} {...otherprops}\r\n                style={rootStyle}>\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                      onMouseLeave={e => setShowTooltip(false)}>{label}\r\n      </span>}\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                         onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n      </span>}\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n          <b className={'text-center text-capitalize'}>{field}</b>\r\n          <br />\r\n          <label>{tooltip}</label>\r\n      </div>}\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                       data-value={value}>{input}\r\n      </div> : input}\r\n  </label>);\r\n  */\n}\n_s(InputComponent, \"nlzZzFhpjnEHW6d8jEzTV191MA8=\", false, function () {\n  return [useStateIfMounted, useStateIfMounted];\n});\n_c = InputComponent;\nInputComponent.cname = 'InputComponent';\nexport function InputMapStateToProps(state, ownProps) {\n  var _ownProps$data;\n  const ret = {};\n  const pointer = typeof ownProps.data === 'string' ? ownProps.data : (_ownProps$data = ownProps.data) === null || _ownProps$data === void 0 ? void 0 : _ownProps$data.id;\n  ret.debugmodee = state.debug ? 'true' : 'false';\n  if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\n  return ret;\n}\n_c2 = InputMapStateToProps;\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const InputConnected = connect(InputMapStateToProps, mapDispatchToProps)(InputComponent);\nexport function Input(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return 'input';\n}\n_c3 = Input;\nexport function Input2(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Input2;\nexport function TextArea(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return 'textarea';\n}\n_c5 = TextArea;\nexport function TextArea2(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"textarea\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 12\n  }, this);\n}\n_c6 = TextArea2;\nexport function Select(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return 'select';\n}\n_c7 = Select;\nexport function Select2(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 12\n  }, this);\n}\n_c8 = Select2;\nexport const Edit = Input;\nInputComponent.cname = 'InputComponent';\nInputConnected.cname = 'InputConnected';\nInput.cname = 'Input';\nTextArea.cname = 'TextArea';\nSelect.cname = 'Select';\nEdit.cname = 'Edit';\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"InputMapStateToProps\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Input2\");\n$RefreshReg$(_c5, \"TextArea\");\n$RefreshReg$(_c6, \"TextArea2\");\n$RefreshReg$(_c7, \"Select\");\n$RefreshReg$(_c8, \"Select2\");","map":{"version":3,"names":["React","useRef","connect","Defaults","Keystrokes","LPointerTargetable","store","U","useStateIfMounted","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","getSelectOptions","data","field","options","returns","primitives","classes","enumerators","objects","m2classname","hasPrimitives","hasReturnTypes","className","m2","instanceof","model","allSubObjects","dm2","__raw","name","m1modelid","id","instances","filter","o","enums","state","getState","fromPointer","primitiveTypes","returnTypes","children","length","label","map","returnType","i","value","fileName","_jsxFileName","lineNumber","columnNumber","primitive","enumerator","classifier","InputComponent","props","_s","_data","getter","setter","oldValue","undefined","setValue","isTouched","setIsTouched","inputRef","readOnly","readonly","debugmodee","check","type","jsxLabel","tooltip","txt","css","hidden","autosize","isBoolean","includes","onChange","evt","target","checked","tag","onBlur","getValueFromEvent","onKeyDown","key","enter","escape","blur","innerText","newValue","otherprops","inputStyle","fromBoolString","cursor","inputProps","spellCheck","spellCkeck","disabled","inputClassName","join","style","input","rootprops","ref","oldref","v","current","oldreff","onMouseEnter","show","onMouseLeave","hide","rootkeys","Set","Object","keys","k","toUpperCase","_len","arguments","a","Array","_key","objectMergeInPlace","contentEditable","createElement","_c","cname","InputMapStateToProps","ownProps","_ownProps$data","ret","pointer","debug","_c2","mapDispatchToProps","dispatch","InputConnected","Input","_c3","Input2","_c4","TextArea","_c5","TextArea2","_c6","Select","_c7","Select2","_c8","Edit","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Input.tsx"],"sourcesContent":["import React, {Dispatch, KeyboardEvent, LegacyRef, ReactElement, ReactNode, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {\r\n    Defaults,\r\n    DObject,\r\n    DPointerTargetable,\r\n    GObject,\r\n    Keystrokes, LAttribute,\r\n    LClass, LEnumerator, LModel, LObject,\r\n    LPointerTargetable, LReference, LValue,\r\n    Overlap,\r\n    Pointer, Selectors,\r\n    store,\r\n    U\r\n} from '../../joiner';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './inputselect.scss';\r\nimport { Tooltip } from './Tooltip';\r\n\r\n\r\nexport function getSelectOptions(data: any, field: string, options: ReactNode) {\r\n    if (options) return options;\r\n    let returns: LClass[] | undefined;\r\n    let primitives: LClass[] | undefined;\r\n    let classes: LClass[] | undefined;\r\n    let enumerators: LEnumerator[] | undefined;\r\n    let objects: LObject[] | undefined;\r\n    let m2classname: string | undefined;\r\n    let hasPrimitives: boolean = false;\r\n    let hasReturnTypes: boolean = false;\r\n    if ((field) === 'type') {\r\n        if (data) switch (data.className) {\r\n            case 'DValue':\r\n                let m2: LReference | LAttribute | undefined = (data as LValue).instanceof;\r\n                if (!m2) return (data as LValue).model.allSubObjects;\r\n                let dm2 = m2.__raw;\r\n                if (dm2.className === \"DAttribute\") break;\r\n                m2classname = dm2.name;\r\n                let m1modelid = data.model.id;\r\n                return m2.instances.filter( o => o.model.id === m1modelid);\r\n            case 'DAttribute': enumerators = data.enums; hasPrimitives = true; break;\r\n            case 'DReference': classes = data.classes; break;\r\n            case 'DOperation': classes = data.classes; enumerators = data.enums; hasPrimitives = hasReturnTypes = true; break;\r\n            case 'DParameter': classes = data.classes; enumerators = data.enums; hasPrimitives = true; break;\r\n        }\r\n    }\r\n    let state: DState | undefined;\r\n    // todo: all this stuff might be better moved in mapstatetoprops, or the select list won't update properly.\r\n    if (hasPrimitives) {\r\n        if (!state) state = store.getState();\r\n        primitives = LPointerTargetable.fromPointer(state.primitiveTypes);\r\n    }\r\n    if (hasReturnTypes) {\r\n        if (!state) state = store.getState();\r\n        primitives = LPointerTargetable.fromPointer(state.returnTypes);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(returns && returns.length > 0) && <optgroup label={'Defaults'}>\r\n                {returns.map((returnType, i) => {\r\n                    return <option key={i} value={returnType.id}>{returnType.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(primitives && primitives.length) && <optgroup label={'Primitives'}>\r\n                {primitives.map((primitive, i) => {\r\n                    return <option key={i} value={primitive.id}>{primitive.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(enumerators && enumerators.length > 0) && <optgroup label={'Enumerators'}>\r\n                {enumerators.map((enumerator, i) => {\r\n                    return <option key={i} value={enumerator.id}>{enumerator.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(classes && classes.length > 0) && <optgroup label={'Classes'}>\r\n                {classes.map((classifier, i) => {\r\n                    return <option key={i} value={classifier.id}>{classifier.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(objects && objects.length > 0) && <optgroup label={m2classname ? 'Instances of ' + m2classname : \"All objects\"}>\r\n                {objects.map((classifier, i) => {\r\n                    return <option key={i} value={classifier.id}>{classifier.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {/*options*/}\r\n        </>);\r\n}\r\nexport function InputComponent(props: AllProps) {\r\n    const data = props.data;\r\n    const getter = props.getter;\r\n    const setter = props.setter;\r\n    const field: string = props.field as string;\r\n    const oldValue = (!data) ? undefined : (getter) ? getter(data, field) : data[field]; // !== undefined); ? data[field] : 'undefined'\r\n    const [value, setValue] = useStateIfMounted<string>(oldValue);\r\n    const [isTouched, setIsTouched] = useStateIfMounted(false);\r\n    const inputRef = useRef<Element | null>(null);\r\n\r\n    // I check if the value that I have in my local state is being edited by other <Input />\r\n    if (value !== oldValue && !isTouched){\r\n        setValue(oldValue);\r\n        setIsTouched(false);\r\n    }\r\n\r\n\r\n    if (!(data || (getter && setter))) return(<>Either props.data or both getter & setter are required.</>);\r\n    let readOnly: boolean;\r\n    if (props.readonly !== undefined) readOnly = props.readonly;\r\n    // else if (props.disabled !== undefined) readOnly = props.disabled;\r\n    else readOnly = props.debugmodee !== 'true' && Defaults.check(data?.id)\r\n\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: ReactNode|undefined = props.jsxLabel || props.label;\r\n    let tooltip: ReactNode|string|undefined = ((props.tooltip === true) ? data?.['__info_of__' + field]?.txt : props.tooltip) || '';\r\n\r\n    let css = '';//'my-auto input ';\r\n    //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type==='text'\r\n    css += autosize ? ' autosize-input' : '';\r\n    const isBoolean = (['checkbox', 'radio'].includes(type));\r\n\r\n\r\n    const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (readOnly) return;\r\n        if (isBoolean) {\r\n            const target = evt.target.checked;\r\n            if (setter) setter(target, data, field);\r\n            else data[field] = target;\r\n            return;\r\n        }\r\n        if (props.tag === \"select\") {\r\n            onBlur(evt as any);\r\n        } else {\r\n            setValue(getValueFromEvent(evt));\r\n            setIsTouched(true);     // I'm editing the element in my local state.\r\n            // the actual set is done in onBlur\r\n        }\r\n    }\r\n    const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (evt.key === Keystrokes.enter) onBlur(evt as any);\r\n        if (evt.key === Keystrokes.escape) {\r\n            const oldValue = getter ? getter(data, field) : data[field];\r\n            (evt.target as HTMLInputElement).value = oldValue;\r\n            setValue(oldValue);\r\n            setIsTouched(false);\r\n            (evt.target as HTMLInputElement).blur();\r\n            // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\r\n            // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\r\n        }\r\n    }\r\n    const getValueFromEvent = (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) => {\r\n        switch (props.tag){\r\n            case \"textarea\": case \"input\": case \"select\": case \"\": case null: case \"undefined\": return evt.target.value;\r\n            default: return evt.target.innerText;\r\n        }\r\n    }\r\n\r\n    const onBlur = (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) => {\r\n        if (readOnly || isBoolean) return;\r\n        const newValue: string = getValueFromEvent(evt);\r\n        const oldValue = getter ? getter(data, field) : data[field];\r\n        if (newValue !== oldValue) {\r\n            if (setter) setter(newValue, data, field);\r\n            else data[field] = newValue;\r\n        }\r\n        // I terminate my editing, so I communicate it to other <Input /> that render the same field.\r\n        setIsTouched(false);\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.field;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.label;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.tooltip;\r\n    delete otherprops.hidden;\r\n    delete otherprops.inputStyle;\r\n    delete otherprops.children;\r\n    delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\r\n\r\n    let checked: boolean | undefined = undefined;\r\n    if (isBoolean) checked = typeof value === \"boolean\" ? value : (typeof value === \"string\" ? U.fromBoolString(value) : !!value);\r\n\r\n    let cursor: string;\r\n    if (tooltip) cursor = 'help';\r\n    else if (readOnly) cursor = 'not-allowed';\r\n    else if (isBoolean) cursor = 'pointer';\r\n    else cursor = 'auto';\r\n\r\n    let inputProps: GObject = { spellCheck: (props as any).spellCkeck || false, readOnly, disabled: readOnly, type, value, checked,\r\n        className: [props.inputClassName, css].join(' '),\r\n        style: (props.inputStyle || {}),\r\n        onChange, onBlur, onKeyDown} // key:`${field}.${data?.id}`\r\n    if (!inputProps.style.cursor && cursor === 'not-allowed') { inputProps.style.cursor = cursor; }\r\n\r\n    let input: ReactNode;\r\n    let rootprops: GObject = {...otherprops};\r\n    switch (typeof rootprops.ref) {\r\n        default: rootprops.ref = inputRef; break;\r\n        case \"object\":\r\n            let oldref = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldref.current = inputRef.current = v; }\r\n            break;\r\n        case \"function\":\r\n            let oldreff = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldreff(v); inputRef.current = v; }\r\n            break;\r\n    }\r\n    if (tooltip) {\r\n        rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, (rootprops.ref));\r\n        rootprops.onMouseLeave = () => Tooltip.hide();\r\n    }\r\n    let rootkeys = new Set(...Object.keys(rootprops));\r\n    //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\r\n    //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\r\n    for (let k of rootkeys) {\r\n        if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\r\n        if (inputProps[k]) inputProps[k] = function(...a:any) { inputProps[k](arguments); rootprops[k](arguments); }\r\n        else inputProps[k] = rootprops[k];\r\n        delete rootprops[k];\r\n    }\r\n    if (!label && !autosize) {\r\n        if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\r\n        if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\r\n        inputProps = {...rootprops, ...inputProps};\r\n        switch (props.tag){\r\n            case \"textarea\": return <textarea {...inputProps}>{inputProps.value}</textarea>;\r\n            case \"select\": return <select {...inputProps}>{getSelectOptions(data, field, props.options || props.children)}</select>;\r\n            case null: case undefined: case \"\": case \"input\": return <input {...inputProps} />;\r\n            default:\r\n                inputProps.contentEditable = inputProps.contentEditable !== false;\r\n                return React.createElement(props.tag, inputProps, props.children);\r\n        }\r\n    }\r\n    if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';\r\n\r\n    switch (props.tag){\r\n        case \"textarea\": input = <textarea {...inputProps}>{inputProps.value}</textarea>; break;\r\n        case \"select\": input = <select {...inputProps}>{getSelectOptions(data, field, props.options || props.children)}</select>; break;\r\n        case null: case undefined: case \"\": case \"input\": input = <input {...inputProps} />; break;\r\n        default:\r\n            inputProps.contentEditable = inputProps.contentEditable !== false;\r\n            input = React.createElement(props.tag, inputProps, props.children); break;\r\n    }\r\n\r\n    return <label {...rootprops}>{label || undefined}{input}</label>;\r\n    /*\r\n    return(<label className={'p-1'} {...otherprops}\r\n                  style={rootStyle}>\r\n\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                        onMouseLeave={e => setShowTooltip(false)}>{label}\r\n        </span>}\r\n\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                           onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n        </span>}\r\n\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n            <b className={'text-center text-capitalize'}>{field}</b>\r\n            <br />\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                         data-value={value}>{input}\r\n        </div> : input}\r\n    </label>);\r\n    */\r\n}\r\n\r\nInputComponent.cname = 'InputComponent';\r\nexport interface InputOwnProps {\r\n    data?: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field?: string;\r\n    // DANGER: use the data provided in parameters instead of using js closure, as the proxy accessed from using closure won't be updated in rerenders.\r\n    getter?: (data: any/*LPointerTargetable*/, field: string) => string | boolean | undefined;\r\n    setter?: (value: string|boolean, data: any, field: string) => void;\r\n    label?: string | ReactNode;\r\n    jsxLabel?: ReactNode; // @deprecated, use label\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n    'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    className?: string;\r\n    style?: GObject;\r\n    readonly?: boolean;\r\n    tooltip?: boolean | ReactNode;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    key?: React.Key | null;\r\n    placeholder?: string;\r\n    tag?: string;\r\n    children?: ReactNode;\r\n    // todo: div contenteditable\r\n}\r\n\r\nexport interface SelectOwnProps extends Omit<InputOwnProps, 'setter'> {\r\n    options?: JSX.Element;\r\n    setter?: (value: string, data: any, field: string) => void; // parent select has value: string | boolean\r\n}\r\ninterface RealOwnProps extends Omit<SelectOwnProps, 'setter'>{\r\n    setter: InputOwnProps['setter'];\r\n}\r\n\r\ninterface StateProps {\r\n    debugmodee: string;\r\n    data: LPointerTargetable & GObject;\r\n    // selected: Dictionary<Pointer<DUser>, LModelElement | null>;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<RealOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nexport function InputMapStateToProps(state: DState, ownProps: RealOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer | undefined = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data?.id;\r\n    ret.debugmodee = state.debug ? 'true' : 'false';\r\n    if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const InputConnected =\r\n    connect<StateProps, DispatchProps, RealOwnProps, DState>(InputMapStateToProps, mapDispatchToProps)(InputComponent);\r\n\r\n\r\nexport function Input(props: InputOwnProps, children: (string | React.Component)[] = []): ReactNode { return 'input'; }\r\nexport function Input2(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children} as any} />;\r\n}\r\n\r\nexport function TextArea(props: InputOwnProps, children: (string | React.Component)[] = []): ReactNode { return 'textarea'; }\r\nexport function TextArea2(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"textarea\"} as any} />;\r\n}\r\nexport function Select(props: SelectOwnProps, children: (string | React.Component)[] = []): ReactNode { return 'select'; }\r\nexport function Select2(props: SelectOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"select\"} as any} />;\r\n}\r\nexport const Edit = Input;\r\n\r\nInputComponent.cname = 'InputComponent';\r\nInputConnected.cname = 'InputConnected';\r\nInput.cname = 'Input';\r\nTextArea.cname = 'TextArea';\r\nSelect.cname = 'Select';\r\nEdit.cname = 'Edit';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}