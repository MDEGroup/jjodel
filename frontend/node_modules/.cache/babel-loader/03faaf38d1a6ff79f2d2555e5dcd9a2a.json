{"ast":null,"code":"/* Viewpoints > Options */import React from'react';import{LPointerTargetable,Select}from'../../../../joiner';import{connect}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FieldDataComponent(props){const view=props.view;const readOnly=props.readonly;let dview=view.__raw;/*const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        view.forceNodeType = value;\r\n        // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\r\n    }*/const appliableTo=dview.appliableTo;let preferredDisplay=dview.forceNodeType;switch(appliableTo){case undefined:case'Any':break;case'GraphVertex':if(preferredDisplay!=='Graph'||preferredDisplay!=='Vertex')preferredDisplay=appliableTo;break;default:preferredDisplay=appliableTo;break;}let graphElementOptions=/*#__PURE__*/_jsxs(\"optgroup\",{label:'Type of GraphElement',children:[/*#__PURE__*/_jsx(\"option\",{children:\"Any\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Graph\"}),/*#__PURE__*/_jsx(\"option\",{children:\"GraphVertex\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Vertex\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Edge\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EdgePoint\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Field\"})]});return/*#__PURE__*/_jsxs(\"section\",{className:'options-field',children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Field\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:'input-container',children:[/*#__PURE__*/_jsx(\"p\",{children:\"Appliable to:\"}),/*#__PURE__*/_jsx(Select,{data:view,field:'appliableTo',options:graphElementOptions,getter:()=>dview.appliableTo||'Any',setter:(v,data,field)=>view.appliableTo=v})]})})]});}function mapStateToProps(state,ownProps){const ret={};ret.view=LPointerTargetable.fromPointer(ownProps.viewID);return ret;}function mapDispatchToProps(dispatch){const ret={};return ret;}export const FieldData=connect(mapStateToProps,mapDispatchToProps)(FieldDataComponent);export default FieldData;","map":{"version":3,"names":["React","LPointerTargetable","Select","connect","jsx","_jsx","jsxs","_jsxs","FieldDataComponent","props","view","readOnly","readonly","dview","__raw","appliableTo","preferredDisplay","forceNodeType","undefined","graphElementOptions","label","children","className","data","field","options","getter","setter","v","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","FieldData"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/editors/views/data/FieldData.tsx"],"sourcesContent":["/* Viewpoints > Options */\r\n\r\nimport React, {Dispatch} from 'react';\r\nimport {DState, DViewElement, LPointerTargetable, LViewElement, Pointer, Select} from '../../../../joiner';\r\nimport {FakeStateProps} from '../../../../joiner/types';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction FieldDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = props.readonly;\r\n    let dview = view.__raw;\r\n    /*const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        view.forceNodeType = value;\r\n        // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\r\n    }*/\r\n\r\n    const appliableTo = dview.appliableTo;\r\n    let preferredDisplay: string = dview.forceNodeType as string;\r\n    switch (appliableTo){\r\n        case undefined: case 'Any': break;\r\n        case 'GraphVertex': if (preferredDisplay !== 'Graph' || (preferredDisplay as any) !== 'Vertex') preferredDisplay = appliableTo; break;\r\n        default: preferredDisplay = appliableTo; break;\r\n    }\r\n    let graphElementOptions = <optgroup label={'Type of GraphElement'}>\r\n        <option>Any</option>\r\n        <option>Graph</option>\r\n        <option>GraphVertex</option>\r\n        <option>Vertex</option>\r\n        <option>Edge</option>\r\n        <option>EdgePoint</option>\r\n        <option>Field</option>\r\n    </optgroup>;\r\n    return(<section className={'options-field'}>\r\n        <h5>Field</h5>\r\n        <div>\r\n            <div className={'input-container'}>\r\n                <p>Appliable to:</p>\r\n                <Select data={view} field={'appliableTo'}\r\n                        options={graphElementOptions}\r\n                        getter={() => dview.appliableTo || 'Any'}\r\n                        setter={(v: string, data: DViewElement, field: string, )=>view.appliableTo = v as any} />\r\n            </div>\r\n        </div>\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly : boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const FieldData = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FieldDataComponent);\r\n\r\nexport default FieldData;\r\n"],"mappings":"AAAA,0BAEA,MAAO,CAAAA,KAAK,KAAkB,OAAO,CACrC,OAA8BC,kBAAkB,CAAyBC,MAAM,KAAO,oBAAoB,CAE1G,OAAQC,OAAO,KAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpC,QAAS,CAAAC,kBAAkBA,CAACC,KAAe,CAAE,CACzC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACC,IAAI,CACvB,KAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACG,QAAQ,CAC/B,GAAI,CAAAC,KAAK,CAAGH,IAAI,CAACI,KAAK,CACtB;AACJ;AACA;AACA;AACA,OAEI,KAAM,CAAAC,WAAW,CAAGF,KAAK,CAACE,WAAW,CACrC,GAAI,CAAAC,gBAAwB,CAAGH,KAAK,CAACI,aAAuB,CAC5D,OAAQF,WAAW,EACf,IAAK,CAAAG,SAAS,CAAE,IAAK,KAAK,CAAE,MAC5B,IAAK,aAAa,CAAE,GAAIF,gBAAgB,GAAK,OAAO,EAAKA,gBAAgB,GAAa,QAAQ,CAAEA,gBAAgB,CAAGD,WAAW,CAAE,MAChI,QAASC,gBAAgB,CAAGD,WAAW,CAAE,MAC7C,CACA,GAAI,CAAAI,mBAAmB,cAAGZ,KAAA,aAAUa,KAAK,CAAE,sBAAuB,CAAAC,QAAA,eAC9DhB,IAAA,WAAAgB,QAAA,CAAQ,KAAG,CAAQ,CAAC,cACpBhB,IAAA,WAAAgB,QAAA,CAAQ,OAAK,CAAQ,CAAC,cACtBhB,IAAA,WAAAgB,QAAA,CAAQ,aAAW,CAAQ,CAAC,cAC5BhB,IAAA,WAAAgB,QAAA,CAAQ,QAAM,CAAQ,CAAC,cACvBhB,IAAA,WAAAgB,QAAA,CAAQ,MAAI,CAAQ,CAAC,cACrBhB,IAAA,WAAAgB,QAAA,CAAQ,WAAS,CAAQ,CAAC,cAC1BhB,IAAA,WAAAgB,QAAA,CAAQ,OAAK,CAAQ,CAAC,EAChB,CAAC,CACX,mBAAOd,KAAA,YAASe,SAAS,CAAE,eAAgB,CAAAD,QAAA,eACvChB,IAAA,OAAAgB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdhB,IAAA,QAAAgB,QAAA,cACId,KAAA,QAAKe,SAAS,CAAE,iBAAkB,CAAAD,QAAA,eAC9BhB,IAAA,MAAAgB,QAAA,CAAG,eAAa,CAAG,CAAC,cACpBhB,IAAA,CAACH,MAAM,EAACqB,IAAI,CAAEb,IAAK,CAACc,KAAK,CAAE,aAAc,CACjCC,OAAO,CAAEN,mBAAoB,CAC7BO,MAAM,CAAEA,CAAA,GAAMb,KAAK,CAACE,WAAW,EAAI,KAAM,CACzCY,MAAM,CAAEA,CAACC,CAAS,CAAEL,IAAkB,CAAEC,KAAa,GAAKd,IAAI,CAACK,WAAW,CAAGa,CAAS,CAAE,CAAC,EAChG,CAAC,CACL,CAAC,EACD,CAAC,CACd,CAcA,QAAS,CAAAC,eAAeA,CAACC,KAAa,CAAEC,QAAkB,CAAc,CACpE,KAAM,CAAAC,GAAe,CAAG,CAAC,CAAmB,CAC5CA,GAAG,CAACtB,IAAI,CAAGT,kBAAkB,CAACgC,WAAW,CAACF,QAAQ,CAACG,MAAM,CAAC,CAC1D,MAAO,CAAAF,GAAG,CACd,CAEA,QAAS,CAAAG,kBAAkBA,CAACC,QAAuB,CAAiB,CAChE,KAAM,CAAAJ,GAAkB,CAAG,CAAC,CAAC,CAC7B,MAAO,CAAAA,GAAG,CACd,CAEA,MAAO,MAAM,CAAAK,SAAS,CAAGlC,OAAO,CAC5B0B,eAAe,CACfM,kBACJ,CAAC,CAAC3B,kBAAkB,CAAC,CAErB,cAAe,CAAA6B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}