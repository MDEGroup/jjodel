{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\pages\\\\AllProjects.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LProject, U } from '../joiner';\nimport Dashboard from './Dashboard';\nimport { ProjectsApi } from \"../api/persistance\";\nimport { useNavigate } from \"react-router-dom\";\nimport Project from \"./components/Project\";\nimport Storage from \"../data/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllProjectsComponent(props) {\n  _s();\n  const {\n    projects\n  } = props;\n  const navigate = useNavigate();\n  const selectProject = id => {\n    navigate(`/project?id=${id}`);\n    U.refresh();\n  };\n  const exportProject = async project => {\n    U.download(`${project.name}.jjodel`, JSON.stringify(project.__raw));\n  };\n  const deleteProject = async project => {\n    await ProjectsApi.delete(project);\n  };\n  const reader = new FileReader();\n  reader.onload = async e => {\n    var _e$target;\n    /* Import Project File */\n    const content = String((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n    if (!content) return;\n    try {\n      const project = JSON.parse(content);\n      const projects = Storage.read('projects') || [];\n      const filtered = projects.filter(p => p.id !== project.id);\n      filtered.push(project);\n      Storage.write('projects', filtered);\n      U.refresh();\n    } catch (e) {\n      alert('Invalid File.');\n    }\n  };\n  const importProject = async e => {\n    const files = e.target.files || [];\n    if (!files.length) return;\n    const file = files[0];\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'file',\n      className: 'btn btn-success p-1 mx-1',\n      onChange: async e => await importProject(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'scroll'\n      },\n      className: 'd-flex flex-wrap',\n      children: projects.map(p => /*#__PURE__*/_jsxDEV(Project, {\n        data: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_s(AllProjectsComponent, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AllProjectsComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.projects = LProject.fromArr(state.projects);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nconst AllProjectsConnected = connect(mapStateToProps, mapDispatchToProps)(AllProjectsComponent);\nconst AllProjectsPage = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(AllProjectsConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = AllProjectsPage;\nexport default AllProjectsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"AllProjectsComponent\");\n$RefreshReg$(_c2, \"AllProjectsPage\");","map":{"version":3,"names":["React","connect","LProject","U","Dashboard","ProjectsApi","useNavigate","Project","Storage","jsxDEV","_jsxDEV","AllProjectsComponent","props","_s","projects","navigate","selectProject","id","refresh","exportProject","project","download","name","JSON","stringify","__raw","deleteProject","delete","reader","FileReader","onload","e","_e$target","content","String","target","result","parse","read","filtered","filter","p","push","write","alert","importProject","files","length","file","readAsText","children","type","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","map","data","_c","mapStateToProps","state","ownProps","ret","fromArr","mapDispatchToProps","dispatch","AllProjectsConnected","AllProjectsPage","arguments","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/pages/AllProjects.tsx"],"sourcesContent":["import React, {Dispatch, Component, ReactElement, ChangeEvent} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DProject, DState, DUser, LProject, U} from '../joiner';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport Dashboard from './Dashboard';\r\nimport {ProjectsApi} from \"../api/persistance\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Project from \"./components/Project\";\r\nimport Storage from \"../data/storage\";\r\n\r\n\r\nfunction AllProjectsComponent(props: AllProps) {\r\n    const {projects} = props;\r\n    const navigate = useNavigate();\r\n\r\n    const selectProject = (id: DProject['id']) => {\r\n        navigate(`/project?id=${id}`);\r\n        U.refresh();\r\n    }\r\n    const exportProject = async(project: LProject) => {\r\n        U.download(`${project.name}.jjodel`, JSON.stringify(project.__raw));\r\n    }\r\n    const deleteProject = async(project: LProject) => {\r\n        await ProjectsApi.delete(project);\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async e => {\r\n        /* Import Project File */\r\n        const content = String(e.target?.result);\r\n        if(!content) return;\r\n        try {\r\n            const project = JSON.parse(content) as DProject;\r\n            const projects = Storage.read<DProject[]>('projects') || [];\r\n            const filtered = projects.filter(p => p.id !== project.id);\r\n            filtered.push(project);\r\n            Storage.write('projects', filtered);\r\n            U.refresh();\r\n        } catch (e) {alert('Invalid File.')}\r\n    }\r\n    const importProject = async(e: ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files || [];\r\n        if(!files.length) return;\r\n        const file = files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    return(<Dashboard>\r\n        <input type={'file'} className={'btn btn-success p-1 mx-1'} onChange={async e => await importProject(e)} />\r\n        <div style={{overflow: 'scroll'}} className={'d-flex flex-wrap'}>\r\n            {projects.map(p => <Project key={p.id} data={p} />)}\r\n        </div>\r\n    </Dashboard>);\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {projects: LProject[]}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.projects = LProject.fromArr(state.projects);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nconst AllProjectsConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AllProjectsComponent);\r\n\r\nconst AllProjectsPage = (props: OwnProps, children: (string | Component)[] = []): ReactElement => {\r\n    return <AllProjectsConnected {...{...props, children}} />;\r\n}\r\n\r\nexport default AllProjectsPage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}