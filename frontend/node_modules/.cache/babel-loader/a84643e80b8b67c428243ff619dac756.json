{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\treeEditor\\\\treeEditor.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LGraphElement } from \"../../../joiner\";\nimport Tree from \"../../forEndUser/Tree\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeEditorComponent(props) {\n  const node = props.node;\n  const data = node === null || node === void 0 ? void 0 : node.model;\n  if (!data) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'p-2',\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n_c = TreeEditorComponent;\nfunction mapStateToProps(state, ownProps) {\n  var _state$_lastSelected;\n  const ret = {};\n  const nodeid = (_state$_lastSelected = state._lastSelected) === null || _state$_lastSelected === void 0 ? void 0 : _state$_lastSelected.node;\n  if (nodeid) ret.node = LGraphElement.fromPointer(nodeid);else ret.node = null;\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const TreeEditorConnected = connect(mapStateToProps, mapDispatchToProps)(TreeEditorComponent);\nexport const TreeEditor = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(TreeEditorConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = TreeEditor;\nexport default TreeEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeEditorComponent\");\n$RefreshReg$(_c2, \"TreeEditor\");","map":{"version":3,"names":["React","connect","LGraphElement","Tree","Fragment","_Fragment","jsxDEV","_jsxDEV","TreeEditorComponent","props","node","data","model","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","ownProps","_state$_lastSelected","ret","nodeid","_lastSelected","fromPointer","mapDispatchToProps","dispatch","TreeEditorConnected","TreeEditor","arguments","length","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/treeEditor/treeEditor.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {DState, DUser, LGraphElement} from \"../../../joiner\";\r\nimport {FakeStateProps} from \"../../../joiner/types\";\r\nimport Tree from \"../../forEndUser/Tree\";\r\n\r\nfunction TreeEditorComponent(props: AllProps) {\r\n    const node = props.node;\r\n    const data = node?.model;\r\n    if(!data) return(<></>);\r\n    return(<div className={'p-2'}>\r\n        <Tree data={data} />\r\n    </div>)\r\n}\r\ninterface OwnProps { }\r\ninterface StateProps {\r\n    node: LGraphElement|null;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    const nodeid = state._lastSelected?.node;\r\n    if(nodeid) ret.node = LGraphElement.fromPointer(nodeid);\r\n    else ret.node = null;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TreeEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TreeEditorComponent);\r\n\r\nexport const TreeEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <TreeEditorConnected {...{...props, children}} />;\r\n}\r\nexport default TreeEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAgC,OAAO;AACnD,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAuBC,aAAa,QAAO,iBAAiB;AAE5D,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,mBAAmBA,CAACC,KAAe,EAAE;EAC1C,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,MAAMC,IAAI,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK;EACxB,IAAG,CAACD,IAAI,EAAE,oBAAOJ,OAAA,CAAAF,SAAA,mBAAI,CAAC;EACtB,oBAAOE,OAAA;IAAKM,SAAS,EAAE,KAAM;IAAAC,QAAA,eACzBP,OAAA,CAACJ,IAAI;MAACQ,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AACV;AAACC,EAAA,GAPQX,mBAAmB;AAe5B,SAASY,eAAeA,CAACC,KAAa,EAAEC,QAAkB,EAAc;EAAA,IAAAC,oBAAA;EACpE,MAAMC,GAAe,GAAG,CAAC,CAAmB;EAC5C,MAAMC,MAAM,IAAAF,oBAAA,GAAGF,KAAK,CAACK,aAAa,cAAAH,oBAAA,uBAAnBA,oBAAA,CAAqBb,IAAI;EACxC,IAAGe,MAAM,EAAED,GAAG,CAACd,IAAI,GAAGR,aAAa,CAACyB,WAAW,CAACF,MAAM,CAAC,CAAC,KACnDD,GAAG,CAACd,IAAI,GAAG,IAAI;EACpB,OAAOc,GAAG;AACd;AAEA,SAASI,kBAAkBA,CAACC,QAAuB,EAAiB;EAChE,MAAML,GAAkB,GAAG,CAAC,CAAC;EAC7B,OAAOA,GAAG;AACd;AAGA,OAAO,MAAMM,mBAAmB,GAAG7B,OAAO,CACtCmB,eAAe,EACfQ,kBACJ,CAAC,CAACpB,mBAAmB,CAAC;AAEtB,OAAO,MAAMuB,UAAU,GAAG,SAAAA,CAACtB,KAAe,EAAgE;EAAA,IAA9DK,QAAsC,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnF,oBAAOzB,OAAA,CAACuB,mBAAmB;IAAM,GAAGrB,KAAK;IAAEK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAiB,KAAI,CAAC;AAC5D,CAAC;AAAAC,GAAA,GAFYL,UAAU;AAGvB,eAAeA,UAAU;AAAC,IAAAZ,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}