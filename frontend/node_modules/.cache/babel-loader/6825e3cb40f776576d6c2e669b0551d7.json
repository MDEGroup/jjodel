{"ast":null,"code":"import { DProject, SetRootFieldAction, U } from '../../joiner';\nimport Storage from \"../../data/storage\";\nimport Api from \"../../data/api\";\nclass ProjectsApi {\n  static async create(type, name) {\n    let m2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let m1 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let otherProjects = arguments.length > 4 ? arguments[4] : undefined;\n    const project = DProject.new(type, name, undefined, m2, m1, undefined, otherProjects);\n    if (U.isOffline()) Offline.create(project);else await Online.create(project);\n    return project;\n  }\n  static async getAll() {\n    if (U.isOffline()) Offline.getAll();else await Online.getAll();\n  }\n  static async delete(project) {\n    if (U.isOffline()) Offline.delete(project.__raw);else await Online.delete(project.__raw);\n    project.delete(); // penso sia meglio spostare questi check isOffline() etc dentro la project.delete()\n  }\n\n  static async getOne(id) {\n    if (U.isOffline()) return Offline.getOne(id);else return await Online.getOne(id);\n  }\n  static async save(project) {\n    if (!project) return;\n    SetRootFieldAction.new('_lastSelected', undefined);\n    if (U.isOffline()) await Offline.save(project.__raw);else await Online.save(project.__raw);\n  }\n}\nclass Offline {\n  static create(project) {\n    const projects = Storage.read('projects') || [];\n    projects.push(project);\n    Storage.write('projects', projects);\n  }\n  static getAll() {\n    const projects = Storage.read('projects') || [];\n    for (const project of projects) DProject.new(project.type, project.name, project.state, [], [], project.id);\n  }\n  static delete(project) {\n    const projects = Storage.read('projects') || [];\n    const filteredProjects = projects.filter(p => p.id !== project.id);\n    Storage.write('projects', filteredProjects);\n  }\n  static getOne(id) {\n    const projects = Storage.read('projects') || [];\n    let filtered = projects.filter(p => p.id === id);\n    if (filtered.length <= 0) return null;\n    return filtered[0];\n  }\n  static async save(project) {\n    const projects = Storage.read('projects') || [];\n    const filtered = projects.filter(p => p.id !== project.id);\n    const state = await U.compressedState();\n    Storage.write('projects', [...filtered, {\n      ...project,\n      state\n    }]);\n    alert('Saved');\n  }\n}\nclass Online {\n  static async create(project) {\n    await Api.post(`${Api.persistance}/projects`, {\n      id: project.id,\n      name: project.name,\n      type: project.type\n    });\n  }\n  static async getAll() {\n    const response = await Api.get(`${Api.persistance}/projects`);\n    if (response.code !== 200) {\n      /* 401: Unauthorized -> Invalid Token (Local Storage)  */\n      Storage.reset();\n      U.refresh();\n    }\n    const data = U.wrapper(response.data);\n    for (const project of data) DProject.new(project.type, project.name, project.state, [], [], project.id);\n  }\n  static async delete(project) {\n    await Api.delete(`${Api.persistance}/projects/${project.id}`);\n  }\n  static async getOne(id) {\n    const response = await Api.get(`${Api.persistance}/projects/${id}`);\n    if (response.code !== 200) return null;\n    return U.wrapper(response.data);\n  }\n  static async save(project) {\n    const state = await U.compressedState();\n    const response = await Api.patch(`${Api.persistance}/projects/${project.id}`, {\n      ...project,\n      state\n    });\n    if (response.code !== 200) alert('Cannot Save');else alert('Saved');\n  }\n}\nexport { ProjectsApi };","map":{"version":3,"names":["DProject","SetRootFieldAction","U","Storage","Api","ProjectsApi","create","type","name","m2","arguments","length","undefined","m1","otherProjects","project","new","isOffline","Offline","Online","getAll","delete","__raw","getOne","id","save","projects","read","push","write","state","filteredProjects","filter","p","filtered","compressedState","alert","post","persistance","response","get","code","reset","refresh","data","wrapper","patch"],"sources":["C:/d/Programming/web/jodel-mde/src/api/persistance/projects.ts"],"sourcesContent":["import {\r\n    Dictionary,\r\n    DModel,\r\n    DProject, DUser,\r\n    LPointerTargetable,\r\n    LProject,\r\n    LUser,\r\n    Pointer,\r\n    SetRootFieldAction,\r\n    U\r\n} from '../../joiner';\r\nimport Storage from \"../../data/storage\";\r\nimport Api from \"../../data/api\";\r\n\r\nclass ProjectsApi {\r\n    static async create(type: DProject['type'], name: DProject['name'], m2: Pointer<DModel>[] = [], m1: Pointer<DModel>[] = [], otherProjects?: LProject[]): Promise<DProject> {\r\n\r\n        const project = DProject.new(type, name, undefined, m2, m1, undefined, otherProjects);\r\n        if(U.isOffline()) Offline.create(project);\r\n        else await Online.create(project);\r\n        return project;\r\n    }\r\n    static async getAll(): Promise<void> {\r\n        if(U.isOffline()) Offline.getAll();\r\n        else await Online.getAll();\r\n    }\r\n    static async delete(project: LProject): Promise<void> {\r\n        if(U.isOffline()) Offline.delete(project.__raw as DProject);\r\n        else await Online.delete(project.__raw as DProject);\r\n        project.delete(); // penso sia meglio spostare questi check isOffline() etc dentro la project.delete()\r\n    }\r\n    static async getOne(id: DProject['id']): Promise<null|DProject> {\r\n        if(U.isOffline()) return Offline.getOne(id);\r\n        else return await Online.getOne(id);\r\n    }\r\n    static async save(project: LUser['project']): Promise<void> {\r\n        if(!project) return;\r\n        SetRootFieldAction.new('_lastSelected', undefined);\r\n        if(U.isOffline()) await Offline.save(project.__raw as DProject);\r\n        else await Online.save(project.__raw as DProject);\r\n    }\r\n}\r\n\r\nclass Offline {\r\n    static create (project: DProject): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        projects.push(project);\r\n        Storage.write('projects', projects);\r\n    }\r\n    static getAll(): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        for(const project of projects)\r\n            DProject.new(project.type, project.name, project.state, [], [], project.id);\r\n    }\r\n    static delete(project: DProject): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        const filteredProjects = projects.filter(p => p.id !== project.id);\r\n        Storage.write('projects', filteredProjects);\r\n    }\r\n    static getOne(id: string): DProject|null {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        let filtered: DProject|DProject[] = projects.filter(p => p.id === id);\r\n        if(filtered.length <= 0) return null;\r\n        return filtered[0];\r\n    }\r\n    static async save(project: DProject): Promise<void> {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        const filtered = projects.filter(p => p.id !== project.id);\r\n        const state = await U.compressedState();\r\n        Storage.write('projects', [...filtered, {...project, state}]);\r\n        alert('Saved');\r\n    }\r\n}\r\n\r\nclass Online {\r\n    static async create (project: DProject): Promise<void> {\r\n        await Api.post(`${Api.persistance}/projects`, {\r\n           id: project.id,\r\n           name: project.name,\r\n           type: project.type\r\n        });\r\n    }\r\n    static async getAll(): Promise<void> {\r\n        const response = await Api.get(`${Api.persistance}/projects`);\r\n        if(response.code !== 200) {\r\n            /* 401: Unauthorized -> Invalid Token (Local Storage)  */\r\n            Storage.reset();\r\n            U.refresh();\r\n        }\r\n        const data = U.wrapper<DProject[]>(response.data);\r\n        for(const project of data)\r\n            DProject.new(project.type, project.name, project.state, [], [], project.id);\r\n    }\r\n    static async delete(project: DProject): Promise<void> {\r\n        await Api.delete(`${Api.persistance}/projects/${project.id}`);\r\n    }\r\n    static async getOne(id: string): Promise<DProject|null> {\r\n        const response = await Api.get(`${Api.persistance}/projects/${id}`);\r\n        if(response.code !== 200) return null;\r\n        return U.wrapper<DProject>(response.data);\r\n    }\r\n    static async save(project: DProject): Promise<void> {\r\n        const state = await U.compressedState();\r\n        const response = await Api.patch(`${Api.persistance}/projects/${project.id}`, {...project, state});\r\n        if(response.code !== 200) alert('Cannot Save');\r\n        else alert('Saved')\r\n    }\r\n}\r\n\r\nexport {ProjectsApi};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}