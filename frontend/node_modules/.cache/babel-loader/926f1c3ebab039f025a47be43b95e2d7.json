{"ast":null,"code":"import _construct from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct\";import _createForOfIteratorHelper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class,_class2,_dec2,_class3,_dec3,_class5,_dec4,_class7,_class8,_dec5,_class9,_class10,_dec6,_class11,_dec7,_class13,_class14;import{DPointerTargetable,RuntimeAccessible,windoww,Log,RuntimeAccessibleClass}from\"../joiner\";export var IPoint=(_dec=RuntimeAccessible('IPoint'),_dec(_class=(_class2=/*#__PURE__*/function(_RuntimeAccessibleCla){_inherits(IPoint,_RuntimeAccessibleCla);var _super=_createSuper(IPoint);function IPoint(){var _this;var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,IPoint);_this=_super.call(this);// super('dwc');\n_this.x=void 0;_this.y=void 0;IPoint.init_constructor(_assertThisInitialized(_this),x,y);return _this;}_createClass(IPoint,[{key:\"raw\",value:function raw(){return{x:this.x,y:this.y};}},{key:\"toString\",value:function toString(){var letters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var separator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\" \";if(letters)return JSON.stringify({x:this.x,y:this.y});else return this.x+separator+this.y+separator;}},{key:\"clone\",value:function clone(other){this.x=other.x;this.y=other.y;return this;}},{key:\"duplicate\",value:function duplicate(){var ret=this.new();ret.clone(this);return ret;}},{key:\"distanceFromPoint\",value:function distanceFromPoint(tentativeEnd){var skipSqrt=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var d_pow2=Math.pow(this.x-tentativeEnd.x,2)+Math.pow(this.y-tentativeEnd.y,2);return skipSqrt?d_pow2:Math.sqrt(d_pow2);// return this.subtract(tentativeEnd, true).absolute();\n}},{key:\"subtract\",value:function subtract(p2,newInstance){Log.e(!p2,'subtract argument must be a valid point: ',p2);var p1;if(!newInstance){p1=this;}else{p1=this.duplicate();}if(p2.x!==undefined)p1.x-=p2.x;if(p2.y!==undefined)p1.y-=p2.y;return p1;}},{key:\"add\",value:function add(p2,newInstance){Log.e(!p2,'add argument must be a valid point: ',p2);var p1;if(!newInstance){p1=this;}else{p1=this.duplicate();}if(p2.x!==undefined)p1.x+=p2.x;if(p2.y!==undefined)p1.y+=p2.y;return p1;}},{key:\"addAll\",value:function addAll(p,newInstance){var i;var p0;if(!newInstance){p0=this;}else{p0=this.duplicate();}for(i=0;i<p.length;i++){p0.add(p[i],true);}return p0;}},{key:\"subtractAll\",value:function subtractAll(p,newInstance){var i;var p0;if(!newInstance){p0=this;}else{p0=this.duplicate();}for(i=0;i<p.length;i++){p0.subtract(p[i],true);}return p0;}},{key:\"multiply\",value:function multiply(pt){var newInstance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var ret=newInstance?this.duplicate():this;if(typeof pt===\"number\"){ret.x*=pt;ret.y*=pt;}else{if(pt.x!==undefined)ret.x*=pt.x;if(pt.y!==undefined)ret.y*=pt.y;}return ret;}},{key:\"divide\",value:function divide(pt){var newInstance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var ret=newInstance?this.duplicate():this;if(typeof pt===\"number\"){ret.x/=pt;ret.y/=pt;}else{ret.x/=pt.x;ret.y/=pt.y;}return ret;}},{key:\"multiplyScalar\",value:function multiplyScalar(scalar,newInstance){Log.e(isNaN(+scalar),'IPoint.multiply()','scalar argument must be a valid number: ',scalar);var p1;if(!newInstance){p1=this;}else{p1=this.duplicate();}p1.x*=scalar;p1.y*=scalar;return p1;}},{key:\"divideScalar\",value:function divideScalar(scalar,newInstance){Log.e(isNaN(+scalar),'IPoint.divide()','scalar argument must be a valid number: ',scalar);var p1;if(!newInstance){p1=this;}else{p1=this.duplicate();}p1.x/=scalar;p1.y/=scalar;return p1;}},{key:\"isInTheMiddleOf\",value:function isInTheMiddleOf(firstPt,secondPt,tolleranza){var rectangle=Size.fromPoints(firstPt,secondPt);var tolleranzaX=tolleranza;// actually should be cos * arctan(m);\nvar tolleranzaY=tolleranza;// actually should be sin * arctan(m);\nif(this.x<rectangle.x-tolleranzaX||this.x>rectangle.x+rectangle.w+tolleranzaX){return false;}if(this.y<rectangle.y-tolleranzaX||this.y>rectangle.y+rectangle.h+tolleranzaY){return false;}// const m = IPoint.getM(firstPt, secondPt);\n// const q = IPoint.getQ(firstPt, secondPt);\nvar lineDistance=this.distanceFromLine(firstPt,secondPt);// console.log('distance:', lineDistance, ', this:', this, ', p1:', firstPt, ', p2:', secondPt);\nreturn lineDistance<=tolleranza;}},{key:\"distanceFromLine\",value:function distanceFromLine(p1,p2){var top=+(p2.y-p1.y)*this.x-(p2.x-p1.x)*this.y+p2.x*p1.y-p1.x*p2.y;var bot=(p2.y-p1.y)*(p2.y-p1.y)+(p2.x-p1.x)*(p2.x-p1.x);return Math.abs(top)/Math.sqrt(bot);}},{key:\"equals\",value:function equals(pt){var tolleranzaX=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var tolleranzaY=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(pt===null){return false;}return Math.abs(this.x-pt.x)<=tolleranzaX&&Math.abs(this.y-pt.y)<=tolleranzaY;}},{key:\"moveOnNearestBorder\",value:function moveOnNearestBorder(startVertexSize,clone,graph){var debug=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var pt=clone?this.duplicate():this;var tl=startVertexSize.tl();var tr=startVertexSize.tr();var bl=startVertexSize.bl();var br=startVertexSize.br();var L=pt.distanceFromLine(tl,bl);var R=pt.distanceFromLine(tr,br);var T=pt.distanceFromLine(tl,tr);var B=pt.distanceFromLine(bl,br);var min=Math.min(L,R,T,B);if(min===L){pt.x=tl.x;}if(min===R){pt.x=tr.x;}if(min===T){pt.y=tr.y;}if(min===B){pt.y=br.y;}if(debug&&graph&&pt instanceof GraphPoint){graph.markg(pt,false,'purple');}return pt;}},{key:\"getM\",value:function getM(pt2){var _IPoint$getM;return(_IPoint$getM=IPoint.getM)===null||_IPoint$getM===void 0?void 0:_IPoint$getM.call(IPoint,this,pt2);}},{key:\"degreeWith\",value:function degreeWith(pt2,toRadians){var directionVector=this.subtract(pt2,true);var ret=Math.atan2(directionVector.y,directionVector.x);return toRadians?ret:windoww.U.RadToDegree(ret);}},{key:\"absolute\",value:function absolute(){return Math.sqrt(this.x*this.x+this.y*this.y);}},{key:\"set\",value:function set(x,y){this.x=x;this.y=y;}// move the point by a vector with direction and distance (module)\n},{key:\"move\",value:function move(rad,distance){var clone=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var pt=clone?this.duplicate():this;pt.x+=distance*Math.cos(rad);pt.y+=distance*Math.sin(rad);return pt;}}],[{key:\"getM\",value:// @ts-ignore static getM is not null but must be declared nullable to achieve subclass mixing\n// public static getM? = function(firstPt: IPoint, secondPt: IPoint): number { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }\nfunction getM(firstPt,secondPt){return(firstPt.y-secondPt.y)/(firstPt.x-secondPt.x);}},{key:\"getQ\",value:function getQ(firstPt,secondPt,m){if(m===undefined)m=IPoint.getM(firstPt,secondPt);return firstPt.y-m*firstPt.x;}},{key:\"init_constructor\",value:function init_constructor(thiss){var x=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var y=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;thiss.id=\"POINT_\"+DPointerTargetable.maxID++ +\"_\"+new Date().getTime();thiss.className=thiss.constructor.name;if(x===null||x===undefined)thiss.x=undefined;else if(isNaN(+x)){thiss.x=0;}else thiss.x=+x;if(y===null||y===undefined)thiss.y=undefined;else if(isNaN(+y)){thiss.y=0;}else thiss.y=+y;thiss.className=this.cname;}}]);return IPoint;}(RuntimeAccessibleClass),_class2.subclasses=[],_class2._extends=[],_class2))||_class);export var GraphPoint=(_dec2=RuntimeAccessible('GraphPoint'),_dec2(_class3=/*#__PURE__*/function(_IPoint){_inherits(GraphPoint,_IPoint);var _super2=_createSuper(GraphPoint);function GraphPoint(){var _this2;_classCallCheck(this,GraphPoint);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this2=_super2.call.apply(_super2,[this].concat(args));_this2.dontmixwithPoint=void 0;return _this2;}_createClass(GraphPoint,[{key:\"new\",value:function _new(){return new GraphPoint();}},{key:\"toSize\",value:function toSize(w,h){return new GraphSize(this.x,this.y,w,h===undefined?w:h);}}],[{key:\"fromEvent\",value:function fromEvent(e){if(!e){return null;}var p=new Point(e.pageX,e.pageY);var g=null;throw new Error(\"todo: const g: IGraph = Status.status.getActiveModel().graph;\");return g.toGraphCoord(p);}}]);return GraphPoint;}(IPoint))||_class3);export var Point=(_dec3=RuntimeAccessible('Point'),_dec3(_class5=/*#__PURE__*/function(_IPoint2){_inherits(Point,_IPoint2);var _super3=_createSuper(Point);function Point(){var _this3;_classCallCheck(this,Point);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this3=_super3.call.apply(_super3,[this].concat(args));_this3.dontmixwithGPoint=void 0;return _this3;}_createClass(Point,[{key:\"new\",value:function _new(){return new Point();}},{key:\"toSize\",value:function toSize(w,h){return new Size(this.x,this.y,w,h===undefined?w:h);}}],[{key:\"fromEvent\",value:/// https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y\nfunction fromEvent(e){var p=new Point(e.pageX,e.pageY);return p;}}]);return Point;}(IPoint))||_class5);RuntimeAccessibleClass.set_extend(RuntimeAccessibleClass,IPoint);RuntimeAccessibleClass.set_extend(IPoint,GraphPoint);RuntimeAccessibleClass.set_extend(IPoint,Point);export var ISize=(_dec4=RuntimeAccessible('ISize'),_dec4(_class7=(_class8=/*#__PURE__*/function(_RuntimeAccessibleCla2){_inherits(ISize,_RuntimeAccessibleCla2);var _super4=_createSuper(ISize);function ISize(){var _this4;var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var w=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var h=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;_classCallCheck(this,ISize);_this4=_super4.call(this);// super('dwc');\n// do not override any fields from the DPointerTargetable, otherwise the ! in the override will reinizialize the attribute\n// erasing the value set in super or in the functions called by the constructor as side effect (static_init called from constructor will be overridden too)\n// if need to override types, build the \"new\" static function like in DModelElement\n_this4.x=void 0;_this4.y=void 0;_this4.w=void 0;_this4.h=void 0;ISize.init_constructor(_assertThisInitialized(_this4),x,y,w,h);return _this4;}_createClass(ISize,[{key:\"toString\",value:function toString(){var letters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var separator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\" \";if(letters)return JSON.stringify({x:this.x,y:this.y,w:this.w,h:this.h});else return this.x+separator+this.y+separator+this.w+separator+this.h;}},{key:\"set\",value:function set(x,y,w,h){if(x!==undefined)this.x=+x;if(y!==undefined)this.y=+y;if(w!==undefined)this.w=+w;if(h!==undefined)this.h=+h;}},{key:\"clone\",value:function clone(json){this.x=json.x;this.y=json.y;this.w=json.w;this.h=json.h;return this;}},{key:\"duplicate\",value:function duplicate(){return this.new().clone(this);}},{key:\"add\",value:function add(pt2,newInstance){var thiss=newInstance?this.duplicate():this;if(typeof pt2===\"number\"){thiss.x+=pt2;thiss.y+=pt2;thiss.w+=pt2;thiss.h+=pt2;return thiss;}if(pt2.x!==undefined)thiss.x+=pt2.x;if(pt2.y!==undefined)thiss.y+=pt2.y;if(pt2.w!==undefined)thiss.w+=pt2.w;if(pt2.h!==undefined)thiss.h+=pt2.h;return thiss;}},{key:\"subtract\",value:function subtract(pt2,newInstance){var thiss=newInstance?this.duplicate():this;if(typeof pt2===\"number\"){thiss.x-=pt2;thiss.y-=pt2;thiss.w-=pt2;thiss.h-=pt2;return thiss;}if(pt2.x!==undefined)thiss.x-=pt2.x;if(pt2.y!==undefined)thiss.y-=pt2.y;if(pt2.w!==undefined)thiss.w-=pt2.w;if(pt2.h!==undefined)thiss.h-=pt2.h;return thiss;}},{key:\"multiply\",value:function multiply(pt2,newInstance){var thiss=newInstance?this.duplicate():this;if(typeof pt2===\"number\"){thiss.x*=pt2;thiss.y*=pt2;thiss.w*=pt2;thiss.h*=pt2;return thiss;}if(pt2.x!==undefined)thiss.x*=pt2.x;if(pt2.y!==undefined)thiss.y*=pt2.y;if(pt2.w!==undefined)thiss.w*=pt2.w;if(pt2.h!==undefined)thiss.h*=pt2.h;return thiss;}},{key:\"divide\",value:function divide(pt2,newInstance){var thiss=newInstance?this.duplicate():this;if(typeof pt2===\"number\"){thiss.x/=pt2;thiss.y/=pt2;thiss.w/=pt2;thiss.h/=pt2;return thiss;}if(pt2.x!==undefined)thiss.x/=pt2.x;if(pt2.y!==undefined)thiss.y/=pt2.y;if(pt2.w!==undefined)thiss.w/=pt2.w;if(pt2.h!==undefined)thiss.h/=pt2.h;return thiss;}},{key:\"tl\",value:function tl(){return this.makePoint(this.x,this.y);}},{key:\"tr\",value:function tr(){return this.makePoint(this.x+this.w,this.y);}},{key:\"bl\",value:function bl(){return this.makePoint(this.x,this.y+this.h);}},{key:\"br\",value:function br(){return this.makePoint(this.x+this.w,this.y+this.h);}},{key:\"center\",value:function center(){return this.makePoint(this.x+this.w/2,this.y+this.h/2);}},{key:\"relativePoint\",value:function relativePoint(xPercent,yPercent){return this.makePoint(this.x+this.w*xPercent,this.y+this.h*yPercent);}},{key:\"equals\",value:function equals(size){return this.x===size.x&&this.y===size.y&&this.w===size.w&&this.h===size.h;}/// field-wise Math.min()\n},{key:\"min\",value:function min(minSize,clone){var ret=clone?this.new():this;if(!isNaN(minSize.x)&&ret.x<minSize.x){ret.x=minSize.x;}if(!isNaN(minSize.y)&&ret.y<minSize.y){ret.y=minSize.y;}if(!isNaN(minSize.w)&&ret.w<minSize.w){ret.w=minSize.w;}if(!isNaN(minSize.h)&&ret.h<minSize.h){ret.h=minSize.h;}return ret;}},{key:\"max\",value:function max(maxSize,clone){var ret=clone?this.new():this;if(!isNaN(maxSize.x)&&ret.x>maxSize.x){ret.x=maxSize.x;}if(!isNaN(maxSize.y)&&ret.y>maxSize.y){ret.y=maxSize.y;}if(!isNaN(maxSize.w)&&ret.w>maxSize.w){ret.w=maxSize.w;}if(!isNaN(maxSize.h)&&ret.h>maxSize.h){ret.h=maxSize.h;}return ret;}},{key:\"intersection\",value:function intersection(size){if(!size)return null;// anche \"isinside\"\nvar startx,starty,endx,endy;startx=Math.max(this.x,size.x);starty=Math.max(this.y,size.y);endx=Math.min(this.x+this.w,size.x+size.w);endy=Math.min(this.y+this.h,size.y+size.h);var intersection=this.new();// intersection.set(0, 0, 0, 0);\nintersection.x=startx;intersection.y=starty;intersection.w=endx-startx;intersection.h=endy-starty;var doesintersect=intersection.w>0&&intersection.h>0;return doesintersect?intersection:null;}},{key:\"contains\",value:function contains(pt){return pt.x>=this.x&&pt.x<=this.x+this.w&&pt.y>=this.y&&pt.y<=this.y+this.h;}},{key:\"isOverlapping\",value:function isOverlapping(size2){return!!this.intersection(size2);}},{key:\"isOverlappingAnyOf\",value:function isOverlappingAnyOf(sizes){if(!sizes)return false;var _iterator=_createForOfIteratorHelper(sizes),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var size=_step.value;if(this.isOverlapping(size))return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}},{key:\"multiplyPoint\",value:function multiplyPoint(other,newInstance){var ret=newInstance?this.new():this;ret.x*=other.x;ret.w*=other.x;ret.y*=other.y;ret.h*=other.y;return ret;}},{key:\"dividePoint\",value:function dividePoint(other,newInstance){var ret=newInstance?this.new():this;ret.x/=other.x;ret.w/=other.x;ret.y/=other.y;ret.h/=other.y;return ret;}},{key:\"boundary\",value:function boundary(size2){/*let minx, maxx, miny, maxy;\r\n        if (size2.y < this.y) { miny = size2.y; /*maxy = this.y;* / } else { miny = this.y; /*maxy = size2.y;* / }\r\n        if (size2.x < this.x) { minx = size2.y; /*maxx = this.x;* / } else { minx = this.x; /*maxy = size2.x;* / }\r\n        if (size2.y + size2.h < this.y + this.h) maxy = this.y + this.h; else maxy = size2.y + size2.h;\r\n        if (size2.x + size2.w < this.x + this.w) maxx = this.x + this.w; else maxx = size2.x + size2.w;\r\n        */this.h=size2.y+size2.h>this.y+this.h?size2.y+size2.h:this.y+this.h;// -miny\nthis.w=size2.x+size2.w>this.x+this.w?size2.x+size2.w:this.x+this.w;// -minx\nif(this.y<size2.y)this.y=size2.y;if(this.x<size2.x)this.x=size2.x;this.h-=this.y;this.w-=this.x;}}],[{key:\"init_constructor\",value:function init_constructor(thiss){var x=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var y=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var w=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var h=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;thiss.id=\"SIZE_\"+DPointerTargetable.maxID++ +\"_\"+new Date().getTime();thiss.className=thiss.constructor.cname;if(x===null||x===undefined)thiss.x=undefined;else if(isNaN(+x)){thiss.x=0;}else thiss.x=+x;if(y===null||y===undefined)thiss.y=undefined;else if(isNaN(+y)){thiss.y=0;}else thiss.y=+y;if(w===null||w===undefined)thiss.w=undefined;else if(isNaN(+w)){thiss.w=0;}else thiss.w=+w;if(h===null||h===undefined)thiss.h=undefined;else if(isNaN(+h)){thiss.h=0;}else thiss.h=+h;thiss.className=this.cname;}}]);return ISize;}(RuntimeAccessibleClass),_class8.subclasses=[],_class8._extends=[],_class8))||_class7);export var Size=(_dec5=RuntimeAccessible('Size'),_dec5(_class9=(_class10=/*#__PURE__*/function(_ISize){_inherits(Size,_ISize);var _super5=_createSuper(Size);function Size(){var _this5;_classCallCheck(this,Size);for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}_this5=_super5.call.apply(_super5,[this].concat(args));_this5.dontMixWithGraphSize=void 0;return _this5;}_createClass(Size,[{key:\"makePoint\",value:function makePoint(x,y){return new Point(x,y);}},{key:\"new\",value:function _new(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return _construct(Size,args);}}],[{key:\"of\",value:/**\r\n     * measure a node size\r\n     * @param {Element} element0 - the emelemnt to measure;\r\n     * @param {boolean} sizePostTransform - includes css transform instructions for computing his size. like transform: scale(1.5)\r\n     * */function of(element0){var sizePostTransform=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var element=element0;if(element===document){Log.ww('trying to measure document, rerouted to measuring body.');element=document.body;}var $element=$(element);Log.e(!element||element.tagName==='foreignObject','sizeof()','SvgForeignElementObject have a bug with size, measure a child instead.',element);var tmp;var size;if(!Size.sizeofvar){Size.sizeofvar=document.createElement('div');document.body.append(Size.sizeofvar);}var isOrphan=element.parentNode===null;// var visible = element.style.display !== 'none';\n// var visible = $element.is(\":visible\"); crea bug quando un elemento è teoricamente visibile ma orfano\nvar ancestors=windoww.U.ancestorArray(element);var displayStyles=ancestors.map(function(e){var _e$style;return e===null||e===void 0?void 0:(_e$style=e.style)===null||_e$style===void 0?void 0:_e$style.display;});if(isOrphan){Size.sizeofvar.append(element);}// show all and saveToDB visibility to restore it later\nfor(var i=0;i<ancestors.length;i++){var _ancestors$i,_ancestors$i$style;// document has undefined style\ndisplayStyles[i]=(_ancestors$i=ancestors[i])===null||_ancestors$i===void 0?void 0:(_ancestors$i$style=_ancestors$i.style)===null||_ancestors$i$style===void 0?void 0:_ancestors$i$style.display;if(displayStyles[i]==='none'||displayStyles[i]===''&&getComputedStyle(ancestors[i]).display==='none'){ancestors[i].style.display='block';}}tmp=$element.offset();// made sure cannot be undefined by removing display:none\nsize=new Size(tmp.left,tmp.top,0,0);if(sizePostTransform){tmp=element.getBoundingClientRect();size.w=tmp.width;size.h=tmp.height;}else{size.w=element.offsetWidth;size.h=element.offsetHeight;}// restore visibility\nfor(var _i=0;_i<ancestors.length;_i++){var _ancestors$_i$style;if(displayStyles[_i]===((_ancestors$_i$style=ancestors[_i].style)===null||_ancestors$_i$style===void 0?void 0:_ancestors$_i$style.display))continue;if(displayStyles[_i])ancestors[_i].style.display=displayStyles[_i];else ancestors[_i].style.removeProperty('display');}if(isOrphan){windoww.U.clear(Size.sizeofvar);}// Status.status.getActiveModel().graph.markS(size, false);\nreturn size;}},{key:\"fromPoints\",value:function fromPoints(firstPt,secondPt){var minX=Math.min(firstPt.x,secondPt.x);var maxX=Math.max(firstPt.x,secondPt.x);var minY=Math.min(firstPt.y,secondPt.y);var maxY=Math.max(firstPt.y,secondPt.y);return new Size(minX,minY,maxX-minX,maxY-minY);}}]);return Size;}(ISize),_class10.subclasses=[],_class10.sizeofvar=void 0,_class10.$sizeofvar=void 0,_class10))||_class9);export var GraphSize=(_dec6=RuntimeAccessible('GraphSize'),_dec6(_class11=/*#__PURE__*/function(_ISize2){_inherits(GraphSize,_ISize2);var _super6=_createSuper(GraphSize);function GraphSize(){var _this6;_classCallCheck(this,GraphSize);for(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}_this6=_super6.call.apply(_super6,[this].concat(args));_this6.dontMixWithSize=void 0;return _this6;}_createClass(GraphSize,[{key:\"new\",value:function _new(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}return _construct(GraphSize,args);}},{key:\"makePoint\",value:function makePoint(x,y){return new GraphPoint(x,y);}},{key:\"closestPoint\",value:function closestPoint(pt){return Geom.closestPoint(this,pt);}}],[{key:\"fromPoints\",value:function fromPoints(firstPt,secondPt){var minX=Math.min(firstPt.x,secondPt.x);var maxX=Math.max(firstPt.x,secondPt.x);var minY=Math.min(firstPt.y,secondPt.y);var maxY=Math.max(firstPt.y,secondPt.y);return new GraphSize(minX,minY,maxX-minX,maxY-minY);}// both pt and targetPt are readonly-safe parameters\n},{key:\"closestIntersection\",value:function closestIntersection(size,pt,targetPt,gridAlign,m0,q0){// let pt: GraphPoint = pt0.duplicate();\nvar m=m0||GraphPoint.getM(targetPt,pt);var q=q0||GraphPoint.getQ(targetPt,pt);// console.log(\"closestIntersection()\", {size, pt0, targetPt, m, q});\n// if perfectly vertical line\nif(m===Number.POSITIVE_INFINITY/* && q === Number.NEGATIVE_INFINITY*/){// top center\nif(Math.abs(targetPt.y-size.y)<=Math.abs(targetPt.y-size.y-size.h))return pt;// bottom center\nelse return new GraphPoint(pt.x,size.y+size.h);}var tl=size.tl(),tr=size.tr(),bl=size.bl(),br=size.br();var allowT,allowB,allowL,allowR;/*let distanceT: number = Number.POSITIVE_INFINITY, distanceB: number = Number.POSITIVE_INFINITY,\r\n            distanceL: number = Number.POSITIVE_INFINITY, distanceR: number = Number.POSITIVE_INFINITY;*/var intersectionT,intersectionB,intersectionL,intersectionR;allowT=Geom.isNumberBetween(tl.y,bl.y,targetPt.y);allowB=Geom.isNumberBetween(bl.y,tl.y,targetPt.y);allowL=Geom.isNumberBetween(tl.x,tr.x,targetPt.x);allowR=Geom.isNumberBetween(tr.x,tl.x,targetPt.x);// console.log(\"closestIntersection pt0\", {size, targetPt, pt0:pt0.raw(), gridAlign,\n//     corners:{tl:tl.raw(), tr:tr.raw(), bl:bl.raw(), br:br.raw()}, allows:{allowT, allowB, allowL, allowR}});\nif(!(allowT||allowB||allowL||allowR))return undefined;// point is internal to size\nif(allowT)intersectionT=Geom.lineToSegmentIntersection(tl,tr,q,m);else if(allowB)intersectionB=Geom.lineToSegmentIntersection(bl,br,q,m);// NOT else, (T|B) AND (L|R) can happen, or just 1 or 0 of those.\nif(allowL)intersectionL=Geom.lineToSegmentIntersection(tl,bl,q,m);else if(allowR)intersectionR=Geom.lineToSegmentIntersection(tr,br,q,m);// console.log(\"closestIntersection pt2\", {intersectionT, intersectionB, intersectionL, intersectionR});\n// only 1 intersection can happen\nreturn intersectionT||intersectionB||intersectionL||intersectionR;}},{key:\"closestIntersection_old\",value:function closestIntersection_old(size,prevPt,pt0,gridAlign){var ret=GraphSize.closestIntersection0(size,prevPt,pt0,gridAlign);// Log.exDev(!Geom.isOnEdge(ret, size), 'ClosestIntersection failed. not on Vertex edge.', {ret, size, prevPt, pt0, gridAlign});\nreturn ret;}},{key:\"closestIntersection0\",value:function closestIntersection0(vertexGSize,prevPt,pt0,gridAlign){var pt=pt0.duplicate();var m=GraphPoint.getM(prevPt,pt);var q=GraphPoint.getQ(prevPt,pt);// U.pe( Math.abs((pt.y - m * pt.x) - (prevPt.y - m * prevPt.x)) > .001, 'wrong math in Q:', (pt.y - m * pt.x), ' vs ', (prevPt.y - m * prevPt.x));\n/*const isL = prevPt.x < pt.x;\r\n    const isT = prevPt.y < pt.y;\r\n    const isR = !isL;\r\n    const isB = !isT; */if(m===Number.POSITIVE_INFINITY&&q===Number.NEGATIVE_INFINITY){// bottom middle\nreturn new GraphPoint(vertexGSize.x+vertexGSize.w/2,vertexGSize.y+vertexGSize.h);}// console.log('pt:', pt, 'm:', m, 'q:', q);\nvar L=new GraphPoint(0,0);var T=new GraphPoint(0,0);var R=new GraphPoint(0,0);var B=new GraphPoint(0,0);L.x=vertexGSize.x;L.y=m*L.x+q;R.x=vertexGSize.x+vertexGSize.w;R.y=m*R.x+q;T.y=vertexGSize.y;T.x=(T.y-q)/m;B.y=vertexGSize.y+vertexGSize.h;B.x=(B.y-q)/m;// prendo solo il compreso pt ~ prevPt (escludo così il \"pierce\" sulla faccia opposta), prendo il più vicino al centro.\n// console.log('4 possibili punti di intersezione (LTBR):', L, T, B, R);\n/* this.owner.mark(this.owner.toHtmlCoord(T), true, 'blue');\r\n    this.owner.mark(this.owner.toHtmlCoord(B), false, 'violet');\r\n    this.owner.mark(this.owner.toHtmlCoord(L), false, 'red');\r\n    this.owner.mark(this.owner.toHtmlCoord(R), false, 'orange');*/console.log(\"intersect pt1:\",{T:T,B:B,L:L,R:R});if(B.x>=pt.x&&B.x<=prevPt.x||B.x>=prevPt.x&&B.x<=pt.x){}else{B=null;}if(T.x>=pt.x&&T.x<=prevPt.x||T.x>=prevPt.x&&T.x<=pt.x){}else{T=null;}if(L.y>=pt.y&&L.y<=prevPt.y||L.y>=prevPt.y&&L.y<=pt.y){}else{L=null;}if(R.y>=pt.y&&R.y<=prevPt.y||R.y>=prevPt.y&&R.y<=pt.y){}else{R=null;}console.log(\"intersect pt2:\",{T:T,B:B,L:L,R:R});function closestmix(pt,closest,segStart,segEnd,mode){// changes pt\npt.x=closest.x;pt.y=closest.y;return;var main,sub;if(mode===\"TB\"){main=\"y\";sub=\"x\";}else{main=\"x\";sub=\"y\";}pt[main]=closest[main];// if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\n// pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\nif(closest[sub]<=segEnd[sub]&&closest[sub]>=segStart[sub])pt[sub]=closest[sub];else if(Math.abs(closest[sub]-segEnd[sub])<Math.abs(closest[sub]-segStart[sub]))pt[sub]=segEnd[sub];else pt[sub]=segStart[sub];}function closestmix2(pt,closest,segStart,segEnd,mode){// changes closest\nvar main,sub;if(mode===\"TB\"){main=\"y\";sub=\"x\";}else{main=\"x\";sub=\"y\";}// closest[main] = pt[main];\n// if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\n// pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\nif(closest[sub]<=segEnd[sub]&&closest[sub]>=segStart[sub]){/*no-op*/}else if(Math.abs(closest[sub]-segEnd[sub])<Math.abs(closest[sub]-segStart[sub]))closest[sub]=segEnd[sub];else closest[sub]=segStart[sub];}console.log(\"intersect pt2.5:\");try{if(T)closestmix2(pt,T,vertexGSize.tl(),vertexGSize.tr(),\"TB\");if(B)closestmix2(pt,B,vertexGSize.bl(),vertexGSize.br(),\"TB\");if(R)closestmix2(pt,R,vertexGSize.tr(),vertexGSize.br(),\"LR\");if(L)closestmix2(pt,L,vertexGSize.tl(),vertexGSize.bl(),\"LR\");}catch(e){console.error(\"intersect error\",e);}// console.log('superstiti step1: (LTBR):', L, T, B, R);\nconsole.log(\"intersect pt2.9:\");var vicinanzaT=!T?Number.POSITIVE_INFINITY:(T.x-pt.x)*(T.x-pt.x)+(T.y-pt.y)*(T.y-pt.y);var vicinanzaB=!B?Number.POSITIVE_INFINITY:(B.x-pt.x)*(B.x-pt.x)+(B.y-pt.y)*(B.y-pt.y);var vicinanzaL=!L?Number.POSITIVE_INFINITY:(L.x-pt.x)*(L.x-pt.x)+(L.y-pt.y)*(L.y-pt.y);var vicinanzaR=!R?Number.POSITIVE_INFINITY:(R.x-pt.x)*(R.x-pt.x)+(R.y-pt.y)*(R.y-pt.y);var closest=Math.min(vicinanzaT,vicinanzaB,vicinanzaL,vicinanzaR);console.log(\"intersect pt3:\",{vicinanzaT:vicinanzaT,vicinanzaB:vicinanzaB,vicinanzaL:vicinanzaL,vicinanzaR:vicinanzaR,closest:closest});// console.log( 'closest:', closest);\n// succede quando pt e prevPt sono entrambi all'interno del rettangolo del vertice.\n// L'edge non è visibile e il valore ritornato è irrilevante.\nif(closest===Number.POSITIVE_INFINITY){/* top center */pt=vertexGSize.tl();pt.x+=vertexGSize.w/2;}else if(closest===Number.POSITIVE_INFINITY){/* bottom center */pt=vertexGSize.br();pt.x-=vertexGSize.w/2;}else if(closest===vicinanzaT&&T){closestmix(pt,T,vertexGSize.tl(),vertexGSize.tr(),\"TB\");/*pt.y = T.y;\r\n            // if T.x is inside the top segment, take T.x, otherwise closest between size.tl.x and size.tr.x\r\n            if ((T.x <= tr.x && T.x >= tl.x)) pt.x = T.x;\r\n            else if (Math.abs(T.x-tr.x) < Math.abs(T.x-tl.x)) pt.x = tr.x;\r\n            else pt.x = tl.x;*/}if(closest===vicinanzaB){closestmix(pt,B,vertexGSize.bl(),vertexGSize.br(),\"TB\");}else if(closest===vicinanzaR){closestmix(pt,R,vertexGSize.tr(),vertexGSize.br(),\"LR\");}else if(closest===vicinanzaL){closestmix(pt,L,vertexGSize.tl(),vertexGSize.bl(),\"LR\");}if(!gridAlign){return pt;}if(!pt)return null;if(gridAlign.x&&(pt===T||pt===B||isNaN(closest))){var floorX=Math.floor(pt.x/gridAlign.x)*gridAlign.x;var ceilX=Math.ceil(pt.x/gridAlign.x)*gridAlign.x;var closestX;var farthestX;if(Math.abs(floorX-pt.x)<Math.abs(ceilX-pt.x)){closestX=floorX;farthestX=ceilX;}else{closestX=ceilX;farthestX=floorX;}// todo: possibile causa del bug che non allinea punti fake a punti reali. nel calcolo realPT questo non viene fatto.\n// if closest grid intersection is inside the vertex.\nif(closestX>=vertexGSize.x&&closestX<=vertexGSize.x+vertexGSize.w){pt.x=closestX;}else// if 2° closer grid intersection is inside the vertex.\nif(closestX>=vertexGSize.x&&closestX<=vertexGSize.x+vertexGSize.w){pt.x=farthestX;// if no intersection are inside the vertex (ignore grid)\n}else{/* do nothing */}}else if(gridAlign.y&&(pt===L||pt===R)){var floorY=Math.floor(pt.y/gridAlign.y)*gridAlign.y;var ceilY=Math.ceil(pt.y/gridAlign.y)*gridAlign.y;var closestY;var farthestY;if(Math.abs(floorY-pt.y)<Math.abs(ceilY-pt.y)){closestY=floorY;farthestY=ceilY;}else{closestY=ceilY;farthestY=floorY;}// if closest grid intersection is inside the vertex.\nif(closestY>=vertexGSize.y&&closestY<=vertexGSize.y+vertexGSize.h){pt.y=closestY;}else// if 2° closer grid intersection is inside the vertex.\nif(closestY>=vertexGSize.y&&closestY<=vertexGSize.y+vertexGSize.h){pt.y=farthestY;// if no intersection are inside the vertex (ignore grid)\n}else{/* do nothing */}}return pt;}}]);return GraphSize;}(ISize))||_class11);RuntimeAccessibleClass.set_extend(RuntimeAccessibleClass,ISize);RuntimeAccessibleClass.set_extend(ISize,Size);RuntimeAccessibleClass.set_extend(ISize,GraphSize);export var Geom=(_dec7=RuntimeAccessible('Geom'),_dec7(_class13=(_class14=/*#__PURE__*/function(_RuntimeAccessibleCla3){_inherits(Geom,_RuntimeAccessibleCla3);var _super7=_createSuper(Geom);function Geom(){_classCallCheck(this,Geom);return _super7.apply(this,arguments);}_createClass(Geom,null,[{key:\"isPositiveZero\",value:function isPositiveZero(m){if(!!Object.is){return Object.is(m,+0);}return 1/m===Number.POSITIVE_INFINITY;}},{key:\"isNegativeZero\",value:function isNegativeZero(m){if(!!Object.is){return Object.is(m,-0);}return 1/m===Number.NEGATIVE_INFINITY;}},{key:\"TanToRadian\",value:function TanToRadian(n){return Geom.DegreeToRad(Geom.TanToDegree(n));}},{key:\"TanToDegree\",value:function TanToDegree(n){if(Geom.isPositiveZero(n)){return 0;}if(n===Number.POSITIVE_INFINITY){return 90;}if(Geom.isNegativeZero(n)){return 180;}if(n===Number.POSITIVE_INFINITY){return 270;}return Geom.RadToDegree(window.Math.atan(n));}},{key:\"RadToDegree\",value:function RadToDegree(radians){return Geom.radToDeg(radians);}},{key:\"DegreeToRad\",value:function DegreeToRad(degree){return Geom.degToRad(degree);}},{key:\"radToDeg\",value:function radToDeg(radians){return radians*(180/Math.PI);}},{key:\"degToRad\",value:function degToRad(degree){return degree*(Math.PI/180);}},{key:\"isOnEdge\",value:// 0.001;\nfunction isOnEdge(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;return Geom.isOnHorizontalEdges(pt,shape,tolerance)||Geom.isOnVerticalEdges(pt,shape,tolerance);}},{key:\"isOnVerticalEdges\",value:function isOnVerticalEdges(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;return Geom.isOnLeftEdge(pt,shape,tolerance)||Geom.isOnRightEdge(pt,shape,tolerance);}},{key:\"isOnHorizontalEdges\",value:function isOnHorizontalEdges(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;return Geom.isOnTopEdge(pt,shape,tolerance)||Geom.isOnBottomEdge(pt,shape,tolerance);}},{key:\"isOnRightEdge\",value:function isOnRightEdge(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;if(!pt||!shape){return false;}if(tolerance)return Math.abs(pt.x-(shape.x+shape.w))<tolerance&&pt.y-shape.y>tolerance&&pt.y-(shape.y+shape.h)<tolerance;return pt.x===shape.x+shape.w&&pt.y>=shape.y&&pt.y<=shape.y+shape.h;}},{key:\"isOnLeftEdge\",value:function isOnLeftEdge(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;if(!pt||!shape){return false;}if(tolerance)return Math.abs(pt.x-shape.x)<tolerance&&pt.y-shape.y>tolerance&&pt.y-(shape.y+shape.h)<tolerance;return pt.x===shape.x&&pt.y>=shape.y&&pt.y<=shape.y+shape.h;}},{key:\"isOnTopEdge\",value:function isOnTopEdge(pt,shape){var tolerance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Geom.GeomTolerance;if(!pt||!shape){return false;}if(tolerance)return Math.abs(pt.y-shape.y)<tolerance&&pt.x-shape.x>tolerance&&pt.x-(shape.x+shape.w)<tolerance;return pt.y===shape.y&&pt.x>=shape.x&&pt.x<=shape.x+shape.w;}},{key:\"isOnBottomEdge\",value:function isOnBottomEdge(pt,shape,tolerance){if(!pt||!shape){return false;}if(tolerance)return Math.abs(pt.y-shape.y+shape.h)<tolerance&&pt.x-shape.x>tolerance&&pt.x-(shape.x+shape.w)<tolerance;return pt.y===shape.y+shape.h&&pt.x>=shape.x&&pt.x<=shape.x+shape.w;}},{key:\"closestPoint\",value:function closestPoint(size,pt){var top_closest=Geom.closestPointToSegment(size.tl(),size.tr(),pt);var bot_closest=Geom.closestPointToSegment(size.bl(),size.br(),pt);var left_closest=Geom.closestPointToSegment(size.tl(),size.bl(),pt);var right_closest=Geom.closestPointToSegment(size.tr(),size.br(),pt);var top_distance=top_closest.distanceFromPoint(pt,false);var bot_distance=bot_closest.distanceFromPoint(pt,false);var left_distance=left_closest.distanceFromPoint(pt,false);var right_distance=right_closest.distanceFromPoint(pt,false);var min_distance=Math.min(top_distance,bot_distance,left_distance,right_distance);if(min_distance===top_distance)return top_closest;if(min_distance===bot_distance)return bot_closest;if(min_distance===left_distance)return left_closest;return right_closest;}},{key:\"isMinusZero\",value:function isMinusZero(number){return 1/number==-Infinity;}},{key:\"closestPointToSegment\",value:function closestPointToSegment(segStart,segEnd,pt){// 1) find equation of line passing for start, end.\n// 2) then find all perpendicular lines, then the perpendicular line that pass through pt\n// 3) find intersection between Line(s,e) and line of point 2.\n// 4A) IF intersection is part of segment(s,e) that is closest.\n// 4B) ELSE, one of the 2 extremes of the segment is closest.\nvar x_intersect,y_intersect;var s=segStart;var e=segEnd;var mse=(e.y-s.y)/(e.x-s.x);if(mse===Number.POSITIVE_INFINITY||mse===Number.NEGATIVE_INFINITY){// s and e are both on the same y vertical line (same x)      // new GraphPoint(segStart.x, pt.y);\nx_intersect=segStart.x;y_intersect=pt.y;// 1), 2), 3) all done shortcut\n}else if(mse===0||Geom.isNegativeZero(mse)){// s and e are both on the same x horizontal line (same y)    // new GraphPoint(pt.x, segStart.y);\nx_intersect=pt.x;y_intersect=segStart.y;// 1), 2), 3) all done shortcut\n}else{var q=s.y-mse*s.x;// y = mx + q           q = y-mx\n// 1) done\nvar pmse=-1/mse;// perpendicular to mse\nvar pq=pt.y-pmse*pt.x;// 2) done\n//  m1 * x + q1 = y    -->   m1 * x + q1 = m2 * x + q2    -->    (m1-m2)x = q2-q1      -->     x=(q2-q1)/(m1-m2)\nx_intersect=(pq-q)/(mse-pmse);y_intersect=mse*x_intersect+q;//  y = mx +q\n// 3) done\n}var maxX,minX;var maxY,minY;if(s.x>e.x){maxX=s.x;minX=e.x;}else{maxX=e.x;minX=s.x;}if(s.y>e.y){maxY=s.y;minY=e.y;}else{maxY=e.y;minY=s.y;}if(x_intersect>=minX&&x_intersect<=maxX&&y_intersect>=minY&&y_intersect<=maxY)return new GraphPoint(x_intersect,y_intersect);// 4A) IF done\nvar sdist=Math.pow(s.x-x_intersect,2)+Math.pow(s.y-y_intersect,2);// actual distance is sqrt() of this, but i just need to find closest, not correct distance.\nvar edist=Math.pow(e.x-x_intersect,2)+Math.pow(e.y-y_intersect,2);return sdist<edist?new GraphPoint(s.x,s.y):new GraphPoint(e.x,e.y);// 4B) ELSE done\n}},{key:\"lineToSegmentIntersection\",value:function lineToSegmentIntersection(segStart,segEnd,q,m){if(segStart.x===segEnd.x){var _y=m*segStart.x+q;if(Geom.isNumberBetween(_y,segStart.y,segEnd.y))return new GraphPoint(segStart.x,_y);else return undefined;}else if(segStart.y===segEnd.y){var _x=(segStart.y-q)/m;if(Geom.isNumberBetween(_x,segStart.x,segEnd.x))return new GraphPoint(_x,segStart.y);else return undefined;//\n}var m2=segStart.getM(segEnd);var q2=IPoint.getQ(segStart,segEnd);if(m===m2){if(q2===q)return segStart;// line and segment coincident\nreturn undefined;// parallel\n}var intersect=Geom.lineToLineIntersection(m,q,m2,q2);if(intersect&&Geom.isNumberBetween(intersect.x,segStart.x,segEnd.x)&&Geom.isNumberBetween(intersect.y,segStart.y,segEnd.y))return intersect;else return undefined;}},{key:\"isNumberBetween\",value:function isNumberBetween(target,s,e){var max=Math.max(s,e);var min=Math.min(s,e);return target>=min&&target<=max;}},{key:\"lineToLineIntersection\",value:function lineToLineIntersection(m,q,m2,q2){var retIfParallel=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var retIfCoincident=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;if(m===m2){if(q===q2)return retIfCoincident;return retIfParallel;}if(m===Number.POSITIVE_INFINITY||m===Number.NEGATIVE_INFINITY||m2===Number.POSITIVE_INFINITY||m2===Number.NEGATIVE_INFINITY){// m or m2 are a vertical line, Q must be invalid too and i don't have a single point of the line.\n// it's actually infinite possible vertical parallel lines.\nreturn undefined;}/*\r\n            y = mx + q\r\n            y = nx + w\r\n            -->\r\n            mx + q = nx + w\r\n            -->\r\n            mx - nx = w - q\r\n            -->\r\n            x (m - n) = w - q\r\n            -->\r\n            x = (w - q)/(m - n)\r\n        */var x=(q2-q)/(m-m2);return new GraphPoint(x,m*x+q);}// @param start, end: are for determining direction. every m is a line that can be seen in 2 direction\n},{key:\"mToRad\",value:function mToRad(m,start,end){var rad;if(start.x===end.x){rad=start.y<end.y?Math.PI*3/2:Math.PI/2;}else{// console.log(\"rad diagonal\", {base:  Math.atan(m), add: start.x > end.x, sx: start.x, ex: end.x});\nrad=Math.atan(m)+(start.x>end.x?0:Math.PI);}return rad;}// intersect a rectangle with a line or segment (if end parameter is specified)\n// @return: [0, 2] intersections\n},{key:\"lineToSizeIntersection_TODO\",value:function lineToSizeIntersection_TODO(size,m,startLine,endIfSegment){// todo: use GraphSize.closestIntersection which is close. it is size-segment returning only the closest intersection\nreturn[];}}]);return Geom;}(RuntimeAccessibleClass),_class14.GeomTolerance=0,_class14))||_class13);RuntimeAccessibleClass.set_extend(RuntimeAccessibleClass,Geom);","map":{"version":3,"names":["DPointerTargetable","RuntimeAccessible","windoww","Log","RuntimeAccessibleClass","IPoint","_dec","_class","_class2","_RuntimeAccessibleCla","_inherits","_super","_createSuper","_this","x","arguments","length","undefined","y","_classCallCheck","call","init_constructor","_assertThisInitialized","_createClass","key","value","raw","toString","letters","separator","JSON","stringify","clone","other","duplicate","ret","new","distanceFromPoint","tentativeEnd","skipSqrt","d_pow2","Math","pow","sqrt","subtract","p2","newInstance","e","p1","add","addAll","p","i","p0","subtractAll","multiply","pt","divide","multiplyScalar","scalar","isNaN","divideScalar","isInTheMiddleOf","firstPt","secondPt","tolleranza","rectangle","Size","fromPoints","tolleranzaX","tolleranzaY","w","h","lineDistance","distanceFromLine","top","bot","abs","equals","moveOnNearestBorder","startVertexSize","graph","debug","tl","tr","bl","br","L","R","T","B","min","GraphPoint","markg","getM","pt2","_IPoint$getM","degreeWith","toRadians","directionVector","atan2","U","RadToDegree","absolute","set","move","rad","distance","cos","sin","getQ","m","thiss","id","maxID","Date","getTime","className","constructor","name","cname","subclasses","_extends","_dec2","_class3","_IPoint","_super2","_this2","_len","args","Array","_key","apply","concat","dontmixwithPoint","_new","toSize","GraphSize","fromEvent","Point","pageX","pageY","g","Error","toGraphCoord","_dec3","_class5","_IPoint2","_super3","_this3","_len2","_key2","dontmixwithGPoint","set_extend","ISize","_dec4","_class7","_class8","_RuntimeAccessibleCla2","_super4","_this4","json","makePoint","center","relativePoint","xPercent","yPercent","size","minSize","max","maxSize","intersection","startx","starty","endx","endy","doesintersect","contains","isOverlapping","size2","isOverlappingAnyOf","sizes","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","f","multiplyPoint","dividePoint","boundary","_dec5","_class9","_class10","_ISize","_super5","_this5","_len3","_key3","dontMixWithGraphSize","_len4","_key4","_construct","of","element0","sizePostTransform","element","document","ww","body","$element","$","tagName","tmp","sizeofvar","createElement","append","isOrphan","parentNode","ancestors","ancestorArray","displayStyles","map","_e$style","style","display","_ancestors$i","_ancestors$i$style","getComputedStyle","offset","left","getBoundingClientRect","width","height","offsetWidth","offsetHeight","_ancestors$_i$style","removeProperty","clear","minX","maxX","minY","maxY","$sizeofvar","_dec6","_class11","_ISize2","_super6","_this6","_len5","_key5","dontMixWithSize","_len6","_key6","closestPoint","Geom","closestIntersection","targetPt","gridAlign","m0","q0","q","Number","POSITIVE_INFINITY","allowT","allowB","allowL","allowR","intersectionT","intersectionB","intersectionL","intersectionR","isNumberBetween","lineToSegmentIntersection","closestIntersection_old","prevPt","pt0","closestIntersection0","vertexGSize","NEGATIVE_INFINITY","console","log","closestmix","closest","segStart","segEnd","mode","main","sub","closestmix2","error","vicinanzaT","vicinanzaB","vicinanzaL","vicinanzaR","floorX","floor","ceilX","ceil","closestX","farthestX","floorY","ceilY","closestY","farthestY","_dec7","_class13","_class14","_RuntimeAccessibleCla3","_super7","isPositiveZero","Object","is","isNegativeZero","TanToRadian","DegreeToRad","TanToDegree","window","atan","radians","radToDeg","degree","degToRad","PI","isOnEdge","shape","tolerance","GeomTolerance","isOnHorizontalEdges","isOnVerticalEdges","isOnLeftEdge","isOnRightEdge","isOnTopEdge","isOnBottomEdge","top_closest","closestPointToSegment","bot_closest","left_closest","right_closest","top_distance","bot_distance","left_distance","right_distance","min_distance","isMinusZero","number","Infinity","x_intersect","y_intersect","mse","pmse","pq","sdist","edist","m2","q2","intersect","lineToLineIntersection","target","retIfParallel","retIfCoincident","mToRad","start","end","lineToSizeIntersection_TODO","startLine","endIfSegment"],"sources":["C:/d/Programming/web/jodel-mde/src/common/Geom.ts"],"sourcesContent":["import type { GObject, Temporary, TODO} from \"../joiner\";\r\nimport {DPointerTargetable, RuntimeAccessible, windoww, Log, RuntimeAccessibleClass} from \"../joiner\";\r\nimport React from \"react\";\r\nimport {radian} from \"../joiner/types\";\r\n\r\n@RuntimeAccessible('IPoint')\r\nexport abstract class IPoint extends RuntimeAccessibleClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public x!: number;\r\n    public y!: number;\r\n\r\n    // @ts-ignore static getM is not null but must be declared nullable to achieve subclass mixing\r\n    // public static getM? = function(firstPt: IPoint, secondPt: IPoint): number { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }\r\n    public static getM(firstPt: IPoint, secondPt: IPoint): number { return (firstPt.y - secondPt.y) / (firstPt.x - secondPt.x); }\r\n    public static getQ(firstPt: IPoint, secondPt: IPoint, m?: number): number {\r\n        if (m === undefined) m = IPoint.getM(firstPt, secondPt);\r\n        return firstPt.y - (m * firstPt.x);\r\n    }\r\n\r\n    public constructor(x: number = 0, y: number = 0) {\r\n        super(); // super('dwc');\r\n        IPoint.init_constructor(this, x, y);\r\n    }\r\n\r\n    static init_constructor(thiss: GObject, x: any = 0, y: any = 0, ...a: any): void {\r\n        thiss.id = \"POINT_\" + (DPointerTargetable.maxID++) + \"_\" + new Date().getTime();\r\n        thiss.className = thiss.constructor.name;\r\n        if (x === null || x === undefined) thiss.x = undefined as Temporary;\r\n        else if (isNaN(+x)) { thiss.x = 0; }\r\n        else thiss.x = +x;\r\n        if (y === null || y === undefined) thiss.y = undefined as Temporary;\r\n        else if (isNaN(+y)) { thiss.y = 0; }\r\n        else thiss.y = +y;\r\n        thiss.className = this.cname;\r\n    }\r\n\r\n    public raw(): {x: number, y: number} { return {x: this.x, y: this.y}; }\r\n\r\n    public toString(letters: boolean=true, separator: string = \" \"): string {\r\n        if (letters) return  JSON.stringify({x:this.x, y: this.y});\r\n        else return this.x + separator + this.y + separator;\r\n    }\r\n    public clone(other: { x: number, y: number }): this { this.x = other.x; this.y = other.y; return this; }\r\n\r\n    protected abstract new(): this;\r\n    abstract toSize(w: number, h?: number): ISize;\r\n    public duplicate(): this { const ret = this.new(); ret.clone(this); return ret; }\r\n\r\n    public distanceFromPoint(tentativeEnd: IPoint, skipSqrt: boolean = false): number {\r\n        let d_pow2 = (this.x - tentativeEnd.x)**2 + (this.y - tentativeEnd.y)**2;\r\n        return skipSqrt ? d_pow2 : Math.sqrt(d_pow2);\r\n        // return this.subtract(tentativeEnd, true).absolute();\r\n    }\r\n\r\n    public subtract(p2: { x?: number, y?: number }, newInstance: boolean): this {\r\n        Log.e(!p2, 'subtract argument must be a valid point: ', p2);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        if (p2.x !== undefined) p1.x -= p2.x;\r\n        if (p2.y !== undefined) p1.y -= p2.y;\r\n        return p1; }\r\n\r\n    public add(p2: { x?: number, y?: number }, newInstance: boolean): this {\r\n        Log.e(!p2, 'add argument must be a valid point: ', p2);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        if (p2.x !== undefined) p1.x += p2.x;\r\n        if (p2.y !== undefined) p1.y += p2.y;\r\n        return p1; }\r\n\r\n    public addAll(p: IPoint[], newInstance: boolean): this {\r\n        let i;\r\n        let p0: this;\r\n        if (!newInstance) { p0 = this; } else { p0 = this.duplicate(); }\r\n        for (i = 0; i < p.length; i++) { p0.add(p[i], true); }\r\n        return p0; }\r\n\r\n    public subtractAll(p: this[], newInstance: boolean): this {\r\n        let i;\r\n        let p0: this;\r\n        if (!newInstance) { p0 = this; } else { p0 = this.duplicate(); }\r\n        for (i = 0; i < p.length; i++) { p0.subtract(p[i], true); }\r\n        return p0; }\r\n\r\n    public multiply(pt: {x?: number, y?: number} | number, newInstance: boolean = false): this {\r\n        let ret: this = (newInstance ? this.duplicate() : this);\r\n        if (typeof pt === \"number\") {\r\n            ret.x *= pt;\r\n            ret.y *= pt;\r\n        }\r\n        else {\r\n            if (pt.x !== undefined) ret.x *= pt.x;\r\n            if (pt.y !== undefined) ret.y *= pt.y;\r\n        }\r\n        return ret; }\r\n\r\n    public divide(pt: Partial<this> | number, newInstance: boolean = false): this {\r\n        let ret = (newInstance ? this.duplicate() : this);\r\n        if (typeof pt === \"number\") {\r\n            ret.x /= pt;\r\n            ret.y /= pt;\r\n        }\r\n        else {\r\n            ret.x /= pt.x as number;\r\n            ret.y /= pt.y as number;\r\n        }\r\n        return ret; }\r\n\r\n    public multiplyScalar(scalar: number, newInstance: boolean): this {\r\n        Log.e(isNaN(+scalar), 'IPoint.multiply()', 'scalar argument must be a valid number: ', scalar);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x *= scalar;\r\n        p1.y *= scalar;\r\n        return p1; }\r\n\r\n    public divideScalar(scalar: number, newInstance: boolean): this {\r\n        Log.e(isNaN(+scalar), 'IPoint.divide()', 'scalar argument must be a valid number: ', scalar);\r\n        let p1: this;\r\n        if (!newInstance) { p1 = this; } else { p1 = this.duplicate(); }\r\n        p1.x /= scalar;\r\n        p1.y /= scalar;\r\n        return p1; }\r\n\r\n    public isInTheMiddleOf(firstPt: this, secondPt: this, tolleranza: number): boolean {\r\n        const rectangle: Size = Size.fromPoints(firstPt, secondPt);\r\n        const tolleranzaX = tolleranza; // actually should be cos * arctan(m);\r\n        const tolleranzaY = tolleranza; // actually should be sin * arctan(m);\r\n        if (this.x < rectangle.x - tolleranzaX || this.x > rectangle.x + rectangle.w + tolleranzaX) { return false; }\r\n        if (this.y < rectangle.y - tolleranzaX || this.y > rectangle.y + rectangle.h + tolleranzaY) { return false; }\r\n        // const m = IPoint.getM(firstPt, secondPt);\r\n        // const q = IPoint.getQ(firstPt, secondPt);\r\n        const lineDistance = this.distanceFromLine(firstPt, secondPt);\r\n        // console.log('distance:', lineDistance, ', this:', this, ', p1:', firstPt, ', p2:', secondPt);\r\n        return lineDistance <= tolleranza; }\r\n\r\n    public distanceFromLine(p1: IPoint, p2: IPoint): number {\r\n        const top: number =\r\n            + (p2.y - p1.y) * this.x\r\n            - (p2.x - p1.x) * this.y\r\n            + p2.x * p1.y\r\n            - p1.x * p2.y;\r\n        const bot =\r\n            (p2.y - p1.y) * (p2.y - p1.y) +\r\n            (p2.x - p1.x) * (p2.x - p1.x);\r\n        return Math.abs(top) / Math.sqrt(bot);  }\r\n\r\n    public equals(pt: IPoint, tolleranzaX: number = 0, tolleranzaY: number = 0): boolean {\r\n        if (pt === null) { return false; }\r\n        return Math.abs(this.x - pt.x) <= tolleranzaX && Math.abs(this.y - pt.y) <= tolleranzaY; }\r\n\r\n    public moveOnNearestBorder(startVertexSize: ISize, clone: boolean, graph: TODO/*IGraph*/, debug: boolean = true): IPoint {\r\n        const pt: IPoint = clone ? this.duplicate() : this;\r\n        const tl: IPoint = startVertexSize.tl();\r\n        const tr: IPoint = startVertexSize.tr();\r\n        const bl: IPoint = startVertexSize.bl();\r\n        const br: IPoint = startVertexSize.br();\r\n        const L: number = pt.distanceFromLine(tl, bl);\r\n        const R: number = pt.distanceFromLine(tr, br);\r\n        const T: number = pt.distanceFromLine(tl, tr);\r\n        const B: number = pt.distanceFromLine(bl, br);\r\n        const min: number = Math.min(L, R, T, B);\r\n        if (min === L) { pt.x = tl.x; }\r\n        if (min === R) { pt.x = tr.x; }\r\n        if (min === T) { pt.y = tr.y; }\r\n        if (min === B) { pt.y = br.y; }\r\n        if (debug && graph && pt instanceof GraphPoint) { graph.markg(pt, false, 'purple'); }\r\n        return pt; }\r\n\r\n    public getM(pt2: IPoint): number { return IPoint.getM?.(this, pt2) as unknown as number; }\r\n\r\n    public degreeWith(pt2: IPoint, toRadians: boolean): number {\r\n        const directionVector: IPoint = this.subtract(pt2, true);\r\n        const ret: number = Math.atan2(directionVector.y, directionVector.x);\r\n        return toRadians ? ret : windoww.U.RadToDegree(ret); }\r\n\r\n    public absolute(): number { return Math.sqrt(this.x * this.x + this.y * this.y); }\r\n    public set(x: number, y: number) { this.x = x; this.y = y; }\r\n\r\n    // move the point by a vector with direction and distance (module)\r\n    move(rad: radian /*in radians!*/, distance: number, clone:boolean = true): this{\r\n        let pt = clone ? this.duplicate() : this;\r\n        pt.x += distance * Math.cos(rad);\r\n        pt.y += distance * Math.sin(rad);\r\n        return pt;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible('GraphPoint')\r\nexport class GraphPoint extends IPoint{\r\n    private dontmixwithPoint: any;\r\n    public static fromEvent(e: JQuery.ClickEvent | JQuery.MouseMoveEvent | JQuery.MouseUpEvent | JQuery.MouseDownEvent | JQuery.MouseEnterEvent | JQuery.MouseLeaveEvent | JQuery.MouseEventBase)\r\n        : GraphPoint | null {\r\n        if (!e) { return null; }\r\n        const p: Point = new Point(e.pageX, e.pageY);\r\n        const g: any = null;\r\n        throw new Error(\"todo: const g: IGraph = Status.status.getActiveModel().graph;\");\r\n        return g.toGraphCoord(p); }\r\n\r\n    protected new(): this { return new GraphPoint() as this;}\r\n    public toSize(w: number, h?: number): GraphSize {\r\n        return new GraphSize(this.x, this.y, w, (h === undefined) ? w : h);\r\n    }\r\n\r\n}\r\n\r\n\r\n@RuntimeAccessible('Point')\r\nexport class Point extends IPoint{\r\n    private dontmixwithGPoint: any;\r\n    /// https://stackoverflow.com/questions/6073505/what-is-the-difference-between-screenx-y-clientx-y-and-pagex-y\r\n    public static fromEvent(e: JQuery.ClickEvent | JQuery.MouseMoveEvent | JQuery.MouseUpEvent | JQuery.MouseDownEvent\r\n        | JQuery.MouseEnterEvent | JQuery.MouseLeaveEvent | JQuery.MouseEventBase | React.MouseEvent)\r\n        : Point {\r\n        const p: Point = new Point(e.pageX, e.pageY);\r\n        return p; }\r\n\r\n    protected new(): this { return new Point() as this;}\r\n    public toSize(w: number, h?: number): Size {\r\n        return new Size(this.x, this.y, w, (h === undefined) ? w : h);\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, IPoint);\r\nRuntimeAccessibleClass.set_extend(IPoint, GraphPoint);\r\nRuntimeAccessibleClass.set_extend(IPoint, Point);\r\n\r\n@RuntimeAccessible('ISize')\r\nexport abstract class ISize<PT extends IPoint = IPoint> extends RuntimeAccessibleClass {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public x!: number;\r\n    public y!: number;\r\n    public w!: number;\r\n    public h!: number;\r\n    public constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n        super(); // super('dwc');\r\n        // do not override any fields from the DPointerTargetable, otherwise the ! in the override will reinizialize the attribute\r\n        // erasing the value set in super or in the functions called by the constructor as side effect (static_init called from constructor will be overridden too)\r\n        // if need to override types, build the \"new\" static function like in DModelElement\r\n        ISize.init_constructor(this, x, y, w, h);\r\n    }\r\n\r\n    static init_constructor(thiss: GObject, x: any = 0, y: any = 0, w: any = 0, h: any = 0, ...a: any): void {\r\n        thiss.id = \"SIZE_\" + (DPointerTargetable.maxID++) + \"_\" + new Date().getTime();\r\n        thiss.className = (thiss.constructor as typeof RuntimeAccessibleClass).cname;\r\n        if (x === null || x === undefined) thiss.x = undefined as Temporary;\r\n        else if (isNaN(+x)) { thiss.x = 0; }\r\n        else thiss.x = +x;\r\n        if (y === null || y === undefined) thiss.y = undefined as Temporary;\r\n        else if (isNaN(+y)) { thiss.y = 0; }\r\n        else thiss.y = +y;\r\n        if (w === null || w === undefined) thiss.w = undefined as Temporary;\r\n        else if (isNaN(+w)) { thiss.w = 0; }\r\n        else thiss.w = +w;\r\n        if (h === null || h === undefined) thiss.h = undefined as Temporary;\r\n        else if (isNaN(+h)) { thiss.h = 0; }\r\n        else thiss.h = +h;\r\n        thiss.className = this.cname; }\r\n\r\n    public toString(letters: boolean=true, separator: string = \" \"): string {\r\n        if (letters) return JSON.stringify({x: this.x, y: this.y, w: this.w, h: this.h});\r\n        else return this.x + separator + this.y + separator + this.w + separator + this.h;\r\n    }\r\n\r\n    public set(x?: number, y?: number, w?: number, h?: number): void {\r\n        if (x !== undefined) (this.x = +x);\r\n        if (y !== undefined) (this.y = +y);\r\n        if (w !== undefined) (this.w = +w);\r\n        if (h !== undefined) (this.h = +h);\r\n    }\r\n\r\n    protected abstract makePoint(x: number, y: number): PT;\r\n    protected abstract new(...args:any): this;\r\n    public clone(json: this): this { this.x = json.x; this.y = json.y; this.w = json.w; this.h = json.h; return this; }\r\n    public duplicate(): this { return this.new().clone(this); }\r\n\r\n    public add(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x += pt2; thiss.y += pt2; thiss.w += pt2; thiss.h += pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x += pt2.x;\r\n        if (pt2.y !== undefined) thiss.y += pt2.y;\r\n        if (pt2.w !== undefined) thiss.w += pt2.w;\r\n        if (pt2.h !== undefined) thiss.h += pt2.h;\r\n        return thiss; }\r\n\r\n    public subtract(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x -= pt2; thiss.y -= pt2; thiss.w -= pt2; thiss.h -= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x -= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y -= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w -= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h -= pt2.h;\r\n        return thiss; }\r\n\r\n    public multiply(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x *= pt2; thiss.y *= pt2; thiss.w *= pt2; thiss.h *= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x *= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y *= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w *= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h *= pt2.h;\r\n        return thiss; }\r\n\r\n    public divide(pt2: number | {x?:number, y?:number, w?:number, h?:number}, newInstance?: boolean): this {\r\n        let thiss = newInstance ? this.duplicate() : this;\r\n        if (typeof pt2 === \"number\") { thiss.x /= pt2; thiss.y /= pt2; thiss.w /= pt2; thiss.h /= pt2; return thiss; }\r\n        if (pt2.x !== undefined) thiss.x /= pt2.x;\r\n        if (pt2.y !== undefined) thiss.y /= pt2.y;\r\n        if (pt2.w !== undefined) thiss.w /= pt2.w;\r\n        if (pt2.h !== undefined) thiss.h /= pt2.h;\r\n        return thiss; }\r\n\r\n\r\n    public tl(): PT {     return this.makePoint(   this.x,                 this.y             ); }\r\n    public tr(): PT {     return this.makePoint(this.x + this.w,        this.y             ); }\r\n    public bl(): PT {     return this.makePoint(   this.x,              this.y + this.h    ); }\r\n    public br(): PT {     return this.makePoint(this.x + this.w,     this.y + this.h    ); }\r\n    public center(): PT { return this.makePoint(this.x + this.w / 2, this.y + this.h / 2); }\r\n    public relativePoint(xPercent: number, yPercent: number): PT { return this.makePoint(this.x + this.w * xPercent, this.y + this.h * yPercent); }\r\n    public equals(size: this): boolean { return this.x === size.x && this.y === size.y && this.w === size.w && this.h === size.h; }\r\n\r\n    /// field-wise Math.min()\r\n    public min(minSize: this, clone: boolean): this {\r\n        const ret: this = clone ? this.new() : this;\r\n        if (!isNaN(minSize.x) && ret.x < minSize.x) { ret.x = minSize.x; }\r\n        if (!isNaN(minSize.y) && ret.y < minSize.y) { ret.y = minSize.y; }\r\n        if (!isNaN(minSize.w) && ret.w < minSize.w) { ret.w = minSize.w; }\r\n        if (!isNaN(minSize.h) && ret.h < minSize.h) { ret.h = minSize.h; }\r\n        return ret; }\r\n    public max(maxSize: this, clone: boolean): this {\r\n        const ret: this = clone ? this.new() : this;\r\n        if (!isNaN(maxSize.x) && ret.x > maxSize.x) { ret.x = maxSize.x; }\r\n        if (!isNaN(maxSize.y) && ret.y > maxSize.y) { ret.y = maxSize.y; }\r\n        if (!isNaN(maxSize.w) && ret.w > maxSize.w) { ret.w = maxSize.w; }\r\n        if (!isNaN(maxSize.h) && ret.h > maxSize.h) { ret.h = maxSize.h; }\r\n        return ret; }\r\n\r\n    public intersection(size: this): this | null {\r\n        if (!size) return null;\r\n        // anche \"isinside\"\r\n        let startx, starty, endx, endy;\r\n        startx = Math.max(this.x, size.x);\r\n        starty = Math.max(this.y, size.y);\r\n        endx = Math.min(this.x + this.w, size.x + size.w);\r\n        endy = Math.min(this.y + this.h, size.y + size.h);\r\n        const intersection: this = this.new();\r\n        // intersection.set(0, 0, 0, 0);\r\n        intersection.x = startx;\r\n        intersection.y = starty;\r\n        intersection.w = endx - startx;\r\n        intersection.h = endy - starty;\r\n        const doesintersect: boolean = intersection.w > 0 && intersection.h > 0;\r\n        return (doesintersect) ? intersection: null; }\r\n\r\n    public contains(pt: PT): boolean {\r\n        return  pt.x >= this.x && pt.x <= this.x + this.w && pt.y >= this.y && pt.y <= this.y + this.h; }\r\n\r\n    public isOverlapping(size2: this): boolean { return !!this.intersection(size2); }\r\n    public isOverlappingAnyOf(sizes: this[]): boolean {\r\n        if (!sizes) return false;\r\n        for (let size of sizes) { if (this.isOverlapping(size)) return true; }\r\n        return false;\r\n    }\r\n\r\n    public multiplyPoint(other: PT, newInstance: boolean): this {\r\n        const ret: this = newInstance ? this.new() : this;\r\n        ret.x *= other.x;\r\n        ret.w *= other.x;\r\n        ret.y *= other.y;\r\n        ret.h *= other.y;\r\n        return ret; }\r\n\r\n    public dividePoint(other: PT, newInstance: boolean): this {\r\n        const ret: this = newInstance ? this.new() : this;\r\n        ret.x /= other.x;\r\n        ret.w /= other.x;\r\n        ret.y /= other.y;\r\n        ret.h /= other.y;\r\n        return ret; }\r\n\r\n    public boundary(size2: this): void {\r\n        /*let minx, maxx, miny, maxy;\r\n        if (size2.y < this.y) { miny = size2.y; /*maxy = this.y;* / } else { miny = this.y; /*maxy = size2.y;* / }\r\n        if (size2.x < this.x) { minx = size2.y; /*maxx = this.x;* / } else { minx = this.x; /*maxy = size2.x;* / }\r\n        if (size2.y + size2.h < this.y + this.h) maxy = this.y + this.h; else maxy = size2.y + size2.h;\r\n        if (size2.x + size2.w < this.x + this.w) maxx = this.x + this.w; else maxx = size2.x + size2.w;\r\n        */\r\n        this.h = (size2.y + size2.h > this.y + this.h ? size2.y + size2.h : this.y + this.h); // -miny\r\n        this.w = (size2.x + size2.w > this.x + this.w ? size2.x + size2.w : this.x + this.w); // -minx\r\n        if (this.y < size2.y) this.y = size2.y;\r\n        if (this.x < size2.x) this.x = size2.x;\r\n        this.h -= this.y;\r\n        this.w -= this.x;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible('Size')\r\nexport class Size extends ISize<Point> {\r\n    static subclasses: any[] = [];\r\n    private static sizeofvar: HTMLElement;\r\n    private static $sizeofvar: JQuery<HTMLElement>;\r\n    private dontMixWithGraphSize: any;\r\n\r\n    /**\r\n     * measure a node size\r\n     * @param {Element} element0 - the emelemnt to measure;\r\n     * @param {boolean} sizePostTransform - includes css transform instructions for computing his size. like transform: scale(1.5)\r\n     * */\r\n    public static of(element0: Element, sizePostTransform: boolean = true): Size {\r\n        let element: HTMLElement = element0 as HTMLElement;\r\n        if (element as unknown === document) {\r\n            Log.ww('trying to measure document, rerouted to measuring body.');\r\n            element = document.body as any;\r\n        }\r\n        const $element = $(element);\r\n        Log.e(!element || element.tagName === 'foreignObject', 'sizeof()', 'SvgForeignElementObject have a bug with size, measure a child instead.', element);\r\n        let tmp;\r\n        let size: Size;\r\n        if (!Size.sizeofvar) {\r\n            Size.sizeofvar = document.createElement('div');\r\n            document.body.append(Size.sizeofvar); }\r\n\r\n        const isOrphan = element.parentNode === null;\r\n        // var visible = element.style.display !== 'none';\r\n        // var visible = $element.is(\":visible\"); crea bug quando un elemento è teoricamente visibile ma orfano\r\n        const ancestors =  windoww.U.ancestorArray(element);\r\n        const displayStyles: string[] = ancestors.map( (e: HTMLElement) => e?.style?.display);\r\n        if (isOrphan) { Size.sizeofvar.append(element); }\r\n        // show all and saveToDB visibility to restore it later\r\n        for (let i = 0; i < ancestors.length; i++) { // document has undefined style\r\n            displayStyles[i] = ancestors[i]?.style?.display;\r\n            if (displayStyles[i] === 'none' || (displayStyles[i] === '' && getComputedStyle(ancestors[i]).display === 'none')) { ancestors[i].style.display = 'block' }\r\n        }\r\n        tmp = $element.offset() as JQuery.Coordinates; // made sure cannot be undefined by removing display:none\r\n        size = new Size(tmp.left, tmp.top, 0, 0);\r\n        if (sizePostTransform) {\r\n            tmp = element.getBoundingClientRect();\r\n            size.w = tmp.width;\r\n            size.h = tmp.height;\r\n        }\r\n        else {\r\n            size.w = element.offsetWidth;\r\n            size.h = element.offsetHeight;\r\n        }\r\n        // restore visibility\r\n        for (let i = 0; i < ancestors.length; i++) {\r\n            if (displayStyles[i] === ancestors[i].style?.display) continue;\r\n            if (displayStyles[i]) ancestors[i].style.display = displayStyles[i];\r\n            else ancestors[i].style.removeProperty('display');\r\n        }\r\n        if (isOrphan) {  windoww.U.clear(Size.sizeofvar); }\r\n        // Status.status.getActiveModel().graph.markS(size, false);\r\n        return size;\r\n    }\r\n\r\n    public static fromPoints(firstPt: IPoint, secondPt: IPoint): Size {\r\n        const minX = Math.min(firstPt.x, secondPt.x);\r\n        const maxX = Math.max(firstPt.x, secondPt.x);\r\n        const minY = Math.min(firstPt.y, secondPt.y);\r\n        const maxY = Math.max(firstPt.y, secondPt.y);\r\n        return new Size(minX, minY, maxX - minX, maxY - minY); }\r\n\r\n    protected makePoint(x: number, y: number): Point { return new Point(x, y); }\r\n    protected new(...args:any): this { return new Size(...args) as this; }\r\n}\r\n@RuntimeAccessible('GraphSize')\r\nexport class GraphSize extends ISize<GraphPoint> {\r\n    private dontMixWithSize: any;\r\n\r\n    public static fromPoints(firstPt: GraphPoint, secondPt: GraphPoint): GraphSize {\r\n        const minX = Math.min(firstPt.x, secondPt.x);\r\n        const maxX = Math.max(firstPt.x, secondPt.x);\r\n        const minY = Math.min(firstPt.y, secondPt.y);\r\n        const maxY = Math.max(firstPt.y, secondPt.y);\r\n        return new GraphSize(minX, minY, maxX - minX, maxY - minY); }\r\n\r\n    // both pt and targetPt are readonly-safe parameters\r\n    public static closestIntersection(size: GraphSize, pt: GraphPoint, targetPt: GraphPoint, gridAlign?: GraphPoint, m0?:number, q0?:number): GraphPoint | undefined {\r\n        // let pt: GraphPoint = pt0.duplicate();\r\n        const m = m0 || GraphPoint.getM(targetPt, pt);\r\n        const q = q0 || GraphPoint.getQ(targetPt, pt);\r\n        // console.log(\"closestIntersection()\", {size, pt0, targetPt, m, q});\r\n        // if perfectly vertical line\r\n        if (m === Number.POSITIVE_INFINITY/* && q === Number.NEGATIVE_INFINITY*/) {\r\n            // top center\r\n            if (Math.abs(targetPt.y - size.y) <= Math.abs(targetPt.y - size.y - size.h)) return pt;\r\n            // bottom center\r\n            else return new GraphPoint(pt.x, size.y + size.h);\r\n        }\r\n        let tl = size.tl(), tr = size.tr(),\r\n            bl = size.bl(), br = size.br();\r\n        let allowT: boolean, allowB: boolean,\r\n            allowL: boolean, allowR: boolean;\r\n        /*let distanceT: number = Number.POSITIVE_INFINITY, distanceB: number = Number.POSITIVE_INFINITY,\r\n            distanceL: number = Number.POSITIVE_INFINITY, distanceR: number = Number.POSITIVE_INFINITY;*/\r\n        let intersectionT: GraphPoint | undefined, intersectionB: GraphPoint | undefined,\r\n            intersectionL: GraphPoint | undefined, intersectionR: GraphPoint | undefined;\r\n\r\n\r\n        allowT = Geom.isNumberBetween(tl.y, bl.y, targetPt.y);\r\n        allowB = Geom.isNumberBetween(bl.y, tl.y, targetPt.y);\r\n        allowL = Geom.isNumberBetween(tl.x, tr.x, targetPt.x);\r\n        allowR = Geom.isNumberBetween(tr.x, tl.x, targetPt.x);\r\n        // console.log(\"closestIntersection pt0\", {size, targetPt, pt0:pt0.raw(), gridAlign,\r\n        //     corners:{tl:tl.raw(), tr:tr.raw(), bl:bl.raw(), br:br.raw()}, allows:{allowT, allowB, allowL, allowR}});\r\n        if (!(allowT || allowB || allowL || allowR)) return undefined; // point is internal to size\r\n        if (allowT) intersectionT = Geom.lineToSegmentIntersection(tl, tr, q, m); else\r\n        if (allowB) intersectionB = Geom.lineToSegmentIntersection(bl, br, q, m); // NOT else, (T|B) AND (L|R) can happen, or just 1 or 0 of those.\r\n        if (allowL) intersectionL = Geom.lineToSegmentIntersection(tl, bl, q, m); else\r\n        if (allowR) intersectionR = Geom.lineToSegmentIntersection(tr, br, q, m);\r\n\r\n        // console.log(\"closestIntersection pt2\", {intersectionT, intersectionB, intersectionL, intersectionR});\r\n        // only 1 intersection can happen\r\n        return intersectionT || intersectionB || intersectionL || intersectionR;\r\n    }\r\n    public static closestIntersection_old(size: GraphSize, prevPt: GraphPoint, pt0: GraphPoint, gridAlign?: GraphPoint): GraphPoint | null {\r\n        let ret = GraphSize.closestIntersection0(size, prevPt, pt0, gridAlign) as any;\r\n        // Log.exDev(!Geom.isOnEdge(ret, size), 'ClosestIntersection failed. not on Vertex edge.', {ret, size, prevPt, pt0, gridAlign});\r\n        return ret;\r\n    }\r\n    private static closestIntersection0(vertexGSize: GraphSize, prevPt: GraphPoint, pt0: GraphPoint, gridAlign?: GraphPoint): GraphPoint | null {\r\n        let pt: GraphPoint | null = pt0.duplicate();\r\n        const m = GraphPoint.getM(prevPt, pt) as number;\r\n        const q = GraphPoint.getQ(prevPt, pt) as number;\r\n        // U.pe( Math.abs((pt.y - m * pt.x) - (prevPt.y - m * prevPt.x)) > .001, 'wrong math in Q:', (pt.y - m * pt.x), ' vs ', (prevPt.y - m * prevPt.x));\r\n        /*const isL = prevPt.x < pt.x;\r\n    const isT = prevPt.y < pt.y;\r\n    const isR = !isL;\r\n    const isB = !isT; */\r\n        if (m === Number.POSITIVE_INFINITY && q === Number.NEGATIVE_INFINITY) { // bottom middle\r\n            return new GraphPoint(vertexGSize.x + vertexGSize.w / 2, vertexGSize.y + vertexGSize.h); }\r\n        // console.log('pt:', pt, 'm:', m, 'q:', q);\r\n        let L: GraphPoint | null = new GraphPoint(0, 0);\r\n        let T: GraphPoint | null = new GraphPoint(0, 0);\r\n        let R: GraphPoint | null = new GraphPoint(0, 0);\r\n        let B: GraphPoint | null = new GraphPoint(0, 0);\r\n        L.x = vertexGSize.x;\r\n        L.y = m * L.x + q;\r\n        R.x = vertexGSize.x + vertexGSize.w;\r\n        R.y = m * R.x + q;\r\n        T.y = vertexGSize.y;\r\n        T.x = (T.y - q) / m;\r\n        B.y = vertexGSize.y + vertexGSize.h;\r\n        B.x = (B.y - q) / m;\r\n        // prendo solo il compreso pt ~ prevPt (escludo così il \"pierce\" sulla faccia opposta), prendo il più vicino al centro.\r\n        // console.log('4 possibili punti di intersezione (LTBR):', L, T, B, R);\r\n        /* this.owner.mark(this.owner.toHtmlCoord(T), true, 'blue');\r\n    this.owner.mark(this.owner.toHtmlCoord(B), false, 'violet');\r\n    this.owner.mark(this.owner.toHtmlCoord(L), false, 'red');\r\n    this.owner.mark(this.owner.toHtmlCoord(R), false, 'orange');*/\r\n        console.log(\"intersect pt1:\", {T, B, L, R});\r\n        if ( (B.x >= pt.x && B.x <= prevPt.x) || (B.x >= prevPt.x && B.x <= pt.x) ) { } else { B = null; }\r\n        if ( (T.x >= pt.x && T.x <= prevPt.x) || (T.x >= prevPt.x && T.x <= pt.x) ) { } else { T = null; }\r\n        if ( (L.y >= pt.y && L.y <= prevPt.y) || (L.y >= prevPt.y && L.y <= pt.y) ) { } else { L = null; }\r\n        if ( (R.y >= pt.y && R.y <= prevPt.y) || (R.y >= prevPt.y && R.y <= pt.y) ) { } else { R = null; }\r\n        console.log(\"intersect pt2:\", {T, B, L, R});\r\n        function closestmix(pt: GraphPoint, closest: GraphPoint, segStart: GraphPoint, segEnd: GraphPoint, mode: \"TB\" | \"LR\"): void {\r\n            // changes pt\r\n            pt.x = closest.x; pt.y = closest.y; return;\r\n            let main: \"x\" | \"y\", sub: \"x\" | \"y\";\r\n            if (mode === \"TB\") { main = \"y\"; sub = \"x\"; } else { main = \"x\"; sub = \"y\"; }\r\n            pt[main] = closest[main];\r\n            // if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\r\n            // pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\r\n            if (closest[sub] <= segEnd[sub] && closest[sub] >= segStart[sub]) pt[sub] = closest[sub];\r\n            else if (Math.abs(closest[sub]-segEnd[sub]) < Math.abs(closest[sub]-segStart[sub])) pt[sub] = segEnd[sub];\r\n            else pt[sub] = segStart[sub];\r\n        }\r\n        function closestmix2(pt: GraphPoint, closest: GraphPoint, segStart: GraphPoint, segEnd: GraphPoint, mode: \"TB\" | \"LR\"): void {\r\n            // changes closest\r\n            let main: \"x\" | \"y\", sub: \"x\" | \"y\";\r\n            if (mode === \"TB\") { main = \"y\"; sub = \"x\"; } else { main = \"x\"; sub = \"y\"; }\r\n            // closest[main] = pt[main];\r\n            // if T[sub] is inside the top segment, take T[sub], otherwise closest between size.tl[sub] and size.tr[sub]\r\n            // pt[sub] = Math.max(segStart[sub], Math.min(segStart[sub], closest[sub]));\r\n            if (closest[sub] <= segEnd[sub] && closest[sub] >= segStart[sub]) {/*no-op*/}\r\n            else if (Math.abs(closest[sub]-segEnd[sub]) < Math.abs(closest[sub]-segStart[sub])) closest[sub] = segEnd[sub];\r\n            else closest[sub] = segStart[sub];\r\n        }\r\n        console.log(\"intersect pt2.5:\");\r\n        try{\r\n            if(T) closestmix2(pt, T, vertexGSize.tl(), vertexGSize.tr(), \"TB\");\r\n            if(B) closestmix2(pt, B, vertexGSize.bl(), vertexGSize.br(), \"TB\");\r\n            if(R) closestmix2(pt, R, vertexGSize.tr(), vertexGSize.br(), \"LR\");\r\n            if(L) closestmix2(pt, L, vertexGSize.tl(), vertexGSize.bl(), \"LR\");\r\n        } catch(e){ console.error(\"intersect error\",e)}\r\n        // console.log('superstiti step1: (LTBR):', L, T, B, R);\r\n        console.log(\"intersect pt2.9:\");\r\n        const vicinanzaT = !T ? Number.POSITIVE_INFINITY : ((T.x - pt.x) * (T.x - pt.x)) + ((T.y - pt.y) * (T.y - pt.y));\r\n        const vicinanzaB = !B ? Number.POSITIVE_INFINITY : ((B.x - pt.x) * (B.x - pt.x)) + ((B.y - pt.y) * (B.y - pt.y));\r\n        const vicinanzaL = !L ? Number.POSITIVE_INFINITY : ((L.x - pt.x) * (L.x - pt.x)) + ((L.y - pt.y) * (L.y - pt.y));\r\n        const vicinanzaR = !R ? Number.POSITIVE_INFINITY : ((R.x - pt.x) * (R.x - pt.x)) + ((R.y - pt.y) * (R.y - pt.y));\r\n        const closest = Math.min(vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR);\r\n        console.log(\"intersect pt3:\", {vicinanzaT, vicinanzaB, vicinanzaL, vicinanzaR, closest});\r\n\r\n        // console.log( 'closest:', closest);\r\n        // succede quando pt e prevPt sono entrambi all'interno del rettangolo del vertice.\r\n        // L'edge non è visibile e il valore ritornato è irrilevante.\r\n\r\n        if (closest === Number.POSITIVE_INFINITY) {\r\n            /* top center */\r\n            pt = vertexGSize.tl();\r\n            pt.x += vertexGSize.w / 2; } else\r\n        if (closest === Number.POSITIVE_INFINITY) {\r\n            /* bottom center */\r\n            pt = vertexGSize.br();\r\n            pt.x -= vertexGSize.w / 2; } else\r\n        if (closest === vicinanzaT && T) {\r\n            closestmix(pt, T as any, vertexGSize.tl(), vertexGSize.tr(), \"TB\");\r\n            /*pt.y = T.y;\r\n            // if T.x is inside the top segment, take T.x, otherwise closest between size.tl.x and size.tr.x\r\n            if ((T.x <= tr.x && T.x >= tl.x)) pt.x = T.x;\r\n            else if (Math.abs(T.x-tr.x) < Math.abs(T.x-tl.x)) pt.x = tr.x;\r\n            else pt.x = tl.x;*/\r\n        }\r\n        if (closest === vicinanzaB) { closestmix(pt, B as any, vertexGSize.bl(), vertexGSize.br(), \"TB\"); } else\r\n        if (closest === vicinanzaR) { closestmix(pt, R as any, vertexGSize.tr(), vertexGSize.br(), \"LR\"); } else\r\n        if (closest === vicinanzaL) { closestmix(pt, L as any, vertexGSize.tl(), vertexGSize.bl(), \"LR\"); }\r\n\r\n        if (!gridAlign) { return pt; }\r\n        if (!pt) return null;\r\n        if (gridAlign.x && (pt === T || pt === B || isNaN(closest))) {\r\n            const floorX: number = Math.floor(pt.x / gridAlign.x) * gridAlign.x;\r\n            const ceilX: number = Math.ceil(pt.x / gridAlign.x) * gridAlign.x;\r\n            let closestX;\r\n            let farthestX;\r\n            if (Math.abs(floorX - pt.x) < Math.abs(ceilX - pt.x)) {\r\n                closestX = floorX; farthestX = ceilX;\r\n            } else { closestX = ceilX; farthestX = floorX; }\r\n\r\n            // todo: possibile causa del bug che non allinea punti fake a punti reali. nel calcolo realPT questo non viene fatto.\r\n            // if closest grid intersection is inside the vertex.\r\n            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) { pt.x = closestX; } else\r\n                // if 2° closer grid intersection is inside the vertex.\r\n            if (closestX >= vertexGSize.x && closestX <= vertexGSize.x + vertexGSize.w) { pt.x = farthestX;\r\n                // if no intersection are inside the vertex (ignore grid)\r\n            } else { /* do nothing */ }\r\n        } else if (gridAlign.y && (pt === L || pt === R)) {\r\n            const floorY: number = Math.floor(pt.y / gridAlign.y) * gridAlign.y;\r\n            const ceilY: number = Math.ceil(pt.y / gridAlign.y) * gridAlign.y;\r\n            let closestY;\r\n            let farthestY;\r\n            if (Math.abs(floorY - pt.y) < Math.abs(ceilY - pt.y)) {\r\n                closestY = floorY; farthestY = ceilY;\r\n            } else { closestY = ceilY; farthestY = floorY; }\r\n\r\n            // if closest grid intersection is inside the vertex.\r\n            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) { pt.y = closestY; } else\r\n                // if 2° closer grid intersection is inside the vertex.\r\n            if (closestY >= vertexGSize.y && closestY <= vertexGSize.y + vertexGSize.h) { pt.y = farthestY;\r\n                // if no intersection are inside the vertex (ignore grid)\r\n            } else { /* do nothing */ }\r\n        }\r\n        return pt; }\r\n\r\n\r\n    protected new(...args: any): this { return new GraphSize(...args) as this; }\r\n    protected makePoint(x: number, y: number): GraphPoint { return new GraphPoint(x, y) as GraphPoint; }\r\n\r\n    closestPoint(pt: GraphPoint): GraphPoint { return Geom.closestPoint(this, pt); }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, ISize);\r\nRuntimeAccessibleClass.set_extend(ISize, Size);\r\nRuntimeAccessibleClass.set_extend(ISize, GraphSize);\r\n@RuntimeAccessible('Geom')\r\nexport class Geom extends RuntimeAccessibleClass {\r\n\r\n    static isPositiveZero(m: number): boolean {\r\n        if (!!Object.is) { return Object.is(m, +0); }\r\n        return (1 / m === Number.POSITIVE_INFINITY); }\r\n\r\n    static isNegativeZero(m: number): boolean {\r\n        if (!!Object.is) { return Object.is(m, -0); }\r\n        return (1 / m === Number.NEGATIVE_INFINITY); }\r\n\r\n    static TanToRadian(n: number): number { return Geom.DegreeToRad(Geom.TanToDegree(n)); }\r\n    static TanToDegree(n: number): number {\r\n        if (Geom.isPositiveZero(n)) { return 0; }\r\n        if (n === Number.POSITIVE_INFINITY) { return 90; }\r\n        if (Geom.isNegativeZero(n)) { return 180; }\r\n        if (n === Number.POSITIVE_INFINITY) { return 270; }\r\n        return Geom.RadToDegree((window as any).Math.atan(n)); }\r\n\r\n    static RadToDegree(radians: number): number { return Geom.radToDeg(radians); }\r\n    static DegreeToRad(degree: number): number { return Geom.degToRad(degree); }\r\n    static radToDeg(radians: number): number { return radians * (180 / Math.PI); }\r\n    static degToRad(degree: number): number { return degree * (Math.PI / 180); }\r\n\r\n\r\n\r\n    private static GeomTolerance = 0; // 0.001;\r\n    static isOnEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnHorizontalEdges(pt, shape, tolerance) || Geom.isOnVerticalEdges(pt, shape, tolerance); }\r\n\r\n    static isOnVerticalEdges(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnLeftEdge(pt, shape, tolerance) || Geom.isOnRightEdge(pt, shape, tolerance); }\r\n\r\n    static isOnHorizontalEdges(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        return Geom.isOnTopEdge(pt, shape, tolerance) || Geom.isOnBottomEdge(pt, shape, tolerance); }\r\n\r\n    static isOnRightEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.x - (shape.x + shape.w)) < tolerance\r\n            && ( pt.y - shape.y > tolerance && pt.y - (shape.y + shape.h) < tolerance);\r\n        return (pt.x === shape.x + shape.w) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);\r\n    }\r\n\r\n    static isOnLeftEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.x - shape.x) < tolerance\r\n            && (pt.y - shape.y > tolerance && pt.y - (shape.y + shape.h) < tolerance);\r\n        return (pt.x === shape.x) && (pt.y >= shape.y && pt.y <= shape.y + shape.h);\r\n    }\r\n\r\n    static isOnTopEdge(pt: GraphPoint, shape: GraphSize, tolerance: number = Geom.GeomTolerance): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.y - shape.y) < tolerance\r\n            && (pt.x - shape.x > tolerance && pt.x - (shape.x + shape.w) < tolerance);\r\n        return (pt.y === shape.y) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);\r\n    }\r\n\r\n    static isOnBottomEdge(pt: GraphPoint, shape: GraphSize, tolerance?: number): boolean {\r\n        if (!pt || !shape) { return false; }\r\n        if (tolerance) return Math.abs(pt.y - shape.y + shape.h) < tolerance\r\n            && (pt.x - shape.x > tolerance && pt.x - (shape.x + shape.w) < tolerance);\r\n        return (pt.y === shape.y + shape.h) && (pt.x >= shape.x && pt.x <= shape.x + shape.w);\r\n    }\r\n\r\n    static closestPoint(size: GraphSize, pt: GraphPoint): GraphPoint {\r\n        let top_closest = Geom.closestPointToSegment(size.tl(), size.tr(), pt);\r\n        let bot_closest = Geom.closestPointToSegment(size.bl(), size.br(), pt);\r\n        let left_closest = Geom.closestPointToSegment(size.tl(), size.bl(), pt);\r\n        let right_closest = Geom.closestPointToSegment(size.tr(), size.br(), pt);\r\n\r\n        let top_distance = top_closest.distanceFromPoint(pt, false);\r\n        let bot_distance = bot_closest.distanceFromPoint(pt, false);\r\n        let left_distance = left_closest.distanceFromPoint(pt, false);\r\n        let right_distance = right_closest.distanceFromPoint(pt, false);\r\n\r\n        let min_distance = Math.min(top_distance, bot_distance, left_distance, right_distance);\r\n        if (min_distance === top_distance) return top_closest;\r\n        if (min_distance === bot_distance) return bot_closest;\r\n        if (min_distance === left_distance) return left_closest;\r\n        return right_closest;\r\n    }\r\n    static isMinusZero(number: number) {return 1/number == -Infinity;}\r\n    static closestPointToSegment(segStart: GraphPoint, segEnd:GraphPoint, pt: GraphPoint): GraphPoint{\r\n        // 1) find equation of line passing for start, end.\r\n        // 2) then find all perpendicular lines, then the perpendicular line that pass through pt\r\n        // 3) find intersection between Line(s,e) and line of point 2.\r\n        // 4A) IF intersection is part of segment(s,e) that is closest.\r\n        // 4B) ELSE, one of the 2 extremes of the segment is closest.\r\n\r\n        let x_intersect: number, y_intersect: number;\r\n        let s = segStart;\r\n        let e = segEnd;\r\n        let mse = (e.y - s.y) / (e.x - s.x);\r\n        if (mse === Number.POSITIVE_INFINITY || mse === Number.NEGATIVE_INFINITY) {\r\n            // s and e are both on the same y vertical line (same x)      // new GraphPoint(segStart.x, pt.y);\r\n            x_intersect = segStart.x;\r\n            y_intersect = pt.y;\r\n            // 1), 2), 3) all done shortcut\r\n        } else if (mse === 0 || Geom.isNegativeZero(mse)) {\r\n            // s and e are both on the same x horizontal line (same y)    // new GraphPoint(pt.x, segStart.y);\r\n            x_intersect = pt.x;\r\n            y_intersect = segStart.y\r\n            // 1), 2), 3) all done shortcut\r\n        }\r\n        else {\r\n            let q = s.y - mse*s.x; // y = mx + q           q = y-mx\r\n            // 1) done\r\n            let pmse = -1/mse; // perpendicular to mse\r\n            let pq = pt.y - pmse*pt.x;\r\n            // 2) done\r\n            //  m1 * x + q1 = y    -->   m1 * x + q1 = m2 * x + q2    -->    (m1-m2)x = q2-q1      -->     x=(q2-q1)/(m1-m2)\r\n            x_intersect = (pq-q)/(mse-pmse);\r\n            y_intersect = mse*(x_intersect) + q; //  y = mx +q\r\n            // 3) done\r\n        }\r\n\r\n        let maxX: number, minX: number;\r\n        let maxY: number, minY: number;\r\n        if (s.x > e.x) { maxX = s.x; minX = e.x; } else {  maxX = e.x; minX = s.x; }\r\n        if (s.y > e.y) { maxY = s.y; minY = e.y; } else {  maxY = e.y; minY = s.y; }\r\n        if (x_intersect >= minX && x_intersect <= maxX && y_intersect >= minY && y_intersect <= maxY) return new GraphPoint(x_intersect, y_intersect);\r\n        // 4A) IF done\r\n\r\n        let sdist = (s.x - x_intersect)**2 + (s.y - y_intersect)**2;  // actual distance is sqrt() of this, but i just need to find closest, not correct distance.\r\n        let edist = (e.x - x_intersect)**2 + (e.y - y_intersect)**2;\r\n        return (sdist < edist) ? new GraphPoint(s.x, s.y) : new GraphPoint(e.x, e.y);\r\n        // 4B) ELSE done\r\n    }\r\n\r\n    static lineToSegmentIntersection(segStart: GraphPoint, segEnd: GraphPoint, q: number, m: number): GraphPoint | undefined {\r\n        if (segStart.x === segEnd.x){\r\n            let y = m*segStart.x + q;\r\n            if (Geom.isNumberBetween(y, segStart.y, segEnd.y)) return new GraphPoint(segStart.x, y);\r\n            else return undefined;\r\n        }\r\n        else if (segStart.y === segEnd.y) {\r\n            let x = (segStart.y-q)/m;\r\n            if (Geom.isNumberBetween(x, segStart.x, segEnd.x)) return new GraphPoint(x, segStart.y);\r\n            else return undefined;\r\n            //\r\n        }\r\n\r\n        let m2 = segStart.getM(segEnd);\r\n        let q2 = IPoint.getQ(segStart, segEnd);\r\n        if (m === m2) {\r\n            if (q2 === q) return segStart; // line and segment coincident\r\n            return undefined; // parallel\r\n        }\r\n        let intersect = Geom.lineToLineIntersection(m, q, m2, q2);\r\n        if (intersect && Geom.isNumberBetween(intersect.x, segStart.x, segEnd.x) && Geom.isNumberBetween(intersect.y, segStart.y, segEnd.y)) return intersect;\r\n        else return undefined;\r\n    }\r\n\r\n    static isNumberBetween(target: number, s: number, e: number): boolean {\r\n        let max = Math.max(s, e);\r\n        let min = Math.min(s, e);\r\n        return target >= min && target <= max; }\r\n\r\n    private static lineToLineIntersection(m: number, q: number, m2: number, q2: number, retIfParallel: any = undefined, retIfCoincident: any = undefined): undefined | GraphPoint {\r\n        if (m === m2) {\r\n            if (q === q2) return retIfCoincident;\r\n            return retIfParallel;\r\n        }\r\n        if (m === Number.POSITIVE_INFINITY || m === Number.NEGATIVE_INFINITY || m2 === Number.POSITIVE_INFINITY || m2 === Number.NEGATIVE_INFINITY) {\r\n            // m or m2 are a vertical line, Q must be invalid too and i don't have a single point of the line.\r\n            // it's actually infinite possible vertical parallel lines.\r\n            return undefined;\r\n        }\r\n        /*\r\n            y = mx + q\r\n            y = nx + w\r\n            -->\r\n            mx + q = nx + w\r\n            -->\r\n            mx - nx = w - q\r\n            -->\r\n            x (m - n) = w - q\r\n            -->\r\n            x = (w - q)/(m - n)\r\n        */\r\n        let x = (q2-q)/(m-m2);\r\n        return new GraphPoint(x, m*x+q); }\r\n    // @param start, end: are for determining direction. every m is a line that can be seen in 2 direction\r\n    static mToRad(m: number, start: GraphPoint, end: GraphPoint): number {\r\n        let rad: number;\r\n        if (start.x === end.x) {\r\n            rad = (start.y < end.y) ? Math.PI * 3/2 :  Math.PI / 2;\r\n        } else {\r\n            // console.log(\"rad diagonal\", {base:  Math.atan(m), add: start.x > end.x, sx: start.x, ex: end.x});\r\n            rad = Math.atan(m) + (start.x > end.x ? 0 : Math.PI);\r\n        }\r\n        return rad; }\r\n\r\n    // intersect a rectangle with a line or segment (if end parameter is specified)\r\n    // @return: [0, 2] intersections\r\n    static lineToSizeIntersection_TODO(size: GraphSize, m: number, startLine: GraphPoint, endIfSegment?: GraphPoint): [] | [GraphPoint] | [GraphPoint, GraphPoint] {\r\n         // todo: use GraphSize.closestIntersection which is close. it is size-segment returning only the closest intersection\r\n        return [];\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, Geom);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}