{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class,_class2,_dec2,_class3,_dec3,_class5,_dec4,_class7,_class8;import{BEGIN,Constructors,CreateElementAction,DClass,Defaults,DPointerTargetable,DViewElement,DViewPoint,EdgeHead,END,GraphPoint,Log,LPointerTargetable,Pointers,RuntimeAccessible,RuntimeAccessibleClass,SetRootFieldAction,ShortAttribETypes,store,U}from'../joiner';import{DV}from\"../common/DV\";//import {Selected} from \"../joiner/types\";\nimport{DefaultEClasses,ShortDefaultEClasses}from\"../common/U\";import DefaultViews from\"./defaults/views\";import tinycolor from\"tinycolor2\";console.warn('ts loading store');// @RuntimeAccessible\n// NB: le voci che iniziano con '_' sono personali e non condivise\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\nexport var statehistory={globalcanundostate:false};window.statehistory=statehistory;export var DState=(_dec=RuntimeAccessible('DState'),_dec(_class=(_class2=/*#__PURE__*/function(_DPointerTargetable){_inherits(DState,_DPointerTargetable);var _super=_createSuper(DState);function DState(){var _this;_classCallCheck(this,DState);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.env=process.env;_this.debug=false;_this.logs=[];_this.models=[];_this.viewelements=[];_this.stackViews=[];_this.idlookup={};_this.graphs=[];_this.voidvertexs=[];_this.vertexs=[];_this.graphvertexs=[];_this.graphelements=[];_this.edgepoints=[];_this.edges=[];_this.classifiers=[];_this.enumerators=[];_this.packages=[];_this.primitiveTypes=[];_this.attributes=[];_this.enumliterals=[];_this.references=[];_this.classs=[];_this.operations=[];_this.parameters=[];_this.ecoreClasses=[];_this.returnTypes=[];_this.isEdgePending={user:'',source:''};_this.contextMenu={display:false,x:0,y:0,nodeid:''};_this.objects=[];_this.values=[];_this._lastSelected=void 0;_this.users=[];_this.viewpoint='';_this.viewpoints=[];_this.m2models=[];_this.m1models=[];_this.isLoading=false;_this.projects=[];_this.collaborativeSession=false;_this.VIEWS_RECOMPILE_onDataUpdate=[];_this.VIEWS_RECOMPILE_onDragStart=[];_this.VIEWS_RECOMPILE_onDragEnd=[];_this.VIEWS_RECOMPILE_whileDragging=[];_this.VIEWS_RECOMPILE_onResizeStart=[];_this.VIEWS_RECOMPILE_onResizeEnd=[];_this.VIEWS_RECOMPILE_whileResizing=[];_this.VIEWS_RECOMPILE_onRotationStart=[];_this.VIEWS_RECOMPILE_onRotationEnd=[];_this.VIEWS_RECOMPILE_whileRotating=[];_this.VIEWS_RECOMPILE_constants=[];_this.VIEWS_RECOMPILE_usageDeclarations=[];_this.VIEWS_RECOMPILE_jsxString=[];_this.VIEWS_RECOMPILE_preconditions=[];_this.VIEWS_RECOMPILE_jsCondition=[];_this.VIEWS_RECOMPILE_ocl=[];_this.VIEWS_RECOMPILE_events=[];_this.VIEWS_RECOMPILE_all=void 0;_this.ClassNameChanged={};_this.tooltip='';_this.topics={'sensors/1':[{value:{raw:10,unit:'s'},timestamp:1},{value:{raw:12,unit:'s'},timestamp:2}],'sensors/2':[{value:{raw:20,unit:'s'},timestamp:2}],'sensors/3':[{value:{raw:30,unit:'s'},timestamp:3}]};return _this;}_createClass(DState,null,[{key:\"new\",value:function _new(){return new Constructors(new DState('dwc'),undefined,false,undefined).DPointerTargetable().DState().end();}//damiano: this might make problems on load\n// Pointer<DModel, 0, 'N'>[] = [];\n// users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\n// collaborators: UserState[];\n//// DClass section to fill\n// actually fields\n/// DClass section end\n// private, non-shared fields\n////////////////     flags shared, but handled locally      /////////////////////////////\n/* RECOMPILES MODULE */ // for ocl matchings by m2 class name: \"context inv Human: ...\"\n/* IoT: Topic Table */},{key:\"fixcolors\",value:function fixcolors(){window.tinycolor=tinycolor;var tofix=[\"tetrad\",\"triad\",\"splitcomplement\"];var _loop=function _loop(){var f=_tofix[_i];tinycolor.prototype[f+\"0\"]=tinycolor.prototype[f];tinycolor.prototype[f]=function(){var a=this.getAlpha();return this[f+'0']().map(function(t){return t.setAlpha(a);});};};for(var _i=0,_tofix=tofix;_i<_tofix.length;_i++){_loop();}}},{key:\"init\",value:function init(store){this.fixcolors();BEGIN();var viewpoint=DViewPoint.new2('Default','',function(vp){vp.isExclusiveView=false;},true,'Pointer_ViewPointDefault');var validationViewpoint=DViewPoint.new2('Validation default','',function(vp){vp.isExclusiveView=false;vp.isValidation=true;},true,'Pointer_ViewPointValidation');Log.exDev(viewpoint.id!==Defaults.viewpoints[0],\"wrong vp id initialization\",{viewpoint:viewpoint,def:Defaults.viewpoints});var views=makeDefaultGraphViews(viewpoint.id,validationViewpoint.id);for(var _i2=0,_views=views;_i2<_views.length;_i2++){var view=_views[_i2];CreateElementAction.new(view);}for(var _i3=0,_Object$values=Object.values(ShortAttribETypes);_i3<_Object$values.length;_i3++){var primitiveType=_Object$values[_i3];var dPrimitiveType=void 0;if(primitiveType===ShortAttribETypes.EVoid)continue;// or make void too without primitiveType = true, but with returnType = true?\ndPrimitiveType=DClass.new(primitiveType,false,false,true,false,'',undefined,true,'Pointer_'+primitiveType.toUpperCase());SetRootFieldAction.new('primitiveTypes',dPrimitiveType.id,'+=',true);}/// creating m3 \"Object\" metaclass\nvar dObject=DClass.new(ShortDefaultEClasses.EObject,false,false,false,false,'',undefined,true,'Pointer_'+ShortDefaultEClasses.EObject.toUpperCase());SetRootFieldAction.new('ecoreClasses',dObject.id,'+=',true);for(var _i4=0,_Object$values2=Object.values(DefaultEClasses);_i4<_Object$values2.length;_i4++){var defaultEcoreClass=_Object$values2[_i4];}// todo: creat everyone and not just object, make the whole m3 populated.\n/*\r\n        let tmp = Object.values(GraphElements);\r\n        for (let k in tmp) {\r\n            let v: any = tmp[k];\r\n            Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n            if (!v.cname) continue; // it is a subdictionary\r\n            GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n        }*/END();}}]);return DState;}(DPointerTargetable),_class2.subclasses=[],_class2._extends=[],_class2))||_class);function makeDefaultZoomView(vp){// let viewsMap = U.objectFromArray(defaultViews, (v) => v.id);\n/*\r\n* power levels:\r\n*\r\n* 3 parameters\r\n* 2 attributes\r\n* 1 classes\r\n* 0 packages only\r\n* */var vnames=['EdgePoint','Model','Package','Class','Enum','Attribute','Reference','Operation','Object','Value'];var jsxList={// 'EdgePoint': ``\n'Model':\"<div className={'root'}>\\n    {!data && \\\"Model data missing.\\\"}\\n    <label style={{position:'absolute', right:'-50px', top:'50px', display: 'flex', transform: 'rotate(270deg)'}}>\\n        <input className=\\\"potenziometro\\\" onChange={(e)=>{node.state = {level:+e.target.value}}} min=\\\"0\\\" max=\\\"3\\\" type=\\\"range\\\" step=\\\"1\\\" value={level}\\n            style = {{}}/>\\n            <div style={{transform: 'rotate(90deg) translate(0, 100%)'}}>Detail level:{level}</div>\\n    </label>\\n    <div className={'edges'}>\\n        {[\\n            refEdges.map(se => <Edge start={se.start.father.node} end={se.end.node} view={'Pointer_ViewEdge' + ( se.start.containment && 'Composition' || 'Association')} key={'REF_' + se.start.node.id + '~' + se.end.node.id} />), \\n            extendEdges.map(se => <Edge start={se.start} end={se.end} view={'Pointer_ViewEdgeInheritance'} key={'EXT_' + se.start.node.id + '~' + se.end.node.id} />)\\n        ]}\\n    </div>\\n    {otherPackages.filter(p => p).map(pkg => <DefaultNode key={pkg.id} data={pkg} />)}\\n    {level >= 1 && firstPackage && firstPackage.children.filter(c => c).map(classifier => <DefaultNode key={classifier.id} data={classifier} />)}\\n    {level >= 1 && m1Objects.filter(o => o).map(m1object => <DefaultNode key={m1object.id} data={m1object} />)}\\n    {decorators}\\n</div>\",'Package':\"<div className={'root package'}>\\n    <div className={'package-children'}>\\n        {upperLevel >= 1 ? [\\n            <label style={{position:'absolute', right:'-50px', top:'50px', display: 'flex', transform: 'rotate(270deg)'}}>\\n                <input className=\\\"potenziometro\\\" onChange={(e)=>{node.state = {level:+e.target.value}}} min=\\\"0\\\" max=\\\"3\\\" type=\\\"range\\\" step=\\\"1\\\" value={level}\\n                    style = {{}}/>\\n                <div style={{transform: 'rotate(90deg) translate(0, 100%)'}}>Detail level:{level}</div>\\n            </label>,\\n            data.children.map(c => <DefaultNode key={c.id} data={c} />)\\n            ] :\\n        [\\n            <div className={\\\"\\\"}><b>Uri:</b><span className={\\\"ms-1\\\"}>{data.uri}</span></div>,\\n            <div className={\\\"\\\"}>{[\\n                data.classes.length ? data.classes.length + \\\" classes\\\" : '',\\n                data.enumerators.length ? data.enumerators.length + \\\" enumerators\\\" : ''\\n               ].filter(v=>!!v).join(',')}</div>\\n        ]\\n        }\\n    </div>\\n    {decorators}\\n</div>\",'Class':\"<div className={'root class'}>\\n    <Input jsxLabel={<b className={'class-name'}>EClass:</b>} data={data} field={'name'} hidden={true} autosize={true} />\\n    <hr/>\\n    <div className={'class-children'}>\\n        {level >= 2 && [\\n            data.attributes.map(c => <DefaultNode key={c.id} data={c} />),\\n            data.references.map(c => <DefaultNode key={c.id} data={c} />),\\n            data.operations.map(c => <DefaultNode key={c.id} data={c} />)\\n          ]\\n         || [\\n         <div className={\\\"\\\"}><b>isInterface:</b><span className={\\\"ms-1\\\"}>{''+data.interface}</span></div>,\\n         <div className={\\\"\\\"}><b>isAbstract:</b><span className={\\\"ms-1\\\"}>{''+data.abstract}</span></div>,\\n         <div className={\\\"\\\"}><b>Instances:</b><span className={\\\"ms-1\\\"}>{data.instances.length}</span></div>,\\n         <div className={\\\"\\\"}>{[\\n             data.attributes.length ? data.attributes.length + \\\" attributes\\\" : '',\\n             data.references.length ? data.references.length + \\\" references\\\" : '',\\n             data.operations.length ? data.operations.length + \\\" operations\\\" : ''\\n            ].filter(v=>!!v).join(',')}</div>\\n         ]\\n        }\\n    </div>\\n    {decorators}\\n</div>\",'Enum':\"<div className={'root enumerator'}>\\n    <Input jsxLabel={<b className={'enumerator-name'}>EEnum:</b>} data={data} field={'name'} hidden={true} autosize={true} />\\n    <hr />\\n    <div className={'enumerator-children'}>\\n        {level >= 2 && data.children.map(c => <DefaultNode key={c.id} data={c}/>)\\n          || <div className={\\\"\\\"}>{data.literals} literals</div>}\\n    </div>\\n    {decorators}\\n</div>\",'Operation':\"<div className={'root w-100'}>\\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name + ' =>'} />\\n    {data.exceptions.length ? \\\" throws \\\" + data.exceptions.join(\\\", \\\") : ''}\\n    <div className={\\\"parameters\\\"}>{\\n        level >= 3 && data.parameters.map(p => <DefaultNode data={p} key={p.id} />)\\n    }</div>\\n    {decorators}\\n</div>\",'Object':\"<div className={'root object'}>\\n    <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \\\"Object\\\"}:</b>}\\n            data={data} field={'name'} hidden={true} autosize={true} />\\n    <hr/>\\n    <div className={'object-children'}>\\n        {level >= 2 && features.map(f => <DefaultNode key={f.id} data={f} />)}\\n    </div>\\n    {decorators}\\n</div>\"};BEGIN();var views=[];for(var name in jsxList){var original=LPointerTargetable.wrap('Pointer_View'+name);var doriginal=original.__raw;var v=original.duplicate();v.jsxString=jsxList[name];var udLevel='ret.level = '+([\"Model\",\"Package\"].includes(name)?'node':'node.graph')+'.state.level ?? 3';if(!doriginal.usageDeclarations)v.usageDeclarations='(ret) => {\\n'+'// ** preparations and default behaviour here ** //\\n'+'ret.node = node\\n'+'ret.view = view\\n'+'// custom preparations:\\n'+'// data, node, view are dependencies by default. delete them above if you want to remove them.\\n'+'// add preparation code here (like for loops to count something), then list the dependencies below.\\n'+'// ** declarations here ** //\\n'+udLevel+(name==='Package'?'\\nret.upperLevel = node.graph.state.level ?? 3\\n':'\\n')+'}';else{var ud=doriginal.usageDeclarations.split('\\n');var i=ud.indexOf('// ** declarations here ** //');ud.splice(i+1,0,udLevel);if(name==='Package')ud.splice(i+2,0,'ret.upperLevel = node.graph.state.level ?? 3');v.usageDeclarations=ud.join('\\n');}/*\r\n        if (name === 'Model') {\r\n            v.onDataUpdate = 'node.state = {level: node.state.level || 0}'\r\n        }*/views.push(v);}setTimeout(function(){for(var _i5=0,_views2=views;_i5<_views2.length;_i5++){var _v=_views2[_i5];_v.viewpoint=vp;}});END();}window.makeDefaultZoomView=makeDefaultZoomView;function makeDefaultGraphViews(vp,validationVP){var errorOverlayView=DViewElement.new2('Semantic error view',DV.semanticErrorOverlay(),function(v){v.jsCondition='let nstate = node.state;\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';v.usageDeclarations=\"(ret)=>{\\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\"+\"ret.nstate = node.state\\n\"+\"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\"+\"\\n}\";v.isExclusiveView=false;v.css=\"&.mainView { text-decoration-line: spelling-error; }\\n&.decorativeView {\\n    text-decoration-line: spelling-error;\\n    \\n    .overlap{\\n      outline: 4px solid var(--background-3);\\n      display: flex;\\n    }\\n    .error-message{\\n        color: var(--color-3);\\n        background: var(--background-3);\\n        border-radius: 0 16px 16px 0;\\n        margin: auto;\\n        padding: 8px;\\n        position:absolute;\\n        top:50%; right:0;\\n        transform: translate(calc(100% + 3px), calc(-50%));\\n    }\\n}\";},false,validationVP,'Pointer_ViewOverlay');var anchorView=DViewElement.new2('Anchors',DV.anchorJSX(),function(v){v.isExclusiveView=false;v.palette={'anchor-':U.hexToPalette('#77f','#f77','#007'),'anchor-hover-':U.hexToPalette('#7f7','#a44','#070')};v.usageDeclarations=\"(ret)=>{ // scope: data, node, view, state, \\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.anchors = data && node.anchors;\\n\"+\"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\"+\"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\"+\"}\";v.events={dragAnchor:'(coords /*Point*/, anchorName /*string*/)=>{\\n'+'\\tconst updateAnchor = {};\\n'+'\\tupdateAnchor[anchorName] = coords;\\n'+'\\tnode.anchors=updateAnchor;\\n'+'}',assignAnchor:'(anchorName /*string*/)=>{\\n'+'\\tnode.assignEdgeAnchor(anchorName);\\n'+'}'};v.css=\"\\n.anchor.valid-anchor{\\n    display:block;\\n}\\n\\n.anchor{\\n    display:none;\\n    position: absolute;\\n    background-color: var(--anchor-1);\\n    outline: 2px solid var(--anchor-3);\\n    transform: translate(-50%, -50%);\\n    pointer-events: all;\\n    cursor: crosshair;\\n    \\n    &:hover{\\n        background-color: var(--anchor-hover-1);\\n        outline: 2px solid var(--anchor-hover-3);\\n    }\\n    &.active-anchor{\\n        background-color: var(--anchor-2);\\n        &:hover{\\n            background-color: var(--anchor-hover-2);\\n        }\\n    }\\n}\\n\\n\\n\";},false,vp,'Pointer_ViewAnchors');var errorCheckName=DViewElement.new2('Naming error view',DV.invisibleJsx(),function(v){v.isExclusiveView=false;v.usageDeclarations=\"(ret)=>{ // scope: data, node, view, state, \\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.name = data && data.name || '';\\n\"+\"ret.type = data && data.className.substring(1) || 'shapeless';\\n\"+\"}\";v.onDataUpdate=\"\\nlet err = undefined;\\n//if (name.indexOf(\\\" \\\") >= 0) err = \\\"\\\" + type + \\\" names cannot contain white spaces.\\\"; else\\nif (name.length === 0 && type !== \\\"shapeless\\\") err = type + \\\"es must be named.\\\";\\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \\\" names must begin with an alphabet letter or $_ symbols.\\\";\\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \\\" names can only contain an alphanumeric chars or or $_ symbols\\\";\\nnode.state = {error_naming:err};\\n\";},false,validationVP,'Pointer_ViewCheckName');var errorCheckLowerbound=DViewElement.new2('Lowerbound error view',DV.invisibleJsx(),function(v){// v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\nv.appliableToClasses=['DValue'];v.isExclusiveView=false;v.usageDeclarations=\"(ret)=>{ // scope: data, node, view, state, \\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\"+\"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\"+\"}\";v.onDataUpdate=\"\\nlet err = undefined;\\n\\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\\nnode.state = {error_lowerbound: err};\\n\\n\";},false,validationVP,'Pointer_ViewLowerbound');// errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\nvar valuecolormap={};valuecolormap[ShortAttribETypes.EBoolean]=\"orange\";valuecolormap[ShortAttribETypes.EByte]=\"orange\";valuecolormap[ShortAttribETypes.EShort]=\"orange\";valuecolormap[ShortAttribETypes.EInt]=\"orange\";valuecolormap[ShortAttribETypes.ELong]=\"orange\";valuecolormap[ShortAttribETypes.EFloat]=\"orange\";valuecolormap[ShortAttribETypes.EDouble]=\"orange\";valuecolormap[ShortAttribETypes.EDate]=\"green\";valuecolormap[ShortAttribETypes.EString]=\"green\";valuecolormap[ShortAttribETypes.EChar]=\"green\";valuecolormap[ShortAttribETypes.EVoid]=\"gray\";var voidView=DViewElement.new('Void',DV.voidView(),undefined,'','','',[],'',undefined,false,true,vp);// voidView.appliableToClasses=[\"VoidVertex\"];\nvoidView.adaptWidth=true;voidView.adaptHeight=true;var edgeViews=[];var size0=new GraphPoint(0,0),size1=new GraphPoint(12,12),size2=new GraphPoint(18,12);function makeEdgeView(name,type,headSize,tailSize,dashing){var ev=DV.edgeView(type,headSize||size0,tailSize||size0,dashing?\"10.5,9,0,0\":undefined,vp,name);edgeViews.push(ev);return ev;}makeEdgeView(\"Association\",EdgeHead.reference,size1,undefined,false);makeEdgeView(\"Dependency\",EdgeHead.reference,size1,undefined,true);makeEdgeView(\"Inheritance\",EdgeHead.extend,size1,undefined,false);makeEdgeView(\"Aggregation\",EdgeHead.aggregation,undefined,size2,false);makeEdgeView(\"Composition\",EdgeHead.composition,undefined,size2,false);// edgeView.forceNodeType=\"Edge\"\n/*\r\n    for (let ev of edgeViews){\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/ // nb: Error is not a view, just jsx. transform it in a view so users can edit it\nvar dv_subviews=[DefaultViews.model(vp),DefaultViews.package(vp),DefaultViews.class(vp),DefaultViews.enum(vp),DefaultViews.attribute(vp),DefaultViews.reference(vp),DefaultViews.operation(vp),DefaultViews.parameter(vp),DefaultViews.literal(vp),DefaultViews.object(vp),DefaultViews.value(vp),anchorView,voidView].concat(edgeViews,[DefaultViews.edgepoint(vp)]);var validation_subviews=[errorOverlayView,errorCheckLowerbound,errorCheckName];// SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\n// SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\nvar ret=[].concat(_toConsumableArray(dv_subviews),validation_subviews);console.clear();var _iterator=_createForOfIteratorHelper(ret),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var v=_step.value;Log.e(!v.events,\"missing events on view \"+v.name,{v:v,ret:ret});}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(ret),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _v2=_step2.value;Log.w(!!!_v2.events,\"found events on view \"+_v2.name,{v:_v2,ret:ret});}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return ret;}export var ViewPointState=(_dec2=RuntimeAccessible('ViewPointState'),_dec2(_class3=/*#__PURE__*/function(_DPointerTargetable2){_inherits(ViewPointState,_DPointerTargetable2);var _super2=_createSuper(ViewPointState);function ViewPointState(){var _this2;_classCallCheck(this,ViewPointState);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this2=_super2.call.apply(_super2,[this].concat(args));_this2.name='';return _this2;}return ViewPointState;}(DPointerTargetable))||_class3);// to delete?\nexport var ModelStore=(_dec3=RuntimeAccessible('ModelStore'),_dec3(_class5=/*#__PURE__*/function(){function ModelStore(){_classCallCheck(this,ModelStore);this._meta=void 0;this.instances=void 0;}_createClass(ModelStore,[{key:\"meta\",get:// getter e setter senza proxy\nfunction get(){return this._meta;},set:function set(value){this._meta=value;}}]);return ModelStore;}())||_class5);export var LState=(_dec4=RuntimeAccessible('LState'),_dec4(_class7=(_class8=/*#__PURE__*/function(_LPointerTargetable){_inherits(LState,_LPointerTargetable);var _super3=_createSuper(LState);function LState(){var _this3;_classCallCheck(this,LState);for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}_this3=_super3.call.apply(_super3,[this].concat(args));_this3.__raw=void 0;_this3.contextMenu=void 0;_this3.user=void 0;_this3.debug=void 0;_this3.room=void 0;_this3._lastSelected=void 0;_this3.idlookup=void 0;return _this3;}_createClass(LState,[{key:\"get_contextMenu\",value:function get_contextMenu(c){return c.data.contextMenu;}// get_user(c: Context): this[\"user\"] { return LState.wrap(c.data.user) as LUser; }\n},{key:\"get_debug\",value:function get_debug(c){return c.data.debug;}},{key:\"get_idlookup\",value:function get_idlookup(c){return c.data.idlookup;}},{key:\"get__lastSelected\",value:function get__lastSelected(c){var ls=c.data._lastSelected;return ls&&{modelElement:LState.wrap(ls.modelElement),node:LState.wrap(ls.node),view:LState.wrap(ls.view)};}},{key:\"_defaultCollectionGetter\",value:function _defaultCollectionGetter(c,k){return LPointerTargetable.fromPointer(c.data[k]);}},{key:\"_defaultGetter\",value:function _defaultGetter(c,k){//console.log(\"default Getter\");\nvar v=c.data[k];if(Array.isArray(v)){if(v.length===0)return[];else if(Pointers.isPointer(v[0]))return this._defaultCollectionGetter(c,k);return v;}return v;}}],[{key:\"get\",value:// return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\nfunction get(){return LState.wrap(store.getState());}}]);return LState;}(LPointerTargetable),_class8.subclasses=[],_class8._extends=[],_class8.structure=void 0,_class8.singleton=void 0,_class8))||_class7);RuntimeAccessibleClass.set_extend(DPointerTargetable,DState);RuntimeAccessibleClass.set_extend(LPointerTargetable,LState);","map":{"version":3,"names":["BEGIN","Constructors","CreateElementAction","DClass","Defaults","DPointerTargetable","DViewElement","DViewPoint","EdgeHead","END","GraphPoint","Log","LPointerTargetable","Pointers","RuntimeAccessible","RuntimeAccessibleClass","SetRootFieldAction","ShortAttribETypes","store","U","DV","DefaultEClasses","ShortDefaultEClasses","DefaultViews","tinycolor","console","warn","statehistory","globalcanundostate","window","DState","_dec","_class","_class2","_DPointerTargetable","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","env","process","debug","logs","models","viewelements","stackViews","idlookup","graphs","voidvertexs","vertexs","graphvertexs","graphelements","edgepoints","edges","classifiers","enumerators","packages","primitiveTypes","attributes","enumliterals","references","classs","operations","parameters","ecoreClasses","returnTypes","isEdgePending","user","source","contextMenu","display","x","y","nodeid","objects","values","_lastSelected","users","viewpoint","viewpoints","m2models","m1models","isLoading","projects","collaborativeSession","VIEWS_RECOMPILE_onDataUpdate","VIEWS_RECOMPILE_onDragStart","VIEWS_RECOMPILE_onDragEnd","VIEWS_RECOMPILE_whileDragging","VIEWS_RECOMPILE_onResizeStart","VIEWS_RECOMPILE_onResizeEnd","VIEWS_RECOMPILE_whileResizing","VIEWS_RECOMPILE_onRotationStart","VIEWS_RECOMPILE_onRotationEnd","VIEWS_RECOMPILE_whileRotating","VIEWS_RECOMPILE_constants","VIEWS_RECOMPILE_usageDeclarations","VIEWS_RECOMPILE_jsxString","VIEWS_RECOMPILE_preconditions","VIEWS_RECOMPILE_jsCondition","VIEWS_RECOMPILE_ocl","VIEWS_RECOMPILE_events","VIEWS_RECOMPILE_all","ClassNameChanged","tooltip","topics","value","raw","unit","timestamp","_createClass","key","_new","undefined","end","fixcolors","tofix","_loop","f","_tofix","_i","prototype","a","getAlpha","map","t","setAlpha","init","new2","vp","isExclusiveView","validationViewpoint","isValidation","exDev","id","def","views","makeDefaultGraphViews","_i2","_views","view","new","_i3","_Object$values","Object","primitiveType","dPrimitiveType","EVoid","toUpperCase","dObject","EObject","_i4","_Object$values2","defaultEcoreClass","subclasses","_extends","makeDefaultZoomView","vnames","jsxList","name","original","wrap","doriginal","__raw","v","duplicate","jsxString","udLevel","includes","usageDeclarations","ud","split","i","indexOf","splice","join","push","setTimeout","_i5","_views2","validationVP","errorOverlayView","semanticErrorOverlay","jsCondition","css","anchorView","anchorJSX","palette","hexToPalette","events","dragAnchor","assignAnchor","errorCheckName","invisibleJsx","onDataUpdate","errorCheckLowerbound","appliableToClasses","valuecolormap","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","EDate","EString","EChar","voidView","adaptWidth","adaptHeight","edgeViews","size0","size1","size2","makeEdgeView","type","headSize","tailSize","dashing","ev","edgeView","reference","extend","aggregation","composition","dv_subviews","model","package","class","enum","attribute","operation","parameter","literal","object","edgepoint","validation_subviews","ret","_toConsumableArray","clear","_iterator","_createForOfIteratorHelper","_step","s","n","done","e","err","_iterator2","_step2","w","ViewPointState","_dec2","_class3","_DPointerTargetable2","_super2","_this2","_len2","_key2","ModelStore","_dec3","_class5","_meta","instances","get","set","LState","_dec4","_class7","_class8","_LPointerTargetable","_super3","_this3","_len3","_key3","room","get_contextMenu","c","data","get_debug","get_idlookup","get__lastSelected","ls","modelElement","node","_defaultCollectionGetter","k","fromPointer","_defaultGetter","isArray","isPointer","getState","structure","singleton","set_extend"],"sources":["C:/d/Programming/web/jodel-mde/src/redux/store.tsx"],"sourcesContent":["import {\r\n    Asterisk,\r\n    BEGIN, Circle,\r\n    Constructors,\r\n    CoordinateMode,\r\n    CreateElementAction, Cross,\r\n    DAttribute,\r\n    DClass,\r\n    DClassifier, Decagon, DecoratedStar, DEdge,\r\n    DEdgePoint,\r\n    Defaults,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DExtEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    Dictionary,\r\n    DLog,\r\n    DModel,\r\n    DModelElement,\r\n    DObject, DocString,\r\n    DOperation,\r\n    DPackage,\r\n    DParameter,\r\n    DPointerTargetable,\r\n    DProject,\r\n    DRefEdge,\r\n    DReference,\r\n    DUser,\r\n    DValue,\r\n    DVertex,\r\n    DViewElement,\r\n    DViewPoint,\r\n    DVoidEdge, Edge,\r\n    EdgeBendingMode,\r\n    EdgeHead, EdgePoint, Ellipse,\r\n    END, Enneagon, Field,\r\n    GObject, Graph, GraphElement,\r\n    GraphPoint,\r\n    GraphSize, GraphVertex, Heptagon, Hexagon,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LObject, Log,\r\n    LogicContext,\r\n    LOperation,\r\n    LPackage,\r\n    LParameter,\r\n    LPointerTargetable, LProject,\r\n    LRefEdge,\r\n    LReference,\r\n    LUser,\r\n    LValue,\r\n    LViewElement,\r\n    LViewPoint, Nonagon, Octagon,\r\n    Pentagon,\r\n    Pointer,\r\n    Pointers, Polygon, Rectangle,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass, Septagon, SetFieldAction,\r\n    SetRootFieldAction,\r\n    ShortAttribETypes, SimpleStar, Square, Star,\r\n    store, Trapezoid, Triangle, U, Vertex, VoidVertex,\r\n} from '../joiner';\r\nimport {DV} from \"../common/DV\";\r\n//import {Selected} from \"../joiner/types\";\r\nimport {DefaultEClasses, ShortDefaultEClasses} from \"../common/U\";\r\nimport { GraphElements, Graphs, Vertexes, Edges, Fields } from '../joiner';\r\nimport DefaultViews from \"./defaults/views\";\r\nimport tinycolor, {Instance} from \"tinycolor2\";\r\n\r\nconsole.warn('ts loading store');\r\n\r\n// @RuntimeAccessible\r\n// NB: le voci che iniziano con '_' sono personali e non condivise\r\n\r\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\r\nexport const statehistory: {\r\n        [userpointer:Pointer<DUser>]: {undoable:GObject<\"delta\">[], redoable: GObject<\"delta\">[]}\r\n} & {\r\n    globalcanundostate: boolean // set to true at first user click }\r\n} = { globalcanundostate: false} as any;\r\n(window as any).statehistory = statehistory;\r\n\r\n@RuntimeAccessible('DState')\r\nexport class DState extends DPointerTargetable{\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static new(): DState {\r\n        return new Constructors(new DState('dwc'), undefined, false, undefined).DPointerTargetable().DState().end();\r\n    }\r\n\r\n    env: Dictionary = process.env;  //damiano: this might make problems on load\r\n    debug: boolean = false;\r\n    logs: Pointer<DLog>[] = [];\r\n    models: Pointer<DModel, 0, 'N'> = []; // Pointer<DModel, 0, 'N'>[] = [];\r\n\r\n\r\n    viewelements: Pointer<DViewElement, 0, 'N'> = [];\r\n    stackViews: Pointer<DViewElement, 0, 'N'> = [];\r\n\r\n    // users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\r\n    // collaborators: UserState[];\r\n    idlookup: Record<Pointer<DPointerTargetable>, DPointerTargetable> = {};\r\n\r\n    //// DClass section to fill\r\n    graphs: Pointer<DGraph, 0, 'N'> = [];\r\n    voidvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    vertexs: Pointer<DVertex, 0, 'N'> = [];\r\n    graphvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    graphelements: Pointer<DGraphVertex, 0, 'N'> = []; // actually fields\r\n    edgepoints: Pointer<DEdgePoint, 0, 'N'> = [];\r\n    edges: Pointer<DEdge, 0, \"N\"> = [];\r\n\r\n    classifiers: Pointer<DClassifier, 0, 'N'> = [];\r\n    enumerators: Pointer<DEnumerator, 0, 'N'> = [];\r\n    packages: Pointer<DPackage, 0, 'N'> = [];\r\n    primitiveTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    attributes: Pointer<DAttribute, 0, \"N\"> = [];\r\n    enumliterals: Pointer<DEnumLiteral, 0, \"N\"> = [];\r\n    references: Pointer<DReference, 0, \"N\"> = [];\r\n    classs: Pointer<DClass, 0, \"N\"> = [];\r\n    operations: Pointer<DOperation, 0, \"N\"> = [];\r\n    parameters: Pointer<DParameter, 0, \"N\"> = [];\r\n    ecoreClasses: Pointer<DClass, 0, \"N\"> = [];\r\n    returnTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    /// DClass section end\r\n\r\n    isEdgePending: {user: Pointer<DUser>, source: Pointer<DClass>} = {user: '', source: ''};\r\n\r\n    contextMenu: { display: boolean, x: number, y: number, nodeid: Pointer} = {display: false, x: 0, y: 0, nodeid:''};\r\n\r\n    objects: Pointer<DObject, 0, 'N', LObject> = [];\r\n    values: Pointer<DValue, 0, 'N', LValue> = [];\r\n\r\n    // private, non-shared fields\r\n    _lastSelected?: {\r\n        node: Pointer<DGraphElement, 1, 1>,\r\n        view: Pointer<DViewElement, 1, 1>,\r\n        modelElement: Pointer<DModelElement, 0, 1> // if a node is clicked: a node and a view are present, a modelElement might be. a node can exist without a modelElement counterpart.\r\n    };\r\n\r\n    users: Pointer<DUser, 0, 'N', LUser> = [];\r\n\r\n    viewpoint: Pointer<DViewPoint> = '';\r\n    viewpoints: Pointer<DViewPoint, 0, 'N'> = [];\r\n\r\n    m2models: Pointer<DModel, 0, 'N'> = [];\r\n    m1models: Pointer<DModel, 0, 'N'> = [];\r\n\r\n    isLoading: boolean = false;\r\n\r\n    projects: Pointer<DProject, 0, 'N'> = [];\r\n    collaborativeSession: boolean = false;\r\n    ////////////////     flags shared, but handled locally      /////////////////////////////\r\n\r\n    /* RECOMPILES MODULE */\r\n    VIEWS_RECOMPILE_onDataUpdate: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onDragStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onDragEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileDragging: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onResizeStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onResizeEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileResizing: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onRotationStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onRotationEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileRotating: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_constants: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_usageDeclarations: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsxString: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_preconditions: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsCondition: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_ocl: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_events: (Pointer<DViewElement> | {vid: Pointer<DViewElement>, keys: string[] | undefined})[] = [];\r\n    VIEWS_RECOMPILE_all?: boolean | Pointer<any>[];\r\n\r\n    ClassNameChanged: Dictionary<Pointer<DModelElement>, DocString<\"name\">> = {}; // for ocl matchings by m2 class name: \"context inv Human: ...\"\r\n\r\n    tooltip: string = '';\r\n\r\n    /* IoT: Topic Table */\r\n    topics: Dictionary<string, unknown> = {\r\n        'sensors/1': [{value: {raw: 10, unit: 's'}, timestamp: 1}, {value: {raw: 12, unit: 's'}, timestamp: 2}],\r\n        'sensors/2': [{value: {raw: 20, unit: 's'}, timestamp: 2}],\r\n        'sensors/3': [{value: {raw: 30, unit: 's'}, timestamp: 3}]\r\n    };\r\n\r\n\r\n    static fixcolors(){\r\n        (window as any).tinycolor = tinycolor;\r\n        let tofix = [\"tetrad\", \"triad\", \"splitcomplement\"];\r\n        for (let f of tofix) {\r\n            tinycolor.prototype[f + \"0\"] = tinycolor.prototype[f];\r\n            tinycolor.prototype[f] = function (){ let a = this.getAlpha(); return this[f+'0']().map((t: Instance) => t.setAlpha(a)); }\r\n        }\r\n    }\r\n    static init(store?: DState): void {\r\n        this.fixcolors();\r\n        BEGIN()\r\n        const viewpoint = DViewPoint.new2('Default', '', (vp)=>{ vp.isExclusiveView = false; }, true, 'Pointer_ViewPointDefault');\r\n        const validationViewpoint = DViewPoint.new2('Validation default', '', (vp)=>{ vp.isExclusiveView = false; vp.isValidation = true;}, true, 'Pointer_ViewPointValidation');\r\n\r\n        Log.exDev(viewpoint.id !== Defaults.viewpoints[0], \"wrong vp id initialization\", {viewpoint, def:Defaults.viewpoints});\r\n        const views: DViewElement[] = makeDefaultGraphViews(viewpoint.id, validationViewpoint.id);\r\n\r\n        for (let view of views) { CreateElementAction.new(view); }\r\n\r\n        for (let primitiveType of Object.values(ShortAttribETypes)) {\r\n            let dPrimitiveType;\r\n            if (primitiveType === ShortAttribETypes.EVoid) continue; // or make void too without primitiveType = true, but with returnType = true?\r\n            dPrimitiveType = DClass.new(primitiveType, false, false, true, false, '', undefined, true, 'Pointer_' + primitiveType.toUpperCase());\r\n            SetRootFieldAction.new('primitiveTypes', dPrimitiveType.id, '+=', true);\r\n        }\r\n\r\n        /// creating m3 \"Object\" metaclass\r\n        let dObject = DClass.new(ShortDefaultEClasses.EObject, false, false, false, false,\r\n            '', undefined, true, 'Pointer_' + ShortDefaultEClasses.EObject.toUpperCase());\r\n        SetRootFieldAction.new('ecoreClasses', dObject.id, '+=', true);\r\n        for (let defaultEcoreClass of Object.values(DefaultEClasses)){\r\n            // todo: creat everyone and not just object, make the whole m3 populated.\r\n        }\r\n\r\n        /*\r\n        let tmp = Object.values(GraphElements);\r\n        for (let k in tmp) {\r\n            let v: any = tmp[k];\r\n            Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n            if (!v.cname) continue; // it is a subdictionary\r\n            GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n        }*/\r\n        END();\r\n    }\r\n}\r\n\r\nfunction makeDefaultZoomView(vp: Pointer<DViewPoint>): void{\r\n    // let viewsMap = U.objectFromArray(defaultViews, (v) => v.id);\r\n/*\r\n* power levels:\r\n*\r\n* 3 parameters\r\n* 2 attributes\r\n* 1 classes\r\n* 0 packages only\r\n* */\r\n\r\n    let vnames = ['EdgePoint', 'Model', 'Package', 'Class', 'Enum', 'Attribute', 'Reference', 'Operation', 'Object', 'Value'];\r\n    let jsxList: Dictionary<string, string> = {\r\n            // 'EdgePoint': ``\r\n            'Model':\r\n`<div className={'root'}>\r\n    {!data && \"Model data missing.\"}\r\n    <label style={{position:'absolute', right:'-50px', top:'50px', display: 'flex', transform: 'rotate(270deg)'}}>\r\n        <input className=\"potenziometro\" onChange={(e)=>{node.state = {level:+e.target.value}}} min=\"0\" max=\"3\" type=\"range\" step=\"1\" value={level}\r\n            style = {{}}/>\r\n            <div style={{transform: 'rotate(90deg) translate(0, 100%)'}}>Detail level:{level}</div>\r\n    </label>\r\n    <div className={'edges'}>\r\n        {[\r\n            refEdges.map(se => <Edge start={se.start.father.node} end={se.end.node} view={'Pointer_ViewEdge' + ( se.start.containment && 'Composition' || 'Association')} key={'REF_' + se.start.node.id + '~' + se.end.node.id} />), \r\n            extendEdges.map(se => <Edge start={se.start} end={se.end} view={'Pointer_ViewEdgeInheritance'} key={'EXT_' + se.start.node.id + '~' + se.end.node.id} />)\r\n        ]}\r\n    </div>\r\n    {otherPackages.filter(p => p).map(pkg => <DefaultNode key={pkg.id} data={pkg} />)}\r\n    {level >= 1 && firstPackage && firstPackage.children.filter(c => c).map(classifier => <DefaultNode key={classifier.id} data={classifier} />)}\r\n    {level >= 1 && m1Objects.filter(o => o).map(m1object => <DefaultNode key={m1object.id} data={m1object} />)}\r\n    {decorators}\r\n</div>`,\r\n            'Package':\r\n`<div className={'root package'}>\r\n    <div className={'package-children'}>\r\n        {upperLevel >= 1 ? [\r\n            <label style={{position:'absolute', right:'-50px', top:'50px', display: 'flex', transform: 'rotate(270deg)'}}>\r\n                <input className=\"potenziometro\" onChange={(e)=>{node.state = {level:+e.target.value}}} min=\"0\" max=\"3\" type=\"range\" step=\"1\" value={level}\r\n                    style = {{}}/>\r\n                <div style={{transform: 'rotate(90deg) translate(0, 100%)'}}>Detail level:{level}</div>\r\n            </label>,\r\n            data.children.map(c => <DefaultNode key={c.id} data={c} />)\r\n            ] :\r\n        [\r\n            <div className={\"\"}><b>Uri:</b><span className={\"ms-1\"}>{data.uri}</span></div>,\r\n            <div className={\"\"}>{[\r\n                data.classes.length ? data.classes.length + \" classes\" : '',\r\n                data.enumerators.length ? data.enumerators.length + \" enumerators\" : ''\r\n               ].filter(v=>!!v).join(',')}</div>\r\n        ]\r\n        }\r\n    </div>\r\n    {decorators}\r\n</div>`,\r\n            'Class':\r\n`<div className={'root class'}>\r\n    <Input jsxLabel={<b className={'class-name'}>EClass:</b>} data={data} field={'name'} hidden={true} autosize={true} />\r\n    <hr/>\r\n    <div className={'class-children'}>\r\n        {level >= 2 && [\r\n            data.attributes.map(c => <DefaultNode key={c.id} data={c} />),\r\n            data.references.map(c => <DefaultNode key={c.id} data={c} />),\r\n            data.operations.map(c => <DefaultNode key={c.id} data={c} />)\r\n          ]\r\n         || [\r\n         <div className={\"\"}><b>isInterface:</b><span className={\"ms-1\"}>{''+data.interface}</span></div>,\r\n         <div className={\"\"}><b>isAbstract:</b><span className={\"ms-1\"}>{''+data.abstract}</span></div>,\r\n         <div className={\"\"}><b>Instances:</b><span className={\"ms-1\"}>{data.instances.length}</span></div>,\r\n         <div className={\"\"}>{[\r\n             data.attributes.length ? data.attributes.length + \" attributes\" : '',\r\n             data.references.length ? data.references.length + \" references\" : '',\r\n             data.operations.length ? data.operations.length + \" operations\" : ''\r\n            ].filter(v=>!!v).join(',')}</div>\r\n         ]\r\n        }\r\n    </div>\r\n    {decorators}\r\n</div>`,\r\n            'Enum':\r\n`<div className={'root enumerator'}>\r\n    <Input jsxLabel={<b className={'enumerator-name'}>EEnum:</b>} data={data} field={'name'} hidden={true} autosize={true} />\r\n    <hr />\r\n    <div className={'enumerator-children'}>\r\n        {level >= 2 && data.children.map(c => <DefaultNode key={c.id} data={c}/>)\r\n          || <div className={\"\"}>{data.literals} literals</div>}\r\n    </div>\r\n    {decorators}\r\n</div>`,\r\n            'Operation':\r\n`<div className={'root w-100'}>\r\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name + ' =>'} />\r\n    {data.exceptions.length ? \" throws \" + data.exceptions.join(\", \") : ''}\r\n    <div className={\"parameters\"}>{\r\n        level >= 3 && data.parameters.map(p => <DefaultNode data={p} key={p.id} />)\r\n    }</div>\r\n    {decorators}\r\n</div>`,\r\n            'Object':\r\n`<div className={'root object'}>\r\n    <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \"Object\"}:</b>}\r\n            data={data} field={'name'} hidden={true} autosize={true} />\r\n    <hr/>\r\n    <div className={'object-children'}>\r\n        {level >= 2 && features.map(f => <DefaultNode key={f.id} data={f} />)}\r\n    </div>\r\n    {decorators}\r\n</div>`\r\n    }\r\n\r\n    BEGIN();\r\n    let views: LViewElement[] = [];\r\n    for (let name in jsxList) {\r\n        let original = (LPointerTargetable.wrap('Pointer_View'+name as any) as LViewElement);\r\n        let doriginal = original.__raw;\r\n        let v = original.duplicate();\r\n        v.jsxString = jsxList[name];\r\n        const udLevel = 'ret.level = '+([\"Model\", \"Package\"].includes(name) ? 'node' : 'node.graph')+'.state.level ?? 3';\r\n        if (!doriginal.usageDeclarations) v.usageDeclarations = '(ret) => {\\n' +\r\n            '// ** preparations and default behaviour here ** //\\n' +\r\n            'ret.node = node\\n' +\r\n            'ret.view = view\\n' +\r\n            '// custom preparations:\\n' +\r\n            '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n            '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n            '// ** declarations here ** //\\n' +\r\n            udLevel + (name === 'Package' ? '\\nret.upperLevel = node.graph.state.level ?? 3\\n' : '\\n') +\r\n            '}';\r\n        else {\r\n            let ud = doriginal.usageDeclarations.split('\\n');\r\n            let i = ud.indexOf('// ** declarations here ** //');\r\n            ud.splice(i+1, 0, udLevel);\r\n            if (name === 'Package') ud.splice(i+2, 0, 'ret.upperLevel = node.graph.state.level ?? 3');\r\n            v.usageDeclarations = ud.join('\\n');\r\n        }/*\r\n        if (name === 'Model') {\r\n            v.onDataUpdate = 'node.state = {level: node.state.level || 0}'\r\n        }*/\r\n        views.push(v);\r\n    }\r\n    setTimeout(()=>{\r\n        for (let v of views){\r\n            (v as any).viewpoint = vp;\r\n        }\r\n    })\r\n    END();\r\n\r\n}\r\n(window as any).makeDefaultZoomView = makeDefaultZoomView;\r\n\r\nfunction makeDefaultGraphViews(vp: Pointer<DViewPoint>, validationVP: Pointer<DViewPoint>): DViewElement[] {\r\n\r\n    let errorOverlayView: DViewElement = DViewElement.new2('Semantic error view', DV.semanticErrorOverlay(), (v) => {\r\n        v.jsCondition = 'let nstate = node.state;\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';\r\n        v.usageDeclarations = \"(ret)=>{\\n\" +\r\n        \"// ** preparations and default behaviour here ** //\\n\" +\r\n        \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n        \"// ** declarations here ** //\\n\" +\r\n        \"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\" +\r\n        \"ret.nstate = node.state\\n\" +\r\n        \"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\" +\r\n        \"\\n}\"\r\n        v.isExclusiveView = false;\r\n        v.css =\r\n`&.mainView { text-decoration-line: spelling-error; }\r\n&.decorativeView {\r\n    text-decoration-line: spelling-error;\r\n    \r\n    .overlap{\r\n      outline: 4px solid var(--background-3);\r\n      display: flex;\r\n    }\r\n    .error-message{\r\n        color: var(--color-3);\r\n        background: var(--background-3);\r\n        border-radius: 0 16px 16px 0;\r\n        margin: auto;\r\n        padding: 8px;\r\n        position:absolute;\r\n        top:50%; right:0;\r\n        transform: translate(calc(100% + 3px), calc(-50%));\r\n    }\r\n}`\r\n    }, false, validationVP, 'Pointer_ViewOverlay' );\r\n\r\n    let anchorView: DViewElement = DViewElement.new2('Anchors', DV.anchorJSX(), (v) => {\r\n        v.isExclusiveView = false;\r\n        v.palette={'anchor-': U.hexToPalette('#77f', '#f77', '#007'),\r\n            'anchor-hover-': U.hexToPalette('#7f7', '#a44', '#070')}\r\n        v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.anchors = data && node.anchors;\\n\"+\r\n            \"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\"+\r\n            \"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\"+\r\n            \"}\";\r\n        v.events = {\r\n            dragAnchor: '(coords /*Point*/, anchorName /*string*/)=>{\\n' +\r\n                '\\tconst updateAnchor = {};\\n'+\r\n                '\\tupdateAnchor[anchorName] = coords;\\n'+\r\n                '\\tnode.anchors=updateAnchor;\\n'+\r\n                '}',\r\n            assignAnchor: '(anchorName /*string*/)=>{\\n' +\r\n                '\\tnode.assignEdgeAnchor(anchorName);\\n'+\r\n                '}'}\r\n        v.css = `\r\n.anchor.valid-anchor{\r\n    display:block;\r\n}\r\n\r\n.anchor{\r\n    display:none;\r\n    position: absolute;\r\n    background-color: var(--anchor-1);\r\n    outline: 2px solid var(--anchor-3);\r\n    transform: translate(-50%, -50%);\r\n    pointer-events: all;\r\n    cursor: crosshair;\r\n    \r\n    &:hover{\r\n        background-color: var(--anchor-hover-1);\r\n        outline: 2px solid var(--anchor-hover-3);\r\n    }\r\n    &.active-anchor{\r\n        background-color: var(--anchor-2);\r\n        &:hover{\r\n            background-color: var(--anchor-hover-2);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n`\r\n    }, false, vp, 'Pointer_ViewAnchors' );\r\n\r\n    let errorCheckName: DViewElement = DViewElement.new2('Naming error view', DV.invisibleJsx(), (v) => {\r\n        v.isExclusiveView = false;\r\n        v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.name = data && data.name || '';\\n\"+\r\n            \"ret.type = data && data.className.substring(1) || 'shapeless';\\n\"+\r\n            \"}\";\r\n        v.onDataUpdate = `\r\nlet err = undefined;\r\n//if (name.indexOf(\" \") >= 0) err = \"\" + type + \" names cannot contain white spaces.\"; else\r\nif (name.length === 0 && type !== \"shapeless\") err = type + \"es must be named.\";\r\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \" names must begin with an alphabet letter or $_ symbols.\";\r\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \" names can only contain an alphanumeric chars or or $_ symbols\";\r\nnode.state = {error_naming:err};\r\n`;}, false, validationVP, 'Pointer_ViewCheckName' );\r\n\r\nlet errorCheckLowerbound: DViewElement = DViewElement.new2('Lowerbound error view', DV.invisibleJsx(), (v) => {\r\n            // v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\r\n            v.appliableToClasses = ['DValue'];\r\n            v.isExclusiveView = false;\r\n            v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n                \"// ** preparations and default behaviour here ** //\\n\" +\r\n                \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n                \"// ** declarations here ** //\\n\" +\r\n                \"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\"+\r\n                \"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\" +\r\n                \"}\";\r\n            v.onDataUpdate = `\r\nlet err = undefined;\\n\r\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\r\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\r\nnode.state = {error_lowerbound: err};\\n\r\n`;\r\n    }, false, validationVP, 'Pointer_ViewLowerbound' );\r\n    // errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\r\n\r\n    let valuecolormap: GObject = {};\r\n    valuecolormap[ShortAttribETypes.EBoolean] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EByte] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EShort] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EInt] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.ELong] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EFloat] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDouble] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDate] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EString] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EChar] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EVoid] = \"gray\";\r\n\r\n\r\n    let voidView: DViewElement = DViewElement.new('Void', DV.voidView(), undefined, '', '', '',\r\n        [], '', undefined, false, true, vp);\r\n    // voidView.appliableToClasses=[\"VoidVertex\"];\r\n    voidView.adaptWidth = true; voidView.adaptHeight = true;\r\n\r\n\r\n\r\n    let edgeViews: DViewElement[] = [];\r\n    let size0: GraphPoint = new GraphPoint(0, 0), size1: GraphPoint = new GraphPoint(12, 12), size2: GraphPoint = new GraphPoint(18, 12);\r\n\r\n\r\n    function makeEdgeView(name: string, type: EdgeHead, headSize: GraphPoint | undefined, tailSize: GraphPoint | undefined, dashing: boolean): DViewElement{\r\n        let ev = DV.edgeView(type, headSize || size0, tailSize || size0, dashing ? \"10.5,9,0,0\" : undefined, vp, name);\r\n        edgeViews.push(ev);\r\n        return ev;\r\n    }\r\n\r\n    makeEdgeView(\"Association\", EdgeHead.reference,             size1,   undefined,  false);\r\n    makeEdgeView(\"Dependency\",  EdgeHead.reference,             size1,   undefined,  true);\r\n    makeEdgeView(\"Inheritance\", EdgeHead.extend,                size1,   undefined,  false);\r\n    makeEdgeView(\"Aggregation\", EdgeHead.aggregation,   undefined,      size2,      false);\r\n    makeEdgeView(\"Composition\", EdgeHead.composition,   undefined,      size2,      false);\r\n\r\n    // edgeView.forceNodeType=\"Edge\"\r\n\r\n    /*\r\n    for (let ev of edgeViews){\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/\r\n    // nb: Error is not a view, just jsx. transform it in a view so users can edit it\r\n\r\n\r\n    let dv_subviews = [DefaultViews.model(vp), DefaultViews.package(vp), DefaultViews.class(vp), DefaultViews.enum(vp),\r\n        DefaultViews.attribute(vp), DefaultViews.reference(vp), DefaultViews.operation(vp), DefaultViews.parameter(vp),\r\n        DefaultViews.literal(vp), DefaultViews.object(vp), DefaultViews.value(vp), anchorView, voidView, ...edgeViews, DefaultViews.edgepoint(vp)];\r\n\r\n    let validation_subviews = [errorOverlayView, errorCheckLowerbound, errorCheckName];\r\n    // SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\r\n    // SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\r\n    const ret = [...dv_subviews, ...validation_subviews];\r\n    console.clear();\r\n    for (let v of ret) Log.e(!v.events, \"missing events on view \" + v.name, {v, ret});\r\n    for (let v of ret) Log.w(!!!v.events, \"found events on view \" + v.name, {v, ret});\r\n    return ret;\r\n}\r\n\r\n@RuntimeAccessible('ViewPointState')\r\nexport class ViewPointState extends DPointerTargetable{\r\n    name: string = '';\r\n}\r\n\r\n// to delete?\r\n@RuntimeAccessible('ModelStore')\r\nexport class ModelStore {\r\n    private _meta!: ModelStore | string;\r\n    instances!: (ModelStore | string)[];\r\n\r\n    // getter e setter senza proxy\r\n    get meta(): ModelStore | string {\r\n        return this._meta;\r\n    }\r\n\r\n    set meta(value: ModelStore | string) {\r\n        this._meta = value;\r\n    }\r\n}\r\n\r\n\r\n\r\n@RuntimeAccessible('LState')\r\nexport class LState<Context extends LogicContext<DState> = any, C extends Context = Context, D extends DState = DState> extends LPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DPointerTargetable & DState;\r\n    public static structure: typeof DPointerTargetable;\r\n    public static singleton: LPointerTargetable;\r\n    // return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\r\n    static get<T2 extends typeof RuntimeAccessibleClass & { logic?: typeof LPointerTargetable | undefined; }>(): T2 & LState { return LState.wrap(store.getState() as any) as any; }\r\n    contextMenu!: {display: boolean, x: number, y: number};\r\n    user!: LUser;\r\n    debug!: boolean;\r\n    room!: string;\r\n    _lastSelected?: {modelElement?: LModelElement, node?: LGraphElement, view?: LViewElement};\r\n    idlookup!:Dictionary<Pointer, DPointerTargetable>;\r\n\r\n    get_contextMenu(c: Context): this[\"contextMenu\"] { return c.data.contextMenu; }\r\n    // get_user(c: Context): this[\"user\"] { return LState.wrap(c.data.user) as LUser; }\r\n    get_debug(c: Context): this[\"debug\"] { return c.data.debug; }\r\n    get_idlookup(c: Context): this[\"idlookup\"] { return c.data.idlookup; }\r\n    get__lastSelected(c: Context): this[\"_lastSelected\"] {\r\n        let ls = c.data._lastSelected;\r\n        return ls && {modelElement: LState.wrap(ls.modelElement), node: LState.wrap(ls.node), view: LState.wrap(ls.view)}; }\r\n\r\n    _defaultCollectionGetter(c: Context, k: keyof DState): LPointerTargetable[] { return LPointerTargetable.fromPointer(c.data[k] as any); }\r\n    _defaultGetter(c: Context, k: keyof DState) {\r\n        //console.log(\"default Getter\");\r\n        let v = c.data[k];\r\n        if (Array.isArray(v)) {\r\n            if (v.length === 0) return [];\r\n            else if (Pointers.isPointer(v[0] as any)) return this._defaultCollectionGetter(c, k);\r\n            return v;\r\n        }\r\n        return v;\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DState);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LState);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}