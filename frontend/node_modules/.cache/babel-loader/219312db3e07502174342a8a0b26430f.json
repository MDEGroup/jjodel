{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\forEndUser\\\\Selector.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport { Defaults, U } from '../../joiner';\nimport { LPointerTargetable } from '../../joiner';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport './inputselect.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectorComponent(props) {\n  _s();\n  const data = props.data;\n  const [showTooltip, setShowTooltip] = useStateIfMounted(false);\n  if (!data) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  let d = data.__raw || data;\n  let l = LPointerTargetable.fromD(data);\n  let gdata = data;\n  const field = props.field;\n  const readOnly = props.readonly !== undefined ? props.readonly : !props.debugmode && Defaults.check(data.id);\n  const value = d[field];\n  const label = props.label;\n  const jsxLabel = props.jsxLabel;\n  let tooltip = props.tooltip === true ? gdata['__info_of__' + field] ? gdata['__info_of__' + field].txt : '' : props.tooltip;\n  tooltip = tooltip || '';\n  let css = ''; //'my-auto select ';\n  // css += (jsxLabel) ? 'ms-1' : 'ms-auto';\n  css += props.hidden ? ' hidden-input' : '';\n\n  /* @ts-ignore */\n  const setter = id => {\n    l[field].value = id;\n  };\n\n  /* @ts-ignore */\n\n  const getter = () => l[field].value; //l.$type.__raw.values[0];\n\n  function SelectorChange(evt) {\n    if (readOnly) return;\n    const newValue = evt.target.value;\n    const oldValue = getter();\n    setter(newValue);\n  }\n\n  // \n\n  function getOptions() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: l[field].type.allInstances.map(cl => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: typeof l[field].value === 'undefined' ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cl.id,\n          children: cl.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: l[field].value.id === cl.id ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cl.id,\n            selected: true,\n            children: cl.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cl.id,\n            children: cl.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false))\n    }, void 0, false);\n  }\n  const otherprops = {\n    ...props\n  };\n  delete otherprops.data;\n  delete otherprops.getter;\n  delete otherprops.setter;\n  delete otherprops.jsxLabel;\n  delete otherprops.primitives;\n  delete otherprops.returns;\n  delete otherprops.hidden;\n  let cursor;\n  if (tooltip) cursor = 'help';else if (readOnly) cursor = 'not-allowed';else cursor = 'pointer';\n  let inputStyle = props.inputStyle || {};\n  if (!inputStyle.cursor && cursor === 'not-allowed') {\n    inputStyle.cursor = cursor;\n  }\n  U.objectMergeInPlace(inputStyle, props.inputStyle || {}, props.style || {});\n  let className = [props.className, props.inputClassName, css].join(' ');\n  let select = /*#__PURE__*/_jsxDEV(\"select\", {\n    ...otherprops,\n    className: className + ' model-select',\n    disabled: readOnly,\n    style: props.inputStyle,\n    value: value,\n    onChange: SelectorChange,\n    children: getOptions()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 19\n  }, this);\n  return select;\n}\n_s(SelectorComponent, \"xyAd280tFd5ABD3D2xYZXtOlLvA=\", false, function () {\n  return [useStateIfMounted];\n});\n_c = SelectorComponent;\nSelectorComponent.cname = 'SelectorComponent';\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  if (!ownProps.data) return ret;\n  const pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\n  ret.debugmode = state.debug;\n  ret.data = LPointerTargetable.fromPointer(pointer);\n  ret.primitives = LPointerTargetable.fromPointer(state.primitiveTypes);\n  ret.returns = LPointerTargetable.fromPointer(state.returnTypes);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const SelectorConnected = connect(mapStateToProps, mapDispatchToProps)(SelectorComponent);\nexport const Selector = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(SelectorConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = Selector;\nSelectorComponent.cname = 'SelectorComponent';\nSelectorConnected.cname = 'SelectorConnected';\nSelector.cname = 'Selector';\nexport default Selector;\nvar _c, _c2;\n$RefreshReg$(_c, \"SelectorComponent\");\n$RefreshReg$(_c2, \"Selector\");","map":{"version":3,"names":["Defaults","U","LPointerTargetable","React","connect","useStateIfMounted","Fragment","_Fragment","jsxDEV","_jsxDEV","SelectorComponent","props","_s","data","showTooltip","setShowTooltip","d","__raw","l","fromD","gdata","field","readOnly","readonly","undefined","debugmode","check","id","value","label","jsxLabel","tooltip","txt","css","hidden","setter","getter","SelectorChange","evt","newValue","target","oldValue","getOptions","children","type","allInstances","map","cl","name","fileName","_jsxFileName","lineNumber","columnNumber","selected","otherprops","primitives","returns","cursor","inputStyle","objectMergeInPlace","style","className","inputClassName","join","select","disabled","onChange","_c","cname","mapStateToProps","state","ownProps","ret","pointer","debug","fromPointer","primitiveTypes","returnTypes","mapDispatchToProps","dispatch","SelectorConnected","Selector","arguments","length","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/forEndUser/Selector.tsx"],"sourcesContent":["import {DPointerTargetable, LClass, LModel, Defaults, U, Input} from '../../joiner';\r\nimport {DState, GObject, LEnumerator, LPointerTargetable, Overlap, Pointer} from '../../joiner';\r\nimport React, {Dispatch, LegacyRef, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './inputselect.scss';\r\n\r\n\r\nfunction SelectorComponent(props: AllProps) {\r\n    const data = props.data;\r\n    const [showTooltip, setShowTooltip] = useStateIfMounted(false);\r\n    if (!data) return(<></>);\r\n    let d: DPointerTargetable = data.__raw || data;\r\n    let l: LPointerTargetable = LPointerTargetable.fromD(data);\r\n    let gdata: GObject<LPointerTargetable> = data;\r\n    const field: (keyof LPointerTargetable & keyof DPointerTargetable) = props.field as any;\r\n    const readOnly = props.readonly !== undefined ? props.readonly : !props.debugmode && Defaults.check(data.id);\r\n    const value: string | Pointer = d[field] as string;\r\n    const label: string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    let tooltip: string|undefined = (props.tooltip === true) ? ((gdata['__info_of__' + field]) ? gdata['__info_of__' + field].txt: '') : props.tooltip;\r\n    tooltip = tooltip || '';\r\n    let css = '';//'my-auto select ';\r\n   // css += (jsxLabel) ? 'ms-1' : 'ms-auto';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n\r\n    \r\n    /* @ts-ignore */\r\n    const setter = (id) => {l[field].value=id} \r\n    \r\n    /* @ts-ignore */\r\n\r\n    const getter = () => l[field].value;//l.$type.__raw.values[0];\r\n    \r\n\r\n    function SelectorChange(evt: React.ChangeEvent<HTMLSelectElement>) {\r\n        if (readOnly) return;\r\n\r\n        const newValue = evt.target.value; \r\n        const oldValue = getter(); \r\n        setter(newValue);\r\n    }\r\n\r\n    // \r\n\r\n    function getOptions(): any {\r\n\r\n        return (<>\r\n\r\n            {/*@ts-ignore*/}\r\n            {l[field].type.allInstances.map(cl =><>\r\n                {/*@ts-ignore*/}\r\n                {typeof(l[field].value) === 'undefined' ? \r\n                    <option value={cl.id}>{cl.name}</option> \r\n                    :\r\n                    <>\r\n                        {/*@ts-ignore*/}\r\n                        {l[field].value.id === cl.id ?\r\n                        <option value={cl.id} selected>{cl.name}</option> \r\n                        :\r\n                        <option value={cl.id}>{cl.name}</option>  \r\n                    }\r\n                    </>\r\n                }\r\n\r\n            </>)}\r\n        </>); \r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.primitives;\r\n    delete otherprops.returns;\r\n    delete otherprops.hidden;\r\n    let cursor: string;\r\n    if (tooltip) cursor = 'help';\r\n    else if (readOnly) cursor = 'not-allowed';\r\n    else cursor = 'pointer';\r\n    let inputStyle = props.inputStyle || {};\r\n    if (!inputStyle.cursor && cursor === 'not-allowed') { inputStyle.cursor = cursor; }\r\n    U.objectMergeInPlace(inputStyle, props.inputStyle || {}, props.style || {});\r\n    let className = [props.className, props.inputClassName, css].join(' ');\r\n\r\n\r\n    let select = (<select {...otherprops} className={className + ' model-select'} disabled={readOnly}\r\n            style={props.inputStyle}\r\n            value={value}\r\n            onChange={SelectorChange}>\r\n                {getOptions()}\r\n    </select>);\r\n\r\n\r\n    return select;\r\n}\r\n\r\nSelectorComponent.cname = 'SelectorComponent';\r\nexport interface SelectorOwnProps {\r\n    data?: DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field: string;\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    tooltip?: boolean|string;\r\n    hidden?: boolean;\r\n    options?: JSX.Element;\r\n    key?: React.Key | null;\r\n    className?: string;\r\n    style?: GObject;\r\n    ref?: React.RefObject<HTMLElement> | LegacyRef<HTMLElement>;\r\n    readonly?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    // DANGER: use the data provided in parameters instead of using js closure, as the proxy accessed from using closure won't be updated in rerenders.\r\n    my_getter?: <T extends DPointerTargetable = any>(data: any | T | Pointer<T>, field: (string | number | symbol) | keyof T) => string;\r\n    // setter?: <T extends DPointerTargetable = any>(data: T | Pointer<T>, field: keyof T, selectedValue: string) => void;\r\n    // setter?: <T extends DPointerTargetable = any>(data: any | T | Pointer<T>, field: (string | number | symbol) | keyof T, selectedValue: string) => void;\r\n    my_setter?: (data: any, field: string, selectedValue: string) => void;\r\n\r\n}\r\ninterface StateProps {\r\n    debugmode: boolean,\r\n    data: LPointerTargetable;\r\n    primitives: LClass[];\r\n    returns: LClass[]; }\r\ninterface DispatchProps { }\r\n\r\ntype AllProps = Overlap<SelectorOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: SelectorOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    if (!ownProps.data) return ret;\r\n    const pointer: Pointer = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data.id;\r\n    ret.debugmode = state.debug;\r\n    ret.data = LPointerTargetable.fromPointer(pointer);\r\n    ret.primitives = LPointerTargetable.fromPointer(state.primitiveTypes);\r\n    ret.returns = LPointerTargetable.fromPointer(state.returnTypes);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const SelectorConnected = connect<StateProps, DispatchProps, SelectorOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SelectorComponent);\r\n\r\nexport const Selector = (props: SelectorOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <SelectorConnected {...{...props, children}} />;\r\n}\r\n\r\n\r\nSelectorComponent.cname = 'SelectorComponent';\r\nSelectorConnected.cname = 'SelectorConnected';\r\nSelector.cname = 'Selector';\r\nexport default Selector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}