{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\graph\\\\graphElement\\\\graphElement.tsx\",\n  _dec,\n  _class,\n  _class2,\n  _this = this;\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport './graphElement.scss';\nimport { Point, Pointers, TRANSACTION, GraphPoint, Selectors } from \"../../joiner\";\nimport { LGraphElement, store, BEGIN, CreateElementAction, DClass, Debug, DEdge, DEnumerator, DGraph, DGraphElement, DModel, DObject, DPackage, DPointerTargetable, DUser, DV, EMeasurableEvents, END, GraphElementOwnProps, GraphElementReduxStateProps, JSXT, Keystrokes, Log, LPointerTargetable, MyProxyHandler, RuntimeAccessible, SetFieldAction, SetRootFieldAction, U, UX, windoww, transientProperties } from \"../../joiner\";\nimport { NodeTransientProperties } from \"../../joiner/classes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const Selectors: typeof Selectors_ = windoww.Selectors;\n/*\r\nexport function makeEvalContext(view: LViewElement, state: DState, ownProps: GraphElementOwnProps, stateProps: GraphElementReduxStateProps): GObject {\r\n    let component = GraphElementComponent.map[ownProps.nodeid as Pointer<DGraphElement>];\r\n    let allProps = {...ownProps, ...stateProps};\r\n    let parsedConstants = stateProps.view._parsedConstants;\r\n    let evalContext: GObject = {\r\n        model: stateProps.data,\r\n        ...ownProps,\r\n        ...stateProps,\r\n        edge: (RuntimeAccessibleClass.extends(stateProps.node?.className, \"DVoidEdge\") ? stateProps.node : undefined),\r\n        state,\r\n        ownProps,\r\n        stateProps,\r\n        props: allProps,\r\n        component,\r\n        constants: parsedConstants,\r\n        // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\r\n        ...parsedConstants,\r\n        // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\r\n    };\r\n    evalContext.__proto__ = windoww.defaultContext;\r\n    transientProperties.node[ownProps.nodeid as string].evalContext = evalContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>, state: DState): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    const evalContext = makeEvalContext(view, state, ownProps, stateProps);\r\n    // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\r\n\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n\r\n}*/\n\nfunction computeUsageDeclarations(component, allProps, state, lview) {\n  // compute usageDeclarations\n  let udret = {\n    __notInitialized: true\n  };\n  const view = lview.__raw;\n  const vid = view.id;\n  const constants = transientProperties.view[vid].constants;\n  let UDEvalContext = {\n    ...allProps,\n    ...constants,\n    constants,\n    component,\n    view: lview,\n    // data and node are inherited through props, but view needs redefinition\n    usageDeclarations: undefined,\n    stateProps: allProps,\n    props: allProps,\n    ownProps: allProps,\n    state\n  }; //transientProperties.node[stateProps.nodeid].evalContext;\n  /*\r\n  *\r\n          \"constants\": true, \"usageDeclarations\": true,\r\n          \"component\": true,\r\n          \"htmlindex\": true,\r\n          \"state\": true, \"stateProps\": true, \"ownProps\": true,*/\n  if (!view.usageDeclarations) {\n    udret = {\n      data: allProps.data,\n      view,\n      node: allProps.node\n    };\n  } else try {\n    transientProperties.view[vid].UDFunction.call(UDEvalContext, UDEvalContext, udret);\n    // console.log(\"computing usage declarations: \", {f:transientProperties.view[vid].UDFunction, udret, UDEvalContext});\n  } catch (e) {\n    e.isSyntax = false;\n    udret = {\n      data: allProps.data,\n      view,\n      node: allProps.node,\n      __invalidUsageDeclarations: e\n    }; // \"@runtime:\" +e};\n    Log.ee(\"Invalid usage declarations\", {\n      e,\n      str: view.usageDeclarations,\n      view,\n      data: allProps.data,\n      stateProps: allProps\n    });\n  }\n  transientProperties.node[allProps.nodeid].viewScores[vid].usageDeclarations = udret;\n  // do not merge to create jsx final context now, because if shouldcomponentupdate fails, i want to keep the OLD context for measurable events.\n  return udret;\n}\nlet debugcount = 0;\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\nexport const lightModeAllowedElements = [DModel.cname, DPackage.cname, DClass.cname, DEnumerator.cname, DObject.cname];\nfunction getScores(ret, ownProps) {\n  return Selectors.getAppliedViewsNew({\n    data: ret.data,\n    node: ret.node,\n    nid: ownProps.nodeid,\n    pv: ownProps.parentViewId && DPointerTargetable.from(ownProps.parentViewId)\n  });\n}\nconst countRenders = true;\nexport let GraphElementComponent = (_dec = RuntimeAccessible('GraphElementComponent'), _dec(_class = (_class2 = class GraphElementComponent extends Component {\n  static defaultShouldComponentUpdate(instance, nextProps, nextState, nextContext) {\n    return !U.shallowEqual(instance.props, nextProps) || !U.shallowEqual(instance.state, nextState);\n  }\n\n  // requires data and node wrapping first\n  static mapViewStuff(state, ret, ownProps) {\n    var _tn$validMainViews, _tn$mainView, _ret$node;\n    // let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\n    // console.log(\"viewsss mapstate 3 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, vv:ret.view, ownProps, stateProps:{...ret}, thiss:this});\n    ret.parentviewid = ownProps.parentViewId;\n    const explicitView = ret.view || ownProps.view;\n    const explicitViews = ret.views || ownProps.views;\n    let scores = undefined;\n    let tn = transientProperties.node[ownProps.nodeid]; // tn === scores if getScore is called (getScore have a sideeffect)\n    if (!tn) transientProperties.node[ownProps.nodeid] = tn = new NodeTransientProperties();\n    if (explicitView) {\n      let idorname = Pointers.from(explicitView) || explicitView;\n      ret.view = tn.mainView = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state));\n    }\n    if (!ret.view) {\n      var _scores$mainView, _ret$view;\n      // if view is not explicitly set or the assigned view is not found, match a new one.\n      if (!scores) scores = getScores(ret, ownProps);\n      ret.view = scores.mainView = LPointerTargetable.fromPointer((_scores$mainView = scores.mainView) === null || _scores$mainView === void 0 ? void 0 : _scores$mainView.id, state);\n      Log.w(!!explicitView, \"Requested main view \" + ownProps.view + \" not found. Another view got assigned: \" + ((_ret$view = ret.view) === null || _ret$view === void 0 ? void 0 : _ret$view.__raw.name), {\n        requested: ownProps.view,\n        props: ownProps,\n        state: ret\n      });\n    }\n    if (!((_tn$validMainViews = tn.validMainViews) === null || _tn$validMainViews === void 0 ? void 0 : _tn$validMainViews[0]) || tn.validMainViews[0].id !== ((_tn$mainView = tn.mainView) === null || _tn$mainView === void 0 ? void 0 : _tn$mainView.id)) tn.validMainViews = [tn.mainView, ...(tn.validMainViews || [])];\n    Log.ex(!ret.view, \"Could not find any view appliable to element.\", {\n      data: ret.data,\n      props: ownProps,\n      state: ret,\n      scores: ret.viewScores,\n      nid: ownProps.nodeid,\n      tn: transientProperties.node[ownProps.nodeid]\n    });\n    if (explicitViews) {\n      // ret.views = tn.stackViews = LPointerTargetable.fromArr(explicitView);\n      let views = [];\n      for (let v of explicitViews) {\n        let idorname = Pointers.from(v) || v;\n        let view = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state));\n        if (view) views.push(view);else Log.ww(\"Requested decorative view \" + v + \" not found.\", {\n          requested: v,\n          idorname,\n          props: ownProps,\n          state: ret\n        });\n      }\n      ret.views = tn.stackViews = views;\n    }\n    if (!ret.views) {\n      // if views is not explicitly set. (if some are not found, they are just missing by choice, will not replace)\n      if (!scores) {\n        scores = getScores(ret, ownProps);\n        ret.views = scores.stackViews;\n      } else ret.views = scores.stackViews = LPointerTargetable.fromArr((scores.stackViews || []).map(v => v === null || v === void 0 ? void 0 : v.id).filter(vid => !!vid));\n    }\n    // console.log(\"viewsss mapstate 4 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps: {...ret}, thiss:this});\n\n    ret.viewsid = Pointers.fromArr(ret.views);\n    ret.viewid = ret.view.id;\n    let dnode = (_ret$node = ret.node) === null || _ret$node === void 0 ? void 0 : _ret$node.__raw;\n    if (dnode) dnode.view = ret.viewid;\n    ret.viewScores = tn; // debug only\n  }\n  static mapLModelStuff(state, ownProps, ret) {\n    // NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\n    if (typeof ownProps.data === \"object\") {\n      ret.dataid = ownProps.data.id;\n    } else ret.dataid = ownProps.data;\n    ret.data = LPointerTargetable.wrap(ret.dataid); // forcing re-wrapping even if props was a dobject or lobject, because i want to get the latest version of it.\n\n    /*\r\n    const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n    // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n    ret.data = MyProxyHandler.wrap(meid, state);\r\n    // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n    */\n  }\n  static mapLGraphElementStuff(state, ownProps, ret) {\n    let dGraphElementDataClass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DGraphElement;\n    let isDGraph = arguments.length > 4 ? arguments[4] : undefined;\n    let nodeid = ownProps.nodeid;\n    let graphid = isDGraph ? isDGraph.id : ownProps.graphid;\n    let parentnodeid = ownProps.parentnodeid;\n    ret.nodeid = nodeid;\n    let tn = transientProperties.node[nodeid];\n    if (!tn) tn = transientProperties.node[nodeid] = new NodeTransientProperties();\n    // let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\n    // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\n    /*if (!nodeid) {\r\n        nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '_' + stateProps.view.id : '') + '_1';\r\n        stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n        todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n    }*/\n\n    let graph = DPointerTargetable.from(graphid, state); // se non c'è un grafo lo creo\n    if (!graph) {\n      // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\n      if (ret.data) CreateElementAction.new(DGraph.new(0, ret.data.id, parentnodeid, graphid, graphid));\n    }\n    /*else {\r\n        graph = MyProxyHandler.wrap(graph);\r\n        Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n    }*/\n    let dnode = DPointerTargetable.from(nodeid, state);\n\n    // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\n    if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {\n      /*\r\n      console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n          pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/\n      // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\n      let dge;\n      /*\r\n      if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n          let initialSize = ownProps.initialSize;\r\n          dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n          ret.node =  MyProxyHandler.wrap(dge);\r\n      } else*/\n      if (dGraphElementDataClass === DEdge) {\n        var _ret$data;\n        // set start and end from ownprops;\n        let edgeOwnProps = ownProps;\n        let edgeStateProps = ret;\n        let startnodeid = LGraphElement.getNodeId(edgeOwnProps.start);\n        let endnodeid = LGraphElement.getNodeId(edgeOwnProps.end);\n        if (!startnodeid) {\n          startnodeid = LGraphElement.getNodeId(ret.data);\n        }\n        edgeStateProps.start = LPointerTargetable.fromPointer(startnodeid);\n        edgeStateProps.end = LPointerTargetable.fromPointer(endnodeid);\n        Log.e(!startnodeid, \"Cannot create an edge without start node\", {\n          startnodeid,\n          data: ret.data,\n          propsStart: edgeOwnProps.start\n        });\n        Log.e(!endnodeid, \"Cannot create an edge without end node (yet)\", {\n          endnodeid,\n          data: ret.data,\n          propsEnd: edgeOwnProps.end\n        });\n        if (!startnodeid || !endnodeid) return;\n        let longestLabel = edgeOwnProps.label;\n        let labels = edgeOwnProps.labels;\n        // dge = DEdge.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\n        dge = DEdge.new2((_ret$data = ret.data) === null || _ret$data === void 0 ? void 0 : _ret$data.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, d => {\n          //d.longestLabel = longestLabel;\n          //d.labels = labels;\n          let tn = transientProperties.node[nodeid];\n          if (!tn) transientProperties.node[nodeid] = {};\n          tn.labels = labels;\n          tn.longestLabel = longestLabel;\n          d.zIndex = ownProps.htmlindex || 1;\n          if (edgeOwnProps.anchorStart) d.anchorStart = edgeOwnProps.anchorStart;\n          if (edgeOwnProps.anchorEnd) d.anchorEnd = edgeOwnProps.anchorEnd;\n        });\n        edgeStateProps.node = edgeStateProps.edge = MyProxyHandler.wrap(dge);\n      } else {\n        var _ret$data2;\n        let initialSize = ownProps.initialSize;\n        dge = dGraphElementDataClass.new(ownProps.htmlindex, (_ret$data2 = ret.data) === null || _ret$data2 === void 0 ? void 0 : _ret$data2.id, parentnodeid, graphid, nodeid, initialSize);\n        ret.node = MyProxyHandler.wrap(dge);\n      }\n      // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\n    } else {\n      ret.node = MyProxyHandler.wrap(dnode);\n      if (dGraphElementDataClass === DEdge) ret.edge = ret.node;\n    }\n    if (ret.dataid) {\n      // set up transient model-> node map\n      let ta = transientProperties.modelElement[ret.dataid];\n      if (!ta) transientProperties.modelElement[ret.dataid] = {\n        nodes: {}\n      };\n      ta.nodes[ownProps.nodeid] = ret.node;\n      ta.node = ret.node;\n    }\n  }\n\n  ////// mapper func\n  static mapStateToProps(state, ownProps) {\n    let dGraphDataClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DGraphElement;\n    let startingobj = arguments.length > 3 ? arguments[3] : undefined;\n    // console.log('dragx GE mapstate', {dGraphDataClass});\n    let ret = startingobj || GraphElementReduxStateProps.new(); // NB: cannot use a constructor, must be pojo\n    // console.log(\"viewsss mapstate 0 \" + ownProps.view + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\n\n    GraphElementComponent.mapLModelStuff(state, ownProps, ret);\n    if (Debug.lightMode && (!ret.data || !lightModeAllowedElements.includes(ret.data.className))) {\n      return ret;\n    }\n    // console.log(\"map ge\", {ownProps, ret, state});\n    GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\n    // console.log(\"viewsss mapstate 2 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\n\n    GraphElementComponent.mapViewStuff(state, ret, ownProps);\n    // console.log(\"viewsss mapstate 5 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\n\n    Log.exDev(!ret.view || !ret.views, 'failed to assign view:', {\n      state,\n      ownProps,\n      reduxProps: ret\n    });\n    // @ts-ignore\n    ret.key = ret.key || ownProps.key;\n    // @ts-ignore\n    ret.forceupdate = state.forceupdate;\n\n    // Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\n    U.removeEmptyObjectKeys(ret);\n    return ret;\n  }\n  static mapDispatchToProps(dispatch) {\n    const ret = {};\n    return ret;\n  }\n\n  // undefined or view.clonedCounter;\n\n  // undefined or data.clonedCounter;\n\n  shouldComponentUpdate(nextProps, nextState, nextContext, oldProps) {\n    var _nextProps$data;\n    if (!oldProps) oldProps = this.props; //for subviewcomponent\n    // return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\n    let data = (_nextProps$data = nextProps.data) === null || _nextProps$data === void 0 ? void 0 : _nextProps$data.__raw;\n    let out = {\n      reason: undefined\n    };\n    let skipDeepKeys = {\n      pointedBy: true,\n      clonedCounter: true\n    }; // clonedCounter is checked manually before looping object keys\n    // let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\n    let ret = false; // !U.isShallowEqualWithProxies(oldProps, nextProps, 0, 1, skipPropKeys, out);\n    // if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\n    let component = nextProps.node.component;\n    const nid = nextProps.nodeid;\n    // U.arrayDiff()\n    for (let v of nextProps.views) {\n      const vid = v.__raw.id;\n      let nodeviewentry = transientProperties.node[nid].viewScores[vid];\n      let old_ud = nodeviewentry.usageDeclarations;\n      computeUsageDeclarations(component, nextProps, nextState, v);\n      let new_ud = nodeviewentry.usageDeclarations;\n      nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud, skipDeepKeys, out);\n      nodeviewentry.shouldUpdate_reason = {\n        ...out\n      };\n      nodeviewentry.shouldUpdate_reasonDebug = {\n        old_ud,\n        new_ud\n      };\n      Log.l(true, \"DECORATIVE_VIEW ShouldComponentUpdate \" + (data === null || data === void 0 ? void 0 : data.name) + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \") + vid, {\n        ret: nodeviewentry.shouldUpdate,\n        reason: out.reason,\n        old_ud,\n        new_ud,\n        oldProps: oldProps,\n        nextProps,\n        vid\n      });\n      if (!ret && nodeviewentry.shouldUpdate) ret = true;\n    }\n    const vid = nextProps.view.__raw.id;\n    let nodeviewentry = transientProperties.node[nextProps.nodeid].viewScores[vid];\n    let old_ud = nodeviewentry.usageDeclarations;\n    computeUsageDeclarations(component, nextProps, nextState, nextProps.view);\n    let new_ud = nodeviewentry.usageDeclarations;\n    nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud, skipDeepKeys, out);\n    nodeviewentry.shouldUpdate_reason = {\n      ...out\n    };\n    nodeviewentry.shouldUpdate_reasonDebug = {\n      old_ud,\n      new_ud\n    };\n    Log.l(true, \"ShouldComponentUpdate \" + (data === null || data === void 0 ? void 0 : data.name) + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \") + vid, {\n      ret: nodeviewentry.shouldUpdate,\n      reason: out.reason,\n      old_ud,\n      new_ud,\n      oldProps: oldProps,\n      nextProps\n    });\n    if (!ret && nodeviewentry.shouldUpdate) ret = true;\n    return ret; // if any of main view or decorative views need updating\n    // apparently node changes are not working? also check docklayout shouldupdate\n  }\n  doMeasurableEvent(type, vid) {\n    if (Debug.lightMode) return false;\n    let measurableFunc = transientProperties.view[vid][type];\n    if (!measurableFunc) return false;\n    let context = this.getJSXContext(vid); // context + usagedeclarations of main view only\n    try {\n      measurableFunc.call(context, context);\n      console.log(\"measurable executed\", {\n        type,\n        measurableFunc,\n        vid,\n        transient: transientProperties.view[vid]\n      });\n    } catch (e) {\n      Log.ee('Error in measurable \"' + type + '\" ' + e.message, {\n        e,\n        measurableFunc,\n        context\n      });\n    }\n    // it has executed at least partially.\n    // i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\n    return true;\n  }\n  select(forUser) {\n    var _this$props$node, _this$props$data;\n    // if (forUser === DUser.current && this.html.current) this.html.current.focus();\n    BEGIN();\n    (_this$props$node = this.props.node) === null || _this$props$node === void 0 ? void 0 : _this$props$node.select(forUser);\n    SetRootFieldAction.new('_lastSelected', {\n      node: this.props.nodeid,\n      view: this.props.view.id,\n      modelElement: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.id\n    }); /*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n         //selected[forUser] = id;\r\n         SetRootFieldAction.new('selected', id, '', true);\r\n        }*/\n\n    // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\n    END();\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.id = void 0;\n    this.countRenders = void 0;\n    this._isMounted = void 0;\n    this.html = void 0;\n    this.lastViewChanges = void 0;\n    this.lastOnUpdateChanges = void 0;\n    this.stopUpdateEvents = void 0;\n    this.dataOldClonedCounter = void 0;\n    this.lastViewChanges = [];\n    this.lastOnUpdateChanges = [];\n    this.stopUpdateEvents = undefined;\n    this._isMounted = false;\n    this.countRenders = 0;\n    this.id = GraphElementComponent.maxid++;\n    GraphElementComponent.all[this.id] = this;\n    GraphElementComponent.map[props.nodeid] = this; // props might change at runtime, setting in constructor is not enough\n    this.html = /*#__PURE__*/React.createRef();\n    let functionsToBind = [this.onClick, this.onLeave, this.onEnter, this.doContextMenu, this.onContextMenu, this.onMouseDown, this.onMouseUp, this.onKeyDown, this.onScroll, this.onMouseMove]; /*\r\n                                                                                                                                                                                                 this.onClick = this.onClick.bind(this);\r\n                                                                                                                                                                                                 this.onLeave = this.onLeave.bind(this);\r\n                                                                                                                                                                                                 this.onContextMenu = this.onContextMenu.bind(this);\r\n                                                                                                                                                                                                 this.onEnter = this.onEnter.bind(this);\r\n                                                                                                                                                                                                 this.select = this.select.bind(this);*/\n    for (let f of functionsToBind) this[f.name] = f.bind(this);\n    // @ts-ignore\n    this.state = {\n      classes: []\n    };\n    this.shouldComponentUpdate(this.props, this.state, undefined, undefined);\n  }\n\n  // constants: evalutate solo durante il primo render, può essere una funzione con effetti collaterali sul componente,\n  // in tal caso la si esegue e si prende il valore di ritorno.\n  // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\n  // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\n\n  componentDidMount() {\n    // after first render\n    this._isMounted = true;\n  }\n  componentWillUnmount() {\n    // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista più.\n    //  e non venga cancellato se il componente viene smontato perchè ho solo cambiato vista\n    //  LOW PRIORITY perchè funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\n    // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\n  }\n  /*\r\n      componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n          const newProps = this.props\r\n          if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n  }*/\n\n  getJSXContext(vid) {\n    let context = transientProperties.node[this.props.nodeid].viewScores[vid].evalContext;\n    if (context && context.component) return context;\n\n    // else rebuild + update it\n    let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\n    let tv = transientProperties.view[vid];\n    context = tnv.evalContext = {\n      ...this.props,\n      ...tv.constants,\n      ...tnv.usageDeclarations,\n      // add component stuff that could not be computed in reducer\n      component: this,\n      otherViews: this.props.views,\n      constants: tv.constants,\n      usageDeclarations: tnv.usageDeclarations,\n      props: this.props\n    };\n    context._context = context;\n    return context;\n  }\n  static displayError(e, where, view, data, node) {\n    let asString = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let printData = arguments.length > 6 ? arguments[6] : undefined;\n    // const view: LViewElement = this.props.view; //data._transient.currentView;\n    let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") + (e.message || \"\\n\").split(\"\\n\")[0];\n    if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\n      errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.';\n    } else if (view.jsxString.indexOf('?.') >= 0) {\n      errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.';\n    } else if (e.message.indexOf(\"Unexpected token '<'\") !== -1) {\n      errormsg += '\\n\\nDid you forgot to close a html </tag>?';\n    }\n    try {\n      let ee = e.stack || \"\";\n      let stackerrorlast = ee.split(\"\\n\")[1];\n      let icol = stackerrorlast.lastIndexOf(\":\");\n      let jsxString = view.jsxString;\n      // let col = stackerrorlast.substring(icol+1);\n      let irow = stackerrorlast.lastIndexOf(\":\", icol - 1);\n      const offset = {\n        row: -2,\n        col: 1\n      };\n      let stackerrorlinenum = {\n        row: Number.parseInt(stackerrorlast.substring(irow + 1, icol)) + offset.row,\n        col: Number.parseInt(stackerrorlast.substring(icol + 1)) + offset.col\n      };\n      let linesPre = 1;\n      let linesPost = 1;\n      let jsxlines = jsxString.split(\"\\n\");\n      let culpritlinesPre = jsxlines.slice(stackerrorlinenum.row - linesPre - 1, stackerrorlinenum.row - 1);\n      let culpritline = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\n      let culpritlinesPost = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\n      console.error(\"errr\", {\n        e,\n        node,\n        jsxlines,\n        culpritlinesPre,\n        culpritline,\n        culpritlinesPost,\n        stackerrorlinenum,\n        icol,\n        irow,\n        stackerrorlast\n      });\n      if (stackerrorlinenum.col - offset.col > (culpritline === null || culpritline === void 0 ? void 0 : culpritline.length) && stackerrorlinenum.row === 1) stackerrorlinenum.col = 0;\n      let caretCursor = \"▓\"; // ⵊ ꕯ 𝙸 Ꮖ\n      if (culpritline && stackerrorlinenum.col - offset.col <= (culpritline === null || culpritline === void 0 ? void 0 : culpritline.length) && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\n        let rowPre = culpritline.substring(0, stackerrorlinenum.col);\n        let rowPost = culpritline.substring(stackerrorlinenum.col);\n        let jsxcode = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontFamily: \"monospaced sans-serif\",\n            color: \"#444\"\n          },\n          children: [culpritlinesPre.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 52\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [rowPre, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: \"red\"\n              },\n              children: [\" \", caretCursor, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 39\n            }, this), \" \", rowPost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 25\n          }, this), culpritlinesPost.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 53\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }, this);\n        errormsg += \" @ line \" + stackerrorlinenum.row + \", col:\" + stackerrorlinenum.col;\n        if (asString) return DV.errorView_string('<div>' + errormsg + '\\n' + jsxcode + '</div>', {\n          where: \"in \" + where + \"()\",\n          e,\n          template: view.jsxString,\n          view: view\n        }, where, data, node, view);\n        return DV.errorView( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [errormsg, jsxcode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 37\n        }, this), {\n          where: \"in \" + where + \"()\",\n          e,\n          template: view.jsxString,\n          view: view\n        }, where, data, node, view);\n      } else {\n        // it means it is likely accessing a minified.js src code, sending generic error without source mapping\n      }\n    } catch (e2) {\n      Log.eDevv(\"internal error in error view\", {\n        e,\n        e2,\n        where\n      });\n      return null;\n    }\n    if (asString) return DV.errorView_string('<div>' + errormsg + '</div>', {\n      where: \"in \" + where + \"()\",\n      e,\n      template: view.jsxString,\n      view: view\n    }, where, data, node, view);\n    return DV.errorView( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errormsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 29\n    }, this), {\n      where: \"in \" + where + \"()\",\n      e,\n      template: view.jsxString,\n      view: view,\n      ...(printData || {})\n    }, where, data, node, view);\n  }\n  /*\r\n      protected getTemplate(): ReactNode {\r\n          /*if (!this.state.template) {\r\n              this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                  '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n          }* /\r\n          // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n  \r\n          // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n          if (this.props.invalidUsageDeclarations) {\r\n              return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\r\n          }\r\n          let context: GObject = this.getContext();\r\n          // abababababab\r\n          // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n  \r\n          try {\r\n              let preRenderFuncStr: string | undefined = this.props.view.preRenderFunc;\r\n              if (preRenderFuncStr) {\r\n                  // eval prerender\r\n                  let obj: GObject = {};\r\n                  let tempContext: GObject = {__param: obj};\r\n                  tempContext.__proto__ = context;\r\n                  U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                  U.objectMergeInPlace(context, obj);\r\n              }\r\n          }\r\n          catch(e: any) { return this.displayError(e, \"Pre-Render\");  }\r\n  \r\n          let ret;\r\n          // eval template\r\n          let jsxCodeString: DocString<ReactNode>;\r\n  \r\n          try { jsxCodeString = JSXT.fromString(this.props.view.jsxString, {factory: 'React.createElement'}); }\r\n          catch (e: any) { return this.displayError(e, \"JSX Syntax\"); }\r\n  \r\n          try { ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', context); }\r\n          catch (e: any) { return this.displayError(e, \"JSX Semantic\"); }\r\n          return ret;\r\n      }*/\n  getTemplate3(vid, v, context) {\n    let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\n    let tv = transientProperties.view[vid];\n    // console.log(\"getTemplate jsx\", {vid, v, context, tnv, tv, shouldUp: tnv.shouldUpdate, jsxFunc:tv.JSXFunction});\n    let ret = this.getTemplate3_(vid, v, context);\n    return ret;\n  }\n  getTemplate3_(vid, v, context) {\n    let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\n    if (!tnv.shouldUpdate && tnv.jsxOutput) return tnv.jsxOutput;\n    let tv = transientProperties.view[vid];\n    let ret = tnv.jsxOutput = tv.JSXFunction ? tv.JSXFunction.call(context, context) : null;\n    if (typeof ret === \"object\" && ret !== null && ! /*#__PURE__*/React.isValidElement(ret)) {\n      // plain objects cannot be react nodes, but react noeds are objects. so i try serializing\n      // this only happens if someone puts an object in jsx\n      try {\n        ret = JSON.stringify(ret);\n      } catch (e) {\n        ret = \"{__ Cyclic Object __}\";\n      }\n    }\n    return ret;\n  }\n  getTemplate2(v, udContext) {\n    // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\n\n    /*\r\n    let thisContext: GObject = {};\r\n    try {\r\n        let preRenderFuncStr: string | undefined = v.preRenderFunc;\r\n        if (preRenderFuncStr) {\r\n            // eval prerender\r\n            let tempContext: GObject = {__param: thisContext};\r\n            this.addToContext(udContext, {__param: thisContext});\r\n            tempContext.__proto__ = sharedContext;\r\n            U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n            U.objectMergeInPlace(thisContext, udContext);\r\n            // thisContext.__proto__ = sharedContext;\r\n        } else thisContext = udContext;\r\n    }\r\n    catch(e: any) { return this.displayError(e, \"Pre-Render\", v);  }*/\n\n    let ret;\n    // eval template\n    let jsxCodeString;\n    try {\n      jsxCodeString = JSXT.fromString(v.jsxString, {\n        factory: 'React.createElement'\n      });\n    } catch (e) {\n      var _this$props$data2, _this$props$node2;\n      return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, (_this$props$data2 = this.props.data) === null || _this$props$data2 === void 0 ? void 0 : _this$props$data2.__raw, (_this$props$node2 = this.props.node) === null || _this$props$node2 === void 0 ? void 0 : _this$props$node2.__raw);\n    }\n\n    // console.log('context for ' + (this.props.data?.name), {udContext});\n    try {\n      let parsedFunc = U.parseFunctionWithContextAndScope('()=>{ return ' + jsxCodeString + '}', udContext, udContext);\n      ret = parsedFunc(udContext);\n      /// ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', udContext);\n    } catch (e) {\n      var _this$props$data3, _this$props$node3;\n      return GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, (_this$props$data3 = this.props.data) === null || _this$props$data3 === void 0 ? void 0 : _this$props$data3.__raw, (_this$props$node3 = this.props.node) === null || _this$props$node3 === void 0 ? void 0 : _this$props$node3.__raw, false, {\n        udContext\n      });\n    }\n    return ret;\n  }\n  onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    // NOT executed here, but on mousedown because of IOS compatibility\n  }\n  doContextMenu(e) {\n    var _state$contextMenu;\n    BEGIN();\n    this.props.node.select();\n    if (this.html.current) this.html.current.focus();\n    let state = store.getState();\n    if (((_state$contextMenu = state.contextMenu) === null || _state$contextMenu === void 0 ? void 0 : _state$contextMenu.x) !== e.clientX) {\n      var _this$props$node4;\n      SetRootFieldAction.new(\"contextMenu\", {\n        display: true,\n        x: e.clientX,\n        y: e.clientY,\n        nodeid: (_this$props$node4 = this.props.node) === null || _this$props$node4 === void 0 ? void 0 : _this$props$node4.id\n      });\n    }\n    END();\n  }\n  onEnter(e) {\n    var _this$props$isEdgePen, _this$props$data4;\n    // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\n    const isEdgePending = (_this$props$isEdgePen = this.props.isEdgePending) === null || _this$props$isEdgePen === void 0 ? void 0 : _this$props$isEdgePen.source;\n    if (!isEdgePending || ((_this$props$data4 = this.props.data) === null || _this$props$data4 === void 0 ? void 0 : _this$props$data4.className) !== \"DClass\") return;\n    const extendError = {\n      reason: '',\n      allTargetSuperClasses: []\n    };\n    const canBeExtend = isEdgePending.canExtend(this.props.data, extendError);\n    if (canBeExtend) this.setState({\n      classes: [...this.state.classes, \"class-can-be-extended\"]\n    });else this.setState({\n      classes: [...this.state.classes, \"class-cannot-be-extended\"]\n    });\n  }\n  onLeave(e) {\n    var _this$props$data5;\n    if (((_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : _this$props$data5.className) !== \"DClass\") return;\n    this.setState({\n      classes: this.state.classes.filter(classname => {\n        return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\";\n      })\n    });\n  }\n  onMouseDown(e) {\n    e.stopPropagation();\n    GraphElementComponent.mousedownComponent = this;\n    TRANSACTION(() => {\n      if (e.button === Keystrokes.clickRight) {\n        this.doContextMenu(e);\n      }\n      let p = this.props;\n      console.log('try drag', {\n        p,\n        ig: p.isGraph,\n        iv: p.isVertex\n      });\n      // if ((p.isGraph && !p.isVertex) || (p.isGraph && p.isVertex && e.ctrlKey)) GraphDragManager.startPanning(e, this.props.node as LGraph);\n    });\n  }\n  onScroll(e) {\n    console.log(\"onScroll\");\n    let scroll = new Point(e.currentTarget.scrollLeft, e.currentTarget.scrollTop);\n    let scrollOrigin = new Point(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    let g = this.props.node.graph;\n    let oldZoom = g.zoom;\n    let newZoom = new GraphPoint(oldZoom.x + 0.1, oldZoom.y + 0.1);\n    let oldOffset = g.offset;\n    let gscrollOrigin = oldOffset.add(scrollOrigin.multiply(oldZoom, true), true);\n    let newscrollOrigin = oldOffset.add(scrollOrigin.multiply(newZoom, true), true);\n    let newOffset = oldOffset.add(gscrollOrigin.subtract(newscrollOrigin, true), true);\n    TRANSACTION(() => {\n      g.offset = newOffset;\n      g.zoom = newZoom;\n    });\n    e.stopPropagation();\n  }\n  onMouseMove(e) {\n    //this.onMouseUp(e);\n  }\n  onMouseUp(e) {\n    let frommousemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    e.stopPropagation();\n    TRANSACTION(() => {\n      //GraphDragManager.stopPanning(e);\n      if (GraphElementComponent.mousedownComponent !== this) {\n        return;\n      }\n      if (!frommousemove) this.doOnClick(e);\n    });\n  }\n  onKeyDown(e) {\n    if (e.key === Keystrokes.escape) {\n      this.props.node.deselect();\n      if (this.props.isEdgePending) {\n        // this.stopPendingEdge(); todo\n        return;\n      }\n    }\n    if (e.ctrlKey || e.altKey) {\n      var _this$props$data6, _this$props$data7;\n      // todo: make them a switch\n      if (e.key === \"d\") (_this$props$data6 = this.props.data) === null || _this$props$data6 === void 0 ? void 0 : _this$props$data6.duplicate();else if (e.key === \"r\") (_this$props$data7 = this.props.data) === null || _this$props$data7 === void 0 ? void 0 : _this$props$data7.delete();\n    }\n    if (e.altKey) {\n      var _this$props$data8, _this$props$data9, _this$props$data10, _this$props$data11, _this$props$data12, _this$props$data13, _this$props$data14, _this$props$data15, _this$props$data16, _this$props$data17;\n      // if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\n      if (e.key === \"a\") (_this$props$data8 = this.props.data) === null || _this$props$data8 === void 0 ? void 0 : _this$props$data8.addChild(\"auto\");else\n        // add class if on package, literal if on enum...\n        if (e.key === \"r\") (_this$props$data9 = this.props.data) === null || _this$props$data9 === void 0 ? void 0 : _this$props$data9.addChild(\"reference\");else if (e.key === \"o\") ((_this$props$data10 = this.props.data) === null || _this$props$data10 === void 0 ? void 0 : _this$props$data10.addChild(\"operation\")) || ((_this$props$data11 = this.props.data) === null || _this$props$data11 === void 0 ? void 0 : _this$props$data11.addChild(\"object\"));else if (e.key === \"l\") (_this$props$data12 = this.props.data) === null || _this$props$data12 === void 0 ? void 0 : _this$props$data12.addChild(\"literal\");else if (e.key === \"p\") ((_this$props$data13 = this.props.data) === null || _this$props$data13 === void 0 ? void 0 : _this$props$data13.addChild(\"package\")) || ((_this$props$data14 = this.props.data) === null || _this$props$data14 === void 0 ? void 0 : _this$props$data14.addChild(\"parameter\"));else if (e.key === \"c\") (_this$props$data15 = this.props.data) === null || _this$props$data15 === void 0 ? void 0 : _this$props$data15.addChild(\"class\");else if (e.key === \"e\") (_this$props$data16 = this.props.data) === null || _this$props$data16 === void 0 ? void 0 : _this$props$data16.addChild(\"enumerator\");else if (e.key === \"q\") (_this$props$data17 = this.props.data) === null || _this$props$data17 === void 0 ? void 0 : _this$props$data17.addChild(\"annotation\");else ;\n    }\n  }\n  doOnClick(e) {\n    var _state$contextMenu2, _this$props$isEdgePen2, _this$props$data18, _this$props$node5, _this$props$node6, _this$props$node7, _this$props$node8, _state$_lastSelected;\n    // (e.target as any).focus();\n    e.stopPropagation();\n    let state = store.getState();\n    if (e.button !== Keystrokes.clickRight && ((_state$contextMenu2 = state.contextMenu) === null || _state$contextMenu2 === void 0 ? void 0 : _state$contextMenu2.display)) SetRootFieldAction.new(\"contextMenu\", {\n      display: false,\n      x: 0,\n      y: 0\n    }); // todo: need to move it on document or <App>\n    const edgePendingSource = (_this$props$isEdgePen2 = this.props.isEdgePending) === null || _this$props$isEdgePen2 === void 0 ? void 0 : _this$props$isEdgePen2.source;\n    console.log('mousedown select() check PRE:', {\n      name: (_this$props$data18 = this.props.data) === null || _this$props$data18 === void 0 ? void 0 : _this$props$data18.name,\n      isSelected: this.props.node.isSelected(),\n      'nodeIsSelectedMapProxy': (_this$props$node5 = this.props.node) === null || _this$props$node5 === void 0 ? void 0 : _this$props$node5.isSelected,\n      nodeIsSelectedRaw: (_this$props$node6 = this.props.node) === null || _this$props$node6 === void 0 ? void 0 : _this$props$node6.__raw.isSelected\n    });\n    if (edgePendingSource) {\n      var _this$props$data19;\n      if (((_this$props$data19 = this.props.data) === null || _this$props$data19 === void 0 ? void 0 : _this$props$data19.className) !== \"DClass\") return;\n      // const user = this.props.isEdgePending.user;\n      const extendError = {\n        reason: '',\n        allTargetSuperClasses: []\n      };\n      const canBeExtend = this.props.data && edgePendingSource.canExtend(this.props.data, extendError);\n      if (canBeExtend && this.props.data) {\n        const lClass = LPointerTargetable.from(this.props.data.id);\n        // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\n        // todo: use source.addExtends(lClass); or something (source is LClass)\n        SetFieldAction.new(lClass.id, \"extendedBy\", edgePendingSource.id, \"+=\", true);\n        SetFieldAction.new(edgePendingSource.id, \"extends\", lClass.id, \"+=\", true);\n      }\n      SetRootFieldAction.new('isEdgePending', {\n        user: '',\n        source: ''\n      });\n      return;\n    }\n    console.log('mousedown select() check:', {\n      isSelected: this.props.node.isSelected(),\n      'nodeIsSelectedMapProxy': (_this$props$node7 = this.props.node) === null || _this$props$node7 === void 0 ? void 0 : _this$props$node7.isSelected,\n      nodeIsSelectedRaw: (_this$props$node8 = this.props.node) === null || _this$props$node8 === void 0 ? void 0 : _this$props$node8.__raw.isSelected\n    });\n    BEGIN();\n    windoww.node = this.props.node;\n    this.props.node.toggleSelected(DUser.current);\n    if (((_state$_lastSelected = state._lastSelected) === null || _state$_lastSelected === void 0 ? void 0 : _state$_lastSelected.node) !== this.props.nodeid) {\n      var _this$props$data20;\n      SetRootFieldAction.new('_lastSelected', {\n        node: this.props.nodeid,\n        view: this.props.view.id,\n        modelElement: (_this$props$data20 = this.props.data) === null || _this$props$data20 === void 0 ? void 0 : _this$props$data20.id\n      });\n    }\n    if (e.shiftKey || e.ctrlKey) {} else {\n      var _this$props$node9;\n      let allNodes = (_this$props$node9 = this.props.node) === null || _this$props$node9 === void 0 ? void 0 : _this$props$node9.graph.allSubNodes;\n      let nid = this.props.node.id;\n      if (allNodes) for (let node of allNodes) if (node.id !== nid) node.deselect(DUser.current);\n    }\n    END();\n  }\n  onClick(e) {}\n  onDataUpdateMeasurable(view, vid, index) {\n    if (index > 0) {\n      this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid);\n      return;\n    }\n    // only on first of a sequence of onDataUpdate events for all stackviews (the mainview),\n    // set time of current stack of updates, to check if they are generating a loop\n\n    // EMeasurableEvents.onDataUpdate -> handling and checking for loops\n    if (!this.stopUpdateEvents || this.stopUpdateEvents !== this.props.view.clonedCounter) {\n      this.stopUpdateEvents = undefined;\n      if (this.props.data && this.dataOldClonedCounter !== this.props.data.clonedCounter && this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid)) {\n        var _this$lastOnUpdateCha;\n        this.dataOldClonedCounter = this.props.data.clonedCounter;\n        let thischange = {\n          t: Date.now()\n        };\n        this.lastOnUpdateChanges.push(thischange);\n        if (thischange.t - ((_this$lastOnUpdateCha = this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]) === null || _this$lastOnUpdateCha === void 0 ? void 0 : _this$lastOnUpdateCha.t) < 300) {\n          var _this$lastOnUpdateCha2;\n          // if N updates in <= 0.2 sec\n          this.stopUpdateEvents = this.props.view.clonedCounter;\n          Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\", {\n            change_log: this.lastOnUpdateChanges,\n            component: this,\n            timediff: thischange.t - ((_this$lastOnUpdateCha2 = this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]) === null || _this$lastOnUpdateCha2 === void 0 ? void 0 : _this$lastOnUpdateCha2.t)\n          });\n        }\n      }\n    }\n  }\n\n  // returns: true if an action is fired and component needs re-rendering\n  updateNodeFromProps(props) {\n    var _props$end, _props$end$model;\n    let ret = false;\n    let tn = transientProperties.node[props.nodeid];\n    let ptr;\n    if (!props.node) return false;\n    let dnode = props.node.__raw;\n    // if edge.label props is func, do not set in the dedge, just in transientproperties. totally override the \"text\" system.\n    // it does not need collab sync:\n    // because if the view is active for the other user, his synched jsx will generate the same function in transientProperties.\n    // if it is inactive it does not matter, the value is not used.\n    if (props.label) {\n      tn.longestLabel = props.label;\n    }\n    if (props.longestLabel) {\n      tn.longestLabel = props.longestLabel;\n    }\n    if (props.labels) {\n      tn.labels = props.labels;\n    }\n    if (props.anchorStart && props.isEdge) {\n      props.node.anchorStart = props.anchorStart;\n    }\n    if (props.anchorEnd && props.isEdge) {\n      props.node.anchorEnd = props.anchorEnd;\n    }\n    if (props.start && props.isEdge) {\n      ptr = Pointers.from(props.start);\n      if (dnode.id !== ptr) props.node.start = ptr;\n    }\n    console.log(\"changing endpt\", props, props.end, (_props$end = props.end) === null || _props$end === void 0 ? void 0 : (_props$end$model = _props$end.model) === null || _props$end$model === void 0 ? void 0 : _props$end$model.name);\n    if (props.end && props.isEdge) {\n      ptr = Pointers.from(props.end);\n      if (dnode.id !== ptr) props.node.end = ptr;\n    }\n    if (props.anchorEnd) {\n      tn.labels = props.labels;\n    }\n    // if (typeof props.viewid === 'string') { let old = props.viewid; if (old !== props.node.view.id) { this.forceUpdate(); ret = true;} }\n    if (typeof props.x === 'number') {\n      let old = props.node.x;\n      let n = +props.x;\n      if (old !== n) {\n        props.node.x = n;\n        ret = true;\n      }\n    }\n    if (typeof props.y === 'number') {\n      let old = props.node.y;\n      let n = +props.y;\n      if (old !== n) {\n        props.node.y = n;\n        ret = true;\n      }\n    }\n    // risk loop: todo loop detection and skip setting\n    if (typeof props.w === 'number') {\n      let old = props.node.w;\n      let n = +props.w;\n      if (old !== n) {\n        props.node.w = n;\n        ret = true;\n      }\n    }\n    if (typeof props.h === 'number') {\n      let old = props.node.h;\n      let n = +props.h;\n      if (old !== n) {\n        props.node.h = n;\n        ret = true;\n      }\n    }\n    if (typeof props.width === 'number') {\n      let old = props.node.w;\n      let n = +props.width;\n      if (old !== n) {\n        props.node.w = n;\n        ret = true;\n      }\n    }\n    if (typeof props.height === 'number') {\n      let old = props.node.h;\n      let n = +props.height;\n      if (old !== n) {\n        props.node.h = n;\n        ret = true;\n      }\n    }\n    return ret;\n  }\n  render() {\n    var _this$props$data21;\n    let nodeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let styleoverride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    GraphElementComponent.map[this.props.nodeid] = this; // props might change at runtime, setting in constructor is not enough\n    if (Debug.lightMode && (!this.props.data || !lightModeAllowedElements.includes(this.props.data.className))) {\n      return this.props.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \" + this.props.data.name, \":\", this.props.data.className]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 38\n      }, this) : undefined;\n    }\n    if (!this.props.node) return \"Loading...\";\n    /*if (this.props.node.__raw.view !== this.props.view.id) {\r\n        this.onViewChange();\r\n        return \"Updating view...\";\r\n    }*/\n    if (this.updateNodeFromProps(this.props)) return 'Updating...';\n    let nid = this.props.nodeid;\n    let allviews = [...this.props.views, this.props.view]; // main view must be last, for renderView ordering\n\n    for (let i = 0; i < allviews.length; i++) {\n      let v = allviews[i];\n      const vid = v.id;\n      let viewnodescore = transientProperties.node[nid].viewScores[v.id];\n      if (!viewnodescore.shouldUpdate) continue;\n      viewnodescore.evalContext = undefined; // force rebuild jsx context, needs to be done before renderView and measurable events\n      // only if this exact view had UD changed, instead of being forced to rended by other in viewstack)\n      this.onDataUpdateMeasurable(v, vid, i);\n    }\n\n    /// set classes\n    if (this.props.node) {\n      let isSelected = this.props.node.__raw.isSelected;\n      if (isSelected[DUser.current]) {\n        // todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\n        classes.push('selected-by-me');\n        if (Object.keys(isSelected).length > 1) classes.push('selected-by-others');\n      } else if (Object.keys(isSelected).length) classes.push('selected-by-others');\n    }\n    classes.push(((_this$props$data21 = this.props.data) === null || _this$props$data21 === void 0 ? void 0 : _this$props$data21.className) || 'DVoid');\n    U.arrayMergeInPlace(classes, this.state.classes);\n    if (Array.isArray(this.props.className)) {\n      U.arrayMergeInPlace(classes, this.props.className);\n    } else if (this.props.className) {\n      classes.push(this.props.className);\n    }\n    if (Array.isArray(this.props.class)) {\n      U.arrayMergeInPlace(classes, this.props.class);\n    } else if (this.props.class) {\n      classes.push(this.props.class);\n    }\n    /// end set classes\n\n    let mainView = this.props.view;\n    let otherViews = this.props.views;\n    let decoratorViewsOutput = []; /*\r\n                                   for (let v of this.props.views) {\r\n                                   if (v.isExclusiveView) {\r\n                                   if (mainView) continue;\r\n                                   mainView = v;\r\n                                   } else otherViews.push(v);\r\n                                   }*/\n\n    let jsxOutput = undefined;\n    const tn = transientProperties.node[nid];\n    console.log(\"render\", {\n      mainView,\n      otherViews,\n      scores: tn.viewScores,\n      tnv: tn.viewScores[this.props.viewid],\n      ud: tn.viewScores[this.props.viewid].usageDeclarations\n    });\n    for (let v of allviews) {\n      // main view is the last\n      let viewnodescore = transientProperties.node[nid].viewScores[v.id];\n      jsxOutput = viewnodescore.shouldUpdate ? undefined : viewnodescore.jsxOutput;\n      let isMain = v === mainView || undefined;\n      if (!jsxOutput) viewnodescore.jsxOutput = jsxOutput = this.renderView(this.props, v, nodeType, classes, styleoverride, isMain && decoratorViewsOutput, mainView.id, isMain && otherViews.map(v => v.id));\n      if (!isMain) decoratorViewsOutput.push(jsxOutput);\n      if (viewnodescore.shouldUpdate) viewnodescore.shouldUpdate = false; // this needs to be placed post renderView call\n    }\n    let mainViewOutput = jsxOutput;\n    return mainViewOutput;\n    // console.log('rendering view stack', {mainView, otherViews, mainViewOutput, decoratorsJSX:decoratorViewsOutput});\n    // windoww.debbugg = {mainViewOutput,otherViews, ret:<>renderrr{mainViewOutput}{otherViews}</>}\n    // return this.props.data?.className === \"DValue\" ? <div>{mainView.jsxString}{mainViewElement}</div> : mainViewElement;\n  }\n  renderView(props, v, nodeType, classes, styleoverride, otherViews, mainviewid) {\n    var _props$node5;\n    let subViewsID = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n    let dv = v.__raw;\n    const nid = props.nodeid;\n    const vid = v.id;\n    const tnv = transientProperties.node[nid].viewScores[vid];\n    let ud = tnv.usageDeclarations;\n    /*if (false && !ud) {\r\n        this.forceUpdate();\r\n        return <div>Loading...</div>;\r\n    }*/\n\n    if (!ud) tnv.usageDeclarations = ud = computeUsageDeclarations(this, props, this.state, v);\n    console.log(\"renderView\", {\n      dv,\n      tnv,\n      ud\n    });\n    if (ud.__invalidUsageDeclarations) {\n      var _this$props$data22, _this$props$node10;\n      console.error(\"renderView error ud:\", {\n        dv,\n        tnv,\n        ud\n      });\n      return GraphElementComponent.displayError(ud.__invalidUsageDeclarations, \"Usage Declaration \" + (ud.__invalidUsageDeclarations.isSyntax ? \"Syntax\" : \"Semantic\"), v.__raw, (_this$props$data22 = this.props.data) === null || _this$props$data22 === void 0 ? void 0 : _this$props$data22.__raw, (_this$props$node10 = this.props.node) === null || _this$props$node10 === void 0 ? void 0 : _this$props$node10.__raw, false, {\n        ud\n      });\n    }\n    let isMainView = !!otherViews;\n    const context = this.getJSXContext(vid);\n    if (isMainView) context.decorators = otherViews;\n    let rnode;\n    try {\n      rnode = this.getTemplate3(vid, v, context);\n    } catch (e) {\n      var _this$props$data23, _this$props$node11;\n      console.error(\"renderView error get template:\", {\n        e,\n        dv,\n        tnv\n      });\n      // rnode = undefined as any;\n      // todo: move in reducer parser of jsx: catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\n      rnode = GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, (_this$props$data23 = this.props.data) === null || _this$props$data23 === void 0 ? void 0 : _this$props$data23.__raw, (_this$props$node11 = this.props.node) === null || _this$props$node11 === void 0 ? void 0 : _this$props$node11.__raw, false, {\n        context\n      });\n    }\n    let rawRElement = UX.ReactNodeAsElement(rnode);\n\n    // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\n\n    function makeItArray(val) {\n      return val ? [] : Array.isArray(val) ? val : [val];\n    }\n    function getNodeText(node) {\n      if (['string', 'number'].includes(typeof node)) return node;\n      if (node instanceof Array) return node.map(getNodeText).join('');\n      if (typeof node === 'object' && node) return getNodeText(node.props.children);\n    }\n    const addprops = true;\n    let fiximport = !!this.props.node;\n    //let a: false = true as any; if (a) return \"Loading...\";\n    // if (this.props.data?.name === \"Concept 1\") console.log(\"shouldcomponentupdate rendering \" + this.props.data?.name, {cc: this.props.data.clonedCounter, attrs: (this.props.data as any).attributes});\n    if (addprops && rawRElement && fiximport) {\n      if (windoww.debugcount && debugcount++ > windoww.debugcount) throw new Error(\"debug triggered stop\");\n      let fixdoubleroot = true;\n      // add view props to GraphElement children (any level down)\n      const subElements = {}; // this.props.getGVidMap();\n      try {\n        let viewStyle = {\n          ...(this.props.style || {})\n        };\n        /*\r\n            if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n            else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n            if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n            else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n            viewStyle = {};\r\n        */\n        // viewStyle.pointerEvents = \"all\";\n        let injectProps = {};\n        if (isMainView) {\n          var _props$node, _props$node2, _props$node3;\n          viewStyle.order = viewStyle.zIndex = (_props$node = props.node) === null || _props$node === void 0 ? void 0 : _props$node.zIndex; // alias? this.props.node.z\n          viewStyle.display = v === null || v === void 0 ? void 0 : v.display;\n          const me = props.data; // this.props.model;\n          if (countRenders) {\n            classes.push(this.countRenders % 2 ? \"animate-on-update-even\" : \"animate-on-update-odd\");\n          } /// let excludeProps = ['data', 'node', 'view', 'children', ]\n          classes.push(\"mainView\", dv.id);\n          classes.push(...subViewsID);\n          injectProps = {\n            ref: this.html,\n            // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (è perchè iniziano con <Select/> as root?)\n            id: props.nodeid,\n            \"data-nodeid\": props.nodeid,\n            \"data-dataid\": me === null || me === void 0 ? void 0 : me.id,\n            \"data-viewid\": dv.id,\n            \"data-modelname\": (me === null || me === void 0 ? void 0 : me.className) || \"model-less\",\n            \"data-userselecting\": JSON.stringify(((_props$node2 = props.node) === null || _props$node2 === void 0 ? void 0 : _props$node2.isSelected) || {}),\n            \"data-nodetype\": nodeType,\n            // \"data-order\": this.props.node?.zIndex,\n            style: {\n              ...viewStyle,\n              ...styleoverride\n            },\n            className: classes.join(' '),\n            onClick: this.onClick,\n            onContextMenu: this.onContextMenu,\n            onMouseDown: this.onMouseDown,\n            onMouseUp: this.onMouseUp,\n            onMouseMove: this.onMouseMove,\n            onwheel: this.onScroll,\n            onMouseEnter: this.onEnter,\n            onMouseLeave: this.onLeave,\n            tabIndex: props.tabIndex || -1,\n            \"data-countrenders\": this.countRenders++,\n            \"data-clonedcounter\": ((_props$node3 = props.node) === null || _props$node3 === void 0 ? void 0 : _props$node3.clonedCounter) || -1\n            // decorators: otherViews,\n          };\n          let p = this.props;\n          for (let k in p) {\n            if (typeof p[k] === 'object' || typeof p[k] === 'function') continue;\n            if (!injectProps[k]) injectProps[k] = p[k];\n          }\n        } else injectProps = {\n          \"data-viewid\": v.id,\n          className: \"decorativeView \" + v.id,\n          \"data-mainview\": mainviewid\n        };\n        let debug = {};\n        injectProps.children = UX.recursiveMap(rawRElement /*.props.children*/, (rn, index, depthIndexes) => {\n          let injectOffset = this.props.isGraph && !depthIndexes[0] && !index && this.props.node;\n          //injectOffset&&console.log(\"inject offset props0:\", {injectOffset});\n          //console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\n          return UX.injectProp(this, rn, subElements, this.props.parentnodeid, index, depthIndexes, injectOffset);\n        });\n        /*\r\n                        debug.injectPropsOriginal = injectProps.children;\r\n                        debug.recursivemap = injectProps.children;\r\n                        debug.injectChildrensAttempt = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n                        debug.rawRElement = {node:rawRElement, text: getNodeText(rawRElement)};*/\n\n        if (otherViews && false) injectProps.children = [...injectProps.children, ...makeItArray(props.children), ...otherViews];\n\n        // injectProps.children = [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)];\n        let children = makeItArray(injectProps.children); // [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]; rawRElement.child are already in injectprops\n        // injectProps.children = [<div>{children}</div>];//[]; making any change at injectprops.children breaks it?\n        rawRElement = /*#__PURE__*/React.cloneElement(rawRElement, injectProps); //, ...children); // adding chioldrens after injectprops seems pointless\n\n        debug.rawRElementPostInjection = {\n          node: rawRElement,\n          text: getNodeText(rawRElement)\n        };\n        // rawRElement = React.cloneElement(rawRElement, {children: [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]});\n        // console.log('rendering view stack fixing doubles', {v0:rnode, v1:rawRElement, fixed:rawRElement.props.children})\n        fixdoubleroot = false; // need to set the props to new root in that case.\n        if (fixdoubleroot) rawRElement = rawRElement.props.children;\n        // debug.rawRElementPostfixdoubleroot = {node:rawRElement, text: getNodeText(rawRElement)};\n        // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\n      } catch (e) {\n        var _props$data, _props$node4;\n        console.error(\"renderView error inject props:\", {\n          e,\n          dv,\n          tnv\n        });\n        rawRElement = DV.errorView(\"error while injecting props to subnodes\\n:\" + (e.message || '').split('\\n')[0], {\n          e,\n          rawRElement,\n          key: props.key,\n          newid: props.nodeid\n        }, 'Subelement props', (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.__raw, (_props$node4 = props.node) === null || _props$node4 === void 0 ? void 0 : _props$node4.__raw, dv);\n        /*\r\n        rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n            DV.errorView(\"error while injecting props to subnodes\",\r\n                {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n            {});*/\n\n        // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\n      }\n      /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n      let isEqual = true;\r\n      try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n      if (isEqual) {\r\n          this.props.node.subElements = Object.keys(subElements);\r\n      }*/\n    }\n    // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n    // rnode = React.cloneElement(rnode as ReactElement, injectprops);\n\n    // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\n    if (false && dv.isExclusiveView && ((_props$node5 = props.node) === null || _props$node5 === void 0 ? void 0 : _props$node5.__raw).father) {\n      let $containedIn = $('#' + props.node.__raw.father);\n      let $containerDropArea = $containedIn.find(\".VertexContainer\");\n      const droparea = $containerDropArea[0] || $containedIn[0];\n      Log.exDev(!droparea, 'invalid vertex container target', {\n        $containedIn,\n        $containerDropArea\n      });\n      if (droparea) return /*#__PURE__*/createPortal(rawRElement || rnode, droparea);\n    } /*\r\n      if (countRenders) return <>{[\r\n         rawRElement || rnode,\r\n         <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n      ]}</>/*/\n\n    console.log(\"renderView return:\", rawRElement || rnode);\n    return rawRElement || rnode;\n  }\n}, _class2.cname = void 0, _class2.all = {}, _class2.map = {}, _class2.defaultProps = GraphElementOwnProps.new(), _class2.maxid = 0, _class2.mousedownComponent = void 0, _class2)) || _class);\n\n// private\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\n\nconst GraphElementConnected = connect(GraphElementComponent.mapStateToProps, GraphElementComponent.mapDispatchToProps)(GraphElementComponent);\nexport const GraphElement = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(GraphElementConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1148,\n    columnNumber: 12\n  }, _this);\n};\n// console.info('graphElement loaded');\n_c = GraphElement;\nGraphElementComponent.cname = \"GraphElementComponent\";\nGraphElementConnected.cname = \"GraphElementConnected\";\nGraphElement.cname = \"GraphElement\";\nvar _c;\n$RefreshReg$(_c, \"GraphElement\");","map":{"version":3,"names":["React","Component","createPortal","connect","Point","Pointers","TRANSACTION","GraphPoint","Selectors","LGraphElement","store","BEGIN","CreateElementAction","DClass","Debug","DEdge","DEnumerator","DGraph","DGraphElement","DModel","DObject","DPackage","DPointerTargetable","DUser","DV","EMeasurableEvents","END","GraphElementOwnProps","GraphElementReduxStateProps","JSXT","Keystrokes","Log","LPointerTargetable","MyProxyHandler","RuntimeAccessible","SetFieldAction","SetRootFieldAction","U","UX","windoww","transientProperties","NodeTransientProperties","jsxDEV","_jsxDEV","computeUsageDeclarations","component","allProps","state","lview","udret","__notInitialized","view","__raw","vid","id","constants","UDEvalContext","usageDeclarations","undefined","stateProps","props","ownProps","data","node","UDFunction","call","e","isSyntax","__invalidUsageDeclarations","ee","str","nodeid","viewScores","debugcount","maxRenderCounter","Number","POSITIVE_INFINITY","lightModeAllowedElements","cname","getScores","ret","getAppliedViewsNew","nid","pv","parentViewId","from","countRenders","GraphElementComponent","_dec","_class","_class2","defaultShouldComponentUpdate","instance","nextProps","nextState","nextContext","shallowEqual","mapViewStuff","_tn$validMainViews","_tn$mainView","_ret$node","parentviewid","explicitView","explicitViews","views","scores","tn","idorname","mainView","fromD","getViewByIDOrNameD","_scores$mainView","_ret$view","fromPointer","w","name","requested","validMainViews","ex","v","push","ww","stackViews","fromArr","map","filter","viewsid","viewid","dnode","mapLModelStuff","dataid","wrap","mapLGraphElementStuff","dGraphElementDataClass","arguments","length","isDGraph","graphid","parentnodeid","graph","new","pendingCreation","dge","_ret$data","edgeOwnProps","edgeStateProps","startnodeid","getNodeId","start","endnodeid","end","propsStart","propsEnd","longestLabel","label","labels","new2","d","zIndex","htmlindex","anchorStart","anchorEnd","edge","_ret$data2","initialSize","ta","modelElement","nodes","mapStateToProps","dGraphDataClass","startingobj","lightMode","includes","className","exDev","reduxProps","key","forceupdate","removeEmptyObjectKeys","mapDispatchToProps","dispatch","shouldComponentUpdate","oldProps","_nextProps$data","out","reason","skipDeepKeys","pointedBy","clonedCounter","nodeviewentry","old_ud","new_ud","shouldUpdate","isShallowEqualWithProxies","shouldUpdate_reason","shouldUpdate_reasonDebug","l","doMeasurableEvent","type","measurableFunc","context","getJSXContext","console","log","transient","message","select","forUser","_this$props$node","_this$props$data","constructor","_isMounted","html","lastViewChanges","lastOnUpdateChanges","stopUpdateEvents","dataOldClonedCounter","maxid","all","createRef","functionsToBind","onClick","onLeave","onEnter","doContextMenu","onContextMenu","onMouseDown","onMouseUp","onKeyDown","onScroll","onMouseMove","f","bind","classes","componentDidMount","componentWillUnmount","evalContext","tnv","tv","otherViews","_context","displayError","where","asString","printData","errormsg","split","indexOf","jsxString","stack","stackerrorlast","icol","lastIndexOf","irow","offset","row","col","stackerrorlinenum","parseInt","substring","linesPre","linesPost","jsxlines","culpritlinesPre","slice","culpritline","culpritlinesPost","error","caretCursor","rowPre","rowPost","jsxcode","style","fontFamily","color","children","fileName","_jsxFileName","lineNumber","columnNumber","errorView_string","template","errorView","e2","eDevv","getTemplate3","getTemplate3_","jsxOutput","JSXFunction","isValidElement","JSON","stringify","getTemplate2","udContext","jsxCodeString","fromString","factory","_this$props$data2","_this$props$node2","parsedFunc","parseFunctionWithContextAndScope","_this$props$data3","_this$props$node3","preventDefault","stopPropagation","_state$contextMenu","current","focus","getState","contextMenu","x","clientX","_this$props$node4","display","y","clientY","_this$props$isEdgePen","_this$props$data4","isEdgePending","source","extendError","allTargetSuperClasses","canBeExtend","canExtend","setState","_this$props$data5","classname","mousedownComponent","button","clickRight","p","ig","isGraph","iv","isVertex","scroll","currentTarget","scrollLeft","scrollTop","scrollOrigin","nativeEvent","offsetX","offsetY","g","oldZoom","zoom","newZoom","oldOffset","gscrollOrigin","add","multiply","newscrollOrigin","newOffset","subtract","frommousemove","doOnClick","escape","deselect","ctrlKey","altKey","_this$props$data6","_this$props$data7","duplicate","delete","_this$props$data8","_this$props$data9","_this$props$data10","_this$props$data11","_this$props$data12","_this$props$data13","_this$props$data14","_this$props$data15","_this$props$data16","_this$props$data17","addChild","_state$contextMenu2","_this$props$isEdgePen2","_this$props$data18","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_state$_lastSelected","edgePendingSource","isSelected","nodeIsSelectedRaw","_this$props$data19","lClass","user","toggleSelected","_lastSelected","_this$props$data20","shiftKey","_this$props$node9","allNodes","allSubNodes","onDataUpdateMeasurable","index","onDataUpdate","_this$lastOnUpdateCha","thischange","t","Date","now","_this$lastOnUpdateCha2","change_log","timediff","updateNodeFromProps","_props$end","_props$end$model","ptr","isEdge","model","old","n","h","width","height","render","_this$props$data21","nodeType","styleoverride","allviews","i","viewnodescore","Object","keys","arrayMergeInPlace","Array","isArray","class","decoratorViewsOutput","ud","isMain","renderView","mainViewOutput","mainviewid","_props$node5","subViewsID","dv","_this$props$data22","_this$props$node10","isMainView","decorators","rnode","_this$props$data23","_this$props$node11","rawRElement","ReactNodeAsElement","makeItArray","val","getNodeText","join","addprops","fiximport","Error","fixdoubleroot","subElements","viewStyle","injectProps","_props$node","_props$node2","_props$node3","order","me","ref","onwheel","onMouseEnter","onMouseLeave","tabIndex","k","debug","recursiveMap","rn","depthIndexes","injectOffset","injectProp","cloneElement","rawRElementPostInjection","text","_props$data","_props$node4","newid","isExclusiveView","father","$containedIn","$","$containerDropArea","find","droparea","defaultProps","GraphElementConnected","GraphElement","_this","_c","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/graph/graphElement/graphElement.tsx"],"sourcesContent":["import React, {Component, Dispatch, PureComponent, ReactElement, ReactNode,} from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport './graphElement.scss';\r\nimport type {EdgeOwnProps} from \"./sharedTypes/sharedTypes\";\r\nimport {\r\n    GraphSize,\r\n    LGraph, MouseUpEvent, Point,\r\n    Pointers,\r\n    Selectors as Selectors_, Size, TRANSACTION, WGraph,\r\n    GraphDragManager, GraphPoint, Selectors, DNamedElement, DVoidEdge, LEdge\r\n} from \"../../joiner\";\r\nimport {DefaultUsageDeclarations} from \"./sharedTypes/sharedTypes\";\r\n\r\nimport {EdgeStateProps, LGraphElement, store, VertexComponent,\r\n    BEGIN,\r\n    CreateElementAction, DClass, Debug,\r\n    DEdge, DEnumerator,\r\n    DGraph,\r\n    DGraphElement,\r\n    Dictionary, DModel,\r\n    DModelElement, DObject,\r\n    DocString, DPackage,\r\n    DPointerTargetable,\r\n    DState,\r\n    DUser,\r\n    DV,\r\n    DViewElement,\r\n    EMeasurableEvents, END,\r\n    GObject,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    InOutParam,\r\n    JSXT, Keystrokes,\r\n    LClass,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Overlap,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    U,\r\n    UX,\r\n    windoww, transientProperties\r\n} from \"../../joiner\";\r\nimport {NodeTransientProperties, Pack1} from \"../../joiner/classes\";\r\nimport {OwnProps} from \"../../components/rightbar/structureEditor/ModelMetaData\";\r\n\r\n// const Selectors: typeof Selectors_ = windoww.Selectors;\r\n/*\r\nexport function makeEvalContext(view: LViewElement, state: DState, ownProps: GraphElementOwnProps, stateProps: GraphElementReduxStateProps): GObject {\r\n    let component = GraphElementComponent.map[ownProps.nodeid as Pointer<DGraphElement>];\r\n    let allProps = {...ownProps, ...stateProps};\r\n    let parsedConstants = stateProps.view._parsedConstants;\r\n    let evalContext: GObject = {\r\n        model: stateProps.data,\r\n        ...ownProps,\r\n        ...stateProps,\r\n        edge: (RuntimeAccessibleClass.extends(stateProps.node?.className, \"DVoidEdge\") ? stateProps.node : undefined),\r\n        state,\r\n        ownProps,\r\n        stateProps,\r\n        props: allProps,\r\n        component,\r\n        constants: parsedConstants,\r\n        // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\r\n        ...parsedConstants,\r\n        // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\r\n    };\r\n    evalContext.__proto__ = windoww.defaultContext;\r\n    transientProperties.node[ownProps.nodeid as string].evalContext = evalContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>, state: DState): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    const evalContext = makeEvalContext(view, state, ownProps, stateProps);\r\n    // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\r\n\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n\r\n}*/\r\n\r\nfunction computeUsageDeclarations(component: GraphElementComponent, allProps: AllPropss, state: GraphElementStatee, lview: LViewElement): GObject {\r\n    // compute usageDeclarations\r\n    let udret: GObject = {__notInitialized: true};\r\n    const view: DViewElement = lview.__raw;\r\n    const vid: Pointer<DViewElement> = view.id;\r\n    const constants = transientProperties.view[vid].constants;\r\n    let UDEvalContext: GObject = {...allProps, ...constants, constants, component,\r\n        view:lview, // data and node are inherited through props, but view needs redefinition\r\n        usageDeclarations: undefined, stateProps: allProps, props:allProps, ownProps:allProps, state}//transientProperties.node[stateProps.nodeid].evalContext;\r\n/*\r\n*\r\n        \"constants\": true, \"usageDeclarations\": true,\r\n        \"component\": true,\r\n        \"htmlindex\": true,\r\n        \"state\": true, \"stateProps\": true, \"ownProps\": true,*/\r\n    if (!view.usageDeclarations) {\r\n        udret = {data: allProps.data, view, node: allProps.node};\r\n    } else try {\r\n        transientProperties.view[vid].UDFunction.call(UDEvalContext, UDEvalContext, udret);\r\n        // console.log(\"computing usage declarations: \", {f:transientProperties.view[vid].UDFunction, udret, UDEvalContext});\r\n    } catch (e: any) {\r\n        e.isSyntax = false;\r\n        udret = {data: allProps.data, view, node: allProps.node, __invalidUsageDeclarations: e};// \"@runtime:\" +e};\r\n        Log.ee(\"Invalid usage declarations\", {e, str: view.usageDeclarations, view, data: allProps.data, stateProps: allProps});\r\n    }\r\n\r\n    transientProperties.node[allProps.nodeid].viewScores[vid].usageDeclarations = udret;\r\n    // do not merge to create jsx final context now, because if shouldcomponentupdate fails, i want to keep the OLD context for measurable events.\r\n    return udret;\r\n}\r\n\r\nlet debugcount = 0;\r\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\r\nexport const lightModeAllowedElements = [DModel.cname, DPackage.cname, DClass.cname, DEnumerator.cname, DObject.cname];\r\n\r\nfunction getScores(ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps): NodeTransientProperties{\r\n    return Selectors.getAppliedViewsNew({data:ret.data, node: ret.node,\r\n        nid: ownProps.nodeid as string, pv: ownProps.parentViewId && DPointerTargetable.from(ownProps.parentViewId)});\r\n}\r\n\r\nconst countRenders = true;\r\n@RuntimeAccessible('GraphElementComponent')\r\nexport class GraphElementComponent<AllProps extends AllPropss = AllPropss, GraphElementState extends GraphElementStatee = GraphElementStatee>\r\n    extends Component<AllProps, GraphElementState>{\r\n    public static cname: string;\r\n    static all: Dictionary<number, GraphElementComponent> = {};\r\n    public static map: Dictionary<Pointer<DGraphElement>, GraphElementComponent> = {};\r\n    static defaultProps: Partial<GraphElementOwnProps> = GraphElementOwnProps.new();\r\n    static maxid: number = 0;\r\n    id: number;\r\n\r\n    public static defaultShouldComponentUpdate<AllProps extends GObject, State extends GObject, Context extends any>\r\n    (instance: React.Component, nextProps: Readonly<AllProps>, nextState: Readonly<State>, nextContext: Context) {\r\n        return (\r\n            !U.shallowEqual(instance.props, nextProps) ||\r\n            !U.shallowEqual(instance.state, nextState)\r\n        );\r\n    }\r\n\r\n    // requires data and node wrapping first\r\n    static mapViewStuff(state: DState, ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        // let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\r\n        // console.log(\"viewsss mapstate 3 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, vv:ret.view, ownProps, stateProps:{...ret}, thiss:this});\r\n        ret.parentviewid = ownProps.parentViewId;\r\n\r\n        const explicitView: Pack1<LViewElement> | string | undefined = ret.view || ownProps.view;\r\n        const explicitViews: (Pack1<LViewElement> | string | undefined)[] = ret.views || ownProps.views;\r\n\r\n        let scores: NodeTransientProperties = undefined as any;\r\n        let tn = transientProperties.node[ownProps.nodeid as string]; // tn === scores if getScore is called (getScore have a sideeffect)\r\n        if (!tn) transientProperties.node[ownProps.nodeid as string] = tn = new NodeTransientProperties();\r\n        if (explicitView) {\r\n            let idorname: string = Pointers.from(explicitView) || explicitView as any as string;\r\n            ret.view = tn.mainView = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state) as DViewElement);\r\n\r\n        }\r\n        if (!ret.view) { // if view is not explicitly set or the assigned view is not found, match a new one.\r\n            if (!scores) scores = getScores(ret, ownProps);\r\n            ret.view = scores.mainView = LPointerTargetable.fromPointer((scores.mainView as any)?.id, state);\r\n            Log.w(!!explicitView, \"Requested main view \"+ownProps.view+\" not found. Another view got assigned: \" + ret.view?.__raw.name, {requested: ownProps.view, props: ownProps, state: ret});\r\n        }\r\n        if (!tn.validMainViews?.[0] || tn.validMainViews[0].id !== tn.mainView?.id) tn.validMainViews = [tn.mainView, ...(tn.validMainViews || [])];\r\n        Log.ex(!ret.view, \"Could not find any view appliable to element.\",\r\n            {data:ret.data, props: ownProps, state: ret, scores: (ret as any).viewScores, nid: ownProps.nodeid, tn:transientProperties.node[ownProps.nodeid as any]});\r\n\r\n        if (explicitViews){\r\n            // ret.views = tn.stackViews = LPointerTargetable.fromArr(explicitView);\r\n            let views: LViewElement[] = [];\r\n            for (let v of explicitViews) {\r\n                let idorname: string = Pointers.from(v as DViewElement) || v as any as string;\r\n                let view: LViewElement = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state) as DViewElement);\r\n                if (view) views.push(view);\r\n                else Log.ww(\"Requested decorative view \"+v+\" not found.\", {requested: v, idorname, props: ownProps, state: ret});\r\n            }\r\n            ret.views = tn.stackViews = views;\r\n        }\r\n        if (!ret.views) {\r\n            // if views is not explicitly set. (if some are not found, they are just missing by choice, will not replace)\r\n            if (!scores) {\r\n                scores = getScores(ret, ownProps);\r\n                ret.views = scores.stackViews;\r\n            }\r\n            else ret.views = scores.stackViews = LPointerTargetable.fromArr((scores.stackViews||[]).map((v:LViewElement)=>v?.id).filter(vid=>!!vid));\r\n        }\r\n        // console.log(\"viewsss mapstate 4 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps: {...ret}, thiss:this});\r\n\r\n\r\n        ret.viewsid = Pointers.fromArr(ret.views) as Pointer<DViewElement>[];\r\n        ret.viewid = ret.view.id;\r\n\r\n        let dnode = ret.node?.__raw;\r\n        if (dnode) dnode.view = ret.viewid;\r\n        (ret as any).viewScores = tn; // debug only\r\n    }\r\n\r\n    static mapLModelStuff(state: DState, ownProps: GraphElementOwnProps, ret: GraphElementReduxStateProps): void {\r\n        // NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\r\n        if (typeof ownProps.data === \"object\") { ret.dataid = (ownProps.data as any).id; }\r\n        else ret.dataid = ownProps.data as string | undefined;\r\n        ret.data = LPointerTargetable.wrap(ret.dataid) // forcing re-wrapping even if props was a dobject or lobject, because i want to get the latest version of it.\r\n\r\n        /*\r\n        const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n        // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n        ret.data = MyProxyHandler.wrap(meid, state);\r\n        // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n        */\r\n    }\r\n\r\n\r\n    static mapLGraphElementStuff(state: DState,\r\n                                 ownProps: GraphElementOwnProps,\r\n                                 ret: GraphElementReduxStateProps,\r\n                                 dGraphElementDataClass: typeof DGraphElement = DGraphElement,\r\n                                 isDGraph?: DGraph): void {\r\n        let nodeid: string = ownProps.nodeid as string;\r\n        let graphid: string = isDGraph ? isDGraph.id : ownProps.graphid as string;\r\n        let parentnodeid: string = ownProps.parentnodeid as string;\r\n        ret.nodeid = nodeid;\r\n        let tn = transientProperties.node[nodeid];\r\n        if (!tn) tn = transientProperties.node[nodeid] = new NodeTransientProperties();\r\n        // let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\r\n        // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\r\n        /*if (!nodeid) {\r\n            nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '_' + stateProps.view.id : '') + '_1';\r\n            stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n            todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n        }*/\r\n\r\n        let graph: DGraph = DPointerTargetable.from(graphid, state) as DGraphElement as any; // se non c'è un grafo lo creo\r\n        if (!graph) {\r\n            // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\r\n            if (ret.data) CreateElementAction.new(DGraph.new(0, ret.data.id, parentnodeid, graphid, graphid)); }\r\n        /*else {\r\n            graph = MyProxyHandler.wrap(graph);\r\n            Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n        }*/\r\n        let dnode: DGraphElement = DPointerTargetable.from(nodeid, state) as DGraphElement;\r\n\r\n        // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\r\n        if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {\r\n            /*\r\n            console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n                pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/\r\n            // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\r\n            let dge;\r\n            /*\r\n            if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n                let initialSize = ownProps.initialSize;\r\n                dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            } else*/\r\n            if (dGraphElementDataClass === DEdge) {\r\n                // set start and end from ownprops;\r\n                let edgeOwnProps: EdgeOwnProps = ownProps as EdgeOwnProps;\r\n                let edgeStateProps: EdgeStateProps = ret as EdgeStateProps;\r\n                let startnodeid = LGraphElement.getNodeId(edgeOwnProps.start);\r\n                let endnodeid = LGraphElement.getNodeId(edgeOwnProps.end);\r\n                if (!startnodeid) {\r\n                    startnodeid = LGraphElement.getNodeId(ret.data);\r\n                }\r\n                edgeStateProps.start = LPointerTargetable.fromPointer(startnodeid)\r\n                edgeStateProps.end = LPointerTargetable.fromPointer(endnodeid);\r\n                Log.e(!startnodeid, \"Cannot create an edge without start node\", {startnodeid, data:ret.data, propsStart:edgeOwnProps.start});\r\n                Log.e(!endnodeid, \"Cannot create an edge without end node (yet)\", {endnodeid, data:ret.data, propsEnd:edgeOwnProps.end});\r\n                if (!startnodeid || !endnodeid) return;\r\n                let longestLabel = edgeOwnProps.label;\r\n                let labels = edgeOwnProps.labels;\r\n                // dge = DEdge.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\r\n                dge = DEdge.new2(ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, (d)=>{\r\n                    //d.longestLabel = longestLabel;\r\n                    //d.labels = labels;\r\n                    let tn = (transientProperties.node[nodeid]);\r\n                    if (!tn) transientProperties.node[nodeid] = {} as any;\r\n                    tn.labels = labels;\r\n                    tn.longestLabel = longestLabel;\r\n                    d.zIndex = ownProps.htmlindex || 1;\r\n                    if (edgeOwnProps.anchorStart) d.anchorStart = edgeOwnProps.anchorStart;\r\n                    if (edgeOwnProps.anchorEnd) d.anchorEnd = edgeOwnProps.anchorEnd;\r\n                });\r\n                edgeStateProps.node = edgeStateProps.edge = MyProxyHandler.wrap(dge);\r\n            }\r\n            else {\r\n                let initialSize = ownProps.initialSize;\r\n                dge = dGraphElementDataClass.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            }\r\n            // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\r\n        }\r\n        else {\r\n            ret.node = MyProxyHandler.wrap(dnode);\r\n            if (dGraphElementDataClass === DEdge) (ret as EdgeStateProps).edge = ret.node as any;\r\n        }\r\n\r\n\r\n        if (ret.dataid) {\r\n            // set up transient model-> node map\r\n            let ta = transientProperties.modelElement[ret.dataid];\r\n            if (!ta) transientProperties.modelElement[ret.dataid] = {nodes: {}} as any;\r\n            ta.nodes[ownProps.nodeid as string] = ret.node;\r\n            ta.node = ret.node;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ////// mapper func\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps, dGraphDataClass: (typeof DGraphElement | typeof DEdge) = DGraphElement, startingobj?: GObject): GraphElementReduxStateProps {\r\n        // console.log('dragx GE mapstate', {dGraphDataClass});\r\n        let ret: GraphElementReduxStateProps = (startingobj || GraphElementReduxStateProps.new()) as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        // console.log(\"viewsss mapstate 0 \" + ownProps.view + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret);\r\n        if (Debug.lightMode && (!ret.data || !(lightModeAllowedElements.includes(ret.data.className)))){\r\n            return ret;\r\n        }\r\n        // console.log(\"map ge\", {ownProps, ret, state});\r\n        GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\r\n        // console.log(\"viewsss mapstate 2 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n        // console.log(\"viewsss mapstate 5 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        Log.exDev(!ret.view || !ret.views, 'failed to assign view:', {state, ownProps, reduxProps: ret});\r\n        // @ts-ignore\r\n        ret.key = ret.key || ownProps.key;\r\n        // @ts-ignore\r\n        ret.forceupdate = state.forceupdate;\r\n\r\n        // Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\r\n        U.removeEmptyObjectKeys(ret);\r\n        return ret;\r\n    }\r\n\r\n    static mapDispatchToProps(dispatch: Dispatch<any>): GraphElementDispatchProps {\r\n        const ret: GraphElementDispatchProps = {} as any;\r\n        return ret;\r\n    }\r\n\r\n\r\n    countRenders: number;\r\n    _isMounted: boolean;\r\n    html: React.RefObject<HTMLElement | undefined>;\r\n    lastViewChanges: {t: number, vid: Pointer<DViewElement>, v: LViewElement, key?: string}[];\r\n    lastOnUpdateChanges: {t: number}[];\r\n    stopUpdateEvents?: number; // undefined or view.clonedCounter;\r\n    dataOldClonedCounter?: number; // undefined or data.clonedCounter;\r\n\r\n    public shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<GraphElementState>, nextContext: any, oldProps?: Readonly<AllProps>): boolean {\r\n        if (!oldProps) oldProps = this.props;//for subviewcomponent\r\n        // return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\r\n        let data = nextProps.data?.__raw as DNamedElement | undefined;\r\n\r\n        let out = {reason:undefined};\r\n        let skipDeepKeys = {pointedBy:true, clonedCounter: true};// clonedCounter is checked manually before looping object keys\r\n        // let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\r\n        let ret = false; // !U.isShallowEqualWithProxies(oldProps, nextProps, 0, 1, skipPropKeys, out);\r\n        // if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\r\n        let component = nextProps.node.component;\r\n        const nid = nextProps.nodeid;\r\n        // U.arrayDiff()\r\n        for (let v of nextProps.views) {\r\n            const vid: Pointer<DViewElement> = v.__raw.id;\r\n            let nodeviewentry = transientProperties.node[nid].viewScores[vid];\r\n            let old_ud = nodeviewentry.usageDeclarations;\r\n            computeUsageDeclarations(component, nextProps, nextState, v);\r\n            let new_ud = nodeviewentry.usageDeclarations;\r\n            nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud, skipDeepKeys, out);\r\n\r\n            nodeviewentry.shouldUpdate_reason = {...out};\r\n            (nodeviewentry as any).shouldUpdate_reasonDebug = {old_ud, new_ud};\r\n            Log.l(true, \"DECORATIVE_VIEW ShouldComponentUpdate \" + data?.name + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \")  + vid,\r\n                {ret:nodeviewentry.shouldUpdate, reason: out.reason, old_ud, new_ud, oldProps:oldProps, nextProps, vid});\r\n\r\n            if (!ret && nodeviewentry.shouldUpdate) ret = true;\r\n        }\r\n\r\n        const vid: Pointer<DViewElement> = nextProps.view.__raw.id;\r\n        let nodeviewentry = transientProperties.node[nextProps.nodeid].viewScores[vid];\r\n        let old_ud = nodeviewentry.usageDeclarations;\r\n        computeUsageDeclarations(component, nextProps, nextState, nextProps.view);\r\n        let new_ud = nodeviewentry.usageDeclarations;\r\n        nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud,  skipDeepKeys, out);\r\n        nodeviewentry.shouldUpdate_reason = {...out};\r\n        (nodeviewentry as any).shouldUpdate_reasonDebug = {old_ud, new_ud};\r\n\r\n        Log.l(true, \"ShouldComponentUpdate \" + data?.name + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \") + vid,\r\n            {ret:nodeviewentry.shouldUpdate, reason: out.reason, old_ud, new_ud, oldProps:oldProps, nextProps});\r\n        if (!ret && nodeviewentry.shouldUpdate) ret = true;\r\n        return ret; // if any of main view or decorative views need updating\r\n        // apparently node changes are not working? also check docklayout shouldupdate\r\n    }\r\n\r\n    protected doMeasurableEvent(type: EMeasurableEvents, vid: Pointer<DViewElement>): boolean {\r\n        if (Debug.lightMode) return false;\r\n        let measurableFunc: undefined | ((context:GObject)=>void) = (transientProperties.view[vid] as any)[type];\r\n        if (!measurableFunc) return false;\r\n        let context: GObject = this.getJSXContext(vid); // context + usagedeclarations of main view only\r\n        try {\r\n            measurableFunc.call(context, context);\r\n            console.log(\"measurable executed\", {type, measurableFunc, vid, transient:transientProperties.view[vid]});\r\n        }\r\n        catch (e: any) { Log.ee('Error in measurable \"'+type+'\" ' + e.message, {e, measurableFunc, context}); }\r\n        // it has executed at least partially.\r\n        // i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    select(forUser?: Pointer<DUser>): void {\r\n        // if (forUser === DUser.current && this.html.current) this.html.current.focus();\r\n        BEGIN();\r\n        this.props.node?.select(forUser);\r\n        SetRootFieldAction.new('_lastSelected', {\r\n            node: this.props.nodeid,\r\n            view: this.props.view.id,\r\n            modelElement: this.props.data?.id\r\n        });/*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n            //selected[forUser] = id;\r\n            SetRootFieldAction.new('selected', id, '', true);\r\n        }*/\r\n\r\n        // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\r\n        END();\r\n    }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.lastViewChanges = [];\r\n        this.lastOnUpdateChanges = []\r\n        this.stopUpdateEvents = undefined;\r\n        this._isMounted = false;\r\n        this.countRenders = 0;\r\n        this.id = GraphElementComponent.maxid++;\r\n        GraphElementComponent.all[this.id] = this;\r\n        GraphElementComponent.map[props.nodeid as Pointer<DGraphElement>] = this; // props might change at runtime, setting in constructor is not enough\r\n        this.html = React.createRef();\r\n        let functionsToBind = [this.onClick,\r\n            this.onLeave, this.onEnter,\r\n            this.doContextMenu, this.onContextMenu,\r\n            this.onMouseDown, this.onMouseUp, this.onKeyDown, this.onScroll, this.onMouseMove];/*\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onLeave = this.onLeave.bind(this);\r\n        this.onContextMenu = this.onContextMenu.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.select = this.select.bind(this);*/\r\n        for (let f of functionsToBind) (this as any)[f.name] = f.bind(this);\r\n        // @ts-ignore\r\n        this.state = {classes: [] as string[]};\r\n        this.shouldComponentUpdate(this.props, this.state, undefined, undefined);\r\n    }\r\n\r\n    // constants: evalutate solo durante il primo render, può essere una funzione con effetti collaterali sul componente,\r\n    // in tal caso la si esegue e si prende il valore di ritorno.\r\n    // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\r\n    // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\r\n\r\n\r\n\r\n    componentDidMount(): void {\r\n        // after first render\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista più.\r\n        //  e non venga cancellato se il componente viene smontato perchè ho solo cambiato vista\r\n        //  LOW PRIORITY perchè funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\r\n        // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\r\n    }\r\n    /*\r\n        componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n            const newProps = this.props\r\n            if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n    }*/\r\n\r\n\r\n\r\n    protected getJSXContext(vid: Pointer<DViewElement>): GObject{\r\n        let context: GObject = transientProperties.node[this.props.nodeid].viewScores[vid].evalContext;\r\n        if (context && context.component) return context;\r\n\r\n        // else rebuild + update it\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        let tv = transientProperties.view[vid];\r\n        context = tnv.evalContext = {...this.props, ...tv.constants, ...tnv.usageDeclarations,\r\n            // add component stuff that could not be computed in reducer\r\n            component: this,\r\n            otherViews: this.props.views,\r\n            constants: tv.constants,\r\n            usageDeclarations: tnv.usageDeclarations,\r\n            props: this.props};\r\n        context._context = context;\r\n        return context;\r\n    }\r\n\r\n    public static displayError(e: Error, where: string, view: DViewElement, data?: DModelElement, node?: DGraphElement, asString:boolean = false, printData?: GObject): React.ReactNode {\r\n        // const view: LViewElement = this.props.view; //data._transient.currentView;\r\n        let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") +(e.message||\"\\n\").split(\"\\n\")[0];\r\n        if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\r\n            errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.'; }\r\n        else if (view.jsxString.indexOf('?.') >= 0) { errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.'; }\r\n        else if (e.message.indexOf(\"Unexpected token '<'\") !== -1) { errormsg += '\\n\\nDid you forgot to close a html </tag>?'; }\r\n        try {\r\n            let ee = e.stack || \"\";\r\n            let stackerrorlast = ee.split(\"\\n\")[1];\r\n\r\n            let icol = stackerrorlast.lastIndexOf(\":\");\r\n            let jsxString = view.jsxString;\r\n            // let col = stackerrorlast.substring(icol+1);\r\n            let irow = stackerrorlast.lastIndexOf(\":\", icol-1);\r\n            const offset={row:-2, col:1};\r\n            let stackerrorlinenum: GObject = {\r\n                row: Number.parseInt(stackerrorlast.substring(irow+1, icol)) + offset.row,\r\n                col: Number.parseInt(stackerrorlast.substring(icol+1)) + offset.col };\r\n            let linesPre = 1;\r\n            let linesPost = 1;\r\n            let jsxlines = jsxString.split(\"\\n\");\r\n            let culpritlinesPre: string[] = jsxlines.slice(stackerrorlinenum.row-linesPre-1, stackerrorlinenum.row - 1);\r\n            let culpritline: string = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\r\n            let culpritlinesPost: string[] = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\r\n            console.error(\"errr\", {e, node, jsxlines, culpritlinesPre, culpritline, culpritlinesPost, stackerrorlinenum, icol, irow, stackerrorlast});\r\n\r\n            if (stackerrorlinenum.col - offset.col > culpritline?.length && stackerrorlinenum.row === 1) stackerrorlinenum.col = 0;\r\n            let caretCursor = \"▓\" // ⵊ ꕯ 𝙸 Ꮖ\r\n            if (culpritline && stackerrorlinenum.col - offset.col <= culpritline?.length && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\r\n                let rowPre = culpritline.substring(0, stackerrorlinenum.col);\r\n                let rowPost = culpritline.substring(stackerrorlinenum.col);\r\n                let jsxcode =\r\n                    <div style={{fontFamily: \"monospaced sans-serif\", color:\"#444\"}}>\r\n                        { culpritlinesPre.map(l => <div>{l}</div>) }\r\n                        <div>{rowPre} <b style={{color:\"red\"}}> {caretCursor} </b> {rowPost}</div>\r\n                        { culpritlinesPost.map(l => <div>{l}</div>) }\r\n                    </div>;\r\n                errormsg += \" @ line \" + stackerrorlinenum.row + \", col:\" + stackerrorlinenum.col;\r\n                if (asString) return DV.errorView_string('<div>'+errormsg+'\\n'+jsxcode+'</div>', {where:\"in \"+where+\"()\", e, template:view.jsxString, view: view}, where, data, node, view);\r\n                return DV.errorView(<div>{errormsg}{jsxcode}</div>, {where:\"in \"+where+\"()\", e, template:view.jsxString, view: view}, where, data, node, view);\r\n            } else {\r\n                // it means it is likely accessing a minified.js src code, sending generic error without source mapping\r\n            }\r\n        } catch(e2) {\r\n            Log.eDevv(\"internal error in error view\", {e, e2, where} );\r\n            return null;\r\n        }\r\n        if (asString) return DV.errorView_string('<div>'+errormsg+'</div>', {where:\"in \"+where+\"()\", e, template: view.jsxString, view: view}, where, data, node, view);\r\n        return DV.errorView(<div>{errormsg}</div>, {where:\"in \"+where+\"()\", e, template: view.jsxString, view: view, ...(printData || {})}, where, data, node, view);\r\n    }\r\n/*\r\n    protected getTemplate(): ReactNode {\r\n        /*if (!this.state.template) {\r\n            this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n        }* /\r\n        // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n\r\n        // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n        if (this.props.invalidUsageDeclarations) {\r\n            return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\r\n        }\r\n        let context: GObject = this.getContext();\r\n        // abababababab\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        try {\r\n            let preRenderFuncStr: string | undefined = this.props.view.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let obj: GObject = {};\r\n                let tempContext: GObject = {__param: obj};\r\n                tempContext.__proto__ = context;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(context, obj);\r\n            }\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\");  }\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(this.props.view.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Syntax\"); }\r\n\r\n        try { ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', context); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Semantic\"); }\r\n        return ret;\r\n    }*/\r\n    protected getTemplate3(vid: Pointer<DViewElement>, v: LViewElement, context: GObject): ReactNode {\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        let tv = transientProperties.view[vid];\r\n        // console.log(\"getTemplate jsx\", {vid, v, context, tnv, tv, shouldUp: tnv.shouldUpdate, jsxFunc:tv.JSXFunction});\r\n        let ret = this.getTemplate3_(vid, v, context);\r\n        return ret;\r\n    }\r\n    protected getTemplate3_(vid: Pointer<DViewElement>, v: LViewElement, context: GObject): ReactNode{\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        if (!tnv.shouldUpdate && tnv.jsxOutput) return tnv.jsxOutput;\r\n        let tv = transientProperties.view[vid];\r\n        let ret = tnv.jsxOutput = (tv.JSXFunction ? tv.JSXFunction.call(context, context) : null);\r\n        if (typeof ret === \"object\" && ret !== null && !React.isValidElement(ret)) {\r\n            // plain objects cannot be react nodes, but react noeds are objects. so i try serializing\r\n            // this only happens if someone puts an object in jsx\r\n            try{\r\n                ret = JSON.stringify(ret);\r\n            }\r\n            catch(e){ ret = \"{__ Cyclic Object __}\"; }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected getTemplate2(v: LViewElement, udContext: GObject): ReactNode {\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        /*\r\n        let thisContext: GObject = {};\r\n        try {\r\n            let preRenderFuncStr: string | undefined = v.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let tempContext: GObject = {__param: thisContext};\r\n                this.addToContext(udContext, {__param: thisContext});\r\n                tempContext.__proto__ = sharedContext;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(thisContext, udContext);\r\n                // thisContext.__proto__ = sharedContext;\r\n            } else thisContext = udContext;\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\", v);  }*/\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(v.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\r\n\r\n        // console.log('context for ' + (this.props.data?.name), {udContext});\r\n        try {\r\n            let parsedFunc = U.parseFunctionWithContextAndScope('()=>{ return ' + jsxCodeString + '}', udContext, udContext);\r\n            ret = parsedFunc(udContext) as ReactNode;\r\n            /// ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', udContext);\r\n        }\r\n        catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, this.props.data?.__raw, this.props.node?.__raw, false, {udContext}); }\r\n        return ret;\r\n    }\r\n\r\n    onContextMenu(e: React.MouseEvent<Element>) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // NOT executed here, but on mousedown because of IOS compatibility\r\n    }\r\n\r\n    doContextMenu(e: React.MouseEvent<Element>) {\r\n        BEGIN()\r\n        this.props.node.select();\r\n        if (this.html.current) this.html.current.focus();\r\n        let state: DState = store.getState();\r\n        if (state.contextMenu?.x !== e.clientX) {\r\n            SetRootFieldAction.new(\"contextMenu\", {\r\n                display: true,\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                nodeid: this.props.node?.id\r\n            });\r\n        }\r\n        END();\r\n    }\r\n\r\n    onEnter(e: React.MouseEvent<Element>) { // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\r\n        const isEdgePending = this.props.isEdgePending?.source;\r\n        if (!isEdgePending || this.props.data?.className !== \"DClass\") return;\r\n        const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n        const canBeExtend = isEdgePending.canExtend(this.props.data as any as LClass, extendError);\r\n\r\n        if (canBeExtend) this.setState({classes:[...this.state.classes, \"class-can-be-extended\"]});\r\n        else this.setState({classes:[...this.state.classes, \"class-cannot-be-extended\"]});\r\n    }\r\n    onLeave(e: React.MouseEvent<Element>) {\r\n        if (this.props.data?.className !== \"DClass\") return;\r\n        this.setState({classes: this.state.classes.filter((classname) => {\r\n            return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\"\r\n        })});\r\n    }\r\n\r\n    static mousedownComponent: GraphElementComponent | undefined;\r\n    onMouseDown(e: React.MouseEvent): void {\r\n        e.stopPropagation();\r\n        GraphElementComponent.mousedownComponent = this;\r\n        TRANSACTION(()=>{\r\n            if (e.button === Keystrokes.clickRight) { this.doContextMenu(e); }\r\n            let p: GObject = this.props;\r\n            console.log('try drag', {p, ig: p.isGraph, iv:p.isVertex});\r\n            // if ((p.isGraph && !p.isVertex) || (p.isGraph && p.isVertex && e.ctrlKey)) GraphDragManager.startPanning(e, this.props.node as LGraph);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onScroll(e: React.MouseEvent): void {\r\n        console.log(\"onScroll\");\r\n        let scroll: Point = new Point(e.currentTarget.scrollLeft, e.currentTarget.scrollTop);\r\n        let scrollOrigin: Point = new Point(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n        let g: LGraph = this.props.node.graph;\r\n        let oldZoom: GraphPoint = g.zoom;\r\n        let newZoom: GraphPoint = new GraphPoint(oldZoom.x+0.1, oldZoom.y+0.1);\r\n        let oldOffset: GraphPoint = g.offset;\r\n        let gscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(oldZoom, true), true);\r\n        let newscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(newZoom, true), true);\r\n        let newOffset: GraphPoint = oldOffset.add( gscrollOrigin.subtract(newscrollOrigin, true), true);\r\n        TRANSACTION(()=>{\r\n            g.offset = newOffset;\r\n            g.zoom = newZoom;\r\n        })\r\n        e.stopPropagation();\r\n    }\r\n    onMouseMove(e: React.MouseEvent): void {\r\n        //this.onMouseUp(e);\r\n    }\r\n    onMouseUp(e: React.MouseEvent, frommousemove: boolean = false): void {\r\n        e.stopPropagation();\r\n        TRANSACTION(()=>{\r\n            //GraphDragManager.stopPanning(e);\r\n            if (GraphElementComponent.mousedownComponent !== this) { return; }\r\n            if (!frommousemove) this.doOnClick(e);\r\n        })\r\n    }\r\n    onKeyDown(e: React.KeyboardEvent){\r\n        if (e.key === Keystrokes.escape) {\r\n            this.props.node.deselect();\r\n            if (this.props.isEdgePending) {\r\n                // this.stopPendingEdge(); todo\r\n                return;\r\n            }\r\n        }\r\n        if (e.ctrlKey || e.altKey) {\r\n            // todo: make them a switch\r\n            if (e.key === \"d\") this.props.data?.duplicate(); else\r\n            if (e.key === \"r\") this.props.data?.delete();\r\n        }\r\n        if (e.altKey) {\r\n            // if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\r\n            if (e.key === \"a\") this.props.data?.addChild(\"auto\"); else // add class if on package, literal if on enum...\r\n            if (e.key === \"r\") this.props.data?.addChild(\"reference\"); else\r\n            if (e.key === \"o\") this.props.data?.addChild(\"operation\") || this.props.data?.addChild(\"object\"); else\r\n            if (e.key === \"l\") this.props.data?.addChild(\"literal\"); else\r\n            if (e.key === \"p\") this.props.data?.addChild(\"package\") || this.props.data?.addChild(\"parameter\"); else\r\n            if (e.key === \"c\") this.props.data?.addChild(\"class\"); else\r\n            if (e.key === \"e\") this.props.data?.addChild(\"enumerator\"); else\r\n            if (e.key === \"q\") this.props.data?.addChild(\"annotation\"); else\r\n            ;\r\n        }\r\n    }\r\n\r\n    private doOnClick(e: React.MouseEvent): void {\r\n        // (e.target as any).focus();\r\n        e.stopPropagation();\r\n        let state: DState = store.getState();\r\n        if (e.button !== Keystrokes.clickRight && state.contextMenu?.display) SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0}); // todo: need to move it on document or <App>\r\n        const edgePendingSource = this.props.isEdgePending?.source;\r\n        console.log('mousedown select() check PRE:', {name: this.props.data?.name, isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n\r\n        if (edgePendingSource) {\r\n            if (this.props.data?.className !== \"DClass\") return;\r\n            // const user = this.props.isEdgePending.user;\r\n            const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n            const canBeExtend = this.props.data && edgePendingSource.canExtend(this.props.data as any as LClass, extendError);\r\n            if (canBeExtend && this.props.data) {\r\n                const lClass: LClass = LPointerTargetable.from(this.props.data.id);\r\n                // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\r\n                // todo: use source.addExtends(lClass); or something (source is LClass)\r\n                SetFieldAction.new(lClass.id, \"extendedBy\", edgePendingSource.id, \"+=\", true);\r\n                SetFieldAction.new(edgePendingSource.id, \"extends\", lClass.id, \"+=\", true);\r\n            }\r\n            SetRootFieldAction.new('isEdgePending', { user: '',  source: '' });\r\n            return;\r\n        }\r\n        console.log('mousedown select() check:', {isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n        BEGIN();\r\n        windoww.node = this.props.node;\r\n        this.props.node.toggleSelected(DUser.current);\r\n        if (state._lastSelected?.node !== this.props.nodeid) {\r\n            SetRootFieldAction.new('_lastSelected', {\r\n                node: this.props.nodeid,\r\n                view: this.props.view.id,\r\n                modelElement: this.props.data?.id\r\n            });\r\n        }\r\n\r\n        if (e.shiftKey || e.ctrlKey) { }\r\n        else {\r\n            let allNodes: LGraphElement[] | undefined = this.props.node?.graph.allSubNodes;\r\n            let nid = this.props.node.id;\r\n            if (allNodes) for (let node of allNodes) if (node.id !== nid) node.deselect(DUser.current);\r\n        }\r\n        END();\r\n    }\r\n\r\n    onClick(e: React.MouseEvent): void {\r\n\r\n    }\r\n\r\n    onDataUpdateMeasurable(view: LViewElement, vid: Pointer<DViewElement>, index: number): void{\r\n        if (index > 0) { this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid); return; }\r\n        // only on first of a sequence of onDataUpdate events for all stackviews (the mainview),\r\n        // set time of current stack of updates, to check if they are generating a loop\r\n\r\n        // EMeasurableEvents.onDataUpdate -> handling and checking for loops\r\n        if (!this.stopUpdateEvents || this.stopUpdateEvents !== this.props.view.clonedCounter) {\r\n            this.stopUpdateEvents = undefined;\r\n            if (this.props.data && (this.dataOldClonedCounter !== this.props.data.clonedCounter) && this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid)) {\r\n                this.dataOldClonedCounter = this.props.data.clonedCounter;\r\n                let thischange = {t: Date.now()};\r\n                this.lastOnUpdateChanges.push(thischange);\r\n                if (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]?.t < 300) {\r\n                    // if N updates in <= 0.2 sec\r\n                    this.stopUpdateEvents = this.props.view.clonedCounter;\r\n                    Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\",{\r\n                        change_log: this.lastOnUpdateChanges,\r\n                        component: this,\r\n                        timediff: (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]?.t)\r\n                    } as any);\r\n                }\r\n            }\r\n    }\r\n    }\r\n\r\n\r\n    // returns: true if an action is fired and component needs re-rendering\r\n    updateNodeFromProps(props: GObject<AllProps>): boolean {\r\n        let ret = false;\r\n        let tn = transientProperties.node[props.nodeid];\r\n        let ptr: Pointer<any>;\r\n        if (!props.node) return false;\r\n        let dnode = props.node.__raw;\r\n        // if edge.label props is func, do not set in the dedge, just in transientproperties. totally override the \"text\" system.\r\n        // it does not need collab sync:\r\n        // because if the view is active for the other user, his synched jsx will generate the same function in transientProperties.\r\n        // if it is inactive it does not matter, the value is not used.\r\n        if (props.label) { tn.longestLabel = props.label; }\r\n        if (props.longestLabel) { tn.longestLabel = props.longestLabel; }\r\n        if (props.labels) { tn.labels = props.labels; }\r\n        if (props.anchorStart && props.isEdge) { (props.node as LEdge).anchorStart = props.anchorStart; }\r\n        if (props.anchorEnd && props.isEdge) { (props.node as LEdge).anchorEnd = props.anchorEnd; }\r\n        if (props.start && props.isEdge) {\r\n            ptr = Pointers.from(props.start);\r\n            if (dnode.id !== ptr) (props.node as LEdge).start = ptr as any;\r\n        }\r\n        console.log(\"changing endpt\", props, props.end, props.end?.model?.name);\r\n        if (props.end && props.isEdge) {\r\n            ptr = Pointers.from(props.end);\r\n            if (dnode.id !== ptr) (props.node as LEdge).end = ptr as any;\r\n        }\r\n        if (props.anchorEnd) { tn.labels = props.labels; }\r\n        // if (typeof props.viewid === 'string') { let old = props.viewid; if (old !== props.node.view.id) { this.forceUpdate(); ret = true;} }\r\n        if (typeof props.x === 'number') { let old = props.node.x; let n = +props.x; if (old !== n) { props.node.x = n; ret = true;} }\r\n        if (typeof props.y === 'number') { let old = props.node.y; let n = +props.y; if (old !== n) { props.node.y = n; ret = true;} }\r\n        // risk loop: todo loop detection and skip setting\r\n        if (typeof props.w === 'number') { let old = props.node.w; let n = +props.w; if (old !== n) { props.node.w = n; ret = true;} }\r\n        if (typeof props.h === 'number') { let old = props.node.h; let n = +props.h; if (old !== n) { props.node.h = n; ret = true;} }\r\n        if (typeof props.width  === 'number') { let old = props.node.w; let n = +props.width;  if (old !== n) { props.node.w = n; ret = true;} }\r\n        if (typeof props.height === 'number') { let old = props.node.h; let n = +props.height; if (old !== n) { props.node.h = n; ret = true;} }\r\n\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    public render(nodeType:string = '', styleoverride:React.CSSProperties={}, classes: string[]=[]): ReactNode {\r\n        GraphElementComponent.map[this.props.nodeid as Pointer<DGraphElement>] = this; // props might change at runtime, setting in constructor is not enough\r\n        if (Debug.lightMode && (!this.props.data || !(lightModeAllowedElements.includes(this.props.data.className)))){\r\n            return this.props.data ? <div>{\" \" + ((this.props.data as any).name)}:{this.props.data.className}</div> : undefined;\r\n        }\r\n        if (!this.props.node) return \"Loading...\";\r\n        /*if (this.props.node.__raw.view !== this.props.view.id) {\r\n            this.onViewChange();\r\n            return \"Updating view...\";\r\n        }*/\r\n        if (this.updateNodeFromProps(this.props as GObject<any>)) return 'Updating...';\r\n        let nid = this.props.nodeid;\r\n        let allviews = [...this.props.views, this.props.view]; // main view must be last, for renderView ordering\r\n\r\n\r\n        for (let i = 0 ; i < allviews.length; i++){\r\n            let v = allviews[i];\r\n            const vid = v.id;\r\n            let viewnodescore = transientProperties.node[nid].viewScores[v.id];\r\n            if (!viewnodescore.shouldUpdate) continue;\r\n            viewnodescore.evalContext = undefined as any; // force rebuild jsx context, needs to be done before renderView and measurable events\r\n            // only if this exact view had UD changed, instead of being forced to rended by other in viewstack)\r\n            this.onDataUpdateMeasurable(v, vid, i);\r\n        }\r\n\r\n        /// set classes\r\n        if (this.props.node) {\r\n            let isSelected: Dictionary<Pointer<DUser>, boolean> = this.props.node.__raw.isSelected;\r\n            if (isSelected[DUser.current]) { // todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\r\n                classes.push('selected-by-me');\r\n                if (Object.keys(isSelected).length > 1) classes.push('selected-by-others');\r\n            } else if (Object.keys(isSelected).length) classes.push('selected-by-others');\r\n        }\r\n\r\n        classes.push(this.props.data?.className || 'DVoid');\r\n        U.arrayMergeInPlace(classes, this.state.classes);\r\n        if (Array.isArray(this.props.className)) { U.arrayMergeInPlace(classes, this.props.className); }\r\n        else if (this.props.className) { classes.push(this.props.className); }\r\n        if (Array.isArray(this.props.class)) { U.arrayMergeInPlace(classes, this.props.class); }\r\n        else if (this.props.class) { classes.push(this.props.class); }\r\n        /// end set classes\r\n\r\n\r\n        let mainView: LViewElement = this.props.view;\r\n        let otherViews: LViewElement[] = this.props.views;\r\n        let decoratorViewsOutput: (ReactNode | ReactElement)[] = [];/*\r\n        for (let v of this.props.views) {\r\n            if (v.isExclusiveView) {\r\n                if (mainView) continue;\r\n                mainView = v;\r\n            } else otherViews.push(v);\r\n        }*/\r\n\r\n        let jsxOutput: ReactNode = undefined as any;\r\n        const tn = transientProperties.node[nid]\r\n        console.log(\"render\", {mainView, otherViews, scores:tn.viewScores, tnv:tn.viewScores[this.props.viewid], ud:tn.viewScores[this.props.viewid].usageDeclarations});\r\n        for (let v of allviews) { // main view is the last\r\n            let viewnodescore = transientProperties.node[nid].viewScores[v.id];\r\n            jsxOutput = viewnodescore.shouldUpdate ? undefined : viewnodescore.jsxOutput;\r\n            let isMain: true | undefined = v === mainView || undefined;\r\n            if (!jsxOutput) viewnodescore.jsxOutput = jsxOutput =\r\n                this.renderView(this.props, v, nodeType, classes, styleoverride,\r\n                    isMain && decoratorViewsOutput, mainView.id, isMain && otherViews.map(v=>v.id));\r\n            if (!isMain) decoratorViewsOutput.push(jsxOutput);\r\n            if (viewnodescore.shouldUpdate) viewnodescore.shouldUpdate = false; // this needs to be placed post renderView call\r\n        }\r\n\r\n        let mainViewOutput: ReactNode = jsxOutput;\r\n        return mainViewOutput;\r\n        // console.log('rendering view stack', {mainView, otherViews, mainViewOutput, decoratorsJSX:decoratorViewsOutput});\r\n        // windoww.debbugg = {mainViewOutput,otherViews, ret:<>renderrr{mainViewOutput}{otherViews}</>}\r\n        // return this.props.data?.className === \"DValue\" ? <div>{mainView.jsxString}{mainViewElement}</div> : mainViewElement;\r\n    }\r\n\r\n\r\n    protected renderView(props: AllProps, v: LViewElement, nodeType: string, classes: string[], styleoverride: React.CSSProperties,\r\n                         otherViews?: (ReactNode | ReactElement)[], mainviewid?: Pointer<DViewElement>, subViewsID: Pointer<DViewElement>[] = []): ReactNode | ReactElement {\r\n        let dv = v.__raw;\r\n        const nid = props.nodeid;\r\n        const vid = v.id;\r\n        const tnv = transientProperties.node[nid].viewScores[vid];\r\n        let ud: GObject | undefined = tnv.usageDeclarations;\r\n        /*if (false && !ud) {\r\n            this.forceUpdate();\r\n            return <div>Loading...</div>;\r\n        }*/\r\n\r\n        if (!ud) tnv.usageDeclarations = ud = computeUsageDeclarations(this, props, this.state, v);\r\n        console.log(\"renderView\", {dv, tnv, ud});\r\n\r\n        if (ud.__invalidUsageDeclarations) {\r\n            console.error(\"renderView error ud:\", {dv, tnv, ud});\r\n            return GraphElementComponent.displayError(ud.__invalidUsageDeclarations, \"Usage Declaration \" + (ud.__invalidUsageDeclarations.isSyntax ? \"Syntax\" : \"Semantic\"), v.__raw,\r\n                this.props.data?.__raw, this.props.node?.__raw, false, {ud});\r\n        }\r\n        let isMainView: boolean = !!otherViews;\r\n        const context: GObject = this.getJSXContext(vid);\r\n\r\n        if (isMainView) context.decorators = otherViews;\r\n        let rnode: ReactNode;\r\n        try { rnode = this.getTemplate3(vid, v, context); }\r\n        catch (e: any) {\r\n            console.error(\"renderView error get template:\", {e, dv, tnv});\r\n            // rnode = undefined as any;\r\n            // todo: move in reducer parser of jsx: catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\r\n            rnode = GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, this.props.data?.__raw, this.props.node?.__raw, false, {context});\r\n        }\r\n        let rawRElement: ReactElement | null = UX.ReactNodeAsElement(rnode);\r\n\r\n\r\n        // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\r\n\r\n        function makeItArray(val?: any) { return val ? [] : (Array.isArray(val) ? val : [val]); }\r\n        function getNodeText(node?: any | ReactNode): string | undefined {\r\n            if (['string', 'number'].includes(typeof node)) return node;\r\n            if (node instanceof Array) return node.map(getNodeText).join('');\r\n            if (typeof node === 'object' && node) return getNodeText(node.props.children);\r\n        }\r\n        const addprops: boolean = true;\r\n        let fiximport = !!this.props.node;\r\n        //let a: false = true as any; if (a) return \"Loading...\";\r\n        // if (this.props.data?.name === \"Concept 1\") console.log(\"shouldcomponentupdate rendering \" + this.props.data?.name, {cc: this.props.data.clonedCounter, attrs: (this.props.data as any).attributes});\r\n        if (addprops && rawRElement && fiximport) {\r\n            if (windoww.debugcount && debugcount++>windoww.debugcount) throw new Error(\"debug triggered stop\");\r\n            let fixdoubleroot = true;\r\n            // add view props to GraphElement children (any level down)\r\n            const subElements: Dictionary<DocString<'nodeid'>, boolean> = {}; // this.props.getGVidMap();\r\n            try {\r\n                let viewStyle: GObject = {...(this.props.style || {})};\r\n                /*\r\n                    if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n                    else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n                    if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n                    else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n                    viewStyle = {};\r\n                */\r\n                // viewStyle.pointerEvents = \"all\";\r\n                let injectProps: GObject = {};\r\n                if (isMainView) {\r\n                    viewStyle.order = viewStyle.zIndex = props.node?.zIndex; // alias? this.props.node.z\r\n                    viewStyle.display = v?.display;\r\n                    const me: LModelElement | undefined = props.data; // this.props.model;\r\n                    if (countRenders) {\r\n                        classes.push(this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\");\r\n                    }                /// let excludeProps = ['data', 'node', 'view', 'children', ]\r\n                    classes.push(\"mainView\", dv.id);\r\n                    classes.push(...subViewsID);\r\n                    injectProps = {\r\n                        ref: this.html,\r\n                        // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (è perchè iniziano con <Select/> as root?)\r\n                        id: props.nodeid,\r\n                        \"data-nodeid\": props.nodeid,\r\n                        \"data-dataid\": me?.id,\r\n                        \"data-viewid\": dv.id,\r\n                        \"data-modelname\": me?.className || \"model-less\",\r\n                        \"data-userselecting\": JSON.stringify(props.node?.isSelected || {}),\r\n                        \"data-nodetype\": nodeType,\r\n                        // \"data-order\": this.props.node?.zIndex,\r\n                        style: {...viewStyle, ...styleoverride},\r\n                        className: classes.join(' '),\r\n                        onClick: this.onClick,\r\n                        onContextMenu: this.onContextMenu,\r\n                        onMouseDown: this.onMouseDown,\r\n                        onMouseUp: this.onMouseUp,\r\n                        onMouseMove: this.onMouseMove,\r\n                        onwheel: this.onScroll,\r\n                        onMouseEnter: this.onEnter,\r\n                        onMouseLeave: this.onLeave,\r\n                        tabIndex: (props as any).tabIndex || -1,\r\n                        \"data-countrenders\": this.countRenders++,\r\n                        \"data-clonedcounter\": props.node?.clonedCounter || -1,\r\n                        // decorators: otherViews,\r\n                    };\r\n                    let p: GObject = this.props;\r\n                    for (let k in p) {\r\n                        if (typeof p[k] === 'object' || typeof p[k] === 'function') continue;\r\n                        if (!injectProps[k]) injectProps[k] = p[k];\r\n                    }\r\n                }\r\n                else injectProps = {\"data-viewid\": v.id, className: \"decorativeView \" + v.id, \"data-mainview\": mainviewid};\r\n\r\n\r\n                let debug: GObject = {};\r\n                injectProps.children = UX.recursiveMap(rawRElement/*.props.children*/,\r\n                    (rn: ReactNode, index: number, depthIndexes: number[]) => {\r\n                        let injectOffset: undefined | LGraph = ((this.props as any).isGraph && !depthIndexes[0] && !index) && (this.props.node as LGraph);\r\n                        //injectOffset&&console.log(\"inject offset props0:\", {injectOffset});\r\n                        //console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\r\n                        return UX.injectProp(this, rn, subElements, this.props.parentnodeid as string, index, depthIndexes, injectOffset)\r\n                    });\r\n/*\r\n                debug.injectPropsOriginal = injectProps.children;\r\n                debug.recursivemap = injectProps.children;\r\n                debug.injectChildrensAttempt = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n                debug.rawRElement = {node:rawRElement, text: getNodeText(rawRElement)};*/\r\n\r\n                if (otherViews && false) injectProps.children = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n\r\n                // injectProps.children = [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)];\r\n                let children = makeItArray(injectProps.children); // [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]; rawRElement.child are already in injectprops\r\n                // injectProps.children = [<div>{children}</div>];//[]; making any change at injectprops.children breaks it?\r\n                rawRElement = React.cloneElement(rawRElement, injectProps);//, ...children); // adding chioldrens after injectprops seems pointless\r\n\r\n                debug.rawRElementPostInjection = {node:rawRElement, text: getNodeText(rawRElement)};\r\n                // rawRElement = React.cloneElement(rawRElement, {children: [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]});\r\n                // console.log('rendering view stack fixing doubles', {v0:rnode, v1:rawRElement, fixed:rawRElement.props.children})\r\n                fixdoubleroot = false; // need to set the props to new root in that case.\r\n                if (fixdoubleroot) rawRElement = rawRElement.props.children;\r\n                // debug.rawRElementPostfixdoubleroot = {node:rawRElement, text: getNodeText(rawRElement)};\r\n                // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\r\n            } catch (e: any) {\r\n                console.error(\"renderView error inject props:\", {e, dv, tnv});\r\n                rawRElement = DV.errorView(\"error while injecting props to subnodes\\n:\" + (e.message || '').split('\\n')[0],\r\n                    {e, rawRElement, key: props.key, newid: props.nodeid},\r\n                    'Subelement props', props.data?.__raw, props.node?.__raw, dv) as ReactElement;\r\n                /*\r\n                rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n                    DV.errorView(\"error while injecting props to subnodes\",\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n                    {});*/\r\n\r\n                // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\r\n            }\r\n            /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n            let isEqual = true;\r\n            try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n            if (isEqual) {\r\n                this.props.node.subElements = Object.keys(subElements);\r\n            }*/\r\n        }\r\n        // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n        // rnode = React.cloneElement(rnode as ReactElement, injectprops);\r\n\r\n        // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\r\n        if (false && dv.isExclusiveView && (props.node?.__raw as DGraphElement).father) {\r\n            let $containedIn = $('#' + props.node.__raw.father);\r\n            let $containerDropArea = $containedIn.find(\".VertexContainer\");\r\n            const droparea = $containerDropArea[0] || $containedIn[0];\r\n            Log.exDev(!droparea, 'invalid vertex container target', {$containedIn, $containerDropArea});\r\n            if (droparea) return createPortal(rawRElement || rnode, droparea);\r\n        }/*\r\n        if (countRenders) return <>{[\r\n            rawRElement || rnode,\r\n            <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n        ]}</>/*/\r\n\r\n        console.log(\"renderView return:\", rawRElement || rnode);\r\n        return rawRElement || rnode;\r\n    }\r\n\r\n}\r\n\r\n// private\r\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\r\ntype AllPropss = Overlap<Overlap<GraphElementOwnProps, GraphElementDispatchProps>, GraphElementReduxStateProps>;\r\n\r\nconst GraphElementConnected = connect<GraphElementReduxStateProps, GraphElementDispatchProps, GraphElementOwnProps, DState>(\r\n    GraphElementComponent.mapStateToProps,\r\n    GraphElementComponent.mapDispatchToProps\r\n)(GraphElementComponent as any);\r\n\r\nexport const GraphElement = (props: GraphElementOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphElementConnected {...{...props, children}} />; }\r\n// console.info('graphElement loaded');\r\n\r\n\r\nGraphElementComponent.cname = \"GraphElementComponent\";\r\nGraphElementConnected.cname = \"GraphElementConnected\";\r\nGraphElement.cname = \"GraphElement\";\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAA0D,OAAO;AACzF,SAAQC,YAAY,QAAO,WAAW;AACtC,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAO,qBAAqB;AAE5B,SAE0BC,KAAK,EAC3BC,QAAQ,EACuBC,WAAW,EACxBC,UAAU,EAAEC,SAAS,QACpC,cAAc;AAGrB,SAAwBC,aAAa,EAAEC,KAAK,EACxCC,KAAK,EACLC,mBAAmB,EAAEC,MAAM,EAAEC,KAAK,EAClCC,KAAK,EAAEC,WAAW,EAClBC,MAAM,EACNC,aAAa,EACDC,MAAM,EACHC,OAAO,EACXC,QAAQ,EACnBC,kBAAkB,EAElBC,KAAK,EACLC,EAAE,EAEFC,iBAAiB,EAAEC,GAAG,EAGtBC,oBAAoB,EACpBC,2BAA2B,EAG3BC,IAAI,EAAEC,UAAU,EAGhBC,GAAG,EACHC,kBAAkB,EAElBC,cAAc,EAGdC,iBAAiB,EAEjBC,cAAc,EACdC,kBAAkB,EAClBC,CAAC,EACDC,EAAE,EACFC,OAAO,EAAEC,mBAAmB,QACzB,cAAc;AACrB,SAAQC,uBAAuB,QAAc,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,wBAAwBA,CAACC,SAAgC,EAAEC,QAAmB,EAAEC,KAAyB,EAAEC,KAAmB,EAAW;EAC9I;EACA,IAAIC,KAAc,GAAG;IAACC,gBAAgB,EAAE;EAAI,CAAC;EAC7C,MAAMC,IAAkB,GAAGH,KAAK,CAACI,KAAK;EACtC,MAAMC,GAA0B,GAAGF,IAAI,CAACG,EAAE;EAC1C,MAAMC,SAAS,GAAGf,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC,CAACE,SAAS;EACzD,IAAIC,aAAsB,GAAG;IAAC,GAAGV,QAAQ;IAAE,GAAGS,SAAS;IAAEA,SAAS;IAAEV,SAAS;IACzEM,IAAI,EAACH,KAAK;IAAE;IACZS,iBAAiB,EAAEC,SAAS;IAAEC,UAAU,EAAEb,QAAQ;IAAEc,KAAK,EAACd,QAAQ;IAAEe,QAAQ,EAACf,QAAQ;IAAEC;EAAK,CAAC;EACrG;AACA;AACA;AACA;AACA;AACA;EACI,IAAI,CAACI,IAAI,CAACM,iBAAiB,EAAE;IACzBR,KAAK,GAAG;MAACa,IAAI,EAAEhB,QAAQ,CAACgB,IAAI;MAAEX,IAAI;MAAEY,IAAI,EAAEjB,QAAQ,CAACiB;IAAI,CAAC;EAC5D,CAAC,MAAM,IAAI;IACPvB,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC,CAACW,UAAU,CAACC,IAAI,CAACT,aAAa,EAAEA,aAAa,EAAEP,KAAK,CAAC;IAClF;EACJ,CAAC,CAAC,OAAOiB,CAAM,EAAE;IACbA,CAAC,CAACC,QAAQ,GAAG,KAAK;IAClBlB,KAAK,GAAG;MAACa,IAAI,EAAEhB,QAAQ,CAACgB,IAAI;MAAEX,IAAI;MAAEY,IAAI,EAAEjB,QAAQ,CAACiB,IAAI;MAAEK,0BAA0B,EAAEF;IAAC,CAAC,CAAC;IACxFnC,GAAG,CAACsC,EAAE,CAAC,4BAA4B,EAAE;MAACH,CAAC;MAAEI,GAAG,EAAEnB,IAAI,CAACM,iBAAiB;MAAEN,IAAI;MAAEW,IAAI,EAAEhB,QAAQ,CAACgB,IAAI;MAAEH,UAAU,EAAEb;IAAQ,CAAC,CAAC;EAC3H;EAEAN,mBAAmB,CAACuB,IAAI,CAACjB,QAAQ,CAACyB,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC,CAACI,iBAAiB,GAAGR,KAAK;EACnF;EACA,OAAOA,KAAK;AAChB;AAEA,IAAIwB,UAAU,GAAG,CAAC;AAClB,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,iBAAiB;AAC/C,OAAO,MAAMC,wBAAwB,GAAG,CAAC1D,MAAM,CAAC2D,KAAK,EAAEzD,QAAQ,CAACyD,KAAK,EAAEjE,MAAM,CAACiE,KAAK,EAAE9D,WAAW,CAAC8D,KAAK,EAAE1D,OAAO,CAAC0D,KAAK,CAAC;AAEtH,SAASC,SAASA,CAACC,GAAgC,EAAEnB,QAA8B,EAA0B;EACzG,OAAOrD,SAAS,CAACyE,kBAAkB,CAAC;IAACnB,IAAI,EAACkB,GAAG,CAAClB,IAAI;IAAEC,IAAI,EAAEiB,GAAG,CAACjB,IAAI;IAC9DmB,GAAG,EAAErB,QAAQ,CAACU,MAAgB;IAAEY,EAAE,EAAEtB,QAAQ,CAACuB,YAAY,IAAI9D,kBAAkB,CAAC+D,IAAI,CAACxB,QAAQ,CAACuB,YAAY;EAAC,CAAC,CAAC;AACrH;AAEA,MAAME,YAAY,GAAG,IAAI;AACzB,WACaC,qBAAqB,IAAAC,IAAA,GADjCtD,iBAAiB,CAAC,uBAAuB,CAAC,EAAAsD,IAAA,CAAAC,MAAA,IAAAC,OAAA,GAA3C,MACaH,qBAAqB,SACtBtF,SAAS,CAA6B;EAQ9C,OAAc0F,4BAA4BA,CACzCC,QAAyB,EAAEC,SAA6B,EAAEC,SAA0B,EAAEC,WAAoB,EAAE;IACzG,OACI,CAAC1D,CAAC,CAAC2D,YAAY,CAACJ,QAAQ,CAAChC,KAAK,EAAEiC,SAAS,CAAC,IAC1C,CAACxD,CAAC,CAAC2D,YAAY,CAACJ,QAAQ,CAAC7C,KAAK,EAAE+C,SAAS,CAAC;EAElD;;EAEA;EACA,OAAOG,YAAYA,CAAClD,KAAa,EAAEiC,GAAgC,EAAEnB,QAA8B,EAAE;IAAA,IAAAqC,kBAAA,EAAAC,YAAA,EAAAC,SAAA;IACjG;IACA;IACApB,GAAG,CAACqB,YAAY,GAAGxC,QAAQ,CAACuB,YAAY;IAExC,MAAMkB,YAAsD,GAAGtB,GAAG,CAAC7B,IAAI,IAAIU,QAAQ,CAACV,IAAI;IACxF,MAAMoD,aAA2D,GAAGvB,GAAG,CAACwB,KAAK,IAAI3C,QAAQ,CAAC2C,KAAK;IAE/F,IAAIC,MAA+B,GAAG/C,SAAgB;IACtD,IAAIgD,EAAE,GAAGlE,mBAAmB,CAACuB,IAAI,CAACF,QAAQ,CAACU,MAAM,CAAW,CAAC,CAAC;IAC9D,IAAI,CAACmC,EAAE,EAAElE,mBAAmB,CAACuB,IAAI,CAACF,QAAQ,CAACU,MAAM,CAAW,GAAGmC,EAAE,GAAG,IAAIjE,uBAAuB,CAAC,CAAC;IACjG,IAAI6D,YAAY,EAAE;MACd,IAAIK,QAAgB,GAAGtG,QAAQ,CAACgF,IAAI,CAACiB,YAAY,CAAC,IAAIA,YAA6B;MACnFtB,GAAG,CAAC7B,IAAI,GAAGuD,EAAE,CAACE,QAAQ,GAAG5E,kBAAkB,CAAC6E,KAAK,CAACrG,SAAS,CAACsG,kBAAkB,CAACH,QAAQ,EAAE5D,KAAK,CAAiB,CAAC;IAEpH;IACA,IAAI,CAACiC,GAAG,CAAC7B,IAAI,EAAE;MAAA,IAAA4D,gBAAA,EAAAC,SAAA;MAAE;MACb,IAAI,CAACP,MAAM,EAAEA,MAAM,GAAG1B,SAAS,CAACC,GAAG,EAAEnB,QAAQ,CAAC;MAC9CmB,GAAG,CAAC7B,IAAI,GAAGsD,MAAM,CAACG,QAAQ,GAAG5E,kBAAkB,CAACiF,WAAW,EAAAF,gBAAA,GAAEN,MAAM,CAACG,QAAQ,cAAAG,gBAAA,uBAAhBA,gBAAA,CAA0BzD,EAAE,EAAEP,KAAK,CAAC;MAChGhB,GAAG,CAACmF,CAAC,CAAC,CAAC,CAACZ,YAAY,EAAE,sBAAsB,GAACzC,QAAQ,CAACV,IAAI,GAAC,yCAAyC,KAAA6D,SAAA,GAAGhC,GAAG,CAAC7B,IAAI,cAAA6D,SAAA,uBAARA,SAAA,CAAU5D,KAAK,CAAC+D,IAAI,GAAE;QAACC,SAAS,EAAEvD,QAAQ,CAACV,IAAI;QAAES,KAAK,EAAEC,QAAQ;QAAEd,KAAK,EAAEiC;MAAG,CAAC,CAAC;IACzL;IACA,IAAI,GAAAkB,kBAAA,GAACQ,EAAE,CAACW,cAAc,cAAAnB,kBAAA,uBAAjBA,kBAAA,CAAoB,CAAC,CAAC,KAAIQ,EAAE,CAACW,cAAc,CAAC,CAAC,CAAC,CAAC/D,EAAE,OAAA6C,YAAA,GAAKO,EAAE,CAACE,QAAQ,cAAAT,YAAA,uBAAXA,YAAA,CAAa7C,EAAE,GAAEoD,EAAE,CAACW,cAAc,GAAG,CAACX,EAAE,CAACE,QAAQ,EAAE,IAAIF,EAAE,CAACW,cAAc,IAAI,EAAE,CAAC,CAAC;IAC3ItF,GAAG,CAACuF,EAAE,CAAC,CAACtC,GAAG,CAAC7B,IAAI,EAAE,+CAA+C,EAC7D;MAACW,IAAI,EAACkB,GAAG,CAAClB,IAAI;MAAEF,KAAK,EAAEC,QAAQ;MAAEd,KAAK,EAAEiC,GAAG;MAAEyB,MAAM,EAAGzB,GAAG,CAASR,UAAU;MAAEU,GAAG,EAAErB,QAAQ,CAACU,MAAM;MAAEmC,EAAE,EAAClE,mBAAmB,CAACuB,IAAI,CAACF,QAAQ,CAACU,MAAM;IAAQ,CAAC,CAAC;IAE7J,IAAIgC,aAAa,EAAC;MACd;MACA,IAAIC,KAAqB,GAAG,EAAE;MAC9B,KAAK,IAAIe,CAAC,IAAIhB,aAAa,EAAE;QACzB,IAAII,QAAgB,GAAGtG,QAAQ,CAACgF,IAAI,CAACkC,CAAiB,CAAC,IAAIA,CAAkB;QAC7E,IAAIpE,IAAkB,GAAGnB,kBAAkB,CAAC6E,KAAK,CAACrG,SAAS,CAACsG,kBAAkB,CAACH,QAAQ,EAAE5D,KAAK,CAAiB,CAAC;QAChH,IAAII,IAAI,EAAEqD,KAAK,CAACgB,IAAI,CAACrE,IAAI,CAAC,CAAC,KACtBpB,GAAG,CAAC0F,EAAE,CAAC,4BAA4B,GAACF,CAAC,GAAC,aAAa,EAAE;UAACH,SAAS,EAAEG,CAAC;UAAEZ,QAAQ;UAAE/C,KAAK,EAAEC,QAAQ;UAAEd,KAAK,EAAEiC;QAAG,CAAC,CAAC;MACpH;MACAA,GAAG,CAACwB,KAAK,GAAGE,EAAE,CAACgB,UAAU,GAAGlB,KAAK;IACrC;IACA,IAAI,CAACxB,GAAG,CAACwB,KAAK,EAAE;MACZ;MACA,IAAI,CAACC,MAAM,EAAE;QACTA,MAAM,GAAG1B,SAAS,CAACC,GAAG,EAAEnB,QAAQ,CAAC;QACjCmB,GAAG,CAACwB,KAAK,GAAGC,MAAM,CAACiB,UAAU;MACjC,CAAC,MACI1C,GAAG,CAACwB,KAAK,GAAGC,MAAM,CAACiB,UAAU,GAAG1F,kBAAkB,CAAC2F,OAAO,CAAC,CAAClB,MAAM,CAACiB,UAAU,IAAE,EAAE,EAAEE,GAAG,CAAEL,CAAc,IAAGA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEjE,EAAE,CAAC,CAACuE,MAAM,CAACxE,GAAG,IAAE,CAAC,CAACA,GAAG,CAAC,CAAC;IAC5I;IACA;;IAGA2B,GAAG,CAAC8C,OAAO,GAAGzH,QAAQ,CAACsH,OAAO,CAAC3C,GAAG,CAACwB,KAAK,CAA4B;IACpExB,GAAG,CAAC+C,MAAM,GAAG/C,GAAG,CAAC7B,IAAI,CAACG,EAAE;IAExB,IAAI0E,KAAK,IAAA5B,SAAA,GAAGpB,GAAG,CAACjB,IAAI,cAAAqC,SAAA,uBAARA,SAAA,CAAUhD,KAAK;IAC3B,IAAI4E,KAAK,EAAEA,KAAK,CAAC7E,IAAI,GAAG6B,GAAG,CAAC+C,MAAM;IACjC/C,GAAG,CAASR,UAAU,GAAGkC,EAAE,CAAC,CAAC;EAClC;EAEA,OAAOuB,cAAcA,CAAClF,KAAa,EAAEc,QAA8B,EAAEmB,GAAgC,EAAQ;IACzG;IACA,IAAI,OAAOnB,QAAQ,CAACC,IAAI,KAAK,QAAQ,EAAE;MAAEkB,GAAG,CAACkD,MAAM,GAAIrE,QAAQ,CAACC,IAAI,CAASR,EAAE;IAAE,CAAC,MAC7E0B,GAAG,CAACkD,MAAM,GAAGrE,QAAQ,CAACC,IAA0B;IACrDkB,GAAG,CAAClB,IAAI,GAAG9B,kBAAkB,CAACmG,IAAI,CAACnD,GAAG,CAACkD,MAAM,CAAC,EAAC;;IAE/C;AACR;AACA;AACA;AACA;AACA;EACI;EAGA,OAAOE,qBAAqBA,CAACrF,KAAa,EACbc,QAA8B,EAC9BmB,GAAgC,EAEP;IAAA,IADzBqD,sBAA4C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAGpH,aAAa;IAAA,IAC5DsH,QAAiB,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAA5E,SAAA;IAC1C,IAAIa,MAAc,GAAGV,QAAQ,CAACU,MAAgB;IAC9C,IAAIkE,OAAe,GAAGD,QAAQ,GAAGA,QAAQ,CAAClF,EAAE,GAAGO,QAAQ,CAAC4E,OAAiB;IACzE,IAAIC,YAAoB,GAAG7E,QAAQ,CAAC6E,YAAsB;IAC1D1D,GAAG,CAACT,MAAM,GAAGA,MAAM;IACnB,IAAImC,EAAE,GAAGlE,mBAAmB,CAACuB,IAAI,CAACQ,MAAM,CAAC;IACzC,IAAI,CAACmC,EAAE,EAAEA,EAAE,GAAGlE,mBAAmB,CAACuB,IAAI,CAACQ,MAAM,CAAC,GAAG,IAAI9B,uBAAuB,CAAC,CAAC;IAC9E;IACA;IACA;AACR;AACA;AACA;AACA;;IAEQ,IAAIkG,KAAa,GAAGrH,kBAAkB,CAAC+D,IAAI,CAACoD,OAAO,EAAE1F,KAAK,CAAyB,CAAC,CAAC;IACrF,IAAI,CAAC4F,KAAK,EAAE;MACR;MACA,IAAI3D,GAAG,CAAClB,IAAI,EAAElD,mBAAmB,CAACgI,GAAG,CAAC3H,MAAM,CAAC2H,GAAG,CAAC,CAAC,EAAE5D,GAAG,CAAClB,IAAI,CAACR,EAAE,EAAEoF,YAAY,EAAED,OAAO,EAAEA,OAAO,CAAC,CAAC;IAAE;IACvG;AACR;AACA;AACA;IACQ,IAAIT,KAAoB,GAAG1G,kBAAkB,CAAC+D,IAAI,CAACd,MAAM,EAAExB,KAAK,CAAkB;;IAElF;IACA,IAAI,CAACiF,KAAK,IAAI,CAAC1G,kBAAkB,CAACuH,eAAe,CAACtE,MAAM,CAAC,EAAE;MACvD;AACZ;AACA;MACY;MACA,IAAIuE,GAAG;MACP;AACZ;AACA;AACA;AACA;AACA;MACY,IAAIT,sBAAsB,KAAKtH,KAAK,EAAE;QAAA,IAAAgI,SAAA;QAClC;QACA,IAAIC,YAA0B,GAAGnF,QAAwB;QACzD,IAAIoF,cAA8B,GAAGjE,GAAqB;QAC1D,IAAIkE,WAAW,GAAGzI,aAAa,CAAC0I,SAAS,CAACH,YAAY,CAACI,KAAK,CAAC;QAC7D,IAAIC,SAAS,GAAG5I,aAAa,CAAC0I,SAAS,CAACH,YAAY,CAACM,GAAG,CAAC;QACzD,IAAI,CAACJ,WAAW,EAAE;UACdA,WAAW,GAAGzI,aAAa,CAAC0I,SAAS,CAACnE,GAAG,CAAClB,IAAI,CAAC;QACnD;QACAmF,cAAc,CAACG,KAAK,GAAGpH,kBAAkB,CAACiF,WAAW,CAACiC,WAAW,CAAC;QAClED,cAAc,CAACK,GAAG,GAAGtH,kBAAkB,CAACiF,WAAW,CAACoC,SAAS,CAAC;QAC9DtH,GAAG,CAACmC,CAAC,CAAC,CAACgF,WAAW,EAAE,0CAA0C,EAAE;UAACA,WAAW;UAAEpF,IAAI,EAACkB,GAAG,CAAClB,IAAI;UAAEyF,UAAU,EAACP,YAAY,CAACI;QAAK,CAAC,CAAC;QAC5HrH,GAAG,CAACmC,CAAC,CAAC,CAACmF,SAAS,EAAE,8CAA8C,EAAE;UAACA,SAAS;UAAEvF,IAAI,EAACkB,GAAG,CAAClB,IAAI;UAAE0F,QAAQ,EAACR,YAAY,CAACM;QAAG,CAAC,CAAC;QACxH,IAAI,CAACJ,WAAW,IAAI,CAACG,SAAS,EAAE;QAChC,IAAII,YAAY,GAAGT,YAAY,CAACU,KAAK;QACrC,IAAIC,MAAM,GAAGX,YAAY,CAACW,MAAM;QAChC;QACAb,GAAG,GAAG/H,KAAK,CAAC6I,IAAI,EAAAb,SAAA,GAAC/D,GAAG,CAAClB,IAAI,cAAAiF,SAAA,uBAARA,SAAA,CAAUzF,EAAE,EAAEoF,YAAY,EAAED,OAAO,EAAElE,MAAM,EAAE2E,WAAW,EAAEG,SAAS,EAAGQ,CAAC,IAAG;UACvF;UACA;UACA,IAAInD,EAAE,GAAIlE,mBAAmB,CAACuB,IAAI,CAACQ,MAAM,CAAE;UAC3C,IAAI,CAACmC,EAAE,EAAElE,mBAAmB,CAACuB,IAAI,CAACQ,MAAM,CAAC,GAAG,CAAC,CAAQ;UACrDmC,EAAE,CAACiD,MAAM,GAAGA,MAAM;UAClBjD,EAAE,CAAC+C,YAAY,GAAGA,YAAY;UAC9BI,CAAC,CAACC,MAAM,GAAGjG,QAAQ,CAACkG,SAAS,IAAI,CAAC;UAClC,IAAIf,YAAY,CAACgB,WAAW,EAAEH,CAAC,CAACG,WAAW,GAAGhB,YAAY,CAACgB,WAAW;UACtE,IAAIhB,YAAY,CAACiB,SAAS,EAAEJ,CAAC,CAACI,SAAS,GAAGjB,YAAY,CAACiB,SAAS;QACpE,CAAC,CAAC;QACFhB,cAAc,CAAClF,IAAI,GAAGkF,cAAc,CAACiB,IAAI,GAAGjI,cAAc,CAACkG,IAAI,CAACW,GAAG,CAAC;MACxE,CAAC,MACI;QAAA,IAAAqB,UAAA;QACD,IAAIC,WAAW,GAAGvG,QAAQ,CAACuG,WAAW;QACtCtB,GAAG,GAAGT,sBAAsB,CAACO,GAAG,CAAC/E,QAAQ,CAACkG,SAAS,GAAAI,UAAA,GAAYnF,GAAG,CAAClB,IAAI,cAAAqG,UAAA,uBAARA,UAAA,CAAU7G,EAAE,EAAEoF,YAAY,EAAED,OAAO,EAAElE,MAAM,EAAE6F,WAAW,CAAC;QACxHpF,GAAG,CAACjB,IAAI,GAAI9B,cAAc,CAACkG,IAAI,CAACW,GAAG,CAAC;MACxC;MACA;IACJ,CAAC,MACI;MACD9D,GAAG,CAACjB,IAAI,GAAG9B,cAAc,CAACkG,IAAI,CAACH,KAAK,CAAC;MACrC,IAAIK,sBAAsB,KAAKtH,KAAK,EAAGiE,GAAG,CAAoBkF,IAAI,GAAGlF,GAAG,CAACjB,IAAW;IACxF;IAGA,IAAIiB,GAAG,CAACkD,MAAM,EAAE;MACZ;MACA,IAAImC,EAAE,GAAG7H,mBAAmB,CAAC8H,YAAY,CAACtF,GAAG,CAACkD,MAAM,CAAC;MACrD,IAAI,CAACmC,EAAE,EAAE7H,mBAAmB,CAAC8H,YAAY,CAACtF,GAAG,CAACkD,MAAM,CAAC,GAAG;QAACqC,KAAK,EAAE,CAAC;MAAC,CAAQ;MAC1EF,EAAE,CAACE,KAAK,CAAC1G,QAAQ,CAACU,MAAM,CAAW,GAAGS,GAAG,CAACjB,IAAI;MAC9CsG,EAAE,CAACtG,IAAI,GAAGiB,GAAG,CAACjB,IAAI;IACtB;EAGJ;;EAEA;EACA,OAAOyG,eAAeA,CAACzH,KAAa,EAAEc,QAA8B,EAA8H;IAAA,IAA5H4G,eAAsD,GAAAnC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAGpH,aAAa;IAAA,IAAEwJ,WAAqB,GAAApC,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAA5E,SAAA;IAC/J;IACA,IAAIsB,GAAgC,GAAI0F,WAAW,IAAI9I,2BAA2B,CAACgH,GAAG,CAAC,CAAiC,CAAC,CAAC;IAC1H;;IAEArD,qBAAqB,CAAC0C,cAAc,CAAClF,KAAK,EAAEc,QAAQ,EAAEmB,GAAG,CAAC;IAC1D,IAAIlE,KAAK,CAAC6J,SAAS,KAAK,CAAC3F,GAAG,CAAClB,IAAI,IAAI,CAAEe,wBAAwB,CAAC+F,QAAQ,CAAC5F,GAAG,CAAClB,IAAI,CAAC+G,SAAS,CAAE,CAAC,EAAC;MAC3F,OAAO7F,GAAG;IACd;IACA;IACAO,qBAAqB,CAAC6C,qBAAqB,CAACrF,KAAK,EAAEc,QAAQ,EAAEmB,GAAG,EAAEyF,eAAe,CAAC;IAClF;;IAEAlF,qBAAqB,CAACU,YAAY,CAAClD,KAAK,EAAEiC,GAAG,EAAEnB,QAAQ,CAAC;IACxD;;IAEA9B,GAAG,CAAC+I,KAAK,CAAC,CAAC9F,GAAG,CAAC7B,IAAI,IAAI,CAAC6B,GAAG,CAACwB,KAAK,EAAE,wBAAwB,EAAE;MAACzD,KAAK;MAAEc,QAAQ;MAAEkH,UAAU,EAAE/F;IAAG,CAAC,CAAC;IAChG;IACAA,GAAG,CAACgG,GAAG,GAAGhG,GAAG,CAACgG,GAAG,IAAInH,QAAQ,CAACmH,GAAG;IACjC;IACAhG,GAAG,CAACiG,WAAW,GAAGlI,KAAK,CAACkI,WAAW;;IAEnC;IACA5I,CAAC,CAAC6I,qBAAqB,CAAClG,GAAG,CAAC;IAC5B,OAAOA,GAAG;EACd;EAEA,OAAOmG,kBAAkBA,CAACC,QAAuB,EAA6B;IAC1E,MAAMpG,GAA8B,GAAG,CAAC,CAAQ;IAChD,OAAOA,GAAG;EACd;;EAQ2B;;EACI;;EAExBqG,qBAAqBA,CAACxF,SAA6B,EAAEC,SAAsC,EAAEC,WAAgB,EAAEuF,QAA6B,EAAW;IAAA,IAAAC,eAAA;IAC1J,IAAI,CAACD,QAAQ,EAAEA,QAAQ,GAAG,IAAI,CAAC1H,KAAK,CAAC;IACrC;IACA,IAAIE,IAAI,IAAAyH,eAAA,GAAG1F,SAAS,CAAC/B,IAAI,cAAAyH,eAAA,uBAAdA,eAAA,CAAgBnI,KAAkC;IAE7D,IAAIoI,GAAG,GAAG;MAACC,MAAM,EAAC/H;IAAS,CAAC;IAC5B,IAAIgI,YAAY,GAAG;MAACC,SAAS,EAAC,IAAI;MAAEC,aAAa,EAAE;IAAI,CAAC,CAAC;IACzD;IACA,IAAI5G,GAAG,GAAG,KAAK,CAAC,CAAC;IACjB;IACA,IAAInC,SAAS,GAAGgD,SAAS,CAAC9B,IAAI,CAAClB,SAAS;IACxC,MAAMqC,GAAG,GAAGW,SAAS,CAACtB,MAAM;IAC5B;IACA,KAAK,IAAIgD,CAAC,IAAI1B,SAAS,CAACW,KAAK,EAAE;MAC3B,MAAMnD,GAA0B,GAAGkE,CAAC,CAACnE,KAAK,CAACE,EAAE;MAC7C,IAAIuI,aAAa,GAAGrJ,mBAAmB,CAACuB,IAAI,CAACmB,GAAG,CAAC,CAACV,UAAU,CAACnB,GAAG,CAAC;MACjE,IAAIyI,MAAM,GAAGD,aAAa,CAACpI,iBAAiB;MAC5Cb,wBAAwB,CAACC,SAAS,EAAEgD,SAAS,EAAEC,SAAS,EAAEyB,CAAC,CAAC;MAC5D,IAAIwE,MAAM,GAAGF,aAAa,CAACpI,iBAAiB;MAC5CoI,aAAa,CAACG,YAAY,GAAG,CAAC3J,CAAC,CAAC4J,yBAAyB,CAACH,MAAM,EAAEC,MAAM,EAAEL,YAAY,EAAEF,GAAG,CAAC;MAE5FK,aAAa,CAACK,mBAAmB,GAAG;QAAC,GAAGV;MAAG,CAAC;MAC3CK,aAAa,CAASM,wBAAwB,GAAG;QAACL,MAAM;QAAEC;MAAM,CAAC;MAClEhK,GAAG,CAACqK,CAAC,CAAC,IAAI,EAAE,wCAAwC,IAAGtI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqD,IAAI,KAAI0E,aAAa,CAACG,YAAY,GAAG,WAAW,GAAG,YAAY,CAAC,GAAI3I,GAAG,EAChI;QAAC2B,GAAG,EAAC6G,aAAa,CAACG,YAAY;QAAEP,MAAM,EAAED,GAAG,CAACC,MAAM;QAAEK,MAAM;QAAEC,MAAM;QAAET,QAAQ,EAACA,QAAQ;QAAEzF,SAAS;QAAExC;MAAG,CAAC,CAAC;MAE5G,IAAI,CAAC2B,GAAG,IAAI6G,aAAa,CAACG,YAAY,EAAEhH,GAAG,GAAG,IAAI;IACtD;IAEA,MAAM3B,GAA0B,GAAGwC,SAAS,CAAC1C,IAAI,CAACC,KAAK,CAACE,EAAE;IAC1D,IAAIuI,aAAa,GAAGrJ,mBAAmB,CAACuB,IAAI,CAAC8B,SAAS,CAACtB,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC;IAC9E,IAAIyI,MAAM,GAAGD,aAAa,CAACpI,iBAAiB;IAC5Cb,wBAAwB,CAACC,SAAS,EAAEgD,SAAS,EAAEC,SAAS,EAAED,SAAS,CAAC1C,IAAI,CAAC;IACzE,IAAI4I,MAAM,GAAGF,aAAa,CAACpI,iBAAiB;IAC5CoI,aAAa,CAACG,YAAY,GAAG,CAAC3J,CAAC,CAAC4J,yBAAyB,CAACH,MAAM,EAAEC,MAAM,EAAGL,YAAY,EAAEF,GAAG,CAAC;IAC7FK,aAAa,CAACK,mBAAmB,GAAG;MAAC,GAAGV;IAAG,CAAC;IAC3CK,aAAa,CAASM,wBAAwB,GAAG;MAACL,MAAM;MAAEC;IAAM,CAAC;IAElEhK,GAAG,CAACqK,CAAC,CAAC,IAAI,EAAE,wBAAwB,IAAGtI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqD,IAAI,KAAI0E,aAAa,CAACG,YAAY,GAAG,WAAW,GAAG,YAAY,CAAC,GAAG3I,GAAG,EAC/G;MAAC2B,GAAG,EAAC6G,aAAa,CAACG,YAAY;MAAEP,MAAM,EAAED,GAAG,CAACC,MAAM;MAAEK,MAAM;MAAEC,MAAM;MAAET,QAAQ,EAACA,QAAQ;MAAEzF;IAAS,CAAC,CAAC;IACvG,IAAI,CAACb,GAAG,IAAI6G,aAAa,CAACG,YAAY,EAAEhH,GAAG,GAAG,IAAI;IAClD,OAAOA,GAAG,CAAC,CAAC;IACZ;EACJ;EAEUqH,iBAAiBA,CAACC,IAAuB,EAAEjJ,GAA0B,EAAW;IACtF,IAAIvC,KAAK,CAAC6J,SAAS,EAAE,OAAO,KAAK;IACjC,IAAI4B,cAAqD,GAAI/J,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC,CAASiJ,IAAI,CAAC;IACxG,IAAI,CAACC,cAAc,EAAE,OAAO,KAAK;IACjC,IAAIC,OAAgB,GAAG,IAAI,CAACC,aAAa,CAACpJ,GAAG,CAAC,CAAC,CAAC;IAChD,IAAI;MACAkJ,cAAc,CAACtI,IAAI,CAACuI,OAAO,EAAEA,OAAO,CAAC;MACrCE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;QAACL,IAAI;QAAEC,cAAc;QAAElJ,GAAG;QAAEuJ,SAAS,EAACpK,mBAAmB,CAACW,IAAI,CAACE,GAAG;MAAC,CAAC,CAAC;IAC5G,CAAC,CACD,OAAOa,CAAM,EAAE;MAAEnC,GAAG,CAACsC,EAAE,CAAC,uBAAuB,GAACiI,IAAI,GAAC,IAAI,GAAGpI,CAAC,CAAC2I,OAAO,EAAE;QAAC3I,CAAC;QAAEqI,cAAc;QAAEC;MAAO,CAAC,CAAC;IAAE;IACtG;IACA;IACA,OAAO,IAAI;EACf;EAIAM,MAAMA,CAACC,OAAwB,EAAQ;IAAA,IAAAC,gBAAA,EAAAC,gBAAA;IACnC;IACAtM,KAAK,CAAC,CAAC;IACP,CAAAqM,gBAAA,OAAI,CAACpJ,KAAK,CAACG,IAAI,cAAAiJ,gBAAA,uBAAfA,gBAAA,CAAiBF,MAAM,CAACC,OAAO,CAAC;IAChC3K,kBAAkB,CAACwG,GAAG,CAAC,eAAe,EAAE;MACpC7E,IAAI,EAAE,IAAI,CAACH,KAAK,CAACW,MAAM;MACvBpB,IAAI,EAAE,IAAI,CAACS,KAAK,CAACT,IAAI,CAACG,EAAE;MACxBgH,YAAY,GAAA2C,gBAAA,GAAE,IAAI,CAACrJ,KAAK,CAACE,IAAI,cAAAmJ,gBAAA,uBAAfA,gBAAA,CAAiB3J;IACnC,CAAC,CAAC,CAAC;AACX;AACA;AACA;AACA;AACA;AACA;;IAEQ;IACA5B,GAAG,CAAC,CAAC;EACT;EAEAwL,WAAWA,CAACtJ,KAAe,EAAE4I,OAAY,EAAE;IACvC,KAAK,CAAC5I,KAAK,EAAE4I,OAAO,CAAC;IAAC,KA9S1BlJ,EAAE;IAAA,KAmNFgC,YAAY;IAAA,KACZ6H,UAAU;IAAA,KACVC,IAAI;IAAA,KACJC,eAAe;IAAA,KACfC,mBAAmB;IAAA,KACnBC,gBAAgB;IAAA,KAChBC,oBAAoB;IAsFhB,IAAI,CAACH,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACC,gBAAgB,GAAG7J,SAAS;IACjC,IAAI,CAACyJ,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC7H,YAAY,GAAG,CAAC;IACrB,IAAI,CAAChC,EAAE,GAAGiC,qBAAqB,CAACkI,KAAK,EAAE;IACvClI,qBAAqB,CAACmI,GAAG,CAAC,IAAI,CAACpK,EAAE,CAAC,GAAG,IAAI;IACzCiC,qBAAqB,CAACqC,GAAG,CAAChE,KAAK,CAACW,MAAM,CAA2B,GAAG,IAAI,CAAC,CAAC;IAC1E,IAAI,CAAC6I,IAAI,gBAAGpN,KAAK,CAAC2N,SAAS,CAAC,CAAC;IAC7B,IAAIC,eAAe,GAAG,CAAC,IAAI,CAACC,OAAO,EAC/B,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,OAAO,EAC1B,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,aAAa,EACtC,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;AAC/F;AACA;AACA;AACA;AACA;IACQ,KAAK,IAAIC,CAAC,IAAIX,eAAe,EAAG,IAAI,CAASW,CAAC,CAACpH,IAAI,CAAC,GAAGoH,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACnE;IACA,IAAI,CAACzL,KAAK,GAAG;MAAC0L,OAAO,EAAE;IAAc,CAAC;IACtC,IAAI,CAACpD,qBAAqB,CAAC,IAAI,CAACzH,KAAK,EAAE,IAAI,CAACb,KAAK,EAAEW,SAAS,EAAEA,SAAS,CAAC;EAC5E;;EAEA;EACA;EACA;EACA;;EAIAgL,iBAAiBA,CAAA,EAAS;IACtB;IACA,IAAI,CAACvB,UAAU,GAAG,IAAI;EAC1B;EAEAwB,oBAAoBA,CAAA,EAAS;IACzB;IACA;IACA;IACA;EAAA;EAEJ;AACJ;AACA;AACA;AACA;;EAIclC,aAAaA,CAACpJ,GAA0B,EAAU;IACxD,IAAImJ,OAAgB,GAAGhK,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC,CAACuL,WAAW;IAC9F,IAAIpC,OAAO,IAAIA,OAAO,CAAC3J,SAAS,EAAE,OAAO2J,OAAO;;IAEhD;IACA,IAAIqC,GAAG,GAAGrM,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC;IACrE,IAAIyL,EAAE,GAAGtM,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC;IACtCmJ,OAAO,GAAGqC,GAAG,CAACD,WAAW,GAAG;MAAC,GAAG,IAAI,CAAChL,KAAK;MAAE,GAAGkL,EAAE,CAACvL,SAAS;MAAE,GAAGsL,GAAG,CAACpL,iBAAiB;MACjF;MACAZ,SAAS,EAAE,IAAI;MACfkM,UAAU,EAAE,IAAI,CAACnL,KAAK,CAAC4C,KAAK;MAC5BjD,SAAS,EAAEuL,EAAE,CAACvL,SAAS;MACvBE,iBAAiB,EAAEoL,GAAG,CAACpL,iBAAiB;MACxCG,KAAK,EAAE,IAAI,CAACA;IAAK,CAAC;IACtB4I,OAAO,CAACwC,QAAQ,GAAGxC,OAAO;IAC1B,OAAOA,OAAO;EAClB;EAEA,OAAcyC,YAAYA,CAAC/K,CAAQ,EAAEgL,KAAa,EAAE/L,IAAkB,EAAEW,IAAoB,EAAEC,IAAoB,EAAkE;IAAA,IAAhEoL,QAAgB,GAAA7G,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAG,KAAK;IAAA,IAAE8G,SAAmB,GAAA9G,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAA5E,SAAA;IAC7J;IACA,IAAI2L,QAAQ,GAAG,CAACH,KAAK,KAAK,eAAe,GAAG,aAAa,GAAG,EAAE,IAAG,CAAChL,CAAC,CAAC2I,OAAO,IAAE,IAAI,EAAEyC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjG,IAAIpL,CAAC,CAAC2I,OAAO,CAAC0C,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAIpM,IAAI,CAACqM,SAAS,CAACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAIpM,IAAI,CAACqM,SAAS,CAACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MACxHF,QAAQ,IAAI,kEAAkE;IAAE,CAAC,MAChF,IAAIlM,IAAI,CAACqM,SAAS,CAACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MAAEF,QAAQ,IAAI,mEAAmE;IAAE,CAAC,MAC3H,IAAInL,CAAC,CAAC2I,OAAO,CAAC0C,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE;MAAEF,QAAQ,IAAI,4CAA4C;IAAE;IACvH,IAAI;MACA,IAAIhL,EAAE,GAAGH,CAAC,CAACuL,KAAK,IAAI,EAAE;MACtB,IAAIC,cAAc,GAAGrL,EAAE,CAACiL,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAEtC,IAAIK,IAAI,GAAGD,cAAc,CAACE,WAAW,CAAC,GAAG,CAAC;MAC1C,IAAIJ,SAAS,GAAGrM,IAAI,CAACqM,SAAS;MAC9B;MACA,IAAIK,IAAI,GAAGH,cAAc,CAACE,WAAW,CAAC,GAAG,EAAED,IAAI,GAAC,CAAC,CAAC;MAClD,MAAMG,MAAM,GAAC;QAACC,GAAG,EAAC,CAAC,CAAC;QAAEC,GAAG,EAAC;MAAC,CAAC;MAC5B,IAAIC,iBAA0B,GAAG;QAC7BF,GAAG,EAAEpL,MAAM,CAACuL,QAAQ,CAACR,cAAc,CAACS,SAAS,CAACN,IAAI,GAAC,CAAC,EAAEF,IAAI,CAAC,CAAC,GAAGG,MAAM,CAACC,GAAG;QACzEC,GAAG,EAAErL,MAAM,CAACuL,QAAQ,CAACR,cAAc,CAACS,SAAS,CAACR,IAAI,GAAC,CAAC,CAAC,CAAC,GAAGG,MAAM,CAACE;MAAI,CAAC;MACzE,IAAII,QAAQ,GAAG,CAAC;MAChB,IAAIC,SAAS,GAAG,CAAC;MACjB,IAAIC,QAAQ,GAAGd,SAAS,CAACF,KAAK,CAAC,IAAI,CAAC;MACpC,IAAIiB,eAAyB,GAAGD,QAAQ,CAACE,KAAK,CAACP,iBAAiB,CAACF,GAAG,GAACK,QAAQ,GAAC,CAAC,EAAEH,iBAAiB,CAACF,GAAG,GAAG,CAAC,CAAC;MAC3G,IAAIU,WAAmB,GAAGH,QAAQ,CAACL,iBAAiB,CAACF,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/D,IAAIW,gBAA0B,GAAGJ,QAAQ,CAACE,KAAK,CAACP,iBAAiB,CAACF,GAAG,EAAEE,iBAAiB,CAACF,GAAG,GAAGM,SAAS,CAAC;MACzG3D,OAAO,CAACiE,KAAK,CAAC,MAAM,EAAE;QAACzM,CAAC;QAAEH,IAAI;QAAEuM,QAAQ;QAAEC,eAAe;QAAEE,WAAW;QAAEC,gBAAgB;QAAET,iBAAiB;QAAEN,IAAI;QAAEE,IAAI;QAAEH;MAAc,CAAC,CAAC;MAEzI,IAAIO,iBAAiB,CAACD,GAAG,GAAGF,MAAM,CAACE,GAAG,IAAGS,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAElI,MAAM,KAAI0H,iBAAiB,CAACF,GAAG,KAAK,CAAC,EAAEE,iBAAiB,CAACD,GAAG,GAAG,CAAC;MACtH,IAAIY,WAAW,GAAG,GAAG,EAAC;MACtB,IAAIH,WAAW,IAAIR,iBAAiB,CAACD,GAAG,GAAGF,MAAM,CAACE,GAAG,KAAIS,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAElI,MAAM,KAAImH,cAAc,CAACH,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5H,IAAIsB,MAAM,GAAGJ,WAAW,CAACN,SAAS,CAAC,CAAC,EAAEF,iBAAiB,CAACD,GAAG,CAAC;QAC5D,IAAIc,OAAO,GAAGL,WAAW,CAACN,SAAS,CAACF,iBAAiB,CAACD,GAAG,CAAC;QAC1D,IAAIe,OAAO,gBACPpO,OAAA;UAAKqO,KAAK,EAAE;YAACC,UAAU,EAAE,uBAAuB;YAAEC,KAAK,EAAC;UAAM,CAAE;UAAAC,QAAA,GAC1DZ,eAAe,CAAC3I,GAAG,CAACwE,CAAC,iBAAIzJ,OAAA;YAAAwO,QAAA,EAAM/E;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,CAAC,eAC1C5O,OAAA;YAAAwO,QAAA,GAAMN,MAAM,EAAC,GAAC,eAAAlO,OAAA;cAAGqO,KAAK,EAAE;gBAACE,KAAK,EAAC;cAAK,CAAE;cAAAC,QAAA,GAAC,GAAC,EAACP,WAAW,EAAC,GAAC;YAAA;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACT,OAAO;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACxEb,gBAAgB,CAAC9I,GAAG,CAACwE,CAAC,iBAAIzJ,OAAA;YAAAwO,QAAA,EAAM/E;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;QACVlC,QAAQ,IAAI,UAAU,GAAGY,iBAAiB,CAACF,GAAG,GAAG,QAAQ,GAAGE,iBAAiB,CAACD,GAAG;QACjF,IAAIb,QAAQ,EAAE,OAAO3N,EAAE,CAACgQ,gBAAgB,CAAC,OAAO,GAACnC,QAAQ,GAAC,IAAI,GAAC0B,OAAO,GAAC,QAAQ,EAAE;UAAC7B,KAAK,EAAC,KAAK,GAACA,KAAK,GAAC,IAAI;UAAEhL,CAAC;UAAEuN,QAAQ,EAACtO,IAAI,CAACqM,SAAS;UAAErM,IAAI,EAAEA;QAAI,CAAC,EAAE+L,KAAK,EAAEpL,IAAI,EAAEC,IAAI,EAAEZ,IAAI,CAAC;QAC3K,OAAO3B,EAAE,CAACkQ,SAAS,eAAC/O,OAAA;UAAAwO,QAAA,GAAM9B,QAAQ,EAAE0B,OAAO;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAAE;UAACrC,KAAK,EAAC,KAAK,GAACA,KAAK,GAAC,IAAI;UAAEhL,CAAC;UAAEuN,QAAQ,EAACtO,IAAI,CAACqM,SAAS;UAAErM,IAAI,EAAEA;QAAI,CAAC,EAAE+L,KAAK,EAAEpL,IAAI,EAAEC,IAAI,EAAEZ,IAAI,CAAC;MAClJ,CAAC,MAAM;QACH;MAAA;IAER,CAAC,CAAC,OAAMwO,EAAE,EAAE;MACR5P,GAAG,CAAC6P,KAAK,CAAC,8BAA8B,EAAE;QAAC1N,CAAC;QAAEyN,EAAE;QAAEzC;MAAK,CAAE,CAAC;MAC1D,OAAO,IAAI;IACf;IACA,IAAIC,QAAQ,EAAE,OAAO3N,EAAE,CAACgQ,gBAAgB,CAAC,OAAO,GAACnC,QAAQ,GAAC,QAAQ,EAAE;MAACH,KAAK,EAAC,KAAK,GAACA,KAAK,GAAC,IAAI;MAAEhL,CAAC;MAAEuN,QAAQ,EAAEtO,IAAI,CAACqM,SAAS;MAAErM,IAAI,EAAEA;IAAI,CAAC,EAAE+L,KAAK,EAAEpL,IAAI,EAAEC,IAAI,EAAEZ,IAAI,CAAC;IAC/J,OAAO3B,EAAE,CAACkQ,SAAS,eAAC/O,OAAA;MAAAwO,QAAA,EAAM9B;IAAQ;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAE;MAACrC,KAAK,EAAC,KAAK,GAACA,KAAK,GAAC,IAAI;MAAEhL,CAAC;MAAEuN,QAAQ,EAAEtO,IAAI,CAACqM,SAAS;MAAErM,IAAI,EAAEA,IAAI;MAAE,IAAIiM,SAAS,IAAI,CAAC,CAAC;IAAC,CAAC,EAAEF,KAAK,EAAEpL,IAAI,EAAEC,IAAI,EAAEZ,IAAI,CAAC;EAChK;EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACc0O,YAAYA,CAACxO,GAA0B,EAAEkE,CAAe,EAAEiF,OAAgB,EAAa;IAC7F,IAAIqC,GAAG,GAAGrM,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC;IACrE,IAAIyL,EAAE,GAAGtM,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC;IACtC;IACA,IAAI2B,GAAG,GAAG,IAAI,CAAC8M,aAAa,CAACzO,GAAG,EAAEkE,CAAC,EAAEiF,OAAO,CAAC;IAC7C,OAAOxH,GAAG;EACd;EACU8M,aAAaA,CAACzO,GAA0B,EAAEkE,CAAe,EAAEiF,OAAgB,EAAY;IAC7F,IAAIqC,GAAG,GAAGrM,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC,CAACC,UAAU,CAACnB,GAAG,CAAC;IACrE,IAAI,CAACwL,GAAG,CAAC7C,YAAY,IAAI6C,GAAG,CAACkD,SAAS,EAAE,OAAOlD,GAAG,CAACkD,SAAS;IAC5D,IAAIjD,EAAE,GAAGtM,mBAAmB,CAACW,IAAI,CAACE,GAAG,CAAC;IACtC,IAAI2B,GAAG,GAAG6J,GAAG,CAACkD,SAAS,GAAIjD,EAAE,CAACkD,WAAW,GAAGlD,EAAE,CAACkD,WAAW,CAAC/N,IAAI,CAACuI,OAAO,EAAEA,OAAO,CAAC,GAAG,IAAK;IACzF,IAAI,OAAOxH,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAI,eAAChF,KAAK,CAACiS,cAAc,CAACjN,GAAG,CAAC,EAAE;MACvE;MACA;MACA,IAAG;QACCA,GAAG,GAAGkN,IAAI,CAACC,SAAS,CAACnN,GAAG,CAAC;MAC7B,CAAC,CACD,OAAMd,CAAC,EAAC;QAAEc,GAAG,GAAG,uBAAuB;MAAE;IAC7C;IACA,OAAOA,GAAG;EACd;EAEUoN,YAAYA,CAAC7K,CAAe,EAAE8K,SAAkB,EAAa;IACnE;;IAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQ,IAAIrN,GAAG;IACP;IACA,IAAIsN,aAAmC;IAEvC,IAAI;MAAEA,aAAa,GAAGzQ,IAAI,CAAC0Q,UAAU,CAAChL,CAAC,CAACiI,SAAS,EAAE;QAACgD,OAAO,EAAE;MAAqB,CAAC,CAAC;IAAE,CAAC,CACvF,OAAOtO,CAAM,EAAE;MAAA,IAAAuO,iBAAA,EAAAC,iBAAA;MAAE,OAAOnN,qBAAqB,CAAC0J,YAAY,CAAC/K,CAAC,EAAE,YAAY,EAAEqD,CAAC,CAACnE,KAAK,GAAAqP,iBAAA,GAAE,IAAI,CAAC7O,KAAK,CAACE,IAAI,cAAA2O,iBAAA,uBAAfA,iBAAA,CAAiBrP,KAAK,GAAAsP,iBAAA,GAAE,IAAI,CAAC9O,KAAK,CAACG,IAAI,cAAA2O,iBAAA,uBAAfA,iBAAA,CAAiBtP,KAAK,CAAC;IAAE;;IAEtI;IACA,IAAI;MACA,IAAIuP,UAAU,GAAGtQ,CAAC,CAACuQ,gCAAgC,CAAC,eAAe,GAAGN,aAAa,GAAG,GAAG,EAAED,SAAS,EAAEA,SAAS,CAAC;MAChHrN,GAAG,GAAG2N,UAAU,CAACN,SAAS,CAAc;MACxC;IACJ,CAAC,CACD,OAAOnO,CAAM,EAAE;MAAA,IAAA2O,iBAAA,EAAAC,iBAAA;MAAE,OAAOvN,qBAAqB,CAAC0J,YAAY,CAAC/K,CAAC,EAAE,cAAc,EAAEqD,CAAC,CAACnE,KAAK,GAAAyP,iBAAA,GAAE,IAAI,CAACjP,KAAK,CAACE,IAAI,cAAA+O,iBAAA,uBAAfA,iBAAA,CAAiBzP,KAAK,GAAA0P,iBAAA,GAAE,IAAI,CAAClP,KAAK,CAACG,IAAI,cAAA+O,iBAAA,uBAAfA,iBAAA,CAAiB1P,KAAK,EAAE,KAAK,EAAE;QAACiP;MAAS,CAAC,CAAC;IAAE;IAC5J,OAAOrN,GAAG;EACd;EAEAiJ,aAAaA,CAAC/J,CAA4B,EAAE;IACxCA,CAAC,CAAC6O,cAAc,CAAC,CAAC;IAClB7O,CAAC,CAAC8O,eAAe,CAAC,CAAC;IACnB;EACJ;EAEAhF,aAAaA,CAAC9J,CAA4B,EAAE;IAAA,IAAA+O,kBAAA;IACxCtS,KAAK,CAAC,CAAC;IACP,IAAI,CAACiD,KAAK,CAACG,IAAI,CAAC+I,MAAM,CAAC,CAAC;IACxB,IAAI,IAAI,CAACM,IAAI,CAAC8F,OAAO,EAAE,IAAI,CAAC9F,IAAI,CAAC8F,OAAO,CAACC,KAAK,CAAC,CAAC;IAChD,IAAIpQ,KAAa,GAAGrC,KAAK,CAAC0S,QAAQ,CAAC,CAAC;IACpC,IAAI,EAAAH,kBAAA,GAAAlQ,KAAK,CAACsQ,WAAW,cAAAJ,kBAAA,uBAAjBA,kBAAA,CAAmBK,CAAC,MAAKpP,CAAC,CAACqP,OAAO,EAAE;MAAA,IAAAC,iBAAA;MACpCpR,kBAAkB,CAACwG,GAAG,CAAC,aAAa,EAAE;QAClC6K,OAAO,EAAE,IAAI;QACbH,CAAC,EAAEpP,CAAC,CAACqP,OAAO;QACZG,CAAC,EAAExP,CAAC,CAACyP,OAAO;QACZpP,MAAM,GAAAiP,iBAAA,GAAE,IAAI,CAAC5P,KAAK,CAACG,IAAI,cAAAyP,iBAAA,uBAAfA,iBAAA,CAAiBlQ;MAC7B,CAAC,CAAC;IACN;IACA5B,GAAG,CAAC,CAAC;EACT;EAEAqM,OAAOA,CAAC7J,CAA4B,EAAE;IAAA,IAAA0P,qBAAA,EAAAC,iBAAA;IAAE;IACpC,MAAMC,aAAa,IAAAF,qBAAA,GAAG,IAAI,CAAChQ,KAAK,CAACkQ,aAAa,cAAAF,qBAAA,uBAAxBA,qBAAA,CAA0BG,MAAM;IACtD,IAAI,CAACD,aAAa,IAAI,EAAAD,iBAAA,OAAI,CAACjQ,KAAK,CAACE,IAAI,cAAA+P,iBAAA,uBAAfA,iBAAA,CAAiBhJ,SAAS,MAAK,QAAQ,EAAE;IAC/D,MAAMmJ,WAA8D,GAAG;MAACvI,MAAM,EAAE,EAAE;MAAEwI,qBAAqB,EAAE;IAAE,CAAC;IAC9G,MAAMC,WAAW,GAAGJ,aAAa,CAACK,SAAS,CAAC,IAAI,CAACvQ,KAAK,CAACE,IAAI,EAAmBkQ,WAAW,CAAC;IAE1F,IAAIE,WAAW,EAAE,IAAI,CAACE,QAAQ,CAAC;MAAC3F,OAAO,EAAC,CAAC,GAAG,IAAI,CAAC1L,KAAK,CAAC0L,OAAO,EAAE,uBAAuB;IAAC,CAAC,CAAC,CAAC,KACtF,IAAI,CAAC2F,QAAQ,CAAC;MAAC3F,OAAO,EAAC,CAAC,GAAG,IAAI,CAAC1L,KAAK,CAAC0L,OAAO,EAAE,0BAA0B;IAAC,CAAC,CAAC;EACrF;EACAX,OAAOA,CAAC5J,CAA4B,EAAE;IAAA,IAAAmQ,iBAAA;IAClC,IAAI,EAAAA,iBAAA,OAAI,CAACzQ,KAAK,CAACE,IAAI,cAAAuQ,iBAAA,uBAAfA,iBAAA,CAAiBxJ,SAAS,MAAK,QAAQ,EAAE;IAC7C,IAAI,CAACuJ,QAAQ,CAAC;MAAC3F,OAAO,EAAE,IAAI,CAAC1L,KAAK,CAAC0L,OAAO,CAAC5G,MAAM,CAAEyM,SAAS,IAAK;QAC7D,OAAOA,SAAS,KAAK,uBAAuB,IAAIA,SAAS,KAAK,0BAA0B;MAC5F,CAAC;IAAC,CAAC,CAAC;EACR;EAGApG,WAAWA,CAAChK,CAAmB,EAAQ;IACnCA,CAAC,CAAC8O,eAAe,CAAC,CAAC;IACnBzN,qBAAqB,CAACgP,kBAAkB,GAAG,IAAI;IAC/CjU,WAAW,CAAC,MAAI;MACZ,IAAI4D,CAAC,CAACsQ,MAAM,KAAK1S,UAAU,CAAC2S,UAAU,EAAE;QAAE,IAAI,CAACzG,aAAa,CAAC9J,CAAC,CAAC;MAAE;MACjE,IAAIwQ,CAAU,GAAG,IAAI,CAAC9Q,KAAK;MAC3B8I,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;QAAC+H,CAAC;QAAEC,EAAE,EAAED,CAAC,CAACE,OAAO;QAAEC,EAAE,EAACH,CAAC,CAACI;MAAQ,CAAC,CAAC;MAC1D;IACJ,CAAC,CAAC;EACN;EAIAzG,QAAQA,CAACnK,CAAmB,EAAQ;IAChCwI,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAIoI,MAAa,GAAG,IAAI3U,KAAK,CAAC8D,CAAC,CAAC8Q,aAAa,CAACC,UAAU,EAAE/Q,CAAC,CAAC8Q,aAAa,CAACE,SAAS,CAAC;IACpF,IAAIC,YAAmB,GAAG,IAAI/U,KAAK,CAAC8D,CAAC,CAACkR,WAAW,CAACC,OAAO,EAAEnR,CAAC,CAACkR,WAAW,CAACE,OAAO,CAAC;IACjF,IAAIC,CAAS,GAAG,IAAI,CAAC3R,KAAK,CAACG,IAAI,CAAC4E,KAAK;IACrC,IAAI6M,OAAmB,GAAGD,CAAC,CAACE,IAAI;IAChC,IAAIC,OAAmB,GAAG,IAAInV,UAAU,CAACiV,OAAO,CAAClC,CAAC,GAAC,GAAG,EAAEkC,OAAO,CAAC9B,CAAC,GAAC,GAAG,CAAC;IACtE,IAAIiC,SAAqB,GAAGJ,CAAC,CAACzF,MAAM;IACpC,IAAI8F,aAAyB,GAAGD,SAAS,CAACE,GAAG,CAACV,YAAY,CAACW,QAAQ,CAACN,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;IACzF,IAAIO,eAA2B,GAAGJ,SAAS,CAACE,GAAG,CAACV,YAAY,CAACW,QAAQ,CAACJ,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;IAC3F,IAAIM,SAAqB,GAAGL,SAAS,CAACE,GAAG,CAAED,aAAa,CAACK,QAAQ,CAACF,eAAe,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;IAC/FzV,WAAW,CAAC,MAAI;MACZiV,CAAC,CAACzF,MAAM,GAAGkG,SAAS;MACpBT,CAAC,CAACE,IAAI,GAAGC,OAAO;IACpB,CAAC,CAAC;IACFxR,CAAC,CAAC8O,eAAe,CAAC,CAAC;EACvB;EACA1E,WAAWA,CAACpK,CAAmB,EAAQ;IACnC;EAAA;EAEJiK,SAASA,CAACjK,CAAmB,EAAwC;IAAA,IAAtCgS,aAAsB,GAAA5N,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAG,KAAK;IACzDpE,CAAC,CAAC8O,eAAe,CAAC,CAAC;IACnB1S,WAAW,CAAC,MAAI;MACZ;MACA,IAAIiF,qBAAqB,CAACgP,kBAAkB,KAAK,IAAI,EAAE;QAAE;MAAQ;MACjE,IAAI,CAAC2B,aAAa,EAAE,IAAI,CAACC,SAAS,CAACjS,CAAC,CAAC;IACzC,CAAC,CAAC;EACN;EACAkK,SAASA,CAAClK,CAAsB,EAAC;IAC7B,IAAIA,CAAC,CAAC8G,GAAG,KAAKlJ,UAAU,CAACsU,MAAM,EAAE;MAC7B,IAAI,CAACxS,KAAK,CAACG,IAAI,CAACsS,QAAQ,CAAC,CAAC;MAC1B,IAAI,IAAI,CAACzS,KAAK,CAACkQ,aAAa,EAAE;QAC1B;QACA;MACJ;IACJ;IACA,IAAI5P,CAAC,CAACoS,OAAO,IAAIpS,CAAC,CAACqS,MAAM,EAAE;MAAA,IAAAC,iBAAA,EAAAC,iBAAA;MACvB;MACA,IAAIvS,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAwL,iBAAA,OAAI,CAAC5S,KAAK,CAACE,IAAI,cAAA0S,iBAAA,uBAAfA,iBAAA,CAAiBE,SAAS,CAAC,CAAC,CAAC,KAChD,IAAIxS,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAyL,iBAAA,OAAI,CAAC7S,KAAK,CAACE,IAAI,cAAA2S,iBAAA,uBAAfA,iBAAA,CAAiBE,MAAM,CAAC,CAAC;IAChD;IACA,IAAIzS,CAAC,CAACqS,MAAM,EAAE;MAAA,IAAAK,iBAAA,EAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;MACV;MACA,IAAInT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAA4L,iBAAA,OAAI,CAAChT,KAAK,CAACE,IAAI,cAAA8S,iBAAA,uBAAfA,iBAAA,CAAiBU,QAAQ,CAAC,MAAM,CAAC,CAAC;QAAM;QAC3D,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAA6L,iBAAA,OAAI,CAACjT,KAAK,CAACE,IAAI,cAAA+S,iBAAA,uBAAfA,iBAAA,CAAiBS,QAAQ,CAAC,WAAW,CAAC,CAAC,KAC1D,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,EAAA8L,kBAAA,OAAI,CAAClT,KAAK,CAACE,IAAI,cAAAgT,kBAAA,uBAAfA,kBAAA,CAAiBQ,QAAQ,CAAC,WAAW,CAAC,OAAAP,kBAAA,GAAI,IAAI,CAACnT,KAAK,CAACE,IAAI,cAAAiT,kBAAA,uBAAfA,kBAAA,CAAiBO,QAAQ,CAAC,QAAQ,CAAC,EAAC,KACjG,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAgM,kBAAA,OAAI,CAACpT,KAAK,CAACE,IAAI,cAAAkT,kBAAA,uBAAfA,kBAAA,CAAiBM,QAAQ,CAAC,SAAS,CAAC,CAAC,KACxD,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,EAAAiM,kBAAA,OAAI,CAACrT,KAAK,CAACE,IAAI,cAAAmT,kBAAA,uBAAfA,kBAAA,CAAiBK,QAAQ,CAAC,SAAS,CAAC,OAAAJ,kBAAA,GAAI,IAAI,CAACtT,KAAK,CAACE,IAAI,cAAAoT,kBAAA,uBAAfA,kBAAA,CAAiBI,QAAQ,CAAC,WAAW,CAAC,EAAC,KAClG,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAmM,kBAAA,OAAI,CAACvT,KAAK,CAACE,IAAI,cAAAqT,kBAAA,uBAAfA,kBAAA,CAAiBG,QAAQ,CAAC,OAAO,CAAC,CAAC,KACtD,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAoM,kBAAA,OAAI,CAACxT,KAAK,CAACE,IAAI,cAAAsT,kBAAA,uBAAfA,kBAAA,CAAiBE,QAAQ,CAAC,YAAY,CAAC,CAAC,KAC3D,IAAIpT,CAAC,CAAC8G,GAAG,KAAK,GAAG,EAAE,CAAAqM,kBAAA,OAAI,CAACzT,KAAK,CAACE,IAAI,cAAAuT,kBAAA,uBAAfA,kBAAA,CAAiBC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAC3D;IACJ;EACJ;EAEQnB,SAASA,CAACjS,CAAmB,EAAQ;IAAA,IAAAqT,mBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,oBAAA;IACzC;IACA5T,CAAC,CAAC8O,eAAe,CAAC,CAAC;IACnB,IAAIjQ,KAAa,GAAGrC,KAAK,CAAC0S,QAAQ,CAAC,CAAC;IACpC,IAAIlP,CAAC,CAACsQ,MAAM,KAAK1S,UAAU,CAAC2S,UAAU,MAAA8C,mBAAA,GAAIxU,KAAK,CAACsQ,WAAW,cAAAkE,mBAAA,uBAAjBA,mBAAA,CAAmB9D,OAAO,GAAErR,kBAAkB,CAACwG,GAAG,CAAC,aAAa,EAAE;MAAC6K,OAAO,EAAE,KAAK;MAAEH,CAAC,EAAE,CAAC;MAAEI,CAAC,EAAE;IAAC,CAAC,CAAC,CAAC,CAAC;IAC3I,MAAMqE,iBAAiB,IAAAP,sBAAA,GAAG,IAAI,CAAC5T,KAAK,CAACkQ,aAAa,cAAA0D,sBAAA,uBAAxBA,sBAAA,CAA0BzD,MAAM;IAC1DrH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAACxF,IAAI,GAAAsQ,kBAAA,GAAE,IAAI,CAAC7T,KAAK,CAACE,IAAI,cAAA2T,kBAAA,uBAAfA,kBAAA,CAAiBtQ,IAAI;MAAE6Q,UAAU,EAAE,IAAI,CAACpU,KAAK,CAACG,IAAI,CAACiU,UAAU,CAAC,CAAC;MAAE,wBAAwB,GAAAN,iBAAA,GAAE,IAAI,CAAC9T,KAAK,CAACG,IAAI,cAAA2T,iBAAA,uBAAfA,iBAAA,CAAiBM,UAAU;MAAEC,iBAAiB,GAAAN,iBAAA,GAAC,IAAI,CAAC/T,KAAK,CAACG,IAAI,cAAA4T,iBAAA,uBAAfA,iBAAA,CAAiBvU,KAAK,CAAC4U;IAAU,CAAC,CAAC;IAEjO,IAAID,iBAAiB,EAAE;MAAA,IAAAG,kBAAA;MACnB,IAAI,EAAAA,kBAAA,OAAI,CAACtU,KAAK,CAACE,IAAI,cAAAoU,kBAAA,uBAAfA,kBAAA,CAAiBrN,SAAS,MAAK,QAAQ,EAAE;MAC7C;MACA,MAAMmJ,WAA8D,GAAG;QAACvI,MAAM,EAAE,EAAE;QAAEwI,qBAAqB,EAAE;MAAE,CAAC;MAC9G,MAAMC,WAAW,GAAG,IAAI,CAACtQ,KAAK,CAACE,IAAI,IAAIiU,iBAAiB,CAAC5D,SAAS,CAAC,IAAI,CAACvQ,KAAK,CAACE,IAAI,EAAmBkQ,WAAW,CAAC;MACjH,IAAIE,WAAW,IAAI,IAAI,CAACtQ,KAAK,CAACE,IAAI,EAAE;QAChC,MAAMqU,MAAc,GAAGnW,kBAAkB,CAACqD,IAAI,CAAC,IAAI,CAACzB,KAAK,CAACE,IAAI,CAACR,EAAE,CAAC;QAClE;QACA;QACAnB,cAAc,CAACyG,GAAG,CAACuP,MAAM,CAAC7U,EAAE,EAAE,YAAY,EAAEyU,iBAAiB,CAACzU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;QAC7EnB,cAAc,CAACyG,GAAG,CAACmP,iBAAiB,CAACzU,EAAE,EAAE,SAAS,EAAE6U,MAAM,CAAC7U,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;MAC9E;MACAlB,kBAAkB,CAACwG,GAAG,CAAC,eAAe,EAAE;QAAEwP,IAAI,EAAE,EAAE;QAAGrE,MAAM,EAAE;MAAG,CAAC,CAAC;MAClE;IACJ;IACArH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MAACqL,UAAU,EAAE,IAAI,CAACpU,KAAK,CAACG,IAAI,CAACiU,UAAU,CAAC,CAAC;MAAE,wBAAwB,GAAAJ,iBAAA,GAAE,IAAI,CAAChU,KAAK,CAACG,IAAI,cAAA6T,iBAAA,uBAAfA,iBAAA,CAAiBI,UAAU;MAAEC,iBAAiB,GAAAJ,iBAAA,GAAC,IAAI,CAACjU,KAAK,CAACG,IAAI,cAAA8T,iBAAA,uBAAfA,iBAAA,CAAiBzU,KAAK,CAAC4U;IAAU,CAAC,CAAC;IAChMrX,KAAK,CAAC,CAAC;IACP4B,OAAO,CAACwB,IAAI,GAAG,IAAI,CAACH,KAAK,CAACG,IAAI;IAC9B,IAAI,CAACH,KAAK,CAACG,IAAI,CAACsU,cAAc,CAAC9W,KAAK,CAAC2R,OAAO,CAAC;IAC7C,IAAI,EAAA4E,oBAAA,GAAA/U,KAAK,CAACuV,aAAa,cAAAR,oBAAA,uBAAnBA,oBAAA,CAAqB/T,IAAI,MAAK,IAAI,CAACH,KAAK,CAACW,MAAM,EAAE;MAAA,IAAAgU,kBAAA;MACjDnW,kBAAkB,CAACwG,GAAG,CAAC,eAAe,EAAE;QACpC7E,IAAI,EAAE,IAAI,CAACH,KAAK,CAACW,MAAM;QACvBpB,IAAI,EAAE,IAAI,CAACS,KAAK,CAACT,IAAI,CAACG,EAAE;QACxBgH,YAAY,GAAAiO,kBAAA,GAAE,IAAI,CAAC3U,KAAK,CAACE,IAAI,cAAAyU,kBAAA,uBAAfA,kBAAA,CAAiBjV;MACnC,CAAC,CAAC;IACN;IAEA,IAAIY,CAAC,CAACsU,QAAQ,IAAItU,CAAC,CAACoS,OAAO,EAAE,CAAE,CAAC,MAC3B;MAAA,IAAAmC,iBAAA;MACD,IAAIC,QAAqC,IAAAD,iBAAA,GAAG,IAAI,CAAC7U,KAAK,CAACG,IAAI,cAAA0U,iBAAA,uBAAfA,iBAAA,CAAiB9P,KAAK,CAACgQ,WAAW;MAC9E,IAAIzT,GAAG,GAAG,IAAI,CAACtB,KAAK,CAACG,IAAI,CAACT,EAAE;MAC5B,IAAIoV,QAAQ,EAAE,KAAK,IAAI3U,IAAI,IAAI2U,QAAQ,EAAE,IAAI3U,IAAI,CAACT,EAAE,KAAK4B,GAAG,EAAEnB,IAAI,CAACsS,QAAQ,CAAC9U,KAAK,CAAC2R,OAAO,CAAC;IAC9F;IACAxR,GAAG,CAAC,CAAC;EACT;EAEAmM,OAAOA,CAAC3J,CAAmB,EAAQ,CAEnC;EAEA0U,sBAAsBA,CAACzV,IAAkB,EAAEE,GAA0B,EAAEwV,KAAa,EAAO;IACvF,IAAIA,KAAK,GAAG,CAAC,EAAE;MAAE,IAAI,CAACxM,iBAAiB,CAAC5K,iBAAiB,CAACqX,YAAY,EAAEzV,GAAG,CAAC;MAAE;IAAQ;IACtF;IACA;;IAEA;IACA,IAAI,CAAC,IAAI,CAACkK,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,KAAK,IAAI,CAAC3J,KAAK,CAACT,IAAI,CAACyI,aAAa,EAAE;MACnF,IAAI,CAAC2B,gBAAgB,GAAG7J,SAAS;MACjC,IAAI,IAAI,CAACE,KAAK,CAACE,IAAI,IAAK,IAAI,CAAC0J,oBAAoB,KAAK,IAAI,CAAC5J,KAAK,CAACE,IAAI,CAAC8H,aAAc,IAAI,IAAI,CAACS,iBAAiB,CAAC5K,iBAAiB,CAACqX,YAAY,EAAEzV,GAAG,CAAC,EAAE;QAAA,IAAA0V,qBAAA;QACjJ,IAAI,CAACvL,oBAAoB,GAAG,IAAI,CAAC5J,KAAK,CAACE,IAAI,CAAC8H,aAAa;QACzD,IAAIoN,UAAU,GAAG;UAACC,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC;QAAC,CAAC;QAChC,IAAI,CAAC7L,mBAAmB,CAAC9F,IAAI,CAACwR,UAAU,CAAC;QACzC,IAAIA,UAAU,CAACC,CAAC,KAAAF,qBAAA,GAAG,IAAI,CAACzL,mBAAmB,CAAC,IAAI,CAACA,mBAAmB,CAAC/E,MAAM,GAAG,EAAE,CAAC,cAAAwQ,qBAAA,uBAA9DA,qBAAA,CAAgEE,CAAC,IAAG,GAAG,EAAE;UAAA,IAAAG,sBAAA;UACxF;UACA,IAAI,CAAC7L,gBAAgB,GAAG,IAAI,CAAC3J,KAAK,CAACT,IAAI,CAACyI,aAAa;UACrD7J,GAAG,CAAC6P,KAAK,CAAC,gHAAgH,EAAC;YACvHyH,UAAU,EAAE,IAAI,CAAC/L,mBAAmB;YACpCzK,SAAS,EAAE,IAAI;YACfyW,QAAQ,EAAGN,UAAU,CAACC,CAAC,KAAAG,sBAAA,GAAG,IAAI,CAAC9L,mBAAmB,CAAC,IAAI,CAACA,mBAAmB,CAAC/E,MAAM,GAAG,EAAE,CAAC,cAAA6Q,sBAAA,uBAA9DA,sBAAA,CAAgEH,CAAC;UAC/F,CAAQ,CAAC;QACb;MACJ;IACR;EACA;;EAGA;EACAM,mBAAmBA,CAAC3V,KAAwB,EAAW;IAAA,IAAA4V,UAAA,EAAAC,gBAAA;IACnD,IAAIzU,GAAG,GAAG,KAAK;IACf,IAAI0B,EAAE,GAAGlE,mBAAmB,CAACuB,IAAI,CAACH,KAAK,CAACW,MAAM,CAAC;IAC/C,IAAImV,GAAiB;IACrB,IAAI,CAAC9V,KAAK,CAACG,IAAI,EAAE,OAAO,KAAK;IAC7B,IAAIiE,KAAK,GAAGpE,KAAK,CAACG,IAAI,CAACX,KAAK;IAC5B;IACA;IACA;IACA;IACA,IAAIQ,KAAK,CAAC8F,KAAK,EAAE;MAAEhD,EAAE,CAAC+C,YAAY,GAAG7F,KAAK,CAAC8F,KAAK;IAAE;IAClD,IAAI9F,KAAK,CAAC6F,YAAY,EAAE;MAAE/C,EAAE,CAAC+C,YAAY,GAAG7F,KAAK,CAAC6F,YAAY;IAAE;IAChE,IAAI7F,KAAK,CAAC+F,MAAM,EAAE;MAAEjD,EAAE,CAACiD,MAAM,GAAG/F,KAAK,CAAC+F,MAAM;IAAE;IAC9C,IAAI/F,KAAK,CAACoG,WAAW,IAAIpG,KAAK,CAAC+V,MAAM,EAAE;MAAG/V,KAAK,CAACG,IAAI,CAAWiG,WAAW,GAAGpG,KAAK,CAACoG,WAAW;IAAE;IAChG,IAAIpG,KAAK,CAACqG,SAAS,IAAIrG,KAAK,CAAC+V,MAAM,EAAE;MAAG/V,KAAK,CAACG,IAAI,CAAWkG,SAAS,GAAGrG,KAAK,CAACqG,SAAS;IAAE;IAC1F,IAAIrG,KAAK,CAACwF,KAAK,IAAIxF,KAAK,CAAC+V,MAAM,EAAE;MAC7BD,GAAG,GAAGrZ,QAAQ,CAACgF,IAAI,CAACzB,KAAK,CAACwF,KAAK,CAAC;MAChC,IAAIpB,KAAK,CAAC1E,EAAE,KAAKoW,GAAG,EAAG9V,KAAK,CAACG,IAAI,CAAWqF,KAAK,GAAGsQ,GAAU;IAClE;IACAhN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE/I,KAAK,EAAEA,KAAK,CAAC0F,GAAG,GAAAkQ,UAAA,GAAE5V,KAAK,CAAC0F,GAAG,cAAAkQ,UAAA,wBAAAC,gBAAA,GAATD,UAAA,CAAWI,KAAK,cAAAH,gBAAA,uBAAhBA,gBAAA,CAAkBtS,IAAI,CAAC;IACvE,IAAIvD,KAAK,CAAC0F,GAAG,IAAI1F,KAAK,CAAC+V,MAAM,EAAE;MAC3BD,GAAG,GAAGrZ,QAAQ,CAACgF,IAAI,CAACzB,KAAK,CAAC0F,GAAG,CAAC;MAC9B,IAAItB,KAAK,CAAC1E,EAAE,KAAKoW,GAAG,EAAG9V,KAAK,CAACG,IAAI,CAAWuF,GAAG,GAAGoQ,GAAU;IAChE;IACA,IAAI9V,KAAK,CAACqG,SAAS,EAAE;MAAEvD,EAAE,CAACiD,MAAM,GAAG/F,KAAK,CAAC+F,MAAM;IAAE;IACjD;IACA,IAAI,OAAO/F,KAAK,CAAC0P,CAAC,KAAK,QAAQ,EAAE;MAAE,IAAIuG,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAACuP,CAAC;MAAE,IAAIwG,CAAC,GAAG,CAAClW,KAAK,CAAC0P,CAAC;MAAE,IAAIuG,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAACuP,CAAC,GAAGwG,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IAC7H,IAAI,OAAOpB,KAAK,CAAC8P,CAAC,KAAK,QAAQ,EAAE;MAAE,IAAImG,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAAC2P,CAAC;MAAE,IAAIoG,CAAC,GAAG,CAAClW,KAAK,CAAC8P,CAAC;MAAE,IAAImG,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAAC2P,CAAC,GAAGoG,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IAC7H;IACA,IAAI,OAAOpB,KAAK,CAACsD,CAAC,KAAK,QAAQ,EAAE;MAAE,IAAI2S,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAACmD,CAAC;MAAE,IAAI4S,CAAC,GAAG,CAAClW,KAAK,CAACsD,CAAC;MAAE,IAAI2S,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAACmD,CAAC,GAAG4S,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IAC7H,IAAI,OAAOpB,KAAK,CAACmW,CAAC,KAAK,QAAQ,EAAE;MAAE,IAAIF,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAACgW,CAAC;MAAE,IAAID,CAAC,GAAG,CAAClW,KAAK,CAACmW,CAAC;MAAE,IAAIF,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAACgW,CAAC,GAAGD,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IAC7H,IAAI,OAAOpB,KAAK,CAACoW,KAAK,KAAM,QAAQ,EAAE;MAAE,IAAIH,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAACmD,CAAC;MAAE,IAAI4S,CAAC,GAAG,CAAClW,KAAK,CAACoW,KAAK;MAAG,IAAIH,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAACmD,CAAC,GAAG4S,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IACvI,IAAI,OAAOpB,KAAK,CAACqW,MAAM,KAAK,QAAQ,EAAE;MAAE,IAAIJ,GAAG,GAAGjW,KAAK,CAACG,IAAI,CAACgW,CAAC;MAAE,IAAID,CAAC,GAAG,CAAClW,KAAK,CAACqW,MAAM;MAAE,IAAIJ,GAAG,KAAKC,CAAC,EAAE;QAAElW,KAAK,CAACG,IAAI,CAACgW,CAAC,GAAGD,CAAC;QAAE9U,GAAG,GAAG,IAAI;MAAC;IAAE;IAIvI,OAAOA,GAAG;EACd;EAEOkV,MAAMA,CAAA,EAA8F;IAAA,IAAAC,kBAAA;IAAA,IAA7FC,QAAe,GAAA9R,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAG,EAAE;IAAA,IAAE+R,aAAiC,GAAA/R,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAC,CAAC,CAAC;IAAA,IAAEmG,OAAiB,GAAAnG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAC,EAAE;IAC1F/C,qBAAqB,CAACqC,GAAG,CAAC,IAAI,CAAChE,KAAK,CAACW,MAAM,CAA2B,GAAG,IAAI,CAAC,CAAC;IAC/E,IAAIzD,KAAK,CAAC6J,SAAS,KAAK,CAAC,IAAI,CAAC/G,KAAK,CAACE,IAAI,IAAI,CAAEe,wBAAwB,CAAC+F,QAAQ,CAAC,IAAI,CAAChH,KAAK,CAACE,IAAI,CAAC+G,SAAS,CAAE,CAAC,EAAC;MACzG,OAAO,IAAI,CAACjH,KAAK,CAACE,IAAI,gBAAGnB,OAAA;QAAAwO,QAAA,GAAM,GAAG,GAAK,IAAI,CAACvN,KAAK,CAACE,IAAI,CAASqD,IAAK,EAAC,GAAC,EAAC,IAAI,CAACvD,KAAK,CAACE,IAAI,CAAC+G,SAAS;MAAA;QAAAuG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG7N,SAAS;IACvH;IACA,IAAI,CAAC,IAAI,CAACE,KAAK,CAACG,IAAI,EAAE,OAAO,YAAY;IACzC;AACR;AACA;AACA;IACQ,IAAI,IAAI,CAACwV,mBAAmB,CAAC,IAAI,CAAC3V,KAAqB,CAAC,EAAE,OAAO,aAAa;IAC9E,IAAIsB,GAAG,GAAG,IAAI,CAACtB,KAAK,CAACW,MAAM;IAC3B,IAAI+V,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC1W,KAAK,CAAC4C,KAAK,EAAE,IAAI,CAAC5C,KAAK,CAACT,IAAI,CAAC,CAAC,CAAC;;IAGvD,KAAK,IAAIoX,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAGD,QAAQ,CAAC/R,MAAM,EAAEgS,CAAC,EAAE,EAAC;MACtC,IAAIhT,CAAC,GAAG+S,QAAQ,CAACC,CAAC,CAAC;MACnB,MAAMlX,GAAG,GAAGkE,CAAC,CAACjE,EAAE;MAChB,IAAIkX,aAAa,GAAGhY,mBAAmB,CAACuB,IAAI,CAACmB,GAAG,CAAC,CAACV,UAAU,CAAC+C,CAAC,CAACjE,EAAE,CAAC;MAClE,IAAI,CAACkX,aAAa,CAACxO,YAAY,EAAE;MACjCwO,aAAa,CAAC5L,WAAW,GAAGlL,SAAgB,CAAC,CAAC;MAC9C;MACA,IAAI,CAACkV,sBAAsB,CAACrR,CAAC,EAAElE,GAAG,EAAEkX,CAAC,CAAC;IAC1C;;IAEA;IACA,IAAI,IAAI,CAAC3W,KAAK,CAACG,IAAI,EAAE;MACjB,IAAIiU,UAA+C,GAAG,IAAI,CAACpU,KAAK,CAACG,IAAI,CAACX,KAAK,CAAC4U,UAAU;MACtF,IAAIA,UAAU,CAACzW,KAAK,CAAC2R,OAAO,CAAC,EAAE;QAAE;QAC7BzE,OAAO,CAACjH,IAAI,CAAC,gBAAgB,CAAC;QAC9B,IAAIiT,MAAM,CAACC,IAAI,CAAC1C,UAAU,CAAC,CAACzP,MAAM,GAAG,CAAC,EAAEkG,OAAO,CAACjH,IAAI,CAAC,oBAAoB,CAAC;MAC9E,CAAC,MAAM,IAAIiT,MAAM,CAACC,IAAI,CAAC1C,UAAU,CAAC,CAACzP,MAAM,EAAEkG,OAAO,CAACjH,IAAI,CAAC,oBAAoB,CAAC;IACjF;IAEAiH,OAAO,CAACjH,IAAI,CAAC,EAAA2S,kBAAA,OAAI,CAACvW,KAAK,CAACE,IAAI,cAAAqW,kBAAA,uBAAfA,kBAAA,CAAiBtP,SAAS,KAAI,OAAO,CAAC;IACnDxI,CAAC,CAACsY,iBAAiB,CAAClM,OAAO,EAAE,IAAI,CAAC1L,KAAK,CAAC0L,OAAO,CAAC;IAChD,IAAImM,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjX,KAAK,CAACiH,SAAS,CAAC,EAAE;MAAExI,CAAC,CAACsY,iBAAiB,CAAClM,OAAO,EAAE,IAAI,CAAC7K,KAAK,CAACiH,SAAS,CAAC;IAAE,CAAC,MAC3F,IAAI,IAAI,CAACjH,KAAK,CAACiH,SAAS,EAAE;MAAE4D,OAAO,CAACjH,IAAI,CAAC,IAAI,CAAC5D,KAAK,CAACiH,SAAS,CAAC;IAAE;IACrE,IAAI+P,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjX,KAAK,CAACkX,KAAK,CAAC,EAAE;MAAEzY,CAAC,CAACsY,iBAAiB,CAAClM,OAAO,EAAE,IAAI,CAAC7K,KAAK,CAACkX,KAAK,CAAC;IAAE,CAAC,MACnF,IAAI,IAAI,CAAClX,KAAK,CAACkX,KAAK,EAAE;MAAErM,OAAO,CAACjH,IAAI,CAAC,IAAI,CAAC5D,KAAK,CAACkX,KAAK,CAAC;IAAE;IAC7D;;IAGA,IAAIlU,QAAsB,GAAG,IAAI,CAAChD,KAAK,CAACT,IAAI;IAC5C,IAAI4L,UAA0B,GAAG,IAAI,CAACnL,KAAK,CAAC4C,KAAK;IACjD,IAAIuU,oBAAkD,GAAG,EAAE,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;;IAEQ,IAAIhJ,SAAoB,GAAGrO,SAAgB;IAC3C,MAAMgD,EAAE,GAAGlE,mBAAmB,CAACuB,IAAI,CAACmB,GAAG,CAAC;IACxCwH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE;MAAC/F,QAAQ;MAAEmI,UAAU;MAAEtI,MAAM,EAACC,EAAE,CAAClC,UAAU;MAAEqK,GAAG,EAACnI,EAAE,CAAClC,UAAU,CAAC,IAAI,CAACZ,KAAK,CAACmE,MAAM,CAAC;MAAEiT,EAAE,EAACtU,EAAE,CAAClC,UAAU,CAAC,IAAI,CAACZ,KAAK,CAACmE,MAAM,CAAC,CAACtE;IAAiB,CAAC,CAAC;IAChK,KAAK,IAAI8D,CAAC,IAAI+S,QAAQ,EAAE;MAAE;MACtB,IAAIE,aAAa,GAAGhY,mBAAmB,CAACuB,IAAI,CAACmB,GAAG,CAAC,CAACV,UAAU,CAAC+C,CAAC,CAACjE,EAAE,CAAC;MAClEyO,SAAS,GAAGyI,aAAa,CAACxO,YAAY,GAAGtI,SAAS,GAAG8W,aAAa,CAACzI,SAAS;MAC5E,IAAIkJ,MAAwB,GAAG1T,CAAC,KAAKX,QAAQ,IAAIlD,SAAS;MAC1D,IAAI,CAACqO,SAAS,EAAEyI,aAAa,CAACzI,SAAS,GAAGA,SAAS,GAC/C,IAAI,CAACmJ,UAAU,CAAC,IAAI,CAACtX,KAAK,EAAE2D,CAAC,EAAE6S,QAAQ,EAAE3L,OAAO,EAAE4L,aAAa,EAC3DY,MAAM,IAAIF,oBAAoB,EAAEnU,QAAQ,CAACtD,EAAE,EAAE2X,MAAM,IAAIlM,UAAU,CAACnH,GAAG,CAACL,CAAC,IAAEA,CAAC,CAACjE,EAAE,CAAC,CAAC;MACvF,IAAI,CAAC2X,MAAM,EAAEF,oBAAoB,CAACvT,IAAI,CAACuK,SAAS,CAAC;MACjD,IAAIyI,aAAa,CAACxO,YAAY,EAAEwO,aAAa,CAACxO,YAAY,GAAG,KAAK,CAAC,CAAC;IACxE;IAEA,IAAImP,cAAyB,GAAGpJ,SAAS;IACzC,OAAOoJ,cAAc;IACrB;IACA;IACA;EACJ;EAGUD,UAAUA,CAACtX,KAAe,EAAE2D,CAAe,EAAE6S,QAAgB,EAAE3L,OAAiB,EAAE4L,aAAkC,EACzGtL,UAAyC,EAAEqM,UAAkC,EAAsE;IAAA,IAAAC,YAAA;IAAA,IAApEC,UAAmC,GAAAhT,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAG,EAAE;IACxI,IAAIiT,EAAE,GAAGhU,CAAC,CAACnE,KAAK;IAChB,MAAM8B,GAAG,GAAGtB,KAAK,CAACW,MAAM;IACxB,MAAMlB,GAAG,GAAGkE,CAAC,CAACjE,EAAE;IAChB,MAAMuL,GAAG,GAAGrM,mBAAmB,CAACuB,IAAI,CAACmB,GAAG,CAAC,CAACV,UAAU,CAACnB,GAAG,CAAC;IACzD,IAAI2X,EAAuB,GAAGnM,GAAG,CAACpL,iBAAiB;IACnD;AACR;AACA;AACA;;IAEQ,IAAI,CAACuX,EAAE,EAAEnM,GAAG,CAACpL,iBAAiB,GAAGuX,EAAE,GAAGpY,wBAAwB,CAAC,IAAI,EAAEgB,KAAK,EAAE,IAAI,CAACb,KAAK,EAAEwE,CAAC,CAAC;IAC1FmF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;MAAC4O,EAAE;MAAE1M,GAAG;MAAEmM;IAAE,CAAC,CAAC;IAExC,IAAIA,EAAE,CAAC5W,0BAA0B,EAAE;MAAA,IAAAoX,kBAAA,EAAAC,kBAAA;MAC/B/O,OAAO,CAACiE,KAAK,CAAC,sBAAsB,EAAE;QAAC4K,EAAE;QAAE1M,GAAG;QAAEmM;MAAE,CAAC,CAAC;MACpD,OAAOzV,qBAAqB,CAAC0J,YAAY,CAAC+L,EAAE,CAAC5W,0BAA0B,EAAE,oBAAoB,IAAI4W,EAAE,CAAC5W,0BAA0B,CAACD,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAAC,EAAEoD,CAAC,CAACnE,KAAK,GAAAoY,kBAAA,GACrK,IAAI,CAAC5X,KAAK,CAACE,IAAI,cAAA0X,kBAAA,uBAAfA,kBAAA,CAAiBpY,KAAK,GAAAqY,kBAAA,GAAE,IAAI,CAAC7X,KAAK,CAACG,IAAI,cAAA0X,kBAAA,uBAAfA,kBAAA,CAAiBrY,KAAK,EAAE,KAAK,EAAE;QAAC4X;MAAE,CAAC,CAAC;IACpE;IACA,IAAIU,UAAmB,GAAG,CAAC,CAAC3M,UAAU;IACtC,MAAMvC,OAAgB,GAAG,IAAI,CAACC,aAAa,CAACpJ,GAAG,CAAC;IAEhD,IAAIqY,UAAU,EAAElP,OAAO,CAACmP,UAAU,GAAG5M,UAAU;IAC/C,IAAI6M,KAAgB;IACpB,IAAI;MAAEA,KAAK,GAAG,IAAI,CAAC/J,YAAY,CAACxO,GAAG,EAAEkE,CAAC,EAAEiF,OAAO,CAAC;IAAE,CAAC,CACnD,OAAOtI,CAAM,EAAE;MAAA,IAAA2X,kBAAA,EAAAC,kBAAA;MACXpP,OAAO,CAACiE,KAAK,CAAC,gCAAgC,EAAE;QAACzM,CAAC;QAAEqX,EAAE;QAAE1M;MAAG,CAAC,CAAC;MAC7D;MACA;MACA+M,KAAK,GAAGrW,qBAAqB,CAAC0J,YAAY,CAAC/K,CAAC,EAAE,cAAc,EAAEqD,CAAC,CAACnE,KAAK,GAAAyY,kBAAA,GAAE,IAAI,CAACjY,KAAK,CAACE,IAAI,cAAA+X,kBAAA,uBAAfA,kBAAA,CAAiBzY,KAAK,GAAA0Y,kBAAA,GAAE,IAAI,CAAClY,KAAK,CAACG,IAAI,cAAA+X,kBAAA,uBAAfA,kBAAA,CAAiB1Y,KAAK,EAAE,KAAK,EAAE;QAACoJ;MAAO,CAAC,CAAC;IAC5I;IACA,IAAIuP,WAAgC,GAAGzZ,EAAE,CAAC0Z,kBAAkB,CAACJ,KAAK,CAAC;;IAGnE;;IAEA,SAASK,WAAWA,CAACC,GAAS,EAAE;MAAE,OAAOA,GAAG,GAAG,EAAE,GAAItB,KAAK,CAACC,OAAO,CAACqB,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAE;IAAE;IACxF,SAASC,WAAWA,CAACpY,IAAsB,EAAsB;MAC7D,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC6G,QAAQ,CAAC,OAAO7G,IAAI,CAAC,EAAE,OAAOA,IAAI;MAC3D,IAAIA,IAAI,YAAY6W,KAAK,EAAE,OAAO7W,IAAI,CAAC6D,GAAG,CAACuU,WAAW,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;MAChE,IAAI,OAAOrY,IAAI,KAAK,QAAQ,IAAIA,IAAI,EAAE,OAAOoY,WAAW,CAACpY,IAAI,CAACH,KAAK,CAACuN,QAAQ,CAAC;IACjF;IACA,MAAMkL,QAAiB,GAAG,IAAI;IAC9B,IAAIC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC1Y,KAAK,CAACG,IAAI;IACjC;IACA;IACA,IAAIsY,QAAQ,IAAIN,WAAW,IAAIO,SAAS,EAAE;MACtC,IAAI/Z,OAAO,CAACkC,UAAU,IAAIA,UAAU,EAAE,GAAClC,OAAO,CAACkC,UAAU,EAAE,MAAM,IAAI8X,KAAK,CAAC,sBAAsB,CAAC;MAClG,IAAIC,aAAa,GAAG,IAAI;MACxB;MACA,MAAMC,WAAqD,GAAG,CAAC,CAAC,CAAC,CAAC;MAClE,IAAI;QACA,IAAIC,SAAkB,GAAG;UAAC,IAAI,IAAI,CAAC9Y,KAAK,CAACoN,KAAK,IAAI,CAAC,CAAC;QAAC,CAAC;QACtD;AAChB;AACA;AACA;AACA;AACA;AACA;QACgB;QACA,IAAI2L,WAAoB,GAAG,CAAC,CAAC;QAC7B,IAAIjB,UAAU,EAAE;UAAA,IAAAkB,WAAA,EAAAC,YAAA,EAAAC,YAAA;UACZJ,SAAS,CAACK,KAAK,GAAGL,SAAS,CAAC5S,MAAM,IAAA8S,WAAA,GAAGhZ,KAAK,CAACG,IAAI,cAAA6Y,WAAA,uBAAVA,WAAA,CAAY9S,MAAM,CAAC,CAAC;UACzD4S,SAAS,CAACjJ,OAAO,GAAGlM,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEkM,OAAO;UAC9B,MAAMuJ,EAA6B,GAAGpZ,KAAK,CAACE,IAAI,CAAC,CAAC;UAClD,IAAIwB,YAAY,EAAE;YACdmJ,OAAO,CAACjH,IAAI,CAAC,IAAI,CAAClC,YAAY,GAAC,CAAC,GAAG,wBAAwB,GAAG,uBAAuB,CAAC;UAC1F,CAAC,CAAgB;UACjBmJ,OAAO,CAACjH,IAAI,CAAC,UAAU,EAAE+T,EAAE,CAACjY,EAAE,CAAC;UAC/BmL,OAAO,CAACjH,IAAI,CAAC,GAAG8T,UAAU,CAAC;UAC3BqB,WAAW,GAAG;YACVM,GAAG,EAAE,IAAI,CAAC7P,IAAI;YACd;YACA9J,EAAE,EAAEM,KAAK,CAACW,MAAM;YAChB,aAAa,EAAEX,KAAK,CAACW,MAAM;YAC3B,aAAa,EAAEyY,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAE1Z,EAAE;YACrB,aAAa,EAAEiY,EAAE,CAACjY,EAAE;YACpB,gBAAgB,EAAE,CAAA0Z,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEnS,SAAS,KAAI,YAAY;YAC/C,oBAAoB,EAAEqH,IAAI,CAACC,SAAS,CAAC,EAAA0K,YAAA,GAAAjZ,KAAK,CAACG,IAAI,cAAA8Y,YAAA,uBAAVA,YAAA,CAAY7E,UAAU,KAAI,CAAC,CAAC,CAAC;YAClE,eAAe,EAAEoC,QAAQ;YACzB;YACApJ,KAAK,EAAE;cAAC,GAAG0L,SAAS;cAAE,GAAGrC;YAAa,CAAC;YACvCxP,SAAS,EAAE4D,OAAO,CAAC2N,IAAI,CAAC,GAAG,CAAC;YAC5BvO,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBI,aAAa,EAAE,IAAI,CAACA,aAAa;YACjCC,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7BC,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBG,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7B4O,OAAO,EAAE,IAAI,CAAC7O,QAAQ;YACtB8O,YAAY,EAAE,IAAI,CAACpP,OAAO;YAC1BqP,YAAY,EAAE,IAAI,CAACtP,OAAO;YAC1BuP,QAAQ,EAAGzZ,KAAK,CAASyZ,QAAQ,IAAI,CAAC,CAAC;YACvC,mBAAmB,EAAE,IAAI,CAAC/X,YAAY,EAAE;YACxC,oBAAoB,EAAE,EAAAwX,YAAA,GAAAlZ,KAAK,CAACG,IAAI,cAAA+Y,YAAA,uBAAVA,YAAA,CAAYlR,aAAa,KAAI,CAAC;YACpD;UACJ,CAAC;UACD,IAAI8I,CAAU,GAAG,IAAI,CAAC9Q,KAAK;UAC3B,KAAK,IAAI0Z,CAAC,IAAI5I,CAAC,EAAE;YACb,IAAI,OAAOA,CAAC,CAAC4I,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO5I,CAAC,CAAC4I,CAAC,CAAC,KAAK,UAAU,EAAE;YAC5D,IAAI,CAACX,WAAW,CAACW,CAAC,CAAC,EAAEX,WAAW,CAACW,CAAC,CAAC,GAAG5I,CAAC,CAAC4I,CAAC,CAAC;UAC9C;QACJ,CAAC,MACIX,WAAW,GAAG;UAAC,aAAa,EAAEpV,CAAC,CAACjE,EAAE;UAAEuH,SAAS,EAAE,iBAAiB,GAAGtD,CAAC,CAACjE,EAAE;UAAE,eAAe,EAAE8X;QAAU,CAAC;QAG1G,IAAImC,KAAc,GAAG,CAAC,CAAC;QACvBZ,WAAW,CAACxL,QAAQ,GAAG7O,EAAE,CAACkb,YAAY,CAACzB,WAAW,sBAC9C,CAAC0B,EAAa,EAAE5E,KAAa,EAAE6E,YAAsB,KAAK;UACtD,IAAIC,YAAgC,GAAK,IAAI,CAAC/Z,KAAK,CAASgR,OAAO,IAAI,CAAC8I,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC7E,KAAK,IAAM,IAAI,CAACjV,KAAK,CAACG,IAAe;UACjI;UACA;UACA,OAAOzB,EAAE,CAACsb,UAAU,CAAC,IAAI,EAAEH,EAAE,EAAEhB,WAAW,EAAE,IAAI,CAAC7Y,KAAK,CAAC8E,YAAY,EAAYmQ,KAAK,EAAE6E,YAAY,EAAEC,YAAY,CAAC;QACrH,CAAC,CAAC;QACtB;AACA;AACA;AACA;AACA;;QAEgB,IAAI5O,UAAU,IAAI,KAAK,EAAE4N,WAAW,CAACxL,QAAQ,GAAG,CAAC,GAAGwL,WAAW,CAACxL,QAAQ,EAAE,GAAG8K,WAAW,CAACrY,KAAK,CAACuN,QAAQ,CAAC,EAAE,GAAIpC,UAAoB,CAAC;;QAEnI;QACA,IAAIoC,QAAQ,GAAG8K,WAAW,CAACU,WAAW,CAACxL,QAAQ,CAAC,CAAC,CAAC;QAClD;QACA4K,WAAW,gBAAG/b,KAAK,CAAC6d,YAAY,CAAC9B,WAAW,EAAEY,WAAW,CAAC,CAAC;;QAE3DY,KAAK,CAACO,wBAAwB,GAAG;UAAC/Z,IAAI,EAACgY,WAAW;UAAEgC,IAAI,EAAE5B,WAAW,CAACJ,WAAW;QAAC,CAAC;QACnF;QACA;QACAS,aAAa,GAAG,KAAK,CAAC,CAAC;QACvB,IAAIA,aAAa,EAAET,WAAW,GAAGA,WAAW,CAACnY,KAAK,CAACuN,QAAQ;QAC3D;QACA;MACJ,CAAC,CAAC,OAAOjN,CAAM,EAAE;QAAA,IAAA8Z,WAAA,EAAAC,YAAA;QACbvR,OAAO,CAACiE,KAAK,CAAC,gCAAgC,EAAE;UAACzM,CAAC;UAAEqX,EAAE;UAAE1M;QAAG,CAAC,CAAC;QAC7DkN,WAAW,GAAGva,EAAE,CAACkQ,SAAS,CAAC,4CAA4C,GAAG,CAACxN,CAAC,CAAC2I,OAAO,IAAI,EAAE,EAAEyC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtG;UAACpL,CAAC;UAAE6X,WAAW;UAAE/Q,GAAG,EAAEpH,KAAK,CAACoH,GAAG;UAAEkT,KAAK,EAAEta,KAAK,CAACW;QAAM,CAAC,EACrD,kBAAkB,GAAAyZ,WAAA,GAAEpa,KAAK,CAACE,IAAI,cAAAka,WAAA,uBAAVA,WAAA,CAAY5a,KAAK,GAAA6a,YAAA,GAAEra,KAAK,CAACG,IAAI,cAAAka,YAAA,uBAAVA,YAAA,CAAY7a,KAAK,EAAEmY,EAAE,CAAiB;QACjF;AAChB;AACA;AACA;AACA;;QAEgB;MACJ;MACA;AACZ;AACA;AACA;AACA;AACA;IACQ;IACA;IACA;;IAEA;IACA,IAAI,KAAK,IAAIA,EAAE,CAAC4C,eAAe,IAAI,EAAA9C,YAAA,GAACzX,KAAK,CAACG,IAAI,cAAAsX,YAAA,uBAAVA,YAAA,CAAYjY,KAAK,EAAmBgb,MAAM,EAAE;MAC5E,IAAIC,YAAY,GAAGC,CAAC,CAAC,GAAG,GAAG1a,KAAK,CAACG,IAAI,CAACX,KAAK,CAACgb,MAAM,CAAC;MACnD,IAAIG,kBAAkB,GAAGF,YAAY,CAACG,IAAI,CAAC,kBAAkB,CAAC;MAC9D,MAAMC,QAAQ,GAAGF,kBAAkB,CAAC,CAAC,CAAC,IAAIF,YAAY,CAAC,CAAC,CAAC;MACzDtc,GAAG,CAAC+I,KAAK,CAAC,CAAC2T,QAAQ,EAAE,iCAAiC,EAAE;QAACJ,YAAY;QAAEE;MAAkB,CAAC,CAAC;MAC3F,IAAIE,QAAQ,EAAE,oBAAOve,YAAY,CAAC6b,WAAW,IAAIH,KAAK,EAAE6C,QAAQ,CAAC;IACrE,CAAC;AACT;AACA;AACA;AACA;;IAEQ/R,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEoP,WAAW,IAAIH,KAAK,CAAC;IACvD,OAAOG,WAAW,IAAIH,KAAK;EAC/B;AAEJ,CAAC,EAAAlW,OAAA,CAr+BiBZ,KAAK,WAAAY,OAAA,CACZgI,GAAG,GAA8C,CAAC,CAAC,EAAAhI,OAAA,CAC5CkC,GAAG,GAA8D,CAAC,CAAC,EAAAlC,OAAA,CAC1EgZ,YAAY,GAAkC/c,oBAAoB,CAACiH,GAAG,CAAC,CAAC,EAAAlD,OAAA,CACxE+H,KAAK,GAAW,CAAC,EAAA/H,OAAA,CAgjBjB6O,kBAAkB,WAAA7O,OAAA,MAAAD,MAAA;;AAmb7B;AACA;;AAGA,MAAMkZ,qBAAqB,GAAGxe,OAAO,CACjCoF,qBAAqB,CAACiF,eAAe,EACrCjF,qBAAqB,CAAC4F,kBAC1B,CAAC,CAAC5F,qBAA4B,CAAC;AAE/B,OAAO,MAAMqZ,YAAY,GAAG,SAAAA,CAAChb,KAA2B,EAAgE;EAAA,IAA9DuN,QAAsC,GAAA7I,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA5E,SAAA,GAAA4E,SAAA,MAAG,EAAE;EACjG,oBAAO3F,OAAA,CAACgc,qBAAqB;IAAM,GAAG/a,KAAK;IAAEuN;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAsN,KAAI,CAAC;AAAE,CAAC;AACjE;AAAAC,EAAA,GAFaF,YAAY;AAKzBrZ,qBAAqB,CAACT,KAAK,GAAG,uBAAuB;AACrD6Z,qBAAqB,CAAC7Z,KAAK,GAAG,uBAAuB;AACrD8Z,YAAY,CAAC9Z,KAAK,GAAG,cAAc;AAAC,IAAAga,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}