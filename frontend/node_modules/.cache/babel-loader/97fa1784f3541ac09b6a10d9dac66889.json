{"ast":null,"code":"import _regeneratorRuntime from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var _dec,_class,_class2;// npm i react-json-view\nimport React from\"react\";import withReactContent from\"sweetalert2-react-content\";import Swal from\"sweetalert2\";import{U,Log,GraphElementComponent,windoww,RuntimeAccessible,EdgeComponent,transientProperties,JSXT}from\"../joiner\";// U-functions that require jsx\nexport var UX=(_dec=RuntimeAccessible('UX'),_dec(_class=(_class2=/*#__PURE__*/function(){function UX(){_classCallCheck(this,UX);}_createClass(UX,null,[{key:\"recursiveMap\",value:function recursiveMap(children,fn){var depthIndices=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];// NB: depthIndices is correct but if there is an expression children evaluated to false like {false && <jsx>},\n// it counts as children iterated regardless. so html indices might be apparently off, but like this is even safer as indices won't change when conditions are changed.\nvar innermap=function innermap(child,i1,depthIndices){if(!/*#__PURE__*/React.isValidElement(child)){if(Array.isArray(child))return React.Children.map(child,function(c,i3){return innermap(c,i3,[].concat(_toConsumableArray(depthIndices),[i3]));});if(child&&typeof child===\"object\"){var _child;if(!windoww.invalidObjsReact)windoww.invalidObjsReact=[];windoww.invalidObjsReact.push(child);return\"<! Objects cannot be rendered in jsx : \"+((_child=child)===null||_child===void 0?void 0:_child.name)+\">\";}return child;}if(child.props.children){// let deeperDepthIndices = [...depthIndices, i1];  // depthIndices; //\n// should probably change deeperDepthIndices in [...deeperDepthIndices, i] in next uncommented line.\n// Giordano: add ignore for webpack\n//@ts-ignore\nchild=/*#__PURE__*/React.cloneElement(child,{children:UX.recursiveMap(child.props.children,function(e,i2,ii){return fn(e,i2,ii);},depthIndices)});// this can be optimized, and i think i can avoid cloning here, as the nodes are already cloned in \"fn\" = ux.injectprops\n}return fn(child,i1,depthIndices);};if(!Array.isArray(children))return innermap(children,0,[].concat(_toConsumableArray(depthIndices),[0]));// if (typeof children[0] === \"object\") return (children).map( (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as any as T;\nreturn React.Children.map(children,function(c,i3){return innermap(c,i3,[].concat(_toConsumableArray(depthIndices),[i3]));});}},{key:\"injectProp\",value:function injectProp(parentComponent,e,gvidmap_useless,parentnodeid,index,indices,injectOffset){var _WrappedComponent,_parentComponent$prop,_parentComponent$prop2,_parentComponent$prop3,_parentComponent$prop4,_re$props$data,_re$props$initialSize,_re$props$startingSiz,_WrappedComponent2;var re=UX.ReactNodeAsElement(e);// injectOffset&&console.log(\"inject offset props 1:\", {e, re, injectOffset});\nif(!re)return e;// @ts-ignore this\n// const parentComponent = this;\nvar type=((_WrappedComponent=re.type.WrappedComponent)===null||_WrappedComponent===void 0?void 0:_WrappedComponent.name)||re.type;var injectProps={};if(injectOffset){var _re$props;var style=_objectSpread({},((_re$props=re.props)===null||_re$props===void 0?void 0:_re$props.style)||{});var offset=injectOffset.offset;var scale=injectOffset.zoom;style.position=\"absolute\";style.left=offset.x;style.top=offset.y;style.transform=\"scale(\"+scale.x+\",\"+scale.y+\")\";injectProps={style:style};var oldre=re;console.log(\"inject offset props 2:\",{oldre:oldre,re:re,injectProps:injectProps});re=/*#__PURE__*/React.cloneElement(re,injectProps);}//  fix the injection somehow. override Edge() Vertex() Asterisk() ...\n// const windoww = window as any;\n// console.log('ux.injectingProp pre ', {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\n// add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\nswitch(type){default:// console.count('ux.injectingProp case default: ' + type);\nif(indices.length<=2&&(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop=parentComponent.props)===null||_parentComponent$prop===void 0?void 0:_parentComponent$prop.childStyle)){// if first non-component child of a GraphElement with a clipPath shape, i assign clip path to it.\nconsole.log('injecting to first child (A):',{re:re,indices:indices,il:indices.length,pc:parentComponent,injectProps:injectProps,cs:parentComponent.props.childStyle});var istyle=injectProps.style=_objectSpread({},injectProps.style||{});injectProps.style=injectProps.style?_objectSpread({},injectProps.style):{};U.objectMergeInPlace(injectProps.style,parentComponent.props.childStyle);}else return re;break;/*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: re.props.key || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/ // case windoww.Components.GraphElement.name:\ncase windoww.Components.Input.cname+\"Component\":case windoww.Components.Select.cname+\"Component\":case windoww.Components.TextArea.cname+\"Component\":// todo: can i do a injector that if the user provides a ModelElement list raw <div>{this.children}</div> it wraps them in DefaultNode?\nvar injectProps2={};var _parentnodeid=(_parentComponent$prop2=parentComponent.props.node)===null||_parentComponent$prop2===void 0?void 0:_parentComponent$prop2.id;injectProps2.data=re.props.data||(typeof parentComponent.props.data===\"string\"?parentComponent.props.data:(_parentComponent$prop3=parentComponent.props.data)===null||_parentComponent$prop3===void 0?void 0:_parentComponent$prop3.id);// !IMPORTANT! this key does not remove the responsability of adding keys to <GraphElement>s. this is assigning the key to the first returned element by component A,\n// but react needs to distinguish component A from other components, and he still doesn't have a key. in fact this is useless as this component can only have 1 child\ninjectProps2.key=re.props.key||_parentnodeid+\"^input_\"+index;return/*#__PURE__*/React.cloneElement(re,injectProps2);case windoww.Components.GraphElementComponent.cname:// case windoww.Components.DefaultNode.name:\ncase windoww.Components.DefaultNodeComponent.cname:// case windoww.Components.Graph.name:\n// case windoww.Components.GraphComponent.cname:\ncase\"Graph\":case\"GraphComponent\":// case windoww.Components.Field.name:\n// case windoww.Components.FieldComponent.cname:\n// case windoww.Components.Vertex.name:\ncase EdgeComponent.cname:case windoww.Components.VertexComponent.cname:injectProps.parentViewId=parentComponent.props.view.id||parentComponent.props.view;// re.props.view ||  thiss.props.view\ninjectProps.parentnodeid=(_parentComponent$prop4=parentComponent.props.node)===null||_parentComponent$prop4===void 0?void 0:_parentComponent$prop4.id;injectProps.graphid=parentComponent.props.graphid;// const vidmap = GraphElementRaw.graphVertexID_counter;\n// if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\n// const gvidmap = vidmap[injectProps.graphid];\n// const validVertexIdCondition = (id: string): boolean => gvidmap_useless[id];\n// todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando? React-portals?\nvar dataid=(typeof re.props.data===\"string\"?re.props.data:(_re$props$data=re.props.data)===null||_re$props$data===void 0?void 0:_re$props$data.id)||\"shapeless\";var idbasename;if((_re$props$initialSize=re.props.initialSize)===null||_re$props$initialSize===void 0?void 0:_re$props$initialSize.id){var _re$props$initialSize2;idbasename=(_re$props$initialSize2=re.props.initialSize)===null||_re$props$initialSize2===void 0?void 0:_re$props$initialSize2.id;}else if(re.props.nodeid){idbasename=injectProps.parentnodeid+\"^\"+re.props.nodeid;}else switch(type){default:idbasename=injectProps.parentnodeid+\"^\"+dataid+\"N\";break;case windoww.Components.EdgePoint.cname:idbasename=injectProps.parentnodeid+\"^\"+(dataid||((_re$props$startingSiz=re.props.startingSize)===null||_re$props$startingSiz===void 0?void 0:_re$props$startingSiz.id)||indices.join(\",\"))+\"EP\";break;case EdgeComponent.cname:case\"Edge\":var edgeProps=re.props;var edgestart_id=edgeProps.start.id||edgeProps.start;var edgeend_id=edgeProps.end.id||edgeProps.end;idbasename=injectProps.parentnodeid+\"^\"+edgestart_id+\"~\"+edgeend_id;}// (injectProps.parentnodeid)+\"^\"+(dataid)+indices.join(\",\");//injectProps.graphid + '^' + dataid;\n// console.log(\"setting nodeid\", {injectProps, props:re.props, re});\n// Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\nLog.exDev(!injectProps.graphid,'vertex is missing mandatory props (graphid).',{graphid:injectProps.graphid,dataid:dataid,props:re.props});if(false&&indices.length===2){var _parentComponent$prop5,_parentComponent$prop6;// if first component child, of a component? like (DefaultNode -> Vertex)?\nconsole.log('injecting to first child (B):',{re:re,pc:parentComponent,injectProps:injectProps});if(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop5=parentComponent.props.style)===null||_parentComponent$prop5===void 0?void 0:_parentComponent$prop5.clipPath)injectProps.style=_objectSpread(_objectSpread({},injectProps.style||{}),{},{clipPath:(parentComponent===null||parentComponent===void 0?void 0:(_parentComponent$prop6=parentComponent.props.style)===null||_parentComponent$prop6===void 0?void 0:_parentComponent$prop6.clipPath)||''});}injectProps.nodeid=idbasename;// U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\ninjectProps.htmlindex=indices[indices.length-1];// re.props.node ? re.props.node.htmlindex : indices[indices.length - 1];\ninjectProps.key=re.props.key||injectProps.nodeid;// console.log(\"cloning jsx:\", re, injectProps);\nLog.ex((injectProps.nodeid===injectProps.graphid||injectProps.nodeid===injectProps.parentnodeid)&&type!=\"GraphComponent\",\"User manually assigned a invalid node id. please remove or change prop \\\"nodeid\\\"\",{type:((_WrappedComponent2=re.type.WrappedComponent)===null||_WrappedComponent2===void 0?void 0:_WrappedComponent2.cname)||re.type},{mycomponents:windoww.mycomponents,re:re,props:re.props});}return/*#__PURE__*/React.cloneElement(re,injectProps);}},{key:\"ReactNodeAsElement\",value:function ReactNodeAsElement(e){return e&&e.type?e:null;}},{key:\"deleteWithAlarm\",value:function(){var _deleteWithAlarm=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(lItem){var MySwal,confirm;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:MySwal=withReactContent(Swal);_context.next=3;return MySwal.fire({title:\"Delete \"+lItem.toString()+\"?\",showCancelButton:true,confirmButtonText:\"Yes\",cancelButtonText:\"No\",showLoaderOnConfirm:true});case 3:confirm=_context.sent;if(confirm.value===true){lItem.delete();}case 5:case\"end\":return _context.stop();}}},_callee);}));function deleteWithAlarm(_x){return _deleteWithAlarm.apply(this,arguments);}return deleteWithAlarm;}()},{key:\"info\",value:function(){var _info=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(text){var MySwal,confirm;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:MySwal=withReactContent(Swal);_context2.next=3;return MySwal.fire({title:text,showCancelButton:false,confirmButtonText:\"Got It\"});case 3:confirm=_context2.sent;case 4:case\"end\":return _context2.stop();}}},_callee2);}));function info(_x2){return _info.apply(this,arguments);}return info;}()},{key:\"initPropInjectionStuff\",value:function initPropInjectionStuff(){UX.graphComponents=['GraphElement','...more'];UX.inputComponents=['Input','Select','TextArea','...more'];UX.graphComponentsRegexp=new RegExp(UX.graphComponents.map(function(s){return'(?:;\\\\}\\\\)\\\\]\\\\,\\\\;\\\\s)'+s+'\\\\(';}).join('|'));UX.inputComponentRegexp=new RegExp(UX.graphComponents.map(function(s){return'(?:;\\\\}\\\\)\\]\\\\,\\\\;\\\\s)'+s+'\\\\(';}).join('|'));UX.viewRootProps='\"data-viewid\": props.viewid,'+' addStyle: (offset ? {position:\"absolute\", left:offset.x, top:offset.y/*,transform:\"scale(\"+zoom.x+\",\"+zoom.y+\")\"*/} : undefined)';UX.mainViewRootProps='ref: component.html, id: props.nodeid, \"data-nodeid\": props.nodeid, \"data-dataid\": props.dataid,\\n'+'\"data-modelname\": data?.className || \"model-less\",'+'\"data-userselecting\": JSON.stringify(node.isSelected || {}),'+'\"data-nodetype\": node.className, '+'\"data-parentview\": props.parentviewid, '+//'\"data-order\": node.zIndex,' +\n'onClick: component.onClick,'+'onContextMenu: component.onContextMenu,'+'onMouseDown: component.onMouseDown,'+'onMouseUp: component.onMouseUp,'+'onMouseWheel: component.onScroll,'+'onMouseEnter: component.onEnter,'+'onMouseLeave: component.onLeave,'+'tabIndex: (props as any).tabIndex || node.zIndex || -1,'+'\"data-countrenders\": component.countRenders++,'+'decorators: otherViews,'+// used in user jsx to inject decorator views\n'classNameAdd: [(component.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"),\"mainView\", props.viewid, ...props.viewsid].join(\",\"),'+'...this.props';UX.decorativeViewRootProps+='classNameAdd: \"decorativeView \" + props.viewid, \"data-mainview\": mainviewid';return UX.graphComponents;}},{key:\"GC_propsAdder\",value:function GC_propsAdder(index){return\"nodeid: window._assignnodeid(props, \"+index+\"), key:\"+index;}},{key:\"Input_propsAdder\",value:function Input_propsAdder(index){return\"key:\"+index;}},{key:\"injectPropsToString_addstuff\",value:function injectPropsToString_addstuff(s,index,props,type,propsAdder){// move out in global scope\nswitch(s[index]){case'{':// props object\n// let propstr = JSON.stringify(propsToInjectAtRoot);\n// propstr = propstr.substring(1, propstr.length-2);\ns=s.substring(0,index+1)+props+(propsAdder?','+propsAdder(index):'')+','+s.substring(index+1);break;case'n':// null:\n// let propstr = JSON.stringify(propsToInjectAtRoot)\ns=s.substring(0,index)+'{'+props+(propsAdder?','+propsAdder(index):'')+'}'+s.substring(index+4);break;default:Log.exDevv('unexpected string in '+type+' props injection parser',{s_pre:s.substring(index-10,10),s_post:s.substring(index,index+10),index:index,c:s[index],fullstr:s});break;}return s;}},{key:\"injectPropsToString\",value:// propsToInject cannot be an object because i need variable names as prop values, NOT strings, not their immediate values. so i pass a string with a list of props\nfunction injectPropsToString(s,asMainView,graphComponentsProps,inputComponentProps){// non-root props are injected through Component constructors instead\n// plan B instead: make it  \"DefaultNde({pa: \"pa\"}, [\"a\", [b,c]])\" ---> \"Root(DefaultNde, {pa: \"pa\"}, [\"a\", [b,c]]) and handle injection in Root func\nvar propsToInjectAtRoot=UX.viewRootProps+','+(asMainView?UX.mainViewRootProps:UX.decorativeViewRootProps);//add in context: component = (this as GraphElementComponent), otherViews\n// 'style: {...viewStyle, ...styleoverride},' + need to fix this\n// 'className: classes.join(\\' \\'),' + and this\n// and otherViews as ReactNode[]\n// context.mainviewid (different from context.view in decorative views)\ns=s.trim();if(propsToInjectAtRoot.length){var argStartIndex=s.indexOf('(',1)+1;//.match(/[A-Za-z_$0-9]+\\(/)\n// todo: hamdle props.addstyle\n// add im props: offset: this.props.isGraph ££ this.props.ode.offset, zoom: this.props.isGraph ££ this.props.ode.zoom\nif(s[argStartIndex]===\"'\")argStartIndex=s.indexOf(\"'\",argStartIndex+1);// it is a lowercase component with name as string in first param\ns=UX.injectPropsToString_addstuff(s,argStartIndex,propsToInjectAtRoot,'root');// used in GC_propsAdder as a string to be eval-ed\nwindow._assignnodeid=function _assignnodeid(props,index){var tnv=transientProperties.node[props.nodeid].viewScores[props.viewid];if(!tnv.nodeidcounter)tnv.nodeidcounter={};if(tnv.nodeidcounter[index]===undefined)tnv.nodeidcounter[index]=0;else tnv.nodeidcounter[index]++;return props.nodeid+'^'+index+'.'+tnv.nodeidcounter[index];// every time before jsx render, \" let nc = transientProperties.node[props.nodeid].viewScores[props.viewid].nodeidcounter; for (let k of nc) nc[k]=0; or just nodeidcounter={}\n};}// lowercase, no props          React.createElement('defaultNde', null, [\"a\", [a,b,c]])\n// uppercase, ++ props          DefaultNde({pa: \"pa\", pb: b, pc: \"c\"}, [\"a\", [a,b,c]])\n// lowercase, ++ props          React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]])\n// uppercase, no props          DefaultNde(null, [\"a\", [a,b,c]])\n// might have () wrapping all\n// or array wrapping all\n// or comments (both inline and line)\n// or even a string at beginning\n// nightmare case is:          `([\"a()\", /*comment()*/ React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]]),2])`\n// !! fix: force users to have < as first char?? and editor tells it's wrong if this is not the case?\n// that forces mono-root, but arrays would be hard to inject root-level props and prone to break anyway\nvar match;//here i give up, because i cannot compute nodeid without htmlindex[] from root to component\n// cannot even get nodeid according to jsxstr position because of loops / map generate multiple nodes from same string index\n// NO! i can do srtindex+counters[strindex]++?\n//\ngraphComponentsProps='parentnodeid: props.nodeid, graphid:this.props.node.className.indexOf(\"Graph\")>=0 ? props.nodeid : props.graphid,'+' parentViewId:props.viewid';// + dynamically: 'nodeid, key' // - removed: htmlindex\ninputComponentProps='data: props.data, field:\"name\"';// + dynamically: 'key'\nif(graphComponentsProps.length>0)while(match=UX.graphComponentsRegexp.exec(s)){var matchstr=match[0];//let pre = s.substring(0, match.index) + matchstr;\nvar _argStartIndex=match.index+matchstr.length;s=UX.injectPropsToString_addstuff(s,_argStartIndex,graphComponentsProps,'graphElement',UX.GC_propsAdder);}if(inputComponentProps.length>0)while(match=UX.inputComponentRegexp.exec(s)){var _matchstr=match[0];//let pre = s.substring(0, match.index) + matchstr;\nvar _argStartIndex2=match.index+_matchstr.length;s=UX.injectPropsToString_addstuff(s,_argStartIndex2,inputComponentProps,'inputComponent',UX.Input_propsAdder);}return s;}},{key:\"parseAndInject\",value:function parseAndInject(jsxString,v){var jsxCompiled;var e;try{jsxCompiled=JSXT.fromString(jsxString,{factory:'React.createElement'});}catch(ee){e=ee;jsxCompiled=GraphElementComponent.displayError(e,\"JSX Syntax\",v,undefined,undefined,true);}console.log('jsxparse'+(e?'_ERROR':'_ok'),{e:e,jsxString:jsxString,jsxCompiled:jsxCompiled,v:v});return jsxCompiled;}}]);return UX;}(),_class2.graphComponents=_class2.initPropInjectionStuff(),_class2.inputComponents=undefined,_class2.graphComponentsRegexp=undefined,_class2.inputComponentRegexp=undefined,_class2.viewRootProps=void 0,_class2.decorativeViewRootProps=void 0,_class2.mainViewRootProps=void 0,_class2))||_class);","map":{"version":3,"names":["React","withReactContent","Swal","U","Log","GraphElementComponent","windoww","RuntimeAccessible","EdgeComponent","transientProperties","JSXT","UX","_dec","_class","_class2","_classCallCheck","_createClass","key","value","recursiveMap","children","fn","depthIndices","arguments","length","undefined","innermap","child","i1","isValidElement","Array","isArray","Children","map","c","i3","concat","_toConsumableArray","_child","invalidObjsReact","push","name","props","cloneElement","e","i2","ii","injectProp","parentComponent","gvidmap_useless","parentnodeid","index","indices","injectOffset","_WrappedComponent","_parentComponent$prop","_parentComponent$prop2","_parentComponent$prop3","_parentComponent$prop4","_re$props$data","_re$props$initialSize","_re$props$startingSiz","_WrappedComponent2","re","ReactNodeAsElement","type","WrappedComponent","injectProps","_re$props","style","_objectSpread","offset","scale","zoom","position","left","x","top","y","transform","oldre","console","log","childStyle","il","pc","cs","istyle","objectMergeInPlace","Components","Input","cname","Select","TextArea","injectProps2","node","id","data","DefaultNodeComponent","VertexComponent","parentViewId","view","graphid","dataid","idbasename","initialSize","_re$props$initialSize2","nodeid","EdgePoint","startingSize","join","edgeProps","edgestart_id","start","edgeend_id","end","exDev","_parentComponent$prop5","_parentComponent$prop6","clipPath","htmlindex","ex","mycomponents","_deleteWithAlarm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lItem","MySwal","confirm","wrap","_callee$","_context","prev","next","fire","title","toString","showCancelButton","confirmButtonText","cancelButtonText","showLoaderOnConfirm","sent","delete","stop","deleteWithAlarm","_x","apply","_info","_callee2","text","_callee2$","_context2","info","_x2","initPropInjectionStuff","graphComponents","inputComponents","graphComponentsRegexp","RegExp","s","inputComponentRegexp","viewRootProps","mainViewRootProps","decorativeViewRootProps","GC_propsAdder","Input_propsAdder","injectPropsToString_addstuff","propsAdder","substring","exDevv","s_pre","s_post","fullstr","injectPropsToString","asMainView","graphComponentsProps","inputComponentProps","propsToInjectAtRoot","trim","argStartIndex","indexOf","window","_assignnodeid","tnv","viewScores","viewid","nodeidcounter","match","exec","matchstr","parseAndInject","jsxString","v","jsxCompiled","fromString","factory","ee","displayError"],"sources":["C:/d/Programming/web/jodel-mde/src/common/UX.tsx"],"sourcesContent":["import ReactJson from 'react-json-view' // npm i react-json-view\r\nimport React, {ReactElement, ReactNode} from \"react\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport type { GraphElementOwnProps, GObject, Dictionary, DocString, Pointer, LGraph } from \"../joiner\";\r\nimport type { InputOwnProps } from '../components/forEndUser/Input';\r\nimport type { SelectOwnProps } from '../components/forEndUser/Select';\r\nimport type { TextAreaOwnProps } from '../components/forEndUser/TextArea';\r\nimport {\r\n    LPointerTargetable,\r\n    U,\r\n    Log,\r\n    GraphElementComponent,\r\n    windoww,\r\n    RuntimeAccessible,\r\n    EdgeComponent,\r\n    RuntimeAccessibleClass,\r\n    EdgeOwnProps,\r\n    DGraphElement,\r\n    DModelElement,\r\n    transientProperties, JSXT, DViewElement\r\n} from \"../joiner\";\r\nimport {AllPropss} from \"../graph/vertex/Vertex\";\r\n\r\n// U-functions that require jsx\r\n@RuntimeAccessible('UX')\r\nexport class UX{\r\n\r\n    static recursiveMap<T extends ReactNode | ReactNode[] | null | undefined>(children: T, fn: (rn: T, i: number, depthIndices: number[])=>T, depthIndices: number[] = []): T {\r\n        // NB: depthIndices is correct but if there is an expression children evaluated to false like {false && <jsx>},\r\n        // it counts as children iterated regardless. so html indices might be apparently off, but like this is even safer as indices won't change when conditions are changed.\r\n        const innermap = (child: ReactNode, i1: number, depthIndices: number[]): T => {\r\n            if (!React.isValidElement(child)) {\r\n                if (Array.isArray(child)) return React.Children.map(child as T, (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as T;\r\n                if (child && typeof child === \"object\") {\r\n                    if (!windoww.invalidObjsReact) windoww.invalidObjsReact = [];\r\n                    windoww.invalidObjsReact.push(child);\r\n                    return \"<! Objects cannot be rendered in jsx : \" + (child as any)?.name + \">\" as T;\r\n                }\r\n                return child as T; }\r\n            if (child.props.children) {\r\n                // let deeperDepthIndices = [...depthIndices, i1];  // depthIndices; //\r\n                // should probably change deeperDepthIndices in [...deeperDepthIndices, i] in next uncommented line.\r\n                // Giordano: add ignore for webpack\r\n                //@ts-ignore\r\n                child = React.cloneElement(child, { children: UX.recursiveMap(child.props.children,\r\n                        (e: T, i2: number, ii) => fn(e, i2, ii), depthIndices) });\r\n                // this can be optimized, and i think i can avoid cloning here, as the nodes are already cloned in \"fn\" = ux.injectprops\r\n            }\r\n            return fn(child as T, i1, depthIndices);\r\n        };\r\n        if (!Array.isArray(children)) return innermap(children as ReactNode, 0, [...depthIndices, 0]) as T;\r\n        // if (typeof children[0] === \"object\") return (children).map( (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as any as T;\r\n        return React.Children.map(children, (c: T, i3: number)=>innermap(c, i3, [...depthIndices,i3])) as T;\r\n    }\r\n    static injectProp(parentComponent: GraphElementComponent, e: ReactNode, gvidmap_useless: Dictionary<DocString<'VertexID'>, boolean>,\r\n                      parentnodeid: string, index: number, indices: number[], injectOffset?: LGraph): ReactNode {\r\n        let re: ReactElement | null = UX.ReactNodeAsElement(e);\r\n\r\n        // injectOffset&&console.log(\"inject offset props 1:\", {e, re, injectOffset});\r\n        if (!re) return e;\r\n        // @ts-ignore this\r\n        // const parentComponent = this;\r\n        const type = (re.type as any).WrappedComponent?.name || re.type;\r\n        let injectProps: GraphElementOwnProps = {} as any;\r\n        if (injectOffset) {\r\n            const style = {...(re.props?.style || {})};\r\n            let offset = injectOffset.offset;\r\n            let scale = injectOffset.zoom;\r\n            style.position = \"absolute\";\r\n            style.left = offset.x;\r\n            style.top = offset.y;\r\n            style.transform = \"scale(\" + scale.x + \",\" + scale.y + \")\"\r\n            injectProps = {style};\r\n            let oldre = re;\r\n            console.log(\"inject offset props 2:\", {oldre, re, injectProps});\r\n            re = React.cloneElement(re, injectProps);\r\n        }\r\n        //  fix the injection somehow. override Edge() Vertex() Asterisk() ...\r\n        // const windoww = window as any;\r\n        // console.log('ux.injectingProp pre ', {type: (re.type as any).WrappedComponent?.name || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n        // add \"view\" (view id) prop as default to sub-elements of any depth to inherit the view of the parent unless the user forced another view to apply\r\n        switch (type) {\r\n            default:\r\n                // console.count('ux.injectingProp case default: ' + type);\r\n                if (indices.length <= 2 && (parentComponent?.props?.childStyle)) {\r\n                    // if first non-component child of a GraphElement with a clipPath shape, i assign clip path to it.\r\n                    console.log('injecting to first child (A):', {re, indices, il: indices.length, pc: parentComponent, injectProps, cs:parentComponent.props.childStyle});\r\n                    let istyle: GObject = injectProps.style = {...(injectProps.style || {})};\r\n                    injectProps.style = injectProps.style ? {...injectProps.style} : {};\r\n                    U.objectMergeInPlace(injectProps.style, parentComponent.props.childStyle);\r\n                } else return re;\r\n                break;\r\n            /*\r\n            case windoww.Components.Input.name:\r\n            case windoww.Components.Textarea.name:\r\n                const objid =  re.props.obj?.id || re.props.obj || parentComponent.props.data.id;\r\n                const ret = React.cloneElement(re, {key: re.props.key || parentComponent.props.view.id + '_' + parentComponent.props.data.id + '_' + re.props.field, obj: objid, obj2: objid});\r\n                //console.log('relement Input set props',\r\n                //    {'re.props.obj.id': re.props.obj?.id, 're.props.obj': re.props.obj, 'thiss.props.data.id': thiss.props.data.id, thiss, re, objid, ret, 'ret.props': ret.props});\r\n                return ret;*/\r\n            // case windoww.Components.GraphElement.name:\r\n            case windoww.Components.Input.cname+\"Component\":\r\n            case windoww.Components.Select.cname+\"Component\":\r\n            case windoww.Components.TextArea.cname+\"Component\":\r\n                // todo: can i do a injector that if the user provides a ModelElement list raw <div>{this.children}</div> it wraps them in DefaultNode?\r\n                const injectProps2: InputOwnProps | SelectOwnProps | TextAreaOwnProps = {} as any;\r\n                const parentnodeid = parentComponent.props.node?.id;\r\n                injectProps2.data = re.props.data || (typeof parentComponent.props.data === \"string\" ? parentComponent.props.data : parentComponent.props.data?.id);\r\n                // !IMPORTANT! this key does not remove the responsability of adding keys to <GraphElement>s. this is assigning the key to the first returned element by component A,\r\n                // but react needs to distinguish component A from other components, and he still doesn't have a key. in fact this is useless as this component can only have 1 child\r\n                injectProps2.key = re.props.key || (parentnodeid + \"^input_\"+index);\r\n                return React.cloneElement(re, injectProps2);\r\n            case windoww.Components.GraphElementComponent.cname:\r\n            // case windoww.Components.DefaultNode.name:\r\n            case windoww.Components.DefaultNodeComponent.cname:\r\n            // case windoww.Components.Graph.name:\r\n            // case windoww.Components.GraphComponent.cname:\r\n            case \"Graph\": case \"GraphComponent\":\r\n            // case windoww.Components.Field.name:\r\n            // case windoww.Components.FieldComponent.cname:\r\n            // case windoww.Components.Vertex.name:\r\n            case EdgeComponent.cname:\r\n            case windoww.Components.VertexComponent.cname:\r\n                injectProps.parentViewId = parentComponent.props.view.id || (parentComponent.props.view as any); // re.props.view ||  thiss.props.view\r\n                injectProps.parentnodeid = parentComponent.props.node?.id;\r\n                injectProps.graphid = parentComponent.props.graphid;\r\n                // const vidmap = GraphElementRaw.graphVertexID_counter;\r\n                // if (!vidmap[injectProps.graphid]) vidmap[injectProps.graphid] = {};\r\n                // const gvidmap = vidmap[injectProps.graphid];\r\n                // const validVertexIdCondition = (id: string): boolean => gvidmap_useless[id];\r\n                // todo: come butto dei sotto-vertici dentro un vertice contenitore? o dentro un sotto-grafo? senza modificare il jsx ma solo draggando? React-portals?\r\n                const dataid = (typeof re.props.data === \"string\" ? re.props.data : re.props.data?.id) || \"shapeless\";\r\n                let idbasename: string;\r\n                if (re.props.initialSize?.id) { idbasename = re.props.initialSize?.id; } else\r\n                if (re.props.nodeid) { idbasename = (injectProps.parentnodeid) + \"^\" + re.props.nodeid; } else\r\n                switch (type) {\r\n                    default:\r\n                        idbasename = injectProps.parentnodeid + \"^\" + dataid + \"N\";\r\n                        break;\r\n                    case windoww.Components.EdgePoint.cname:\r\n                        idbasename = injectProps.parentnodeid + \"^\" + (dataid || re.props.startingSize?.id || indices.join(\",\")) + \"EP\";\r\n                        break;\r\n                    case EdgeComponent.cname: case \"Edge\":\r\n                        let edgeProps:EdgeOwnProps = re.props;\r\n                        let edgestart_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.start as any).id || edgeProps.start;\r\n                        let edgeend_id: Pointer<DGraphElement> | Pointer<DModelElement> = (edgeProps.end as any).id || edgeProps.end;\r\n                        idbasename = injectProps.parentnodeid + \"^\" + edgestart_id + \"~\" + edgeend_id;\r\n                }\r\n                // (injectProps.parentnodeid)+\"^\"+(dataid)+indices.join(\",\");//injectProps.graphid + '^' + dataid;\r\n                // console.log(\"setting nodeid\", {injectProps, props:re.props, re});\r\n                // Log.exDev(!injectProps.graphid || !dataid, 'vertex is missing mandatory props.', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                Log.exDev(!injectProps.graphid, 'vertex is missing mandatory props (graphid).', {graphid: injectProps.graphid, dataid, props: re.props});\r\n                if (false && indices.length === 2) {\r\n                    // if first component child, of a component? like (DefaultNode -> Vertex)?\r\n                    console.log('injecting to first child (B):', {re, pc: parentComponent, injectProps})\r\n                    if (parentComponent?.props.style?.clipPath) injectProps.style = {...(injectProps.style || {}), clipPath: parentComponent?.props.style?.clipPath||''}\r\n                }\r\n                injectProps.nodeid = idbasename; // U.increaseEndingNumber(idbasename, false, false, validVertexIdCondition);\r\n                injectProps.htmlindex = indices[indices.length - 1]; // re.props.node ? re.props.node.htmlindex : indices[indices.length - 1];\r\n                injectProps.key = re.props.key || injectProps.nodeid;\r\n                // console.log(\"cloning jsx:\", re, injectProps);\r\n                Log.ex((injectProps.nodeid === injectProps.graphid||injectProps.nodeid === injectProps.parentnodeid) && type != \"GraphComponent\", \"User manually assigned a invalid node id. please remove or change prop \\\"nodeid\\\"\", {type: (re.type as any).WrappedComponent?.cname || re.type}, {mycomponents: windoww.mycomponents, re, props:re.props});\r\n        }\r\n        return React.cloneElement(re, injectProps);\r\n    }\r\n\r\n    static ReactNodeAsElement(e: React.ReactNode): React.ReactElement | null { return e && (e as ReactElement).type ? e as ReactElement : null; }\r\n\r\n    public static async deleteWithAlarm(lItem: LPointerTargetable) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: \"Delete \" + lItem.toString() + \"?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Yes\",\r\n            cancelButtonText: \"No\",\r\n            showLoaderOnConfirm: true\r\n        });\r\n        if (confirm.value === true) {\r\n            lItem.delete();\r\n        }\r\n    }\r\n    public static async info(text: string) {\r\n        const MySwal = withReactContent(Swal);\r\n        const confirm = await MySwal.fire({\r\n            title: text,\r\n            showCancelButton: false,\r\n            confirmButtonText: \"Got It\"\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private static initPropInjectionStuff(): string[]{\r\n        UX.graphComponents = ['GraphElement', '...more'];\r\n        UX.inputComponents = ['Input', 'Select', 'TextArea','...more'];\r\n        UX.graphComponentsRegexp = new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));\r\n        UX.inputComponentRegexp = new RegExp(UX.graphComponents.map(s=>'(?:;\\\\}\\\\)\\]\\\\,\\\\;\\\\s)'+s+'\\\\(').join('|'));\r\n        UX.viewRootProps = '\"data-viewid\": props.viewid,' +\r\n            ' addStyle: (offset ? {position:\"absolute\", left:offset.x, top:offset.y/*,transform:\"scale(\"+zoom.x+\",\"+zoom.y+\")\"*/} : undefined)';\r\n        UX.mainViewRootProps = 'ref: component.html, id: props.nodeid, \"data-nodeid\": props.nodeid, \"data-dataid\": props.dataid,\\n' +\r\n            '\"data-modelname\": data?.className || \"model-less\",' +\r\n            '\"data-userselecting\": JSON.stringify(node.isSelected || {}),' +\r\n            '\"data-nodetype\": node.className, ' +\r\n            '\"data-parentview\": props.parentviewid, ' +\r\n            //'\"data-order\": node.zIndex,' +\r\n            'onClick: component.onClick,' +\r\n            'onContextMenu: component.onContextMenu,' +\r\n            'onMouseDown: component.onMouseDown,' +\r\n            'onMouseUp: component.onMouseUp,' +\r\n            'onMouseWheel: component.onScroll,' +\r\n            'onMouseEnter: component.onEnter,' +\r\n            'onMouseLeave: component.onLeave,' +\r\n            'tabIndex: (props as any).tabIndex || node.zIndex || -1,' +\r\n            '\"data-countrenders\": component.countRenders++,' +\r\n            'decorators: otherViews,'+// used in user jsx to inject decorator views\r\n            'classNameAdd: [(component.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"),\"mainView\", props.viewid, ...props.viewsid].join(\",\"),' +\r\n            '...this.props';\r\n        UX.decorativeViewRootProps +='classNameAdd: \"decorativeView \" + props.viewid, \"data-mainview\": mainviewid';\r\n        return UX.graphComponents\r\n    }\r\n    private static graphComponents: string[] = UX.initPropInjectionStuff();\r\n    private static inputComponents: string[] = undefined as any;\r\n    private static graphComponentsRegexp: RegExp = undefined as any;\r\n    private static inputComponentRegexp: RegExp = undefined as any;\r\n    private static GC_propsAdder(index: number): string { return \"nodeid: window._assignnodeid(props, \"+index+\"), key:\"+index; }\r\n    private static Input_propsAdder(index: number):string { return \"key:\"+index; }\r\n    private static injectPropsToString_addstuff(s: string, index: number, props: string, type: string, propsAdder?:((index: number)=>string) | undefined): string { // move out in global scope\r\n        switch (s[index]) {\r\n            case '{': // props object\r\n                // let propstr = JSON.stringify(propsToInjectAtRoot);\r\n                // propstr = propstr.substring(1, propstr.length-2);\r\n                s = s.substring(0, index+1) + props + (propsAdder ? ','+propsAdder(index) : '') + ',' + s.substring(index+1);\r\n                break;\r\n            case 'n': // null:\r\n                // let propstr = JSON.stringify(propsToInjectAtRoot)\r\n                s = s.substring(0, index) + '{'+props+(propsAdder ? ','+propsAdder(index) : '') + '}' + s.substring(index+4);\r\n                break;\r\n            default: Log.exDevv('unexpected string in '+type+' props injection parser',\r\n                {s_pre:s.substring(index-10, 10), s_post:s.substring(index, index+10), index, c:s[index], fullstr:s});\r\n                break;\r\n        }\r\n        return s;\r\n    }\r\n    private static viewRootProps: string;\r\n    private static decorativeViewRootProps: string;\r\n    private static mainViewRootProps: string;\r\n// propsToInject cannot be an object because i need variable names as prop values, NOT strings, not their immediate values. so i pass a string with a list of props\r\n    static injectPropsToString(s: string, asMainView:boolean, graphComponentsProps: string, inputComponentProps: string){\r\n        // non-root props are injected through Component constructors instead\r\n        // plan B instead: make it  \"DefaultNde({pa: \"pa\"}, [\"a\", [b,c]])\" ---> \"Root(DefaultNde, {pa: \"pa\"}, [\"a\", [b,c]]) and handle injection in Root func\r\n        const propsToInjectAtRoot = UX.viewRootProps + ','+(asMainView ? UX.mainViewRootProps : UX.decorativeViewRootProps);\r\n        //add in context: component = (this as GraphElementComponent), otherViews\r\n        // 'style: {...viewStyle, ...styleoverride},' + need to fix this\r\n        // 'className: classes.join(\\' \\'),' + and this\r\n        // and otherViews as ReactNode[]\r\n        // context.mainviewid (different from context.view in decorative views)\r\n        s = s.trim();\r\n        if (propsToInjectAtRoot.length) {\r\n            let argStartIndex = s.indexOf('(', 1) + 1;//.match(/[A-Za-z_$0-9]+\\(/)\r\n            // todo: hamdle props.addstyle\r\n            // add im props: offset: this.props.isGraph ££ this.props.ode.offset, zoom: this.props.isGraph ££ this.props.ode.zoom\r\n\r\n            if (s[argStartIndex] === \"'\") argStartIndex = s.indexOf(\"'\", argStartIndex+1);// it is a lowercase component with name as string in first param\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, propsToInjectAtRoot, 'root');\r\n\r\n            // used in GC_propsAdder as a string to be eval-ed\r\n            (window as any)._assignnodeid = function _assignnodeid(props: AllPropss, index:number): string {\r\n                const tnv = transientProperties.node[props.nodeid].viewScores[props.viewid];\r\n                if (!tnv.nodeidcounter) tnv.nodeidcounter = {};\r\n                if (tnv.nodeidcounter[index] === undefined) tnv.nodeidcounter[index] = 0;\r\n                else tnv.nodeidcounter[index]++;\r\n\r\n                return props.nodeid+'^'+index+'.'+tnv.nodeidcounter[index];\r\n                // every time before jsx render, \" let nc = transientProperties.node[props.nodeid].viewScores[props.viewid].nodeidcounter; for (let k of nc) nc[k]=0; or just nodeidcounter={}\r\n            }\r\n        }\r\n\r\n        // lowercase, no props          React.createElement('defaultNde', null, [\"a\", [a,b,c]])\r\n        // uppercase, ++ props          DefaultNde({pa: \"pa\", pb: b, pc: \"c\"}, [\"a\", [a,b,c]])\r\n        // lowercase, ++ props          React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]])\r\n        // uppercase, no props          DefaultNde(null, [\"a\", [a,b,c]])\r\n        // might have () wrapping all\r\n        // or array wrapping all\r\n        // or comments (both inline and line)\r\n        // or even a string at beginning\r\n        // nightmare case is:          `([\"a()\", /*comment()*/ React.createElement('defaultNde', {a: \"1\"}, [\"a\", [a,b,c]]),2])`\r\n        // !! fix: force users to have < as first char?? and editor tells it's wrong if this is not the case?\r\n        // that forces mono-root, but arrays would be hard to inject root-level props and prone to break anyway\r\n        let match: RegExpExecArray | null;\r\n        //here i give up, because i cannot compute nodeid without htmlindex[] from root to component\r\n        // cannot even get nodeid according to jsxstr position because of loops / map generate multiple nodes from same string index\r\n        // NO! i can do srtindex+counters[strindex]++?\r\n        //\r\n\r\n        graphComponentsProps = 'parentnodeid: props.nodeid, graphid:this.props.node.className.indexOf(\"Graph\")>=0 ? props.nodeid : props.graphid,' +\r\n            ' parentViewId:props.viewid';// + dynamically: 'nodeid, key' // - removed: htmlindex\r\n        inputComponentProps = 'data: props.data, field:\"name\"'; // + dynamically: 'key'\r\n\r\n        if (graphComponentsProps.length > 0) while (match = UX.graphComponentsRegexp.exec(s)) {\r\n            let matchstr: string = match[0];\r\n            //let pre = s.substring(0, match.index) + matchstr;\r\n            let argStartIndex = match.index + matchstr.length;\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, graphComponentsProps, 'graphElement', UX.GC_propsAdder);\r\n        }\r\n        if (inputComponentProps.length > 0) while (match = UX.inputComponentRegexp.exec(s)) {\r\n            let matchstr: string = match[0];\r\n            //let pre = s.substring(0, match.index) + matchstr;\r\n            let argStartIndex = match.index + matchstr.length;\r\n            s = UX.injectPropsToString_addstuff(s, argStartIndex, inputComponentProps, 'inputComponent', UX.Input_propsAdder);\r\n        }\r\n        return s;\r\n    }\r\n\r\n    static parseAndInject(jsxString: string, v: DViewElement): string {\r\n        let jsxCompiled: DocString<ReactNode>;\r\n        let e: any;\r\n        try { jsxCompiled = JSXT.fromString(jsxString, {factory: 'React.createElement'}); }\r\n        catch (ee: any) { e = ee; jsxCompiled = GraphElementComponent.displayError(e, \"JSX Syntax\", v, undefined, undefined, true) as any; }\r\n        console.log('jsxparse' + (e ? '_ERROR' : '_ok'), {e, jsxString, jsxCompiled, v});\r\n        return jsxCompiled;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}