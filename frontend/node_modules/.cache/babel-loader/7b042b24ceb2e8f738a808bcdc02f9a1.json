{"ast":null,"code":"import { Log, LPointerTargetable, SetFieldAction, U, SetRootFieldAction, TRANSACTION } from '../joiner';\nexport class Dummy {\n  static get_delete(thiss, context) {\n    const lData = context.proxyObject;\n    const dData = context.data;\n    const dependencies = thiss.get_dependencies(context)();\n    const ret = () => {\n      SetRootFieldAction.new('_lastSelected', undefined, '');\n      const dataID = dData.id;\n      if (dData.id.indexOf('Pointer_View') !== -1) return; // cannot delete default views/viewpoints\n      if (dData.__readonly) return;\n      for (let child of lData.children) {\n        child.delete();\n        // todo: if a m1-dvalue which conforms to a m2-reference with \"containment\" is deleted, need to delete also target.\n        // maybe better to do through override?\n        // child.node?.delete();\n      }\n      if (dData.className === 'DViewElement') SetFieldAction.new(dData.father, 'subViews', dataID, '-=', false);\n      for (let dependency of dependencies) {\n        const root = dependency.root;\n        if (root !== 'idlookup') {\n          SetRootFieldAction.new(root, dataID, '-=', false);\n          continue;\n        }\n        const pointer = dependency.obj; // the pointing element (delete a DClass => DAttribute)\n        const field = dependency.field;\n        const lObj = LPointerTargetable.wrap(pointer);\n        if (!pointer || !lObj) continue;\n        const dObj = lObj.__raw;\n        switch (field) {\n          /* on '-=' pointedby would be removed from the element we are deleting, so it is irrelevant */\n          default:\n            Log.ee('Unexpected case in delete:', field, lData);\n            continue;\n          case 'value':\n          case 'values':\n            // this is className DModel (M1): inspect better\n            lObj.values = lObj.values.filter(o => (o === null || o === void 0 ? void 0 : o.id) !== dataID);\n            continue;\n          case 'type':\n            if (lObj.className === 'DAttribute') {\n              lObj.type = 'Pointer_ESTRING';\n              continue;\n            }\n            if (lObj.className === 'DReference') {\n              lObj.type = dObj.father;\n              continue;\n            }\n            break;\n          case 'model':\n            if (dObj.className === 'DPackage') {\n              lObj.father[field] = lObj.father.__raw[field].filter(id => id != dataID);\n              continue;\n            } else {\n              /* Node is deleted in nodes.delete() */\n              continue;\n            }\n          case 'packages':\n          case 'subpackages':\n          case 'classifiers':\n          case 'enumerators':\n          case 'literals':\n          case 'classes':\n          case 'attributes':\n          case 'references':\n          case 'operations':\n          case 'parameters':\n          case 'features':\n          case 'instances':\n          case 'objects':\n            lObj[field] = dObj[field].filter(id => id != dataID);\n            continue;\n          case 'instanceof':\n            lObj.delete();\n            continue;\n          /* No operations required (children) */\n          case 'father':\n          case 'subElements':\n          case 'annotations':\n            break;\n        }\n        /*\r\n        if ((root === 'idlookup') && obj && field) {\r\n            console.log('Delete', `SetFieldAction.new('${obj}', '${field}', '${val}', '${op}');`, {dependency});\r\n            SetFieldAction.new(obj, field, val, op, false);\r\n        } else {\r\n            console.log('Delete', `SetRootFieldAction.new('${root}', '${val}', '${op}');`);\r\n            SetRootFieldAction.new(root, val, op, false);\r\n        }\r\n        */\n      }\n      if (lData.nodes) lData.nodes.map(node => node.delete());\n      SetRootFieldAction.new('ELEMENT_DELETED', dataID, '+=', false); // here no need to IsPointer because it only affects Transient stuff\n      U.sleep(1).then(() => SetRootFieldAction.new(`idlookup.${dataID}`, undefined, '', false));\n      // DeleteElementAction.new(data.id);\n    };\n    return () => TRANSACTION(ret);\n  }\n}","map":{"version":3,"names":["Log","LPointerTargetable","SetFieldAction","U","SetRootFieldAction","TRANSACTION","Dummy","get_delete","thiss","context","lData","proxyObject","dData","data","dependencies","get_dependencies","ret","new","undefined","dataID","id","indexOf","__readonly","child","children","delete","className","father","dependency","root","pointer","obj","field","lObj","wrap","dObj","__raw","ee","values","filter","o","type","nodes","map","node","sleep","then"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/common/Dummy.ts"],"sourcesContent":["import {\r\n    DeleteElementAction,\r\n    DState,\r\n    GObject,\r\n    Log,\r\n    LPointerTargetable, Pointer,\r\n    SetFieldAction, U,\r\n    SetRootFieldAction, TRANSACTION\r\n} from '../joiner';\r\n\r\nexport class Dummy {\r\n    static get_delete(thiss: any, context: any): () => void {\r\n        const lData: LPointerTargetable & GObject = context.proxyObject;\r\n        const dData = context.data;\r\n        const dependencies = thiss.get_dependencies(context)();\r\n\r\n        const ret = () => {\r\n            SetRootFieldAction.new('_lastSelected', undefined, '');\r\n            const dataID = dData.id as any;\r\n            if (dData.id.indexOf('Pointer_View') !== -1 ) return; // cannot delete default views/viewpoints\r\n            if (dData.__readonly) return;\r\n            for (let child of lData.children) {\r\n                child.delete();\r\n                // todo: if a m1-dvalue which conforms to a m2-reference with \"containment\" is deleted, need to delete also target.\r\n                // maybe better to do through override?\r\n                // child.node?.delete();\r\n            }\r\n\r\n            if(dData.className === 'DViewElement')\r\n                SetFieldAction.new(dData.father, 'subViews', dataID, '-=', false);\r\n\r\n            for (let dependency of dependencies) {\r\n                const root: keyof DState = dependency.root;\r\n                if(root !== 'idlookup') {\r\n                    SetRootFieldAction.new(root, dataID, '-=', false);\r\n                    continue;\r\n                }\r\n                const pointer: Pointer<any>|null = dependency.obj; // the pointing element (delete a DClass => DAttribute)\r\n                const field = dependency.field;\r\n                const lObj: any = LPointerTargetable.wrap(pointer);\r\n                if (!pointer || !lObj) continue;\r\n                const dObj: any = lObj.__raw;\r\n                switch (field as string) {\r\n                    /* on '-=' pointedby would be removed from the element we are deleting, so it is irrelevant */\r\n                    default:\r\n                        Log.ee('Unexpected case in delete:', field, lData);\r\n                        continue;\r\n                    case 'value':\r\n                    case 'values':\r\n                        // this is className DModel (M1): inspect better\r\n                        lObj.values = lObj.values.filter((o: any) => o?.id !== dataID);\r\n                        continue;\r\n                    case 'type':\r\n                        if (lObj.className === 'DAttribute') {\r\n                            lObj.type = 'Pointer_ESTRING';\r\n                            continue;\r\n                        }\r\n                        if (lObj.className === 'DReference'){\r\n                            lObj.type = dObj.father;\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case 'model':\r\n                        if(dObj.className === 'DPackage') {\r\n                            lObj.father[field] = lObj.father.__raw[field].filter((id: any) => id != dataID);\r\n                            continue;\r\n                        } else {\r\n                            /* Node is deleted in nodes.delete() */\r\n                            continue;\r\n                        }\r\n                    case 'packages':\r\n                    case 'subpackages':\r\n                    case 'classifiers':\r\n                    case 'enumerators':\r\n                    case 'literals':\r\n                    case 'classes':\r\n                    case 'attributes':\r\n                    case 'references':\r\n                    case 'operations':\r\n                    case 'parameters':\r\n                    case 'features':\r\n                    case 'instances':\r\n                    case 'objects':\r\n                        lObj[field] = dObj[field].filter((id: any) => id != dataID);\r\n                        continue;\r\n                    case 'instanceof':\r\n                        lObj.delete();\r\n                        continue;\r\n                    /* No operations required (children) */\r\n                    case 'father':\r\n                    case 'subElements':\r\n                    case 'annotations':\r\n                        break;\r\n                }\r\n                /*\r\n                if ((root === 'idlookup') && obj && field) {\r\n                    console.log('Delete', `SetFieldAction.new('${obj}', '${field}', '${val}', '${op}');`, {dependency});\r\n                    SetFieldAction.new(obj, field, val, op, false);\r\n                } else {\r\n                    console.log('Delete', `SetRootFieldAction.new('${root}', '${val}', '${op}');`);\r\n                    SetRootFieldAction.new(root, val, op, false);\r\n                }\r\n                */\r\n            }\r\n            if (lData.nodes) lData.nodes.map((node: any) => node.delete());\r\n            SetRootFieldAction.new('ELEMENT_DELETED', dataID, '+=', false); // here no need to IsPointer because it only affects Transient stuff\r\n            U.sleep(1).then(() => SetRootFieldAction.new(`idlookup.${dataID}`, undefined, '', false));\r\n            // DeleteElementAction.new(data.id);\r\n        };\r\n        return () => TRANSACTION(ret);\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}