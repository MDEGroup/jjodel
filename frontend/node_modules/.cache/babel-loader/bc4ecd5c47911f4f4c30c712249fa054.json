{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\editors\\\\views\\\\data\\\\FieldData.tsx\";\n/* Viewpoints > Options */\n\nimport React from 'react';\nimport { LPointerTargetable, Select } from '../../../../joiner';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FieldDataComponent(props) {\n  const view = props.view;\n  const readOnly = props.readonly;\n  let dview = view.__raw;\n  /*const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n      const value = evt.target.value;\r\n      view.forceNodeType = value;\r\n      // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\r\n  }*/\n\n  const appliableTo = dview.appliableTo;\n  let preferredDisplay = dview.forceNodeType;\n  switch (appliableTo) {\n    case undefined:\n    case 'Any':\n      break;\n    case 'GraphVertex':\n      if (preferredDisplay !== 'Graph' || preferredDisplay !== 'Vertex') preferredDisplay = appliableTo;\n      break;\n    default:\n      preferredDisplay = appliableTo;\n      break;\n  }\n  let graphElementOptions = /*#__PURE__*/_jsxDEV(\"optgroup\", {\n    label: 'Type of GraphElement',\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Any\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"GraphVertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Vertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Edge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"EdgePoint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'options-field',\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'input-container',\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Appliable to:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          data: view,\n          field: 'appliableTo',\n          options: graphElementOptions,\n          getter: () => dview.appliableTo || 'Any',\n          setter: (v, data, field) => view.appliableTo = v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_c = FieldDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const FieldData = connect(mapStateToProps, mapDispatchToProps)(FieldDataComponent);\nexport default FieldData;\nvar _c;\n$RefreshReg$(_c, \"FieldDataComponent\");","map":{"version":3,"names":["React","LPointerTargetable","Select","connect","jsxDEV","_jsxDEV","FieldDataComponent","props","view","readOnly","readonly","dview","__raw","appliableTo","preferredDisplay","forceNodeType","undefined","graphElementOptions","label","children","fileName","_jsxFileName","lineNumber","columnNumber","className","data","field","options","getter","setter","v","_c","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","FieldData","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/editors/views/data/FieldData.tsx"],"sourcesContent":["/* Viewpoints > Options */\r\n\r\nimport React, {Dispatch} from 'react';\r\nimport {DState, DViewElement, LPointerTargetable, LViewElement, Pointer, Select} from '../../../../joiner';\r\nimport {FakeStateProps} from '../../../../joiner/types';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction FieldDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = props.readonly;\r\n    let dview = view.__raw;\r\n    /*const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        view.forceNodeType = value;\r\n        // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\r\n    }*/\r\n\r\n    const appliableTo = dview.appliableTo;\r\n    let preferredDisplay: string = dview.forceNodeType as string;\r\n    switch (appliableTo){\r\n        case undefined: case 'Any': break;\r\n        case 'GraphVertex': if (preferredDisplay !== 'Graph' || (preferredDisplay as any) !== 'Vertex') preferredDisplay = appliableTo; break;\r\n        default: preferredDisplay = appliableTo; break;\r\n    }\r\n    let graphElementOptions = <optgroup label={'Type of GraphElement'}>\r\n        <option>Any</option>\r\n        <option>Graph</option>\r\n        <option>GraphVertex</option>\r\n        <option>Vertex</option>\r\n        <option>Edge</option>\r\n        <option>EdgePoint</option>\r\n        <option>Field</option>\r\n    </optgroup>;\r\n    return(<section className={'options-field'}>\r\n        <h5>Field</h5>\r\n        <div>\r\n            <div className={'input-container'}>\r\n                <p>Appliable to:</p>\r\n                <Select data={view} field={'appliableTo'}\r\n                        options={graphElementOptions}\r\n                        getter={() => dview.appliableTo || 'Any'}\r\n                        setter={(v: string, data: DViewElement, field: string, )=>view.appliableTo = v as any} />\r\n            </div>\r\n        </div>\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly : boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const FieldData = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FieldDataComponent);\r\n\r\nexport default FieldData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}