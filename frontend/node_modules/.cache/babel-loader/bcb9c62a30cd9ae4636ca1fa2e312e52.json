{"ast":null,"code":"import Api from '../../data/api';\nimport Storage from '../../data/storage';\nimport { DUser, U } from '../../joiner';\nclass AuthApi {\n  static async login(email, password) {\n    Storage.reset();\n    Storage.write('offline', 'false');\n    return await Api.post(`${Api.persistance}/auth/login`, {\n      email,\n      password\n    });\n  }\n  static async register(username, email, password) {\n    Storage.reset();\n    Storage.write('offline', 'false');\n    return await Api.post(`${Api.persistance}/auth/register`, {\n      username,\n      email,\n      password\n    });\n  }\n  static async logout() {\n    await Api.delete(`${Api.persistance}/auth/logout`);\n    Storage.reset();\n    U.refresh();\n  }\n  static offline() {\n    Storage.reset();\n    Storage.write('offline', 'true');\n    const user = DUser.new('Unknown', 'Pointer_User_Default');\n    Storage.write('user', user);\n  }\n}\nexport { AuthApi };","map":{"version":3,"names":["Api","Storage","DUser","U","AuthApi","login","email","password","reset","write","post","persistance","register","username","logout","delete","refresh","offline","user","new"],"sources":["C:/d/Programming/web/jodel-mde/src/api/persistance/auth.ts"],"sourcesContent":["import Api, {Response} from '../../data/api';\r\nimport Storage from '../../data/storage';\r\nimport {DUser, U} from '../../joiner';\r\n\r\nclass AuthApi {\r\n    static async login(email: string, password: string): Promise<Response> {\r\n        Storage.reset(); Storage.write('offline', 'false');\r\n        return await Api.post(`${Api.persistance}/auth/login`, {email, password});\r\n    }\r\n    static async register(username: string, email: string, password: string): Promise<Response> {\r\n        Storage.reset(); Storage.write('offline', 'false');\r\n        return await Api.post(`${Api.persistance}/auth/register`, {username, email, password});\r\n    }\r\n    static async logout(): Promise<void> {\r\n        await Api.delete(`${Api.persistance}/auth/logout`);\r\n        Storage.reset();\r\n        U.refresh();\r\n    }\r\n    static offline(): void {\r\n        Storage.reset(); Storage.write('offline', 'true');\r\n        const user = DUser.new('Unknown', 'Pointer_User_Default');\r\n        Storage.write('user', user);\r\n    }\r\n}\r\n\r\nexport {AuthApi};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAkB,gBAAgB;AAC5C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAAQC,KAAK,EAAEC,CAAC,QAAO,cAAc;AAErC,MAAMC,OAAO,CAAC;EACV,aAAaC,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAAqB;IACnEN,OAAO,CAACO,KAAK,CAAC,CAAC;IAAEP,OAAO,CAACQ,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;IAClD,OAAO,MAAMT,GAAG,CAACU,IAAI,CAAC,GAAGV,GAAG,CAACW,WAAW,aAAa,EAAE;MAACL,KAAK;MAAEC;IAAQ,CAAC,CAAC;EAC7E;EACA,aAAaK,QAAQA,CAACC,QAAgB,EAAEP,KAAa,EAAEC,QAAgB,EAAqB;IACxFN,OAAO,CAACO,KAAK,CAAC,CAAC;IAAEP,OAAO,CAACQ,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;IAClD,OAAO,MAAMT,GAAG,CAACU,IAAI,CAAC,GAAGV,GAAG,CAACW,WAAW,gBAAgB,EAAE;MAACE,QAAQ;MAAEP,KAAK;MAAEC;IAAQ,CAAC,CAAC;EAC1F;EACA,aAAaO,MAAMA,CAAA,EAAkB;IACjC,MAAMd,GAAG,CAACe,MAAM,CAAC,GAAGf,GAAG,CAACW,WAAW,cAAc,CAAC;IAClDV,OAAO,CAACO,KAAK,CAAC,CAAC;IACfL,CAAC,CAACa,OAAO,CAAC,CAAC;EACf;EACA,OAAOC,OAAOA,CAAA,EAAS;IACnBhB,OAAO,CAACO,KAAK,CAAC,CAAC;IAAEP,OAAO,CAACQ,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC;IACjD,MAAMS,IAAI,GAAGhB,KAAK,CAACiB,GAAG,CAAC,SAAS,EAAE,sBAAsB,CAAC;IACzDlB,OAAO,CAACQ,KAAK,CAAC,MAAM,EAAES,IAAI,CAAC;EAC/B;AACJ;AAEA,SAAQd,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}