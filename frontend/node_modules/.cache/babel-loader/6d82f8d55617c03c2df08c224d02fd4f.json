{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\toolbar\\\\ToolBar.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _this = this;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./toolbar.scss\";\nimport { LGraphElement, LModel, SetFieldAction, DVoidEdge, DEdge, DEdgePoint, Constructors, Log, U, SetRootFieldAction } from \"../../joiner\";\nimport ModellingIcon from \"../forEndUser/ModellingIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet ti = 0; // tabindex counter\n\nfunction toolbarClick(item_dname, data, myDictValidator, node) {\n  switch (item_dname) {\n    case DVoidEdge.cname:\n    case DEdge.cname:\n      // no add edges through toolbar for now\n      break;\n    case DEdgePoint.cname:\n      let ledge = node.edge;\n      let dedge = ledge.__raw;\n      let wedge = ledge;\n      // if (!myDictValidator[item_dname]) return;\n      let longestSeg = undefined; // just because compiler does not know it is always found through the for loop\n      let longestIndex = 0;\n      let segms = ledge.segments.segments;\n      // longestIndex = segms.length - 1;// i just put it at end because this edgepoint\n      for (; longestIndex < segms.length; longestIndex++) if (segms[longestIndex].isLongest) {\n        longestSeg = segms[longestIndex];\n        break;\n      }\n      // let index = edge.segments.all.findIndex((s: EdgeSegment) => s.isLongest);\n      let newmp = {\n        ...longestSeg.start.pt.add(longestSeg.end.pt, true).divide(2),\n        w: 15,\n        h: 15,\n        index: longestIndex\n      };\n      // @ts-ignore\n      newmp.x -= newmp.w / 2;\n      newmp.y -= newmp.h / 2;\n      newmp.id = Constructors.makeID();\n      let subelements = [...dedge.subElements];\n      let prevNodeid = longestSeg.start.ge.id;\n      let prevnodeindex = subelements.indexOf(prevNodeid);\n      if (prevnodeindex === -1) {\n        if (prevNodeid === dedge.start) prevnodeindex = 0; // first and last are not subelements\n        else if (prevNodeid === dedge.end) prevnodeindex = subelements.length;else Log.exDevv(\"edgepoint insert position not found\", {\n          subelements,\n          prevNodeid,\n          longestSeg,\n          dedge,\n          ledge\n        });\n      } else prevnodeindex += 1;\n      newmp.index = prevnodeindex;\n      // delete (newmp as any).id;\n      let mp = [...dedge.midPoints];\n      mp.splice(longestIndex, 0, newmp);\n      wedge.midPoints = mp;\n      let olddebug = [...subelements];\n      subelements.splice(prevnodeindex, 0, newmp.id);\n      console.log(\"injecting ep\", {\n        prevnodeindex,\n        newmp,\n        prevNodeid,\n        longestSeg,\n        old: olddebug,\n        new: subelements,\n        ledge,\n        dedge\n      });\n      break;\n    default:\n      if (!data || !myDictValidator) return;\n      let item = item_dname.substring(1).toLowerCase();\n      let d = data.addChild(item);\n      try {\n        let d2 = d();\n        if (myDictValidator[item_dname]) select(d2);\n      } catch (e) {\n        if (myDictValidator[item_dname]) select(d);\n      }\n      break;\n  }\n}\nlet n_agonSides = 10; //this shuld be in react.setState(), but the function handling it is outside a component, so i don't wanna rewrite it.\n// it should be fine, except for the input value being shared on different sidebar components, which might even be better.\nfunction getItems(data, myDictValidator, items, node) {\n  const reactNodes = [];\n  // todo: does myDictValidator have any reason to exist? if something is invalid it should not make it on toolbar jsx generated list\n  for (let item_dname of items) {\n    if (item_dname[0] == \"_\") {\n      var _data;\n      item_dname = item_dname.substring(2);\n      data = ((_data = data) === null || _data === void 0 ? void 0 : _data.father) || data;\n    }\n    let item = item_dname.substring(1).toLowerCase();\n    reactNodes.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'toolbar-item',\n      tabIndex: ti,\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => toolbarClick(item_dname, data, myDictValidator, node),\n      children: [/*#__PURE__*/_jsxDEV(ModellingIcon, {\n        name: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'ms-1 my-auto text-capitalize',\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, item_dname, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }, this));\n  }\n  return reactNodes;\n}\nfunction select(dl) {\n  let d = (dl === null || dl === void 0 ? void 0 : dl.__raw) || dl;\n  //console.log(\"selecting\", {d, dl, selector:\".Graph [data-dataid='\"+d?.id+\"']\", $ : $(\".Graph [data-dataid='\"+d?.id+\"']\")});\n  if (d && d.id) setTimeout(() => $(\".Graph [data-dataid='\" + (d === null || d === void 0 ? void 0 : d.id) + \"']\").trigger(\"click\"), 10);\n  return d;\n}\nfunction selectNode(d) {\n  if (d && d.id) setTimeout(() => $(\".Graph [data-nodeid='\" + (d === null || d === void 0 ? void 0 : d.id) + \"']\").trigger(\"click\"), 10);\n  return d;\n}\nfunction useClickOutside(ref, onClickOutside) {\n  _s();\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClickOutside();\n      }\n    }\n\n    // Bind\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // dispose\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, onClickOutside]);\n}\n_s(useClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction ToolBarComponent(props, state) {\n  _s2();\n  const node = props.node;\n  let [pinned, setPinned] = useState(true);\n  let [collapsed, setCollapsed] = useState(true);\n  let [position, setPosition] = useState([20, 50]);\n  const menuRef = useRef();\n  useClickOutside(menuRef, () => {\n    setCollapsed(true);\n  });\n  const minimize = ref => {\n    ref.current.style.opacity = 0;\n\n    // ref.current.style.visibility = 'hidden';\n    // ref.current.style.display = 'none'; \n    setCollapsed(true);\n  };\n  const maximize = ref => {\n    ref.current.style.opacity = 1;\n    setCollapsed(false);\n  };\n  const htmlref = useRef(null);\n  useEffect(() => {\n    if (!htmlref.current) return;\n    let draggableOptions = {\n      cursor: 'grabbing',\n      axis: \"y\",\n      opacity: 0.0,\n      distance: 5,\n      containment: 'parent'\n      // helper: 'clone'\n    };\n    $(htmlref.current).draggable(draggableOptions);\n  }, [htmlref.current]);\n  if (!node) return null;\n  const data = node.model ? node.model : LModel.fromPointer(props.model);\n  const isMetamodel = props.isMetamodel;\n  const metamodel = props.metamodel;\n  const downward = {};\n  const addChildren = items => items ? getItems(data, downward, [...new Set(items)], node) : [];\n\n  // downward[\"DModel\"] = [\"DPackage\"];\n  // downward[\"DModel\"] = [\"DPackage\"];\n\n  downward[\"DPackage\"] = [\"DPackage\", \"DClass\", \"DEnumerator\"];\n  downward[\"DClass\"] = [\"DAttribute\", \"DReference\", \"DOperation\"];\n  downward[\"DEnumerator\"] = [\"DLiteral\"];\n  downward[\"DOperation\"] = [\"DParameter\", \"DException\"];\n\n  // nodes\n  downward[\"DEdge\"] = [\"DEdgePoint\"];\n  downward[\"DVoidEdge\"] = [\"DEdgePoint\"];\n\n  // for (let parentKey in downward) myDictValidator.set(parentKey, addChildren(\"package\"));\n\n  let upward = {};\n  for (let parentKey in downward) {\n    let vals = downward[parentKey];\n    if (!vals) continue;\n    for (let child of vals) {\n      if (!upward[child]) upward[child] = [];\n      upward[child].push(parentKey);\n      upward[child].push(...(downward[parentKey] || []));\n    }\n  }\n  downward[\"DModel\"] = downward[\"DPackage\"];\n\n  // exceptions:\n  upward[\"DPackage\"] = [\"_pDPackage\"]; //, \"DModel\"]; because from a package, i don't want to prompt the user to create a model in toolbar.\n  upward[\"DEdgePoint\"] = [\"DEdgePoint\"]; //, \"DEdge\", \"DVoidEdge\"]; because from a edgeNode, i don't want to prompt the user to create a edge in toolbar.\n  // upward[\"DClass\"] = [\"_pDPackage\", \"DClass\", \"DEnumerator\"];\n\n  let content;\n  // if (RuntimeAccessibleClass.extends(props.selected?.node?.className, DVoidEdge)) { }\n  let contentarr = [];\n  if (isMetamodel) {\n    let siblings = data ? addChildren(upward[data.className]) : [];\n    if (node) siblings.push(...addChildren(upward[node.className]));\n    let subelements = data ? addChildren(downward[data.className]) : [];\n    if (siblings.length > 0) {\n      contentarr.push([/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'toolbar-section-label',\n        children: \"Structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: 'my-1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 116\n      }, this), siblings]);\n    }\n    if (subelements.length > 0) {\n      contentarr.push([/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'toolbar-section-label',\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: 'my-1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 115\n      }, this), subelements]);\n    }\n  } else {\n    const classes = metamodel === null || metamodel === void 0 ? void 0 : metamodel.classes;\n    const model = LModel.fromPointer(props.model);\n    const lobj = data.className === \"DObject\" ? data : undefined;\n    const lfeat = data.className === \"DValue\" ? data : undefined;\n    let subleveloptions = [];\n    if (lobj && (!lobj.instanceof || lobj.partial)) subleveloptions.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-item feature\",\n      tabIndex: ti,\n      onClick: () => {\n        lobj.addValue();\n      },\n      children: \"+Feature\"\n    }, \"Feature\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this));\n    if (lfeat && lfeat.values.length < lfeat.upperBound) subleveloptions.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-item value\",\n      tabIndex: ti,\n      onClick: () => {\n        SetFieldAction.new(lfeat.id, 'value', undefined, '+=', false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(ModellingIcon, {\n        name: 'value'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'ms-1 my-auto text-capitalize',\n        children: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, \"Value\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this));\n    if (node) subleveloptions.push(...addChildren(downward[node.className]));\n    let rootobjs = (classes === null || classes === void 0 ? void 0 : classes.filter(lClass => lClass.rootable).map((lClass, index) => {\n      let dclass = lClass.__raw;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: e => SetRootFieldAction.new('tooltip', lClass.annotations.map(a => a.source).join(' ')),\n          onMouseLeave: e => SetRootFieldAction.new('tooltip', ''),\n          className: \"toolbar-item LObject\",\n          tabIndex: ti,\n          onClick: () => select(model.addObject({}, lClass)),\n          children: [dclass._state.icon ? /*#__PURE__*/_jsxDEV(ModellingIcon, {\n            src: dclass._state.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(ModellingIcon, {\n            name: 'object'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'ms-1 my-auto text-capitalize',\n            children: U.stringMiddleCut(dclass.name, 14)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: lClass.rootable + ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, \"LObject_\" + dclass.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 22\n        }, this)\n      }, void 0, false);\n    })) || [];\n    rootobjs.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: 'my-1 toolbar-hr'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'toolbar-item',\n        tabIndex: ti,\n        onClick: () => select(model.addObject({}, null)),\n        children: [/*#__PURE__*/_jsxDEV(ModellingIcon, {\n          name: 'object'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'ms-1 my-auto text-capitalize',\n          children: \"Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, \"RawObject\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true));\n    if (rootobjs.length > 0) {\n      contentarr.push([/*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'toolbar-section-label',\n        style: {\n          marginRight: \"1.5em\" /*to avoid overlap with pin*/\n        },\n        children: \"Root level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 30\n      }, this), rootobjs]);\n    }\n    if (subleveloptions.length > 0) {\n      contentarr.push([/*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'toolbar-section-label',\n        children: \"Sublevel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 30\n      }, this), subleveloptions]);\n    }\n  }\n  let shapes = node ? addChildren(downward[node.className]) : [];\n  if (shapes.length > 0) {\n    contentarr.push([/*#__PURE__*/_jsxDEV(\"b\", {\n      className: 'toolbar-section-label',\n      children: \"Shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 26\n    }, this), shapes]);\n  }\n  let separator = /*#__PURE__*/_jsxDEV(\"hr\", {\n    className: 'my-1'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 21\n  }, this);\n  // @ts-ignore\n  content = contentarr.separator(separator); // .flat() as any;\n\n  /* backup  */\n\n  /* return (\r\n      <div className=\"toolbar-draggable\"\r\n          ref={htmlref}\r\n          style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n          onClick={(e) => {\r\n              console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                  if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n              }, 1)\r\n          }}>\r\n          <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n              <i className={\"content pin bi bi-pin-angle\" + (pinned ? \"-fill\" : '')} onClick={() => setPinned(!pinned)} />\r\n              <div className={\"content inline w-100\"}>\r\n                  {content}\r\n              </div>\r\n          </div>\r\n      </div>);*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-draggable\",\n      ref: htmlref,\n      style: {\n        border: 'none',\n        top: '35px',\n        position: \"absolute\",\n        backgroundColor: 'red !important'\n      } // refuses to focus without event...\n      ,\n      onClick: e => {\n        console.log(\"click focus\", {\n          htmlref\n        });\n        setTimeout(() => {\n          if (htmlref.current) htmlref.current.children[0].focus();\n        }, 1);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar hoverable\" + (pinned ? \" pinned\" : ''),\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            marginTop: '8px'\n          },\n          className: \"content pin bi bi-x-lg\",\n          onClick: () => minimize(htmlref)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content inline w-100\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), collapsed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-collapsed\",\n      onClick: () => maximize(htmlref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-collapsed\",\n      onClick: () => minimize(htmlref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(ToolBarComponent, \"2Jt98ROn9xW3/2DFbiw4QVxyclg=\", false, function () {\n  return [useClickOutside];\n});\n_c = ToolBarComponent;\n//* 23/11 versione giordano\nfunction mapStateToProps(state, ownProps) {\n  var _state$_lastSelected;\n  const ret = {};\n  const nodeid = (_state$_lastSelected = state._lastSelected) === null || _state$_lastSelected === void 0 ? void 0 : _state$_lastSelected.node;\n  if (nodeid) ret.node = LGraphElement.fromPointer(nodeid);else ret.node = null;\n  if (ownProps.metamodelId) {\n    ret.metamodel = LModel.fromPointer(ownProps.metamodelId);\n  }\n  return ret;\n}\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: LPointerTargetable.from(ret.selectedid.node, state) as LGraphElement,\r\n        view: LPointerTargetable.from(ret.selectedid.view, state) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? LPointerTargetable.from(ret.selectedid.modelElement, state) : undefined\r\n    };\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}*/\n\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ToolBarConnected = connect(mapStateToProps, mapDispatchToProps)(ToolBarComponent);\nexport const ToolBar = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ToolBarConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = ToolBar;\nexport default ToolBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToolBarComponent\");\n$RefreshReg$(_c2, \"ToolBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","connect","LGraphElement","LModel","SetFieldAction","DVoidEdge","DEdge","DEdgePoint","Constructors","Log","U","SetRootFieldAction","ModellingIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ti","toolbarClick","item_dname","data","myDictValidator","node","cname","ledge","edge","dedge","__raw","wedge","longestSeg","undefined","longestIndex","segms","segments","length","isLongest","newmp","start","pt","add","end","divide","w","h","index","x","y","id","makeID","subelements","subElements","prevNodeid","ge","prevnodeindex","indexOf","exDevv","mp","midPoints","splice","olddebug","console","log","old","new","item","substring","toLowerCase","d","addChild","d2","select","e","n_agonSides","getItems","items","reactNodes","_data","father","push","className","tabIndex","style","cursor","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","dl","setTimeout","$","trigger","selectNode","useClickOutside","ref","onClickOutside","_s","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ToolBarComponent","props","state","_s2","pinned","setPinned","collapsed","setCollapsed","position","setPosition","menuRef","minimize","opacity","maximize","htmlref","draggableOptions","axis","distance","containment","draggable","model","fromPointer","isMetamodel","metamodel","downward","addChildren","Set","upward","parentKey","vals","child","content","contentarr","siblings","classes","lobj","lfeat","subleveloptions","instanceof","partial","addValue","values","upperBound","rootobjs","filter","lClass","rootable","map","dclass","onMouseEnter","annotations","a","source","join","onMouseLeave","addObject","_state","icon","src","stringMiddleCut","marginRight","shapes","separator","border","top","backgroundColor","focus","marginTop","_c","mapStateToProps","ownProps","_state$_lastSelected","ret","nodeid","_lastSelected","metamodelId","mapDispatchToProps","dispatch","ToolBarConnected","ToolBar","arguments","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/toolbar/ToolBar.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode, useEffect, useRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./toolbar.scss\";\r\nimport {\r\n    DState,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DNamedElement,\r\n    DObject,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DViewElement,\r\n    LGraphElement,\r\n    LModel,\r\n    LModelElement,\r\n    LObject,\r\n    LValue,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Pointer,\r\n    SetFieldAction,\r\n    RuntimeAccessibleClass,\r\n    DVoidEdge,\r\n    DEdge,\r\n    DEdgePoint,\r\n    EdgeSegment,\r\n    LVoidEdge,\r\n    Constructors,\r\n    WVoidEdge,\r\n    Log,\r\n    LEdgePoint, DUser,\r\n    U, LPointerTargetable, SetRootFieldAction, GObject, EMeasurableEvents, TRANSACTION\r\n} from \"../../joiner\";\r\n\r\nimport {InitialVertexSizeObj} from \"../../joiner/types\";\r\nimport ModellingIcon from \"../forEndUser/ModellingIcon\";\r\n\r\ninterface ThisState {}\r\n\r\nlet ti = 0; // tabindex counter\r\n\r\nfunction toolbarClick(item_dname: string, data: LModelElement|undefined, myDictValidator: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]>, node?:LGraphElement) {\r\n    switch(item_dname){\r\n        case DVoidEdge.cname:\r\n        case DEdge.cname:\r\n            // no add edges through toolbar for now\r\n            break;\r\n        case DEdgePoint.cname:\r\n            let ledge: LVoidEdge = (node as LEdgePoint | LVoidEdge).edge;\r\n            let dedge: DVoidEdge = ledge.__raw;\r\n            let wedge: WVoidEdge = ledge as any;\r\n            // if (!myDictValidator[item_dname]) return;\r\n            let longestSeg: EdgeSegment = undefined as any; // just because compiler does not know it is always found through the for loop\r\n            let longestIndex: number = 0;\r\n            let segms = ledge.segments.segments;\r\n            // longestIndex = segms.length - 1;// i just put it at end because this edgepoint\r\n            for (; longestIndex < segms.length; longestIndex++) if (segms[longestIndex].isLongest) { longestSeg = segms[longestIndex]; break;}\r\n            // let index = edge.segments.all.findIndex((s: EdgeSegment) => s.isLongest);\r\n            let newmp: InitialVertexSizeObj = {...(longestSeg.start.pt.add(longestSeg.end.pt, true).divide(2)), w: 15, h: 15, index:longestIndex};\r\n            // @ts-ignore\r\n            newmp.x -= newmp.w/2; newmp.y -= newmp.h/2;\r\n\r\n            newmp.id = Constructors.makeID();\r\n            let subelements = [...dedge.subElements];\r\n            let prevNodeid = longestSeg.start.ge.id;\r\n            let prevnodeindex = subelements.indexOf(prevNodeid);\r\n            if (prevnodeindex === -1) {\r\n                if (prevNodeid === dedge.start) prevnodeindex = 0; // first and last are not subelements\r\n                else if (prevNodeid === dedge.end) prevnodeindex = subelements.length;\r\n                else Log.exDevv(\"edgepoint insert position not found\", {subelements, prevNodeid, longestSeg, dedge, ledge});\r\n            } else prevnodeindex += 1;\r\n            newmp.index = prevnodeindex;\r\n            // delete (newmp as any).id;\r\n            let mp = [...dedge.midPoints];\r\n            mp.splice(longestIndex, 0, newmp);\r\n            wedge.midPoints = mp;\r\n            let olddebug = [...subelements];\r\n            subelements.splice(prevnodeindex, 0, newmp.id as string);\r\n            console.log(\"injecting ep\", {prevnodeindex, newmp, prevNodeid, longestSeg, old: olddebug, new: subelements, ledge, dedge});\r\n            break;\r\n        default:\r\n            if (!data || !myDictValidator) return;\r\n            let item = item_dname.substring(1).toLowerCase();\r\n            let d = data.addChild(item);\r\n            try {\r\n                let d2 = (d as any)();\r\n                if (myDictValidator[item_dname]) select(d2);\r\n            } catch(e) {\r\n                if (myDictValidator[item_dname]) select(d);\r\n            }\r\n            break;\r\n    }\r\n}\r\nlet n_agonSides = 10; //this shuld be in react.setState(), but the function handling it is outside a component, so i don't wanna rewrite it.\r\n// it should be fine, except for the input value being shared on different sidebar components, which might even be better.\r\nfunction getItems(data: LModelElement|undefined, myDictValidator: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]>, items: DocString<\"D-ClassNames\">[], node?:LGraphElement): ReactNode[] {\r\n    const reactNodes: ReactNode[] = [];\r\n    // todo: does myDictValidator have any reason to exist? if something is invalid it should not make it on toolbar jsx generated list\r\n    for (let item_dname of items) {\r\n        if (item_dname[0]==\"_\") {\r\n            item_dname = item_dname.substring(2);\r\n            data = data?.father || data;\r\n        }\r\n        let item = item_dname.substring(1).toLowerCase();\r\n        reactNodes.push(<div className={'toolbar-item'} tabIndex={ti} style={{cursor:\"pointer\"}} key={item_dname} onClick={()=>toolbarClick(item_dname, data, myDictValidator, node)}>\r\n            <ModellingIcon name={item} />\r\n            <span className={'ms-1 my-auto text-capitalize'}>{item}</span>\r\n            {/*\r\n            <i className=\"bi bi-arrow-right-short hoverable\">\r\n                <ul className={\"content\"}>\r\n                    <li className={\"hoverable\"}>\r\n                        <span className={'ms-1 my-auto text-capitalize'}>Polygon</span>\r\n                        <i className=\"bi bi-arrow-right-short hoverable\">\r\n                            <ul className={\"content\"}>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Triangle</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Pentagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Hexagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Octagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>\r\n                                    <input className={\"autosize-input\"} type={\"number\"} min={3} step={1}\r\n                                           value={n_agonSides} onClick{(evt) => { evt.stopPropagation()}}\r\n                                        onChange={(evt) => {\r\n                                            n_agonSides = +evt.target.value || 10;\r\n                                            if (n_agonSides<3) n_agonSides = 10;\r\n                                        }}\r\n                                    />-agon</span>\r\n                            </ul>\r\n                        </i>\r\n                    </li>\r\n                </ul>\r\n            </i>\r\n            <i className=\"bi bi-arrow-right-short hoverable\">\r\n                <ul className={\"content\"}>\r\n                    <li className={\"hoverable\"}>\r\n                        <span className={'ms-1 my-auto text-capitalize'}>Polygon</span>\r\n                    </li>\r\n                </ul>\r\n            </i>\r\n                */\r\n            }\r\n\r\n        </div>);\r\n    }\r\n    return reactNodes;\r\n}\r\nfunction select(dl: DModelElement | LModelElement): DModelElement {\r\n    let d: DModelElement = (dl as LModelElement)?.__raw || dl as DModelElement;\r\n    //console.log(\"selecting\", {d, dl, selector:\".Graph [data-dataid='\"+d?.id+\"']\", $ : $(\".Graph [data-dataid='\"+d?.id+\"']\")});\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-dataid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\n\r\nfunction selectNode(d: DGraphElement|{id: string}): any {\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-nodeid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\n\r\nfunction useClickOutside(ref: any, onClickOutside: any) {\r\n    useEffect(() => {\r\n        \r\n        function handleClickOutside(event: Event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                onClickOutside();\r\n            }\r\n        }\r\n\r\n        // Bind\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n        // dispose\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, onClickOutside]);\r\n}\r\n\r\nfunction ToolBarComponent(props: AllProps, state: ThisState) {\r\n    \r\n    const node = props.node;\r\n    let [pinned, setPinned] = useState(true);\r\n    let [collapsed, setCollapsed] = useState(true);\r\n    let [position, setPosition] = useState([20,50]); \r\n\r\n    const menuRef = useRef();\r\n\r\n    useClickOutside(menuRef, () => {\r\n        setCollapsed(true);\r\n    });\r\n\r\n    const minimize = (ref: any) => {\r\n        ref.current.style.opacity = 0;\r\n\r\n        // ref.current.style.visibility = 'hidden';\r\n        // ref.current.style.display = 'none'; \r\n        setCollapsed(true);\r\n    }\r\n    const maximize = (ref: any) => {\r\n        ref.current.style.opacity = 1;\r\n        setCollapsed(false);\r\n    }\r\n\r\n    const htmlref: React.MutableRefObject<null | HTMLDivElement>= useRef(null);\r\n    useEffect(() => {\r\n        if (!htmlref.current) return;\r\n        let draggableOptions = {\r\n            cursor: 'grabbing',\r\n            axis: \"y\",\r\n            opacity: 0.0,\r\n            distance: 5,\r\n            containment: 'parent',\r\n            // helper: 'clone'\r\n        };\r\n        ($(htmlref.current) as GObject<'JQuery + ui plugin'>).draggable(draggableOptions);\r\n    }, [htmlref.current]);\r\n\r\n    if (!node) return null;\r\n    const data: LModelElement|LModel = (node.model) ? node.model : LModel.fromPointer(props.model);\r\n\r\n    const isMetamodel: boolean = props.isMetamodel;\r\n    const metamodel: LModel|undefined = props.metamodel;\r\n    const downward: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]> = {}\r\n    const addChildren = (items: string[]) => items ? getItems(data, downward, [...new Set(items)], node) : [];\r\n\r\n    // downward[\"DModel\"] = [\"DPackage\"];\r\n    // downward[\"DModel\"] = [\"DPackage\"];\r\n\r\n    downward[\"DPackage\"] = [\"DPackage\", \"DClass\", \"DEnumerator\"];\r\n    downward[\"DClass\"] = [\"DAttribute\", \"DReference\", \"DOperation\"];\r\n    downward[\"DEnumerator\"] = [\"DLiteral\"];\r\n    downward[\"DOperation\"] = [\"DParameter\", \"DException\"];\r\n\r\n\r\n    // nodes\r\n    downward[\"DEdge\"] = [\"DEdgePoint\"]\r\n    downward[\"DVoidEdge\"] = [\"DEdgePoint\"]\r\n\r\n    // for (let parentKey in downward) myDictValidator.set(parentKey, addChildren(\"package\"));\r\n\r\n    let upward: Dictionary<DocString<\"DClassName (model)\">, DocString<\"hisDParents\">[]> = {};\r\n    for (let parentKey in downward){\r\n        let vals = downward[parentKey];\r\n        if(!vals) continue;\r\n        for (let child of vals) {\r\n            if (!upward[child]) upward[child] = [];\r\n            upward[child].push(parentKey)\r\n            upward[child].push(...(downward[parentKey]||[]));\r\n        }\r\n    }\r\n    downward[\"DModel\"] = downward[\"DPackage\"];\r\n\r\n    // exceptions:\r\n    upward[\"DPackage\"] = [\"_pDPackage\"]; //, \"DModel\"]; because from a package, i don't want to prompt the user to create a model in toolbar.\r\n    upward[\"DEdgePoint\"] = [\"DEdgePoint\"]; //, \"DEdge\", \"DVoidEdge\"]; because from a edgeNode, i don't want to prompt the user to create a edge in toolbar.\r\n    // upward[\"DClass\"] = [\"_pDPackage\", \"DClass\", \"DEnumerator\"];\r\n\r\n    let content: ReactNode;\r\n    // if (RuntimeAccessibleClass.extends(props.selected?.node?.className, DVoidEdge)) { }\r\n    let contentarr: ReactNode[][] = [];\r\n    if (isMetamodel) {\r\n        let siblings = data ? addChildren(upward[data.className]) : [];\r\n        if (node) siblings.push(...addChildren(upward[node.className]));\r\n        let subelements = data ? addChildren(downward[data.className]) : [];\r\n\r\n\r\n        if (siblings.length > 0)    { contentarr.push([<span className={'toolbar-section-label'}>Structure</span>, <hr className={'my-1'} />, siblings]); }\r\n        if (subelements.length > 0) { contentarr.push([<span className={'toolbar-section-label'}>Features</span>, <hr className={'my-1'} />, subelements]); }\r\n\r\n    }\r\n    else {\r\n        const classes = metamodel?.classes;\r\n        const model: LModel = LModel.fromPointer(props.model);\r\n        const lobj: LObject | undefined = data.className === \"DObject\" ? data as LObject : undefined;\r\n        const lfeat: LValue | undefined = data.className === \"DValue\" ? data as LValue : undefined;\r\n\r\n        let subleveloptions = [];\r\n        if (lobj && (!lobj.instanceof || lobj.partial)) subleveloptions.push(\r\n            <div key={\"Feature\"} className={\"toolbar-item feature\"} tabIndex={ti} onClick={() => { lobj.addValue(); }}>+Feature</div>\r\n        );\r\n        if (lfeat && lfeat.values.length < lfeat.upperBound) subleveloptions.push(\r\n            <div key={\"Value\"} className={\"toolbar-item value\"} tabIndex={ti} onClick={() => {SetFieldAction.new(lfeat.id, 'value' as any, undefined, '+=', false); }}>\r\n                <ModellingIcon name={'value'} />\r\n                <span className={'ms-1 my-auto text-capitalize'}>value</span>\r\n            </div>\r\n        );\r\n        if (node) subleveloptions.push(...addChildren(downward[node.className]));\r\n        let rootobjs = classes?.filter((lClass) => lClass.rootable).map((lClass, index) => {\r\n            let dclass = lClass.__raw;\r\n            return <><div\r\n                onMouseEnter={e => SetRootFieldAction.new('tooltip', lClass.annotations.map(a => a.source).join(' '))}\r\n                onMouseLeave={e => SetRootFieldAction.new('tooltip', '')}\r\n                key={\"LObject_\"+dclass.id} className={\"toolbar-item LObject\"} tabIndex={ti} onClick={()=>select(model.addObject({}, lClass)) }>\r\n                {dclass._state.icon ? <ModellingIcon src={dclass._state.icon}/> : <ModellingIcon name={'object'} />}\r\n                <span className={'ms-1 my-auto text-capitalize'}>{U.stringMiddleCut(dclass.name, 14)}</span>\r\n                <b>{lClass.rootable+''}</b>\r\n            </div></>\r\n        }) || [];\r\n\r\n        rootobjs.push(<><hr className={'my-1 toolbar-hr'}/><div key={\"RawObject\"} className={'toolbar-item'} tabIndex={ti} onClick={()=>select(model.addObject({}, null))}>\r\n            \r\n            <ModellingIcon name={'object'} />\r\n            \r\n            <span className={'ms-1 my-auto text-capitalize'}>Object</span>\r\n        </div></>);\r\n\r\n\r\n        if (rootobjs.length > 0) {\r\n            contentarr.push([<b className={'toolbar-section-label'} style={{marginRight:\"1.5em\"/*to avoid overlap with pin*/}}>Root level</b>, rootobjs]);\r\n        }\r\n        if (subleveloptions.length > 0) {\r\n            contentarr.push([<b className={'toolbar-section-label'}>Sublevel</b>, subleveloptions]);\r\n        }\r\n    }\r\n\r\n\r\n    let shapes = node ? addChildren(downward[node.className]) : [];\r\n    if (shapes.length > 0) {\r\n        contentarr.push([<b className={'toolbar-section-label'}>Shape</b>, shapes]);\r\n    }\r\n\r\n    let separator = <hr className={'my-1'} /> as any;\r\n    // @ts-ignore\r\n    content = contentarr.separator(separator);// .flat() as any;\r\n\r\n\r\n    /* backup  */\r\n\r\n    /* return (\r\n        <div className=\"toolbar-draggable\"\r\n            ref={htmlref}\r\n            style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n            onClick={(e) => {\r\n                console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                    if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n                }, 1)\r\n            }}>\r\n            <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n                <i className={\"content pin bi bi-pin-angle\" + (pinned ? \"-fill\" : '')} onClick={() => setPinned(!pinned)} />\r\n                <div className={\"content inline w-100\"}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>);*/ \r\n\r\n    return (<>\r\n    \r\n        <div className=\"toolbar-draggable\"\r\n            ref={htmlref}\r\n            style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n            onClick={(e) => {\r\n                console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                    if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n                }, 1)\r\n            }}>\r\n            <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n                <i style={{marginTop: '8px'}} className={\"content pin bi bi-x-lg\"} onClick={() => minimize(htmlref)} />\r\n                <div className={\"content inline w-100\"}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        {collapsed ? \r\n            <div className=\"toolbar-collapsed\" onClick={() => maximize(htmlref)}></div>\r\n            :\r\n            <div className=\"toolbar-collapsed\" onClick={() => minimize(htmlref)}></div>\r\n        }\r\n    </>);\r\n}\r\n\r\ninterface OwnProps {\r\n    model: Pointer<DModel, 1, 1, LModel>;\r\n    isMetamodel: boolean;\r\n    metamodelId?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n}\r\n\r\ninterface StateProps {\r\n    node: LGraphElement|null;\r\n    metamodel?: LModel;\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n//* 23/11 versione giordano\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const nodeid = state._lastSelected?.node;\r\n    if (nodeid) ret.node = LGraphElement.fromPointer(nodeid);\r\n    else ret.node = null;\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: LPointerTargetable.from(ret.selectedid.node, state) as LGraphElement,\r\n        view: LPointerTargetable.from(ret.selectedid.view, state) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? LPointerTargetable.from(ret.selectedid.modelElement, state) : undefined\r\n    };\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}*/\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ToolBarConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ToolBarComponent);\r\n\r\nexport const ToolBar = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ToolBarConnected {...{...props, children}} />;\r\n}\r\nexport default ToolBar;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}