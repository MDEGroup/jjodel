{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Defaults, Keystrokes, LPointerTargetable, U } from '../../joiner';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport './inputselect.scss';\nimport { Tooltip } from './Tooltip';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputComponent(props) {\n  _s();\n  var _data;\n  const data = props.data;\n  const getter = props.getter;\n  const setter = props.setter;\n  const field = props.field;\n  const oldValue = !data ? undefined : getter ? getter(data) : data[field]; // !== undefined); ? data[field] : 'undefined'\n  const [value, setValue] = useStateIfMounted(oldValue);\n  const [isTouched, setIsTouched] = useStateIfMounted(false);\n  const inputRef = useRef(null);\n\n  // I check if the value that I have in my local state is being edited by other <Input />\n  if (value !== oldValue && !isTouched) {\n    setValue(oldValue);\n    setIsTouched(false);\n  }\n  if (!(data || getter && setter)) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Either props.data or both getter & setter are required.\"\n  }, void 0, false);\n  const readOnly = props.readonly !== undefined ? props.readonly : props.debugmodee !== 'true' && Defaults.check(data === null || data === void 0 ? void 0 : data.id);\n  const type = props.type ? props.type : 'text';\n  const label = props.jsxLabel || props.label;\n  let tooltip = (props.tooltip === true ? data === null || data === void 0 ? void 0 : (_data = data['__info_of__' + field]) === null || _data === void 0 ? void 0 : _data.txt : props.tooltip) || '';\n  let css = ''; //'my-auto input ';\n  //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\n  css += props.hidden ? ' hidden-input' : '';\n  let autosize = props.autosize === undefined ? false : props.autosize; // props.type==='text'\n  css += autosize ? ' autosize-input' : '';\n  const isBoolean = ['checkbox', 'radio'].includes(type);\n  const onChange = evt => {\n    if (isBoolean) {\n      if (readOnly) return;\n      const target = evt.target.checked;\n      if (setter) setter(target, data, field);else data[field] = target;\n    } else {\n      setValue(evt.target.value);\n      setIsTouched(true); // I'm editing the element in my local state.\n    }\n  };\n\n  const onKeyDown = evt => {\n    if (evt.key === Keystrokes.enter) onBlur(evt);\n    if (evt.key === Keystrokes.escape) {\n      const oldValue = getter ? getter(data) : data[field];\n      evt.target.value = oldValue;\n      setValue(oldValue);\n      setIsTouched(false);\n      evt.target.blur();\n      // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\n      // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\n    }\n  };\n\n  const onBlur = evt => {\n    if (readOnly || isBoolean) return;\n    const newValue = evt.target.value;\n    const oldValue = getter ? getter(data) : data[field];\n    if (newValue !== oldValue) {\n      if (setter) setter(newValue, data, field);else data[field] = newValue;\n    }\n    // I terminate my editing, so I communicate it to other <Input /> that render the same field.\n    setIsTouched(false);\n  };\n  const otherprops = {\n    ...props\n  };\n  delete otherprops.data;\n  delete otherprops.field;\n  delete otherprops.getter;\n  delete otherprops.setter;\n  delete otherprops.label;\n  delete otherprops.jsxLabel;\n  delete otherprops.tooltip;\n  delete otherprops.hidden;\n  delete otherprops.inputStyle;\n  delete otherprops.children;\n  delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\n\n  let checked = undefined;\n  if (isBoolean) checked = typeof value === \"boolean\" ? value : typeof value === \"string\" ? U.fromBoolString(value) : !!value;\n  let cursor;\n  if (tooltip) cursor = 'help';else if (readOnly) cursor = 'not-allowed';else if (isBoolean) cursor = 'pointer';else cursor = 'auto';\n  let inputProps = {\n    spellCheck: props.spellCkeck || false,\n    readOnly,\n    type,\n    value,\n    checked,\n    className: [props.inputClassName, css].join(' '),\n    style: props.inputStyle || {},\n    onChange,\n    onBlur,\n    onKeyDown\n  }; // key:`${field}.${data?.id}`\n  if (!inputProps.style.cursor && cursor === 'not-allowed') {\n    inputProps.style.cursor = cursor;\n  }\n  let input;\n  let rootprops = {\n    ...otherprops\n  };\n  switch (typeof rootprops.ref) {\n    default:\n      rootprops.ref = inputRef;\n      break;\n    case \"object\":\n      let oldref = rootprops.ref;\n      rootprops.ref = v => {\n        oldref.current = inputRef.current = v;\n      };\n      break;\n    case \"function\":\n      let oldreff = rootprops.ref;\n      rootprops.ref = v => {\n        oldreff(v);\n        inputRef.current = v;\n      };\n      break;\n  }\n  if (tooltip) {\n    rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, rootprops.ref);\n    rootprops.onMouseLeave = () => Tooltip.hide();\n  }\n  let rootkeys = new Set(...Object.keys(rootprops));\n  //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\n  //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\n  for (let k of rootkeys) {\n    if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\n    if (inputProps[k]) inputProps[k] = function () {\n      for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n        a[_key] = arguments[_key];\n      }\n      inputProps[k](arguments);\n      rootprops[k](arguments);\n    };else inputProps[k] = rootprops[k];\n    delete rootprops[k];\n  }\n  if (!label && !autosize) {\n    if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\n    if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\n    let finaliprops = {\n      ...rootprops,\n      ...inputProps\n    };\n    return props.isTextArea ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ...finaliprops,\n      children: finaliprops.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      ...finaliprops\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 95\n    }, this);\n  }\n  if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';else input = props.isTextArea ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n    ...inputProps,\n    children: inputProps.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 38\n  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n    ...inputProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 96\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    ...rootprops,\n    children: [label || undefined, input]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n  /*\r\n  return(<label className={'p-1'} {...otherprops}\r\n                style={rootStyle}>\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                      onMouseLeave={e => setShowTooltip(false)}>{label}\r\n      </span>}\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                         onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n      </span>}\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n          <b className={'text-center text-capitalize'}>{field}</b>\r\n          <br />\r\n          <label>{tooltip}</label>\r\n      </div>}\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                       data-value={value}>{input}\r\n      </div> : input}\r\n  </label>);\r\n  */\n}\n_s(InputComponent, \"nlzZzFhpjnEHW6d8jEzTV191MA8=\", false, function () {\n  return [useStateIfMounted, useStateIfMounted];\n});\n_c = InputComponent;\nInputComponent.cname = 'InputComponent';\nexport function InputMapStateToProps(state, ownProps) {\n  var _ownProps$data;\n  const ret = {};\n  const pointer = typeof ownProps.data === 'string' ? ownProps.data : (_ownProps$data = ownProps.data) === null || _ownProps$data === void 0 ? void 0 : _ownProps$data.id;\n  ret.debugmodee = state.debug ? 'true' : 'false';\n  if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\n  return ret;\n}\n_c2 = InputMapStateToProps;\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const InputConnected = connect(InputMapStateToProps, mapDispatchToProps)(InputComponent);\nexport function Input(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Input;\nexport function TextArea(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"textarea\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 12\n  }, this);\n}\n_c4 = TextArea;\nexport function Select(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 12\n  }, this);\n}\n_c5 = Select;\nexport const Edit = Input;\nInputComponent.cname = 'InputComponent';\nInputConnected.cname = 'InputConnected';\nInput.cname = 'Input';\nTextArea.cname = 'TextArea';\nSelect.cname = 'Select';\nEdit.cname = 'Edit';\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"InputMapStateToProps\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"TextArea\");\n$RefreshReg$(_c5, \"Select\");","map":{"version":3,"names":["React","useRef","connect","Defaults","Keystrokes","LPointerTargetable","U","useStateIfMounted","Tooltip","Fragment","_Fragment","jsxDEV","_jsxDEV","InputComponent","props","_s","_data","data","getter","setter","field","oldValue","undefined","value","setValue","isTouched","setIsTouched","inputRef","children","readOnly","readonly","debugmodee","check","id","type","label","jsxLabel","tooltip","txt","css","hidden","autosize","isBoolean","includes","onChange","evt","target","checked","onKeyDown","key","enter","onBlur","escape","blur","newValue","otherprops","inputStyle","fromBoolString","cursor","inputProps","spellCheck","spellCkeck","className","inputClassName","join","style","input","rootprops","ref","oldref","v","current","oldreff","onMouseEnter","show","onMouseLeave","hide","rootkeys","Set","Object","keys","k","toUpperCase","_len","arguments","length","a","Array","_key","objectMergeInPlace","finaliprops","isTextArea","fileName","_jsxFileName","lineNumber","columnNumber","_c","cname","InputMapStateToProps","state","ownProps","_ownProps$data","ret","pointer","debug","fromPointer","_c2","mapDispatchToProps","dispatch","InputConnected","Input","_c3","TextArea","tag","_c4","Select","_c5","Edit","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Input.tsx"],"sourcesContent":["import React, {Dispatch, KeyboardEvent, LegacyRef, ReactElement, ReactNode, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {Defaults, DPointerTargetable, GObject, Keystrokes, LPointerTargetable, Overlap, Pointer, U} from '../../joiner';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './inputselect.scss';\r\nimport { Tooltip } from './Tooltip';\r\n\r\n\r\nexport function InputComponent(props: AllProps) {\r\n    const data = props.data;\r\n    const getter = props.getter;\r\n    const setter = props.setter;\r\n    const field: string = props.field as string;\r\n    const oldValue = (!data) ? undefined : (getter) ? getter(data) : data[field]; // !== undefined); ? data[field] : 'undefined'\r\n    const [value, setValue] = useStateIfMounted<string>(oldValue);\r\n    const [isTouched, setIsTouched] = useStateIfMounted(false);\r\n    const inputRef = useRef<Element | null>(null);\r\n\r\n    // I check if the value that I have in my local state is being edited by other <Input />\r\n    if (value !== oldValue && !isTouched){\r\n        setValue(oldValue);\r\n        setIsTouched(false);\r\n    }\r\n\r\n\r\n    if (!(data || (getter && setter))) return(<>Either props.data or both getter & setter are required.</>);\r\n    const readOnly = (props.readonly !== undefined) ? props.readonly : props.debugmodee !== 'true' && Defaults.check(data?.id);\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: ReactNode|undefined = props.jsxLabel || props.label;\r\n    let tooltip: ReactNode|string|undefined = ((props.tooltip === true) ? data?.['__info_of__' + field]?.txt : props.tooltip) || '';\r\n\r\n    let css = '';//'my-auto input ';\r\n    //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type==='text'\r\n    css += autosize ? ' autosize-input' : '';\r\n    const isBoolean = (['checkbox', 'radio'].includes(type));\r\n\r\n    const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (isBoolean) {\r\n            if (readOnly) return;\r\n            const target = evt.target.checked;\r\n            if (setter) setter(target, data, field);\r\n            else data[field] = target;\r\n        } else {\r\n            setValue(evt.target.value);\r\n            setIsTouched(true);     // I'm editing the element in my local state.\r\n        }\r\n    }\r\n    const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (evt.key === Keystrokes.enter) onBlur(evt as any);\r\n        if (evt.key === Keystrokes.escape) {\r\n            const oldValue = getter ? getter(data) : data[field];\r\n            (evt.target as HTMLInputElement).value = oldValue;\r\n            setValue(oldValue);\r\n            setIsTouched(false);\r\n            (evt.target as HTMLInputElement).blur();\r\n            // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\r\n            // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\r\n        }\r\n    }\r\n    const onBlur = (evt: React.FocusEvent<HTMLInputElement>) => {\r\n        if (readOnly || isBoolean) return;\r\n        const newValue = evt.target.value;\r\n        const oldValue = getter ? getter(data) : data[field];\r\n        if (newValue !== oldValue) {\r\n            if (setter) setter(newValue, data, field);\r\n            else data[field] = newValue;\r\n        }\r\n        // I terminate my editing, so I communicate it to other <Input /> that render the same field.\r\n        setIsTouched(false);\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.field;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.label;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.tooltip;\r\n    delete otherprops.hidden;\r\n    delete otherprops.inputStyle;\r\n    delete otherprops.children;\r\n    delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\r\n\r\n    let checked: boolean | undefined = undefined;\r\n    if (isBoolean) checked = typeof value === \"boolean\" ? value : (typeof value === \"string\" ? U.fromBoolString(value) : !!value);\r\n\r\n    let cursor: string;\r\n    if (tooltip) cursor = 'help';\r\n    else if (readOnly) cursor = 'not-allowed';\r\n    else if (isBoolean) cursor = 'pointer';\r\n    else cursor = 'auto';\r\n\r\n    let inputProps: GObject = { spellCheck: (props as any).spellCkeck || false, readOnly, type, value, checked,\r\n        className: [props.inputClassName, css].join(' '),\r\n        style: (props.inputStyle || {}),\r\n        onChange, onBlur, onKeyDown} // key:`${field}.${data?.id}`\r\n    if (!inputProps.style.cursor && cursor === 'not-allowed') { inputProps.style.cursor = cursor; }\r\n\r\n    let input: ReactNode;\r\n    let rootprops: GObject = {...otherprops};\r\n    switch (typeof rootprops.ref) {\r\n        default: rootprops.ref = inputRef; break;\r\n        case \"object\":\r\n            let oldref = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldref.current = inputRef.current = v; }\r\n            break;\r\n        case \"function\":\r\n            let oldreff = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldreff(v); inputRef.current = v; }\r\n            break;\r\n    }\r\n    if (tooltip) {\r\n        rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, (rootprops.ref));\r\n        rootprops.onMouseLeave = () => Tooltip.hide();\r\n    }\r\n    let rootkeys = new Set(...Object.keys(rootprops));\r\n    //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\r\n    //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\r\n    for (let k of rootkeys) {\r\n        if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\r\n        if (inputProps[k]) inputProps[k] = function(...a:any) { inputProps[k](arguments); rootprops[k](arguments); }\r\n        else inputProps[k] = rootprops[k];\r\n        delete rootprops[k];\r\n    }\r\n    if (!label && !autosize) {\r\n        if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\r\n        if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\r\n        let finaliprops = {...rootprops, ...inputProps};\r\n        return props.isTextArea ? <textarea {...finaliprops}>{finaliprops.value}</textarea> : <input {...finaliprops} />;\r\n    }\r\n    if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';\r\n    else input =  props.isTextArea ? <textarea {...inputProps}>{inputProps.value}</textarea> : <input {...inputProps}  />;\r\n\r\n    return <label {...rootprops}>{label || undefined}{input}</label>;\r\n    /*\r\n    return(<label className={'p-1'} {...otherprops}\r\n                  style={rootStyle}>\r\n\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                        onMouseLeave={e => setShowTooltip(false)}>{label}\r\n        </span>}\r\n\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                           onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n        </span>}\r\n\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n            <b className={'text-center text-capitalize'}>{field}</b>\r\n            <br />\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                         data-value={value}>{input}\r\n        </div> : input}\r\n    </label>);\r\n    */\r\n}\r\n\r\nInputComponent.cname = 'InputComponent';\r\nexport interface InputOwnProps {\r\n    data?: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field?: string;\r\n    // DANGER: use the data provided in parameters instead of using js closure, as the proxy accessed from using closure won't be updated in rerenders.\r\n    getter?: (data: any/*LPointerTargetable*/) => string | boolean | undefined;\r\n    setter?: (value: string|boolean, data: any, field: string) => void;\r\n    label?: string | ReactNode;\r\n    jsxLabel?: ReactNode; // @deprecated, use label\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n    'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    className?: string;\r\n    style?: GObject;\r\n    readonly?: boolean;\r\n    tooltip?: boolean | ReactNode;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    key?: React.Key | null;\r\n    placeholder?: string;\r\n    isTextArea?: boolean;\r\n    // todo: div contenteditable\r\n}\r\n\r\nexport interface SelectOwnProps extends InputOwnProps {\r\n    options?: JSX.Element;\r\n}\r\n\r\n\r\ninterface StateProps {\r\n    debugmodee: string;\r\n    data: LPointerTargetable & GObject;\r\n    // selected: Dictionary<Pointer<DUser>, LModelElement | null>;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<SelectOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nexport function InputMapStateToProps(state: DState, ownProps: SelectOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer | undefined = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data?.id;\r\n    ret.debugmodee = state.debug ? 'true' : 'false';\r\n    if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const InputConnected =\r\n    connect<StateProps, DispatchProps, SelectOwnProps, DState>(InputMapStateToProps, mapDispatchToProps)(InputComponent);\r\n\r\n\r\nexport function Input(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children}} />;\r\n}\r\nexport function TextArea(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"textarea\"}} />;\r\n}\r\nexport function Select(props: SelectOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"select\"}} />;\r\n}\r\nexport const Edit = Input;\r\n\r\nInputComponent.cname = 'InputComponent';\r\nInputConnected.cname = 'InputConnected';\r\nInput.cname = 'Input';\r\nTextArea.cname = 'TextArea';\r\nSelect.cname = 'Select';\r\nEdit.cname = 'Edit';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}