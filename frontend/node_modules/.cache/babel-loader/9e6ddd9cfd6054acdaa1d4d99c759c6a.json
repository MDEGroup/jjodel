{"ast":null,"code":"import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{LModelElement}from\"../../../joiner\";import React from\"react\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ModelMetaDataComponent(props){var _props$data;var ddata=(_props$data=props.data)===null||_props$data===void 0?void 0:_props$data.__raw;return/*#__PURE__*/_jsx(\"div\",{className:'px-3 mt-3 metadata-editor',children:!props.data?\"Select a Node.\":/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:props.data.name}),ddata.className!=='DModel'&&props.data.isInstantiable()&&/*#__PURE__*/_jsxs(\"label\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"my-auto\",children:\"Icon\"}),/*#__PURE__*/_jsx(\"input\",{className:\"ms-1 my-auto\",type:\"url\",placeholder:\"icon url or base64 string\",value:props.data.state.icon,onChange:function onChange(e){props.data.state={icon:e.target.value};}}),props.data.state.icon&&/*#__PURE__*/_jsx(\"img\",{className:\"ms-1 my-auto\",style:{maxWidth:\"50px\",maxHeight:\"50px\"},src:props.data.state.icon,alt:\"Invalid url/data\"})]})]})});}// todo: how to memo with redux?\n// memo(ModelMetaDataComponent, ((p1: AllProps, p2: AllProps) => { p1.data.clonedCounter === p2.data.clonedCounter}) as any);\nfunction mapStateToProps(state,ownProps){var _state$_lastSelected;var ret={};var dataid=(_state$_lastSelected=state._lastSelected)===null||_state$_lastSelected===void 0?void 0:_state$_lastSelected.modelElement;if(dataid)ret.data=LModelElement.fromPointer(dataid);/*\r\n    const nodeid = state._lastSelected?.node;\r\n    if(nodeid) ret.node = LGraphElement.fromPointer(nodeid);\r\n    const viewid = state._lastSelected?.view;\r\n    if(viewid) ret.view = LViewElement.fromPointer(viewid);*/return ret;}function mapDispatchToProps(dispatch){var ret={};return ret;}export var ModelMetaDataConnected=connect(mapStateToProps,mapDispatchToProps)(ModelMetaDataComponent);export function ModelMetaData(props){var children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(ModelMetaDataConnected,_objectSpread({},_objectSpread(_objectSpread({},props),{},{children:children})));}","map":{"version":3,"names":["LModelElement","React","connect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ModelMetaDataComponent","props","_props$data","ddata","data","__raw","className","children","name","isInstantiable","type","placeholder","value","state","icon","onChange","e","target","style","maxWidth","maxHeight","src","alt","mapStateToProps","ownProps","_state$_lastSelected","ret","dataid","_lastSelected","modelElement","fromPointer","mapDispatchToProps","dispatch","ModelMetaDataConnected","ModelMetaData","arguments","length","undefined","_objectSpread"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/structureEditor/ModelMetaData.tsx"],"sourcesContent":["import {\r\n    DNamedElement,\r\n    DPointerTargetable,\r\n    DState,\r\n    GObject,\r\n    LGraphElement, LModelElement,\r\n    LPointerTargetable, LViewElement,\r\n    Overlap,\r\n    Pointer\r\n} from \"../../../joiner\";\r\nimport React, {Dispatch, memo, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype AllProps = Overlap<OwnProps, Overlap<StateProps, DispatchProps>>;\r\nfunction ModelMetaDataComponent(props:AllProps): ReactElement{\r\n    let ddata: DNamedElement = props.data?.__raw as any;\r\n    return(\r\n    <div className={'px-3 mt-3 metadata-editor'}>\r\n        {\r\n        !props.data ? \"Select a Node.\" : <>\r\n        <h2>{props.data.name}</h2>\r\n        {ddata.className !== 'DModel' && props.data.isInstantiable() &&\r\n        <label className={\"d-flex\"}>\r\n            <span className={\"my-auto\"}>Icon</span>\r\n            <input className={\"ms-1 my-auto\"} type={\"url\"} placeholder={\"icon url or base64 string\"} value={props.data.state.icon}\r\n                   onChange={(e)=>{ props.data.state={icon:e.target.value}}}/>\r\n            {props.data.state.icon && <img className={\"ms-1 my-auto\"} style={{maxWidth: \"50px\", maxHeight: \"50px\"}} src={props.data.state.icon} alt={\"Invalid url/data\"}/>}\r\n        </label>}\r\n        </>}\r\n    </div>);\r\n}\r\n// todo: how to memo with redux?\r\n// memo(ModelMetaDataComponent, ((p1: AllProps, p2: AllProps) => { p1.data.clonedCounter === p2.data.clonedCounter}) as any);\r\n\r\nexport interface OwnProps {\r\n}\r\ninterface StateProps {\r\n    data: LPointerTargetable & GObject;\r\n}\r\ninterface DispatchProps { }\r\n\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as StateProps;\r\n    const dataid = state._lastSelected?.modelElement;\r\n    if (dataid) ret.data = LModelElement.fromPointer(dataid);\r\n    /*\r\n    const nodeid = state._lastSelected?.node;\r\n    if(nodeid) ret.node = LGraphElement.fromPointer(nodeid);\r\n    const viewid = state._lastSelected?.view;\r\n    if(viewid) ret.view = LViewElement.fromPointer(viewid);*/\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const ModelMetaDataConnected =\r\n    connect<StateProps, DispatchProps, OwnProps, DState>(mapStateToProps, mapDispatchToProps)(ModelMetaDataComponent);\r\n\r\n\r\nexport function ModelMetaData(props: OwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <ModelMetaDataConnected {...{...props, children}} />;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}