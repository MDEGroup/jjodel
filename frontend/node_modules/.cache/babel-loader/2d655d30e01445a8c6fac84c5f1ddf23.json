{"ast":null,"code":"import { DUser, LUser, U } from '../../joiner';\nimport Api from '../../data/api';\nclass UsersApi {\n  static async getUserByEmail(email) {\n    const response = await Api.get(`${Api.persistance}/users?email=${email}`);\n    if (response.code !== 200) return null;\n    const user = U.wrapper(response.data);\n    const rawUser = DUser.new(user.name, user.surname, user.nickname, user.affiliation, user.country, user.newsletter, user.email, '', user.id);\n    return LUser.fromD(rawUser);\n  }\n  static async getAllEmails() {\n    const response = await Api.get(`${Api.persistance}/users`);\n    if (response.code !== 200) return [];\n    const users = U.wrapper(response.data);\n    return users.filter(u => u.id !== DUser.current).map(u => u.email);\n  }\n}\nexport { UsersApi };","map":{"version":3,"names":["DUser","LUser","U","Api","UsersApi","getUserByEmail","email","response","get","persistance","code","user","wrapper","data","rawUser","new","name","surname","nickname","affiliation","country","newsletter","id","fromD","getAllEmails","users","filter","u","current","map"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/api/persistance/users.ts"],"sourcesContent":["import {DUser, LUser, U} from '../../joiner';\r\nimport Api from '../../data/api';\r\n\r\nclass UsersApi {\r\n    static async getUserByEmail(email: string): Promise<LUser|null> {\r\n        const response = await Api.get(`${Api.persistance}/users?email=${email}`);\r\n        if(response.code !== 200) return null;\r\n        const user = U.wrapper<DUser>(response.data);\r\n        const rawUser = DUser.new(user.name, user.surname, user.nickname, user.affiliation, user.country, user.newsletter, user.email, '', user.id);\r\n        return LUser.fromD(rawUser);\r\n    }\r\n    static async getAllEmails(): Promise<string[]> {\r\n        const response = await Api.get(`${Api.persistance}/users`);\r\n        if(response.code !== 200) return [];\r\n        const users = U.wrapper<DUser[]>(response.data);\r\n        return users.filter(u => u.id !== DUser.current).map(u => u.email);\r\n    }\r\n}\r\nexport {UsersApi};\r\n"],"mappings":"AAAA,SAAQA,KAAK,EAAEC,KAAK,EAAEC,CAAC,QAAO,cAAc;AAC5C,OAAOC,GAAG,MAAM,gBAAgB;AAEhC,MAAMC,QAAQ,CAAC;EACX,aAAaC,cAAcA,CAACC,KAAa,EAAuB;IAC5D,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,GAAGL,GAAG,CAACM,WAAW,gBAAgBH,KAAK,EAAE,CAAC;IACzE,IAAGC,QAAQ,CAACG,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI;IACrC,MAAMC,IAAI,GAAGT,CAAC,CAACU,OAAO,CAAQL,QAAQ,CAACM,IAAI,CAAC;IAC5C,MAAMC,OAAO,GAAGd,KAAK,CAACe,GAAG,CAACJ,IAAI,CAACK,IAAI,EAAEL,IAAI,CAACM,OAAO,EAAEN,IAAI,CAACO,QAAQ,EAAEP,IAAI,CAACQ,WAAW,EAAER,IAAI,CAACS,OAAO,EAAET,IAAI,CAACU,UAAU,EAAEV,IAAI,CAACL,KAAK,EAAE,EAAE,EAAEK,IAAI,CAACW,EAAE,CAAC;IAC3I,OAAOrB,KAAK,CAACsB,KAAK,CAACT,OAAO,CAAC;EAC/B;EACA,aAAaU,YAAYA,CAAA,EAAsB;IAC3C,MAAMjB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,GAAGL,GAAG,CAACM,WAAW,QAAQ,CAAC;IAC1D,IAAGF,QAAQ,CAACG,IAAI,KAAK,GAAG,EAAE,OAAO,EAAE;IACnC,MAAMe,KAAK,GAAGvB,CAAC,CAACU,OAAO,CAAUL,QAAQ,CAACM,IAAI,CAAC;IAC/C,OAAOY,KAAK,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKtB,KAAK,CAAC4B,OAAO,CAAC,CAACC,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACrB,KAAK,CAAC;EACtE;AACJ;AACA,SAAQF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}