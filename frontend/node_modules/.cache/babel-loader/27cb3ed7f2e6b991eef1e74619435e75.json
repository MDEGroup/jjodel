{"ast":null,"code":"import{DUser,LUser,U}from'../../joiner';import Api from'../../data/api';class UsersApi{static async getUserByEmail(email){const response=await Api.get(\"\".concat(Api.persistance,\"/users?email=\").concat(email));if(response.code!==200)return null;const user=U.wrapper(response.data);const rawUser=DUser.new(user.name,user.surname,user.nickname,user.affiliation,user.country,user.newsletter,user.email,'',user.id);return LUser.fromD(rawUser);}static async getAllEmails(){const response=await Api.get(\"\".concat(Api.persistance,\"/users\"));if(response.code!==200)return[];const users=U.wrapper(response.data);return users.filter(u=>u.id!==DUser.current).map(u=>u.email);}}export{UsersApi};","map":{"version":3,"names":["DUser","LUser","U","Api","UsersApi","getUserByEmail","email","response","get","concat","persistance","code","user","wrapper","data","rawUser","new","name","surname","nickname","affiliation","country","newsletter","id","fromD","getAllEmails","users","filter","u","current","map"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/api/persistance/users.ts"],"sourcesContent":["import {DUser, LUser, U} from '../../joiner';\r\nimport Api from '../../data/api';\r\n\r\nclass UsersApi {\r\n    static async getUserByEmail(email: string): Promise<LUser|null> {\r\n        const response = await Api.get(`${Api.persistance}/users?email=${email}`);\r\n        if(response.code !== 200) return null;\r\n        const user = U.wrapper<DUser>(response.data);\r\n        const rawUser = DUser.new(user.name, user.surname, user.nickname, user.affiliation, user.country, user.newsletter, user.email, '', user.id);\r\n        return LUser.fromD(rawUser);\r\n    }\r\n    static async getAllEmails(): Promise<string[]> {\r\n        const response = await Api.get(`${Api.persistance}/users`);\r\n        if(response.code !== 200) return [];\r\n        const users = U.wrapper<DUser[]>(response.data);\r\n        return users.filter(u => u.id !== DUser.current).map(u => u.email);\r\n    }\r\n}\r\nexport {UsersApi};\r\n"],"mappings":"AAAA,OAAQA,KAAK,CAAEC,KAAK,CAAEC,CAAC,KAAO,cAAc,CAC5C,MAAO,CAAAC,GAAG,KAAM,gBAAgB,CAEhC,KAAM,CAAAC,QAAS,CACX,YAAa,CAAAC,cAAcA,CAACC,KAAa,CAAuB,CAC5D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,IAAAC,MAAA,CAAIN,GAAG,CAACO,WAAW,kBAAAD,MAAA,CAAgBH,KAAK,CAAE,CAAC,CACzE,GAAGC,QAAQ,CAACI,IAAI,GAAK,GAAG,CAAE,MAAO,KAAI,CACrC,KAAM,CAAAC,IAAI,CAAGV,CAAC,CAACW,OAAO,CAAQN,QAAQ,CAACO,IAAI,CAAC,CAC5C,KAAM,CAAAC,OAAO,CAAGf,KAAK,CAACgB,GAAG,CAACJ,IAAI,CAACK,IAAI,CAAEL,IAAI,CAACM,OAAO,CAAEN,IAAI,CAACO,QAAQ,CAAEP,IAAI,CAACQ,WAAW,CAAER,IAAI,CAACS,OAAO,CAAET,IAAI,CAACU,UAAU,CAAEV,IAAI,CAACN,KAAK,CAAE,EAAE,CAAEM,IAAI,CAACW,EAAE,CAAC,CAC3I,MAAO,CAAAtB,KAAK,CAACuB,KAAK,CAACT,OAAO,CAAC,CAC/B,CACA,YAAa,CAAAU,YAAYA,CAAA,CAAsB,CAC3C,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,IAAAC,MAAA,CAAIN,GAAG,CAACO,WAAW,UAAQ,CAAC,CAC1D,GAAGH,QAAQ,CAACI,IAAI,GAAK,GAAG,CAAE,MAAO,EAAE,CACnC,KAAM,CAAAe,KAAK,CAAGxB,CAAC,CAACW,OAAO,CAAUN,QAAQ,CAACO,IAAI,CAAC,CAC/C,MAAO,CAAAY,KAAK,CAACC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACL,EAAE,GAAKvB,KAAK,CAAC6B,OAAO,CAAC,CAACC,GAAG,CAACF,CAAC,EAAIA,CAAC,CAACtB,KAAK,CAAC,CACtE,CACJ,CACA,OAAQF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}