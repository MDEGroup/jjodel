{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\forEndUser\\\\Control.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _this = this,\n  _s3 = $RefreshSig$();\nimport { U } from \"../../joiner\";\nimport { useEffect, useRef } from \"react\";\nimport \"./control.scss\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\nimport { useEffectOnce } from \"usehooks-ts\";\n\n/* Notification */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-widget control-notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You forgot something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), props.type && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Missing '\", props.field, \"'' in '\", props.widget, \"' in template definition.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), props.suggestion && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Notification;\nconst CheckProps = (widget, props) => {\n  let result = false;\n  let notification = null;\n  let field = null;\n  let type = null;\n  let suggestion = '';\n  switch (widget) {\n    case 'control':\n      if (!props.children) {\n        alert('You did not specify any children in <Control ...> </Control>');\n        // field = 'children';\n        // type = 'missing';\n        // suggestion = 'You did not specify any children in <Control ...> </Control>';\n        // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\n        result = true;\n      }\n      break;\n    case 'slider':\n      if (!props.node) {\n        alert('You did not specify node in <Slider .../>');\n        // field = 'node';\n        // type = 'missing';\n        // suggestion = '';\n        // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\n        result = true;\n      }\n      if (!props.name) {\n        alert('You did not specify name in <Slider .../>');\n        field = 'name';\n        type = 'missing';\n        suggestion = 'You did not specify name in <Slider .../>';\n        notification = /*#__PURE__*/_jsxDEV(Notification, {\n          widget: widget,\n          field: field,\n          type: type,\n          suggestion: suggestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this);\n        result = true;\n      }\n      break;\n  }\n  return result;\n};\n_c2 = CheckProps;\nfunction useClickOutside(ref, onClickOutside) {\n  _s();\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClickOutside();\n      }\n    }\n\n    // Bind\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // dispose\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, onClickOutside]);\n}\n\n/*  Control */\n_s(useClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst ControlComponent = (props, children) => {\n  _s2();\n  const [controlOpen, setControlOpen] = useStateIfMounted(false);\n  const controlRef = useRef(null);\n  const toggleValue = () => {\n    setControlOpen(!controlOpen);\n  };\n  function onClick(e) {\n    console.log('setup hide control');\n    U.clickedOutside(e.target, () => {\n      console.log('hide control');\n      setControlOpen(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `jjodel-control d-flex flex-row ${controlOpen ? 'opened' : 'closed'}`,\n      ref: controlRef,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'control-header',\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.payoff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), props.children || children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), controlOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'jjodel-control-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: e => {\n          toggleValue();\n        },\n        className: \"bi bi-toggles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'jjodel-control-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: e => {\n          toggleValue();\n        },\n        className: \"bi bi-toggles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(ControlComponent, \"KrDYazZewcbZu1WZuJAmjJ0mOI0=\", false, function () {\n  return [useStateIfMounted];\n});\n_c3 = ControlComponent;\nconst Control = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ControlComponent, {\n    ...props,\n    children: children || props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 12\n  }, _this);\n};\n\n/* Slider */\n_c4 = Control;\nconst SliderComponent = props => {\n  _s3();\n  const min = props.min ? props.min : 0;\n  const max = props.max ? props.max : 10;\n  const step = props.step ? props.step : 1;\n  const defaultValue = props.defaultValue ? props.defaultValue : max;\n  const name = props.name;\n  useEffectOnce(() => {\n    {/* @ts-ignore */}\n    props.node.state = {\n      [name]: defaultValue\n    };\n  });\n  function updateValue(value) {\n    // @ts-ignore\n    props.node.state = {\n      [name]: value\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: CheckProps('slider', props) || /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'control-widget control-slider',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'track',\n        style: {\n          transition: 'width 0.3s',\n          width: `calc((((100% - var(--knob) * 2 - 14px) / (${max})) * (${props.node.state[name]}))`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'range',\n        min: min,\n        max: max,\n        step: step,\n        onChange: e => {\n          updateValue(+e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), props.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'tip',\n        children: [props.title, \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: props.node.state[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }, this)\n  }, void 0, false);\n};\n_s3(SliderComponent, \"CDxPF1ymP5P7fskLwxmw8nmIJ1w=\", false, function () {\n  return [useEffectOnce];\n});\n_c5 = SliderComponent;\nconst Slider = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(SliderComponent, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 12\n  }, _this);\n};\n\n/* Toggle */\n\n// type ToggleValues = {\n//     true: string;\n//     false: string;\n// }\n\n// type ToggleProps = {\n//     name: string;\n//     values?: ToggleValues;\n//     labels?: ToggleValues;\n//     size?: string;\n//     style?: React.CSSProperties;\n// };\n\n// export const Toggle = (props: ToggleProps) => {\n//     const [value, setValue] = useState<boolean>(false);\n\n//     const labels = props.labels ? props.labels : {true: props.name+' on', false: props.name+' off'};\n//     const toggleValue = () => {\n//         setValue(!value);\n//         SetRootFieldAction.new(props.name, !value);\n//     };\n\n//     return (\n//         <div className={'toggle'} onClick={() => {toggleValue()}} style={props.style}>\n\n//             <input className={'toggle-input'} id={props.name} type=\"checkbox\" value=\"true\" checked={value}  />\n//             <label className={'toggle-label'}></label>\n\n//             <div className={\"toggle-labels\"}>\n//                 {value ?\n//                     <span className={\"toggle-on\"}>{labels['true']}</span>\n//                     :\n//                     <span className={\"toggle-off\"}>{labels['false']}</span>\n//                 }\n//             </div>\n\n//         </div>\n//     );\n// }\n\n/* Checkbox */\n_c6 = Slider;\nexport { Control, Slider };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"CheckProps\");\n$RefreshReg$(_c3, \"ControlComponent\");\n$RefreshReg$(_c4, \"Control\");\n$RefreshReg$(_c5, \"SliderComponent\");\n$RefreshReg$(_c6, \"Slider\");","map":{"version":3,"names":["U","useEffect","useRef","useStateIfMounted","useEffectOnce","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","field","widget","suggestion","_c","CheckProps","result","notification","alert","node","name","_c2","useClickOutside","ref","onClickOutside","_s","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ControlComponent","_s2","controlOpen","setControlOpen","controlRef","toggleValue","onClick","e","console","log","clickedOutside","title","payoff","_c3","Control","arguments","length","undefined","_this","_c4","SliderComponent","_s3","min","max","step","defaultValue","state","updateValue","value","style","transition","width","onChange","_c5","Slider","_c6","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/forEndUser/Control.tsx"],"sourcesContent":["import {ClickEvent, ControlPanel, LGraphElement, SetRootFieldAction, U} from \"../../joiner\";\r\nimport { ReactElement, ReactNode, useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./control.scss\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport { Tooltip } from \"./Tooltip\";\r\nimport { VertexOwnProps } from \"../../graph/graphElement/sharedTypes/sharedTypes\";\r\nimport { useEffectOnce } from \"usehooks-ts\";\r\n\r\n\r\n/* Notification */\r\n\r\ntype Widget = 'control'|'slider'|null;\r\ntype Field = 'node'|'name'|'children'|null;\r\ntype ErrorType = 'missing'|null;\r\n\r\ntype NotificationProps = {\r\n    widget: Widget,\r\n    field: Field,\r\n    type: ErrorType,\r\n    suggestion?: string\r\n}\r\nconst Notification = (props: NotificationProps) => {\r\n\r\n    return (\r\n        <div className=\"control-widget control-notification\">\r\n            <div className=\"control-header\">\r\n                <h1>You forgot something...</h1>\r\n                {props.type && <h2>Missing '{props.field}'' in '{props.widget}' in template definition.</h2>}\r\n            </div>\r\n\r\n            {props.suggestion && <p>{props.suggestion}</p>}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\ntype CheckReturnTYpe = {\r\n    error: boolean;\r\n    notification: any;\r\n}\r\n\r\nconst CheckProps = (widget: Widget, props: any): any => {\r\n\r\n    let result:any = false;\r\n    let notification: any|null = null;\r\n    let field: Field = null;\r\n    let type: ErrorType = null;\r\n    let suggestion = '';\r\n\r\n    switch(widget) {\r\n        case 'control':\r\n            if (!props.children) {\r\n                alert('You did not specify any children in <Control ...> </Control>');\r\n                // field = 'children';\r\n                // type = 'missing';\r\n                // suggestion = 'You did not specify any children in <Control ...> </Control>';\r\n                // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n            }\r\n        break;\r\n        case 'slider':\r\n            if (!props.node) {\r\n                alert('You did not specify node in <Slider .../>');\r\n                // field = 'node';\r\n                // type = 'missing';\r\n                // suggestion = '';\r\n                // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n\r\n            }\r\n            if (!props.name) {\r\n                alert('You did not specify name in <Slider .../>');\r\n                field = 'name';\r\n                type = 'missing';\r\n                suggestion = 'You did not specify name in <Slider .../>';\r\n                notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n            }\r\n        break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\ntype ControlProps = {\r\n    children: any;\r\n    title?: string;\r\n    payoff?: string;\r\n    icon?: boolean;\r\n}\r\n\r\nfunction useClickOutside(ref: any, onClickOutside: any) {\r\n    useEffect(() => {\r\n\r\n        function handleClickOutside(event: Event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                onClickOutside();\r\n            }\r\n        }\r\n\r\n      // Bind\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // dispose\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref, onClickOutside]);\r\n  }\r\n\r\n\r\n/*  Control */\r\n\r\nconst ControlComponent = (props: ControlProps, children?:ReactNode) => {\r\n    \r\n    const [controlOpen, setControlOpen] = useStateIfMounted(false);\r\n    const controlRef = useRef(null);\r\n\r\n    const toggleValue = () => {\r\n        setControlOpen(!controlOpen);\r\n\r\n    }\r\n\r\n\r\n    function onClick(e: any){\r\n        console.log('setup hide control');\r\n        U.clickedOutside(e.target as HTMLElement, ()=> {\r\n            console.log('hide control');\r\n            setControlOpen(false)\r\n        });\r\n    }\r\n    return (<>\r\n        <div className={`jjodel-control d-flex flex-row ${controlOpen ? 'opened' : 'closed'}`} ref={controlRef} onClick={onClick}>\r\n            <div className={'control-header'}>\r\n                <h1>{props.title}</h1>\r\n                <h2>{props.payoff}</h2>\r\n            </div>\r\n            {props.children || children}\r\n        </div>\r\n        {controlOpen ?\r\n            <div className={'jjodel-control-icon'}>\r\n                <i onClick={(e) => {toggleValue()}} className=\"bi bi-toggles\"></i>\r\n            </div>\r\n            :\r\n            <div className={'jjodel-control-icon'}>\r\n                <i onClick={(e) => {toggleValue()}} className=\"bi bi-toggles\"></i>\r\n            </div>\r\n        }\r\n    </>);\r\n}\r\n\r\nconst Control = (props: VertexOwnProps, children: ReactNode = []): ReactElement => {\r\n    return <ControlComponent {...props}>{children || props.children}</ControlComponent>;\r\n}\r\n\r\n\r\n/* Slider */\r\n\r\ntype SliderProps = {\r\n    node: LGraphElement;\r\n    name?: string;\r\n    defaultValue?:number;\r\n    title?:string;\r\n    min?: number;\r\n    max?: number;\r\n    step?: number;\r\n    label?: string;\r\n}\r\n\r\nconst SliderComponent = (props: SliderProps) => {\r\n\r\n    const min = props.min ? props.min : 0;\r\n    const max = props.max ? props.max : 10;\r\n    const step = props.step ? props.step : 1;\r\n    const defaultValue = props.defaultValue ? props.defaultValue : max;\r\n    const name = props.name;\r\n\r\n    useEffectOnce(\r\n        () => {\r\n            {/* @ts-ignore */}\r\n            props.node.state = {[name] : defaultValue};\r\n        }\r\n    );\r\n\r\n    function updateValue(value: number) {\r\n        // @ts-ignore\r\n        props.node.state = {[name]: value};\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {CheckProps('slider', props) || <div className={'control-widget control-slider'}>\r\n                {/* <div className={'track'} style={{transition: 'width 0.3s', width: `calc((100% - var(--knob) * 2 - 14px) / ${max} * ${props.node.state[name]})`}}></div>*/}\r\n\r\n                <div className={'track'}\r\n                    style={{transition: 'width 0.3s', width: `calc((((100% - var(--knob) * 2 - 14px) / (${max})) * (${props.node.state[name as string]}))`}}>\r\n                </div>\r\n\r\n                <input\r\n                    type={'range'}\r\n                    min={min}\r\n                    max={max}\r\n                    step={step}\r\n                    onChange={(e)=>{updateValue(+e.target.value)}} />\r\n\r\n                {/* @ts-ignore */}\r\n                {props.title && <div className={'tip'}>{props.title} <label>{props.node.state[name]}</label></div>}\r\n                </div>\r\n            }\r\n        </>);\r\n}\r\n\r\nconst Slider = (props: SliderProps, children: ReactNode = []): ReactElement => {\r\n    return <SliderComponent {...props} />;\r\n}\r\n\r\n\r\n/* Toggle */\r\n\r\n// type ToggleValues = {\r\n//     true: string;\r\n//     false: string;\r\n// }\r\n\r\n// type ToggleProps = {\r\n//     name: string;\r\n//     values?: ToggleValues;\r\n//     labels?: ToggleValues;\r\n//     size?: string;\r\n//     style?: React.CSSProperties;\r\n// };\r\n\r\n// export const Toggle = (props: ToggleProps) => {\r\n//     const [value, setValue] = useState<boolean>(false);\r\n\r\n//     const labels = props.labels ? props.labels : {true: props.name+' on', false: props.name+' off'};\r\n//     const toggleValue = () => {\r\n//         setValue(!value);\r\n//         SetRootFieldAction.new(props.name, !value);\r\n//     };\r\n\r\n\r\n\r\n//     return (\r\n//         <div className={'toggle'} onClick={() => {toggleValue()}} style={props.style}>\r\n\r\n//             <input className={'toggle-input'} id={props.name} type=\"checkbox\" value=\"true\" checked={value}  />\r\n//             <label className={'toggle-label'}></label>\r\n\r\n//             <div className={\"toggle-labels\"}>\r\n//                 {value ?\r\n//                     <span className={\"toggle-on\"}>{labels['true']}</span>\r\n//                     :\r\n//                     <span className={\"toggle-off\"}>{labels['false']}</span>\r\n//                 }\r\n//             </div>\r\n\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n/* Checkbox */\r\n\r\n\r\n\r\nexport {Control, Slider};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}