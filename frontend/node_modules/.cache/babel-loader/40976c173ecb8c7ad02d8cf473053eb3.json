{"ast":null,"code":"import { OclEngine } from \"@stekoe/ocl.js\";\nimport { DPointerTargetable, Log, LPointerTargetable, RuntimeAccessibleClass, store, transientProperties, ViewEClassMatch } from \"../joiner\";\nlet windoww = window;\nexport class Company {\n  constructor() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cname';\n    let employee = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let manager = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.name = name;\n    this.employee = employee;\n    this.manager = manager;\n    Company.all.push(this);\n  }\n}\nCompany.all = [];\nexport class Persona {\n  constructor() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pname';\n    let age = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n    let isUnemployed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.name = name;\n    this.age = age;\n    this.isUnemployed = isUnemployed;\n    Persona.all.push(this);\n  }\n}\nPersona.all = [];\nexport class OCL {\n  static evaluate(obj0, constructor, oclexp) {\n    let typeused = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let oclEngine = arguments.length > 4 ? arguments[4] : undefined;\n    windoww.OclEngine = OclEngine;\n    if (!oclEngine) {\n      oclEngine = OclEngine.create();\n      var oclResult = null;\n      // let objexp = //\"context Object inv: self.age > 0\" +\n      if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\n      const typeregister = {};\n      typeregister[constructor.cname || constructor.name] = constructor;\n      for (let type of typeused) {\n        typeregister[type.cname || type.name] = type;\n      }\n      oclEngine.registerTypes(typeregister);\n      oclEngine.addOclExpression(oclexp);\n    }\n    let obj = obj0;\n    if (!obj) {\n      obj = new Persona();\n      obj.age = -55;\n      obj.name = {\n        notEmpty: () => {\n          console.log('innerfunc');\n          return true;\n        }\n      };\n      obj.f = a => {\n        console.error('called a', a);\n        return a > 0;\n      };\n      obj.name0 = '';\n      //obj.$$typeof = Persona;\n\n      obj.__asArray = true;\n    }\n    // as you set classname in runtimeaccessible you must set this typeName\n    // obj.typeName = constructor.name || constructor;\n    // obj = getPath;\n    // obj.constructor = Persona;\n    oclResult = oclEngine.evaluate(obj);\n    return oclResult;\n  }\n  static test_bugged_new(mp0, view0, node0) {\n    if (!mp0 || !view0) return ViewEClassMatch.MISMATCH_OCL;\n    let mp, lmp;\n    let node, lnode;\n    let view;\n    // @ts-ignore\n    if (mp = mp0.__raw) lmp = mp0;else {\n      var _lmp;\n      lmp = mp0;\n      mp = (_lmp = lmp) === null || _lmp === void 0 ? void 0 : _lmp.__raw;\n    }\n    // @ts-ignore\n    if (node = node0 === null || node0 === void 0 ? void 0 : node0.__raw) lnode = node0;else {\n      var _lnode;\n      lnode = node0;\n      node = (_lnode = lnode) === null || _lnode === void 0 ? void 0 : _lnode.__raw;\n    }\n    // @ts-ignore\n    view = (view0 === null || view0 === void 0 ? void 0 : view0.__raw) || view0;\n    let oclCondition = view.oclCondition;\n    let tv = transientProperties.view[view.id];\n    console.log(\"Evaluating ocl: \" + view.oclCondition, {\n      view,\n      ocl: view.oclCondition\n    });\n    if (!view.oclCondition) {\n      return true;\n    }\n    let oclEngine;\n    if (!tv) transientProperties.view[view.id] = tv = {};\n    if (tv.oclEngine) oclEngine = tv.oclEngine;else {\n      windoww.OclEngine = OclEngine;\n      tv.oclEngine = oclEngine = OclEngine.create();\n      let state = store.getState();\n      let rootModel = mp;\n      windoww.rootModel = rootModel;\n      while (rootModel && rootModel.className !== \"DModel\") rootModel = DPointerTargetable.fromPointer(rootModel.father, state);\n      oclEngine.registerTypes(RuntimeAccessibleClass.getOCLClasses(rootModel.id));\n      oclEngine.addOclExpression(oclCondition);\n      console.log(\"4 Evaluating ocl: \" + view.oclCondition, {\n        view,\n        ocl: view.oclCondition,\n        mp,\n        lmp,\n        oclEngine\n      });\n    }\n    try {\n      let oclResult;\n      if (!lmp) lmp = LPointerTargetable.fromD(mp);\n      if (node) {\n        // dangerous cheat, to make ocl be able to access current \"node\" if model have multiple nodes.\n        const oldNode = transientProperties.modelElement[mp.id].node;\n        transientProperties.modelElement[mp.id].node = lnode || LPointerTargetable.fromD(node);\n        oclResult = oclEngine.evaluate(lmp);\n        transientProperties.modelElement[mp.id].node = oldNode;\n      } else oclResult = oclEngine.evaluate(lmp);\n      windoww.oclDebug = {\n        oclResult,\n        oclEngine,\n        lmp,\n        oclCondition\n      };\n      console.log(\"5 Evaluating ocl: \" + view.oclCondition, {\n        view,\n        ocl: view.oclCondition,\n        mp,\n        lmp,\n        oclResult,\n        oclEngine\n      });\n      // return oclResult ? OCL.getOCLScore(oclCondition) : ViewEClassMatch.MISMATCH_OCL;\n      let matches = oclResult && oclResult.getEvaluatedContexts().length > 0 && oclResult.getResult();\n      return matches || ViewEClassMatch.MISMATCH_OCL;\n    } catch (e) {\n      Log.ee('failed to evalute OCL expression:', {\n        e,\n        obj: mp,\n        view: view.name,\n        oclexp: view.oclCondition,\n        node\n      });\n      return ViewEClassMatch.MISMATCH_OCL;\n    }\n    // oclEngine.setTypeDeterminer()\n  }\n  static test(me, view, node) {\n    if (!me || !view) return false;\n    const condition = view.oclCondition;\n    if (!condition) return true;\n    try {\n      const types = RuntimeAccessibleClass.getAllClasses();\n      return !!OCL.filter(true, 'src', [me], condition, types)[0];\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // warning: do not read ret.result with returntype='ocl'\n  // it neeeds to be evaluated both with  ret.getEvaluatedContexts().length > 0 && ret.getResult();\n  static filter(keepIndex, returnType, obj0, oclexp) {\n    let typeused = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n    windoww.OclEngine = OclEngine;\n    var oclEngine = OclEngine.create();\n    var oclResult = null;\n    windoww.oclEngine = oclEngine;\n    const typeregister = {};\n    for (let type of typeused) {\n      typeregister[type.cname || type.name] = type;\n    }\n    oclEngine.registerTypes(typeregister);\n    if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\n    oclEngine.addOclExpression(oclexp);\n    let obj = obj0;\n    let ret = [];\n    for (let i = 0; i < obj.length; i++) {\n      let res;\n      try {\n        res = oclEngine.evaluate(obj[i]);\n      } catch (e) {\n        console.error('failed to evalute object:', {\n          e\n        });\n        res = null;\n      }\n      if (returnType === 'ocl') {\n        ret[i] = res;\n        continue;\n      }\n      let bool = res && res.getEvaluatedContexts().length > 0 && res.getResult();\n      if (returnType === 'bool') ret[i] = bool;else ret[i] = bool ? obj[i] : null;\n    }\n    if (!keepIndex) {\n      ret = ret.filter(r => !!r);\n    }\n    return ret;\n  }\n}\nwindoww.OCL = OCL;\nconst oclEngine = OclEngine.create();\n\n/*\r\n\r\nlet p = new Persona();\r\np.age = 0;\r\nlet p2 = new Persona();\r\np2.age = 1;\r\nlet p3 = new Persona();\r\np3.age = -5;\r\nlet pp = [p, p2, p3];\r\nOCL.filter(true, 'ocl', pp, undefined, \"context Persona inv: self.age>0\")\r\n\r\n\r\n///\r\n\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.abstract\")\r\n/// works\r\nlet pp = Selectors.getAll(DClass, undefined, undefined, true);\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.name = \\\"class_2\\\"\")\r\n\r\n* */\n\noclEngine.addOclExpression(`\n    -- No one should work that long...\n    context Company inv:\n        self.employee->forAll(p : Person | p.age <= 65 )\n\n    -- If a company has a manager, \n    -- the company has at least one employee.\n    context Company\n        inv: self.manager.isUnemployed = false\n        inv: self.employee->notEmpty()\n`);\nlet company = new Company();\ncompany.employee.push(new Persona());\nconst oclResult = oclEngine.evaluate(company);\nwindoww.Person = Persona;\nwindoww.Company = Company;\nwindoww.oclEngine = oclEngine;\nconsole.log('tests:', '\\n' + 'oclEngine.addOclExpression(`\\n' + '    -- No one should work that long...\\n' + '    context Company inv:\\n' + '        self.employee->forAll(p : Person | p.age <= 65 )\\n' + '\\n' + '    -- If a company has a manager, \\n' + '    -- the company has at least one employee.\\n' + '    context Company\\n' + '        inv: self.manager.isUnemployed = false\\n' + '        inv: self.employee->notEmpty()\\n' + '`);\\n' + '\\n' + 'const customTypes = {\\n' + '  \"Person\": Person, \"Company\": Company \\n' + '}\\n' + '\\n' + 'oclEngine.registerTypes(customTypes);' + 'let company = new Company();\\n' + 'let employee = new Person();\\n' + 'let parent = new Person();\\n' + 'let child = new Person();\\n' + 'child.parents = [parent];\\n' + 'parent.parents = [parent];\\n' + 'employee.age = 70;\\n' + 'company.employee.push(employee);\\n' + '\\n' + 'console.log(\\'evaluate company\\', oclEngine.evaluate(company));\\n' + '\\n' + '\\n' + '// parentchild test\\n' + 'let oclEnginep = OclEngine.create();\\n' + 'oclEnginep.addOclExpression(`\\n' + '    context Person\\n' + '        inv: self.parents->forAll(p | p <> self)\\n' + '`)\\n' + 'console.log(\\'evaluate parent\\', oclEnginep.evaluate(parent));\\n' + 'console.log(\\'evaluate child\\', oclEnginep.evaluate(child));\\n');","map":{"version":3,"names":["OclEngine","DPointerTargetable","Log","LPointerTargetable","RuntimeAccessibleClass","store","transientProperties","ViewEClassMatch","windoww","window","Company","constructor","name","arguments","length","undefined","employee","manager","all","push","Persona","age","isUnemployed","OCL","evaluate","obj0","oclexp","typeused","oclEngine","create","oclResult","typeregister","cname","type","registerTypes","addOclExpression","obj","notEmpty","console","log","f","a","error","name0","__asArray","test_bugged_new","mp0","view0","node0","MISMATCH_OCL","mp","lmp","node","lnode","view","__raw","_lmp","_lnode","oclCondition","tv","id","ocl","state","getState","rootModel","className","fromPointer","father","getOCLClasses","fromD","oldNode","modelElement","oclDebug","matches","getEvaluatedContexts","getResult","e","ee","test","me","condition","types","getAllClasses","filter","keepIndex","returnType","ret","i","res","bool","r","company","Person"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/ocl/ocl.tsx"],"sourcesContent":["import {OclEngine} from \"@stekoe/ocl.js\"\r\nimport {\r\n    Constructor, DGraphElement,\r\n    DModel,\r\n    DModelElement, DPointerTargetable, DState, DViewElement,\r\n    GObject, LGraphElement,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass, store, transientProperties, ViewEClassMatch\r\n} from \"../joiner\";\r\nimport {OclResult} from \"@stekoe/ocl.js/dist/components/OclResult\";\r\n\r\nlet windoww = window as any;\r\n\r\nexport class Company {\r\n    static all: Company[] = [];\r\n    constructor(public name: string ='cname', public employee: Persona[]=[], public manager: Persona|null = null) { Company.all.push(this); }\r\n}\r\nexport class Persona {\r\n    static all: Persona[] = [];\r\n    constructor(public name: string='pname', public age: number=18, public isUnemployed: boolean=true){ Persona.all.push(this) }\r\n}\r\n\r\nexport class OCL{\r\n    public static evaluate<T extends GObject>(obj0: T, constructor: Constructor<T>, oclexp: string, typeused: Constructor[]=[], oclEngine?: OclEngine): OclResult {\r\n        windoww.OclEngine = OclEngine;\r\n        if (!oclEngine) {\r\n            oclEngine = OclEngine.create();\r\n            var oclResult = null;\r\n            // let objexp = //\"context Object inv: self.age > 0\" +\r\n            if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n\r\n\r\n            const typeregister: GObject = {};\r\n            typeregister[(constructor as any as typeof RuntimeAccessibleClass).cname || constructor.name] = constructor;\r\n            for (let type of typeused) { typeregister[(type as any as typeof RuntimeAccessibleClass).cname || type.name] = type; }\r\n            oclEngine.registerTypes(typeregister);\r\n            oclEngine.addOclExpression(oclexp);\r\n        }\r\n\r\n        let obj: GObject = obj0;\r\n        if (!obj) {\r\n            obj = new Persona();\r\n            obj.age = -55;\r\n            obj.name = {notEmpty: () => { console.log('innerfunc'); return true} };\r\n            obj.f = (a:any) => { console.error('called a', a); return a>0};\r\n            obj.name0= '';\r\n//obj.$$typeof = Persona;\r\n\r\n            obj.__asArray = true;\r\n        }\r\n        // as you set classname in runtimeaccessible you must set this typeName\r\n        // obj.typeName = constructor.name || constructor;\r\n// obj = getPath;\r\n// obj.constructor = Persona;\r\n        oclResult = oclEngine.evaluate(obj);\r\n        return oclResult;\r\n    }\r\n\r\n    public static test_bugged_new(mp0: DModelElement | LModelElement | undefined, view0: LViewElement | DViewElement | undefined, node0?: LGraphElement | DGraphElement): boolean | (typeof ViewEClassMatch)[\"MISMATCH_OCL\"] {\r\n        if (!mp0 || !view0) return ViewEClassMatch.MISMATCH_OCL;\r\n        let mp: DModelElement, lmp: LModelElement;\r\n        let node: DGraphElement, lnode: LGraphElement;\r\n        let view: DViewElement;\r\n        // @ts-ignore\r\n        if ((mp = mp0.__raw)) lmp = mp0; else { lmp = mp0; mp = (lmp as LModelElement)?.__raw; }\r\n        // @ts-ignore\r\n        if ((node = node0?.__raw)) lnode = node0; else { lnode = node0; node = lnode?.__raw; }\r\n        // @ts-ignore\r\n        view = view0?.__raw || view0;\r\n        let oclCondition = view.oclCondition;\r\n        let tv = transientProperties.view[view.id];\r\n        console.log(\"Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition});\r\n        if (!view.oclCondition) { return true; }\r\n        let oclEngine: OclEngine;\r\n        if (!tv) transientProperties.view[view.id] = tv = {} as any;\r\n        if (tv.oclEngine) oclEngine = tv.oclEngine;\r\n        else {\r\n            windoww.OclEngine = OclEngine;\r\n            tv.oclEngine = oclEngine = OclEngine.create();\r\n            let state: DState = store.getState();\r\n            let rootModel: DModel = mp as any;\r\n            windoww.rootModel = rootModel;\r\n            while (rootModel && rootModel.className !== \"DModel\") rootModel = DPointerTargetable.fromPointer(rootModel.father, state);\r\n            oclEngine.registerTypes(RuntimeAccessibleClass.getOCLClasses(rootModel.id));\r\n            oclEngine.addOclExpression(oclCondition);\r\n            console.log(\"4 Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition, mp, lmp, oclEngine});\r\n        }\r\n        try {\r\n            let oclResult: OclResult;\r\n            if (!lmp) lmp = LPointerTargetable.fromD(mp);\r\n            if (node) {\r\n                // dangerous cheat, to make ocl be able to access current \"node\" if model have multiple nodes.\r\n                const oldNode = transientProperties.modelElement[mp.id].node;\r\n                transientProperties.modelElement[mp.id].node = lnode || LPointerTargetable.fromD(node);\r\n                oclResult = oclEngine.evaluate(lmp)\r\n                transientProperties.modelElement[mp.id].node = oldNode;\r\n            }\r\n            else oclResult = oclEngine.evaluate(lmp);\r\n            windoww.oclDebug={oclResult, oclEngine, lmp, oclCondition};\r\n            console.log(\"5 Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition, mp, lmp, oclResult, oclEngine});\r\n            // return oclResult ? OCL.getOCLScore(oclCondition) : ViewEClassMatch.MISMATCH_OCL;\r\n            let matches: boolean = oclResult && oclResult.getEvaluatedContexts().length > 0 && oclResult.getResult();\r\n            return matches || ViewEClassMatch.MISMATCH_OCL;\r\n        } catch(e) {\r\n            Log.ee('failed to evalute OCL expression:', {e, obj: mp, view: view.name, oclexp: view.oclCondition, node});\r\n            return ViewEClassMatch.MISMATCH_OCL;\r\n        }\r\n        // oclEngine.setTypeDeterminer()\r\n    }\r\n    public static test(me: DModelElement | LModelElement | undefined, view: LViewElement | DViewElement | undefined, node?: LGraphElement | DGraphElement): boolean | (typeof ViewEClassMatch)[\"MISMATCH_OCL\"] {\r\n        if (!me || !view) return false;\r\n        const condition = view.oclCondition;\r\n        if (!condition) return true;\r\n        try {\r\n            const types = RuntimeAccessibleClass.getAllClasses();\r\n            return !!OCL.filter(true, 'src', [me], condition, types as any)[0];\r\n        } catch (e) {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // warning: do not read ret.result with returntype='ocl'\r\n    // it neeeds to be evaluated both with  ret.getEvaluatedContexts().length > 0 && ret.getResult();\r\n    public static filter<T extends GObject>(keepIndex: boolean, returnType: 'ocl' | 'bool' | 'src', obj0: T[], oclexp: string, typeused: Constructor[]=[]) {\r\n        windoww.OclEngine = OclEngine;\r\n        var oclEngine = OclEngine.create();\r\n        var oclResult = null;\r\n        windoww.oclEngine = oclEngine;\r\n        const typeregister: GObject = {};\r\n        for (let type of typeused) { typeregister[(type as any as typeof RuntimeAccessibleClass).cname || type.name] = type; }\r\n        oclEngine.registerTypes(typeregister);\r\n        if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n        oclEngine.addOclExpression(oclexp);\r\n\r\n        let obj: GObject[] = obj0;\r\n        let ret: ((OclResult | boolean) | (GObject | null))[] = [];\r\n\r\n        for (let i = 0; i < obj.length; i++) {\r\n            let res: OclResult | null;\r\n            try { res = oclEngine.evaluate(obj[i]); }\r\n            catch(e) { console.error('failed to evalute object:', {e}); res = null; }\r\n            if (returnType === 'ocl') {\r\n                ret[i] = res;\r\n                continue; }\r\n            let bool = res && res.getEvaluatedContexts().length > 0 && res.getResult();\r\n            if (returnType === 'bool') ret[i] = bool;\r\n            else ret[i] = bool ? obj[i] : null;\r\n        }\r\n\r\n        if (!keepIndex) {\r\n            ret = (ret).filter((r:any) => !!r) as any;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n}\r\nwindoww.OCL = OCL;\r\nconst oclEngine = OclEngine.create();\r\n\r\n\r\n/*\r\n\r\nlet p = new Persona();\r\np.age = 0;\r\nlet p2 = new Persona();\r\np2.age = 1;\r\nlet p3 = new Persona();\r\np3.age = -5;\r\nlet pp = [p, p2, p3];\r\nOCL.filter(true, 'ocl', pp, undefined, \"context Persona inv: self.age>0\")\r\n\r\n\r\n///\r\n\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.abstract\")\r\n/// works\r\nlet pp = Selectors.getAll(DClass, undefined, undefined, true);\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.name = \\\"class_2\\\"\")\r\n\r\n* */\r\n\r\noclEngine.addOclExpression(`\r\n    -- No one should work that long...\r\n    context Company inv:\r\n        self.employee->forAll(p : Person | p.age <= 65 )\r\n\r\n    -- If a company has a manager, \r\n    -- the company has at least one employee.\r\n    context Company\r\n        inv: self.manager.isUnemployed = false\r\n        inv: self.employee->notEmpty()\r\n`);\r\n\r\nlet company = new Company();\r\ncompany.employee.push(new Persona());\r\n\r\nconst oclResult = oclEngine.evaluate(company);\r\n\r\n\r\n\r\nwindoww.Person = Persona;\r\nwindoww.Company = Company;\r\nwindoww.oclEngine = oclEngine;\r\n\r\nconsole.log('tests:', '\\n' +\r\n    'oclEngine.addOclExpression(`\\n' +\r\n    '    -- No one should work that long...\\n' +\r\n    '    context Company inv:\\n' +\r\n    '        self.employee->forAll(p : Person | p.age <= 65 )\\n' +\r\n    '\\n' +\r\n    '    -- If a company has a manager, \\n' +\r\n    '    -- the company has at least one employee.\\n' +\r\n    '    context Company\\n' +\r\n    '        inv: self.manager.isUnemployed = false\\n' +\r\n    '        inv: self.employee->notEmpty()\\n' +\r\n    '`);\\n' +\r\n    '\\n' +\r\n    'const customTypes = {\\n' +\r\n    '  \"Person\": Person, \"Company\": Company \\n' +\r\n    '}\\n' +\r\n    '\\n' +\r\n    'oclEngine.registerTypes(customTypes);' +\r\n    'let company = new Company();\\n' +\r\n    'let employee = new Person();\\n' +\r\n    'let parent = new Person();\\n' +\r\n    'let child = new Person();\\n' +\r\n    'child.parents = [parent];\\n' +\r\n    'parent.parents = [parent];\\n' +\r\n    'employee.age = 70;\\n' +\r\n    'company.employee.push(employee);\\n' +\r\n    '\\n' +\r\n    'console.log(\\'evaluate company\\', oclEngine.evaluate(company));\\n' +\r\n    '\\n' +\r\n    '\\n' +\r\n    '// parentchild test\\n' +\r\n    'let oclEnginep = OclEngine.create();\\n' +\r\n    'oclEnginep.addOclExpression(`\\n' +\r\n    '    context Person\\n' +\r\n    '        inv: self.parents->forAll(p | p <> self)\\n' +\r\n    '`)\\n' +\r\n    'console.log(\\'evaluate parent\\', oclEnginep.evaluate(parent));\\n' +\r\n    'console.log(\\'evaluate child\\', oclEnginep.evaluate(child));\\n');\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}