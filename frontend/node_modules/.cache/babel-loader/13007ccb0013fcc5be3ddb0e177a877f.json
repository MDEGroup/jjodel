{"ast":null,"code":"export class Dependencies {}\nDependencies.state = `(ret) => { \n        // scope contains: data, node, view, constants, state\n        // ** preparations and default behaviour here ** //\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\n        ret.data = data\n        ret.node = node\n        ret.view = view\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\n        // add preparation code here (like for loops to count something), then list the dependencies below.\n      \n        // ** declarations here ** //\n        ret.features = data.features\n    }`;\nDependencies.command = `(ret) => { \n        // scope contains: data, node, view, constants, state\n        // ** preparations and default behaviour here ** //\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\n        ret.data = data\n        ret.node = node\n        ret.view = view\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\n        // add preparation code here (like for loops to count something), then list the dependencies below.\n      \n        // ** declarations here ** //\n        ret.name = data.$name.value\n    }`;\nDependencies.events = event => `(ret) => { \n        // scope contains: data, node, view, constants, state\n        // ** preparations and default behaviour here ** //\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\n        ret.data = data\n        ret.node = node\n        ret.view = view\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\n        // add preparation code here (like for loops to count something), then list the dependencies below.\n        \n        // ** declarations here ** //\n        ret.events = data.model.objects.filter(o => o.instanceof && o.instanceof.id === '${event.id}').length\n    }`;\nDependencies.event = `(ret) => { \n        // scope contains: data, node, view, constants, state\n        // ** preparations and default behaviour here ** //\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\n        ret.data = data\n        ret.node = node\n        ret.view = view\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\n        // add preparation code here (like for loops to count something), then list the dependencies below.\n      \n        // ** declarations here ** //\n        ret.name = data.$name.value\n    }`;\nDependencies.transition = `(ret) => { \n        // scope contains: data, node, view, constants, state\n        // ** preparations and default behaviour here ** //\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\n        ret.data = data\n        ret.node = node\n        ret.view = view\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\n        // add preparation code here (like for loops to count something), then list the dependencies below.\n      \n        // ** declarations here ** //\n        ret.source = !!(data.$source.value)\n        ret.target = !!(data.$target.value)\n        ret.trigger = !!(data.$trigger.value)\n    }`;","map":{"version":3,"names":["Dependencies","state","command","events","event","id","transition"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/examples/StateMachine/views/dependencies.ts"],"sourcesContent":["import {LClass} from \"../../../model/logicWrapper\";\r\n\r\nexport class Dependencies {\r\n    static state = `(ret) => { \r\n        // scope contains: data, node, view, constants, state\r\n        // ** preparations and default behaviour here ** //\r\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\r\n        ret.data = data\r\n        ret.node = node\r\n        ret.view = view\r\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\r\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\r\n        // add preparation code here (like for loops to count something), then list the dependencies below.\r\n      \r\n        // ** declarations here ** //\r\n        ret.features = data.features\r\n    }`;\r\n    static command = `(ret) => { \r\n        // scope contains: data, node, view, constants, state\r\n        // ** preparations and default behaviour here ** //\r\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\r\n        ret.data = data\r\n        ret.node = node\r\n        ret.view = view\r\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\r\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\r\n        // add preparation code here (like for loops to count something), then list the dependencies below.\r\n      \r\n        // ** declarations here ** //\r\n        ret.name = data.$name.value\r\n    }`;\r\n    static events = (event: LClass) => `(ret) => { \r\n        // scope contains: data, node, view, constants, state\r\n        // ** preparations and default behaviour here ** //\r\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\r\n        ret.data = data\r\n        ret.node = node\r\n        ret.view = view\r\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\r\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\r\n        // add preparation code here (like for loops to count something), then list the dependencies below.\r\n        \r\n        // ** declarations here ** //\r\n        ret.events = data.model.objects.filter(o => o.instanceof && o.instanceof.id === '${event.id}').length\r\n    }`;\r\n    static event = `(ret) => { \r\n        // scope contains: data, node, view, constants, state\r\n        // ** preparations and default behaviour here ** //\r\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\r\n        ret.data = data\r\n        ret.node = node\r\n        ret.view = view\r\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\r\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\r\n        // add preparation code here (like for loops to count something), then list the dependencies below.\r\n      \r\n        // ** declarations here ** //\r\n        ret.name = data.$name.value\r\n    }`;\r\n    static transition = `(ret) => { \r\n        // scope contains: data, node, view, constants, state\r\n        // ** preparations and default behaviour here ** //\r\n        console.log('inside ud default func pre', {ret:{...ret}, data, node, view})\r\n        ret.data = data\r\n        ret.node = node\r\n        ret.view = view\r\n        console.log('inside ud default func post', {ret:{...ret}, data, node, view})\r\n        // data, node, view are dependencies by default. delete them above if you want to remove them.\r\n        // add preparation code here (like for loops to count something), then list the dependencies below.\r\n      \r\n        // ** declarations here ** //\r\n        ret.source = !!(data.$source.value)\r\n        ret.target = !!(data.$target.value)\r\n        ret.trigger = !!(data.$trigger.value)\r\n    }`;\r\n}\r\n"],"mappings":"AAEA,OAAO,MAAMA,YAAY,CAAC;AAAbA,YAAY,CACdC,KAAK,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AAdOD,YAAY,CAedE,OAAO,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AA5BOF,YAAY,CA6BdG,MAAM,GAAIC,KAAa,IAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2FA,KAAK,CAACC,EAAE;AACnG,MAAM;AA1COL,YAAY,CA2CdI,KAAK,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AAxDOJ,YAAY,CAyDdM,UAAU,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}