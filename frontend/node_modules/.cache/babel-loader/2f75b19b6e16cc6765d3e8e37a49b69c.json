{"ast":null,"code":"/*\r\nlet arr: ((typeof GraphElement | typeof Edge) & { cname:string })[] = [\r\n    Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Diamond, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rhombus, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle,\r\n    Edge,\r\n    GraphElement,\r\n    Vertex, VoidVertex, EdgePoint,\r\n    Graph, GraphVertex,];*/\n\nexport const GraphElements = {}; // T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;","map":{"version":3,"names":["GraphElements"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/vertex/index.ts"],"sourcesContent":["import type {\r\n    Dictionary\r\n} from \"../../joiner\";\r\nimport {\r\n    Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle,\r\n    Edge,\r\n    GraphElement,\r\n    Vertex, VoidVertex, EdgePoint,\r\n    Graph, GraphVertex, Log,\r\n} from \"../../joiner\";\r\n/*\r\nlet arr: ((typeof GraphElement | typeof Edge) & { cname:string })[] = [\r\n    Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Diamond, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rhombus, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle,\r\n    Edge,\r\n    GraphElement,\r\n    Vertex, VoidVertex, EdgePoint,\r\n    Graph, GraphVertex,];*/\r\ntype T = Dictionary<string, (typeof GraphElement | typeof Edge) & { cname:string }>;\r\nexport const GraphElements: any = {}; // T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;\r\n"],"mappings":"AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,aAAkB,GAAG,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}