{"ast":null,"code":"var _dec,_class,_class2;import{EcoreParser,LoadAction,Log,U,LPointerTargetable,prjson2xml,prxml2json,store,RuntimeAccessible,Selectors,Debug,DViewElement,transientProperties}from'../../joiner';export let SaveManager=(_dec=RuntimeAccessible('SaveManager'),_dec(_class=(_class2=class SaveManager{static save(){SaveManager.tmpsave=store.getState();localStorage.setItem(\"tmpsave\",JSON.stringify(SaveManager.tmpsave));console.clear();console.log(JSON.stringify(SaveManager.tmpsave));}static load(state){if(!state&&SaveManager.tmpsave){LoadAction.new(SaveManager.tmpsave);return;}state=state||localStorage.getItem('tmpsave')||'null';// priorities: 1) argument from file 2) state variable cached 3) localstorage 4) null prevent crash\nlet save=SaveManager.tmpsave=JSON.parse(state);for(let vid of[...save.viewelements,...save.viewpoints]){for(let key of DViewElement.RecompileKeys){var _save$idlookup$vid;if(!transientProperties.view[vid])transientProperties.view[vid]={name:((_save$idlookup$vid=save.idlookup[vid])===null||_save$idlookup$vid===void 0?void 0:_save$idlookup$vid.name)||'Unnamed'};key='VIEWS_RECOMPILE_'+key;if(!save[key])save[key]=[];save[key].push(vid);}}LoadAction.new(save);}static exportEcore_click(){var _lmodel$instanceof;let toXML=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let toFile=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;// e: React.MouseEvent,\nlet lmodel=Selectors.getActiveModel();if(!lmodel)return;let json=SaveManager.exportEcore(lmodel);let str=JSON.stringify(json,null,\"\\t\");if(toXML){str=prjson2xml.json2xml(json,'\\t');str=U.formatXml(str);}if(!toFile){// (document.querySelector(\"#export-tmp\") as any).innerText = str;\nlocalStorage.setItem(\"import\",str);return;}let ism2=lmodel.isMetamodel;let name=(lmodel.name||(ism2?'M2':'M1')+'_unnamed')+(toXML?\".xml\":'.json')+\".\"+(ism2?\"ecore\":((_lmodel$instanceof=lmodel.instanceof)===null||_lmodel$instanceof===void 0?void 0:_lmodel$instanceof.name)||\"shapeless\");console.log(\"download file:\",{name,ism2,toXML,lmodel,instanceof:lmodel.instanceof});U.download(name,str);}static importEcore_click(){let fromXML=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let fromfile=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;try{this.importEcore_click0(fromXML,fromfile);}catch(e){var _e$message,_e$message$substring;let str=(e===null||e===void 0?void 0:(_e$message=e.message)===null||_e$message===void 0?void 0:(_e$message$substring=_e$message.substring)===null||_e$message$substring===void 0?void 0:_e$message$substring.call(_e$message,0,1000))||'some error';console.trace(str,e);// throw new Error(str);\n}}static importEcore_click0(){let fromXML=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let fromfile=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const extensions=[fromXML?\"*.xml.*\":\"*.json.*\"];// [\".ecore\"]; // Selectors.getActiveModel().isM1() ? '.' + Selectors.getActiveModel().metamodel.fullname() : '.ecore';\nlet filestring,jsonstring,jsonobj=undefined;console.log(\"importEcore: prefromfile\");if(!fromfile){filestring=localStorage.getItem(\"import\")||'null';if(fromXML){const xmlDoc=new DOMParser().parseFromString(filestring,\"text/xml\");jsonobj=prxml2json.xml2jsonobj(xmlDoc,' ');}//if (filestring.includes(\"\\n\")) throw new Error(filestring.substring(0, 1000));\nSaveManager.importEcore(jsonobj||filestring,true,undefined,true);// todo: trova il modo di determinare se Ã¨ m1 o m2 senza filename\nreturn;}console.log(\"importEcore: pre file read\",{fromXML,fromfile});let filename;U.fileRead((e,files,fileContents)=>{var _e$target$files;Log.ex(!fileContents||!files||fileContents.length!==files.length,'Failed to get file contents:',files,fileContents);Log.ex(!!fileContents&&fileContents.length>1,'Should not be possible to input multiple files yet.');if(!fileContents)return;if(fileContents.length==0)return;// @ts-ignore\nfilename=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0].name;console.log(\"file read\",{e,fileContents,files,filename});filestring=fileContents[0];// if file is over 500kb, lightmode on\nif(filestring.length>=500*1024&&!Debug.lightMode){Debug.setLightMode(true);// $(document).one(\"click\", (e) => { Debug.setLightMode(false); });\n}console.log('importEcore filestring input: ',filestring);if(fromXML){let windoww=window;windoww.file=filestring;windoww.todoc=str=>new DOMParser().parseFromString(str,\"text/xml\");windoww.doctojson=doc=>prxml2json.xml2jsonobj(doc,' ');// problemi doctojson or xmi parser: \\n replacemet causa crash per stringa in posizione invalida. \\\" anche per attributi inline che iniiano con \\\\\"\n// filestring = U.multiReplaceAll(filestring, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\nconst xmlDoc=new DOMParser().parseFromString(filestring,\"text/xml\");console.log('importEcore xml:',xmlDoc);let jsonstring0='';jsonobj=prxml2json.xml2jsonobj(xmlDoc,' ');//doto: non devo wrappare con \\\" i nomi di chiavi o valori ma solo i contenuti\n/*jsonstring = jsonstring0;\r\n                //jsonstring = U.multiReplaceAll(jsonstring0, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\r\n                */ //jsonstring = jsonstring.replaceAll(/(\\{|\\,)\\\\n\\s*/gm, \"\")\n/*if (jsonstring.includes(\"\\n\")) throw new Error(jsonstring0.substring(0, 1000)+\"\\n\\n\\n\\n\" + jsonstring.substring(0, 1000));\r\n                */ // jsonstring = JSON.stringify(jsonobj);\nif(jsonobj.parsererror){Log.ee(\"failed to parse XML->JSON\",{parseError:jsonobj.parseerror,jsonobj});return;}console.log('importEcore jsonstr input: ',jsonobj);}else jsonstring=filestring;let isMetamodel=filename.indexOf(\".ecore\")===filename.length-\".ecore\".length;console.log(\"ismetamodel\",{filename,isMetamodel});let end=SaveManager.importEcore(jsonobj||jsonstring||'null',isMetamodel,filename,true);},extensions,true);}static exportEcore(model){let loopobj={};try{return model.generateEcoreJson(loopobj);}catch(e){Log.exx(\"possible loop in model:\\t\\n\"+e.message,{loopobj,e});}return{\"error\":true,loopobj};}static importEcore(jsonstr,isMetamodel,filename){let persist=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;return EcoreParser.parse(jsonstr,isMetamodel,filename,persist);}static exportLayout_click(toFile){let lmodel=LPointerTargetable.wrap(store.getState().models[0]);// lmodel.node?.allSubNodes\n}static importLayout_click(fromFile){}},_class2.tmpsave=void 0,_class2))||_class);","map":{"version":3,"names":["EcoreParser","LoadAction","Log","U","LPointerTargetable","prjson2xml","prxml2json","store","RuntimeAccessible","Selectors","Debug","DViewElement","transientProperties","SaveManager","_dec","_class","_class2","save","tmpsave","getState","localStorage","setItem","JSON","stringify","console","clear","log","load","state","new","getItem","parse","vid","viewelements","viewpoints","key","RecompileKeys","_save$idlookup$vid","view","name","idlookup","push","exportEcore_click","_lmodel$instanceof","toXML","arguments","length","undefined","toFile","lmodel","getActiveModel","json","exportEcore","str","json2xml","formatXml","ism2","isMetamodel","instanceof","download","importEcore_click","fromXML","fromfile","importEcore_click0","e","_e$message","_e$message$substring","message","substring","call","trace","extensions","filestring","jsonstring","jsonobj","xmlDoc","DOMParser","parseFromString","xml2jsonobj","importEcore","filename","fileRead","files","fileContents","_e$target$files","ex","target","lightMode","setLightMode","windoww","window","file","todoc","doctojson","doc","jsonstring0","parsererror","ee","parseError","parseerror","indexOf","end","model","loopobj","generateEcoreJson","exx","jsonstr","persist","exportLayout_click","wrap","models","importLayout_click","fromFile"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/topbar/SaveManager.ts"],"sourcesContent":["import {\r\n    Dictionary, DUser,\r\n    EcoreParser, GObject, DState,\r\n    Json,\r\n    LModel,\r\n    LoadAction,\r\n    Log, U,\r\n    LPointerTargetable, prjson2xml, prxml2json,\r\n    store, RuntimeAccessible, DModelElement, SetRootFieldAction, Selectors, Debug, DViewElement, transientProperties\r\n} from '../../joiner';\r\n\r\n@RuntimeAccessible('SaveManager')\r\nexport class SaveManager {\r\n    private static tmpsave: DState;\r\n\r\n    static save(): void {\r\n        SaveManager.tmpsave = store.getState();\r\n        localStorage.setItem(\"tmpsave\", JSON.stringify(SaveManager.tmpsave));\r\n        console.clear();\r\n        console.log(JSON.stringify(SaveManager.tmpsave))\r\n    }\r\n\r\n    static load(state?: string): void {\r\n        if (!state && SaveManager.tmpsave) { LoadAction.new(SaveManager.tmpsave); return; }\r\n        state = state || localStorage.getItem('tmpsave') || 'null'; // priorities: 1) argument from file 2) state variable cached 3) localstorage 4) null prevent crash\r\n        let save: GObject<DState> = SaveManager.tmpsave = JSON.parse(state);\r\n        for (let vid of [...save.viewelements, ...save.viewpoints]) {\r\n            for (let key of DViewElement.RecompileKeys) {\r\n                if(!transientProperties.view[vid]) transientProperties.view[vid] = {name: (save.idlookup[vid] as any)?.name || 'Unnamed'} as any;\r\n                key = 'VIEWS_RECOMPILE_' + key;\r\n                if (!save[key]) save[key] = [];\r\n                save[key].push(vid);\r\n            }\r\n        }\r\n        LoadAction.new(save);\r\n    }\r\n\r\n    public static exportEcore_click(toXML: boolean = false, toFile: boolean = true): void { // e: React.MouseEvent,\r\n        let lmodel: null|LModel = Selectors.getActiveModel();\r\n        if (!lmodel) return;\r\n        let json = SaveManager.exportEcore(lmodel);\r\n        let str = JSON.stringify(json, null, \"\\t\");\r\n        if (toXML) {\r\n            str = prjson2xml.json2xml(json, '\\t');\r\n            str = U.formatXml(str);\r\n        }\r\n\r\n        if (!toFile) {\r\n            // (document.querySelector(\"#export-tmp\") as any).innerText = str;\r\n            localStorage.setItem(\"import\", str);\r\n            return;\r\n        }\r\n        let ism2 = (lmodel as LModel).isMetamodel;\r\n        let name = (lmodel.name || (ism2 ? 'M2' : 'M1') + '_unnamed')  + (toXML ? \".xml\" : '.json') + \".\"+ (ism2 ? \"ecore\" : lmodel.instanceof?.name || \"shapeless\");\r\n        console.log(\"download file:\", {name, ism2, toXML, lmodel, instanceof:lmodel.instanceof});\r\n        U.download(name, str);\r\n    }\r\n\r\n    public static importEcore_click(fromXML: boolean = false, fromfile: boolean = true): void {\r\n        try { this.importEcore_click0(fromXML, fromfile); } catch (e: any) {\r\n            let str = e?.message?.substring?.(0, 1000) || 'some error';\r\n            console.trace(str, e);\r\n            // throw new Error(str);\r\n        }\r\n    }\r\n    public static importEcore_click0(fromXML: boolean = false, fromfile: boolean = true): void {\r\n        const extensions: string[] = [(fromXML ? \"*.xml.*\" : \"*.json.*\")]; // [\".ecore\"]; // Selectors.getActiveModel().isM1() ? '.' + Selectors.getActiveModel().metamodel.fullname() : '.ecore';\r\n        let filestring: string, jsonstring: string, jsonobj: GObject = undefined as any;\r\n        console.log(\"importEcore: prefromfile\");\r\n        if (!fromfile) {\r\n            filestring = localStorage.getItem(\"import\") || 'null';\r\n            if (fromXML) {\r\n                const xmlDoc = new DOMParser().parseFromString(filestring,\"text/xml\");\r\n                jsonobj = prxml2json.xml2jsonobj(xmlDoc, ' ');\r\n            }\r\n            //if (filestring.includes(\"\\n\")) throw new Error(filestring.substring(0, 1000));\r\n            SaveManager.importEcore(jsonobj || filestring, true, undefined, true); // todo: trova il modo di determinare se Ã¨ m1 o m2 senza filename\r\n            return; }\r\n\r\n        console.log(\"importEcore: pre file read\", {fromXML, fromfile});\r\n        let filename;\r\n        U.fileRead((e: Event, files?: FileList | null, fileContents?: string[]) => {\r\n            Log.ex(!fileContents || !files || fileContents.length !== files.length, 'Failed to get file contents:', files, fileContents);\r\n            Log.ex(!!fileContents && fileContents.length > 1, 'Should not be possible to input multiple files yet.');\r\n            if (!fileContents) return;\r\n            if (fileContents.length == 0) return;\r\n            // @ts-ignore\r\n            filename = e.target.files?.[0].name;\r\n            console.log(\"file read\", {e, fileContents, files, filename});\r\n            filestring = fileContents[0];\r\n\r\n            // if file is over 500kb, lightmode on\r\n            if (filestring.length >= 500*1024 && !Debug.lightMode) {\r\n                Debug.setLightMode(true);\r\n                // $(document).one(\"click\", (e) => { Debug.setLightMode(false); });\r\n            }\r\n\r\n            console.log('importEcore filestring input: ', filestring);\r\n            if (fromXML) {\r\n                let windoww = window as any;\r\n                windoww.file = filestring;\r\n                windoww.todoc = (str: any) => new DOMParser().parseFromString(str,\"text/xml\");\r\n                windoww.doctojson = (doc: any) => prxml2json.xml2jsonobj(doc, ' ');\r\n                // problemi doctojson or xmi parser: \\n replacemet causa crash per stringa in posizione invalida. \\\" anche per attributi inline che iniiano con \\\\\"\r\n                // filestring = U.multiReplaceAll(filestring, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\r\n\r\n                const xmlDoc = new DOMParser().parseFromString(filestring,\"text/xml\");\r\n                console.log('importEcore xml:', xmlDoc);\r\n                let jsonstring0 = '';\r\n                jsonobj = prxml2json.xml2jsonobj(xmlDoc, ' ');//doto: non devo wrappare con \\\" i nomi di chiavi o valori ma solo i contenuti\r\n                /*jsonstring = jsonstring0;\r\n                //jsonstring = U.multiReplaceAll(jsonstring0, [\"\\t\", \"\\r\", \"\\n\", '&amp;', '&#38;', '&quot;', '&', '\\'', '\"'], [\"\\\\t\", \"\\\\r\", \"\\\\n\", '\\\\&', \"\\\\'\", '\\\\\"', '\\\\&', \"\\\\'\", '\\\\\"']);//,  \"\\\\t\"), \"\\r\", \"\\\\r\"), \"\\n\", \"\\\\n\");\r\n                *///jsonstring = jsonstring.replaceAll(/(\\{|\\,)\\\\n\\s*/gm, \"\")\r\n                /*if (jsonstring.includes(\"\\n\")) throw new Error(jsonstring0.substring(0, 1000)+\"\\n\\n\\n\\n\" + jsonstring.substring(0, 1000));\r\n                */\r\n                // jsonstring = JSON.stringify(jsonobj);\r\n                if (jsonobj.parsererror) { Log.ee(\"failed to parse XML->JSON\", {parseError:jsonobj.parseerror, jsonobj});  return; }\r\n                console.log('importEcore jsonstr input: ', jsonobj);\r\n            }\r\n            else jsonstring = filestring;\r\n            let isMetamodel = filename.indexOf(\".ecore\") === filename.length - \".ecore\".length;\r\n            console.log(\"ismetamodel\", {filename, isMetamodel});\r\n            let end = SaveManager.importEcore(jsonobj || jsonstring || 'null', isMetamodel, filename, true);\r\n        }, extensions, true);\r\n    }\r\n\r\n    public static exportEcore(model: LModel): Json {\r\n        let loopobj = {};\r\n        try { return model.generateEcoreJson(loopobj); }\r\n        catch(e) { Log.exx(\"possible loop in model:\\t\\n\" + (e as Error).message, {loopobj, e}); }\r\n        return {\"error\": true, loopobj};\r\n    }\r\n    public static importEcore(jsonstr: GObject | string | null, isMetamodel: boolean, filename: string | undefined, persist: boolean = true): DModelElement[] {\r\n        return EcoreParser.parse(jsonstr, isMetamodel, filename, persist);\r\n    }\r\n\r\n    static exportLayout_click(toFile: boolean) {\r\n        let lmodel: LModel = (LPointerTargetable.wrap(store.getState().models[0]) as LModel);\r\n        // lmodel.node?.allSubNodes\r\n\r\n    }\r\n    static importLayout_click(fromFile: boolean) {\r\n\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}