{"ast":null,"code":"import{DUser,LUser,Try}from'../joiner';import{Dashboard}from'./components';import React from\"react\";import{connect}from\"react-redux\";import{Edit}from'./components/Edit/Edit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function AccountComponent(props){const{user}=props;return/*#__PURE__*/_jsx(Try,{children:/*#__PURE__*/_jsx(Dashboard,{active:'Account',version:props.version,children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:'p-2 edit-container',children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-person-square\"}),\" Profile\"]}),/*#__PURE__*/_jsx(Edit,{name:'name',label:'Name',type:'text',value:user.name,required:true,tooltip:'Your first name.'}),/*#__PURE__*/_jsx(Edit,{name:'surname',label:'Surname',type:'text',value:user.surname,required:true,tooltip:'Your family name.'}),/*#__PURE__*/_jsx(Edit,{name:'nickname',label:'Nickname',type:'text',value:user.nickname,required:true,tooltip:'Your nickname, it will be used as a short form for addressing you.'}),/*#__PURE__*/_jsx(Edit,{name:'email',label:'Email',type:'email',value:user.email,disabled:true,tooltip:'Your email, it is not possible to change it.'}),/*#__PURE__*/_jsx(Edit,{name:'affiliation',label:'Affiliation',type:'text',value:user.affiliation,required:true,tooltip:'Your current affiliation.'}),/*#__PURE__*/_jsx(Edit,{name:'country',label:'Country',type:'country',value:user.country,tooltip:'Select your affiliation country.'}),/*#__PURE__*/_jsx(Edit,{name:'newsletter',label:'Newsletter',type:'checkbox',value:user.newsletter+'',tooltip:'Select it if you want to receive low-intensity updates from us (e.g., new releases, new learning and teaching material, and the likes).'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn alert-btn my-2  px-4 space-above\",children:\"save\"})]}),/*#__PURE__*/_jsx(\"div\",{className:'p-2 edit-container space-above',children:/*#__PURE__*/_jsxs(\"div\",{className:'password-container',children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-fingerprint\"}),\" Password\"]}),/*#__PURE__*/_jsx(Edit,{name:'password',label:'Password',type:'password',value:'user.password'}),/*#__PURE__*/_jsx(Edit,{name:'password',label:'New Password',type:'password',value:'user.password',className:'space-above small'}),/*#__PURE__*/_jsx(Edit,{name:'password',label:'Confirm Password',type:'password',value:'user.password'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn alert-btn my-2  px-4 space-above\",children:\"change password\"})]})})]})})});}function mapStateToProps(state,ownProps){const ret={};ret.user=LUser.fromPointer(DUser.current);ret.version=state.version;return ret;}function mapDispatchToProps(dispatch){const ret={};return ret;}const AllProjectsConnected=connect(mapStateToProps,mapDispatchToProps)(AccountComponent);const AccountPage=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(AllProjectsConnected,{...props,children});};export{AccountPage};","map":{"version":3,"names":["DUser","LUser","Try","Dashboard","React","connect","Edit","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AccountComponent","props","user","children","active","version","className","name","label","type","value","required","tooltip","surname","nickname","email","disabled","affiliation","country","newsletter","mapStateToProps","state","ownProps","ret","fromPointer","current","mapDispatchToProps","dispatch","AllProjectsConnected","AccountPage","arguments","length","undefined"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/pages/Account.tsx"],"sourcesContent":["import {DState, DUser, LUser, Try} from '../joiner';\r\nimport {Dashboard} from './components';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport React, {Component, Dispatch, ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Edit, EditCountry } from './components/Edit/Edit';\r\n\r\n\r\n\r\n\r\nfunction AccountComponent(props: AllProps): JSX.Element {\r\n    const {user} = props;\r\n    return(<Try>\r\n        <Dashboard active={'Account'} version={props.version}>\r\n            <>\r\n            <div className={'p-2 edit-container'}>\r\n                <h2><i className=\"bi bi-person-square\"></i> Profile</h2>\r\n\r\n                <Edit name={'name'} \r\n                    label={'Name'} \r\n                    type={'text'} \r\n                    value={user.name} \r\n                    required={true}\r\n                    tooltip={'Your first name.'}\r\n                />\r\n                <Edit name={'surname'} \r\n                    label={'Surname'} \r\n                    type={'text'} \r\n                    value={user.surname} \r\n                    required={true}\r\n                    tooltip={'Your family name.'}\r\n                />\r\n                <Edit name={'nickname'} \r\n                    label={'Nickname'} \r\n                    type={'text'} \r\n                    value={user.nickname} \r\n                    required={true}\r\n                    tooltip={'Your nickname, it will be used as a short form for addressing you.'}\r\n                />\r\n                <Edit name={'email'} \r\n                    label={'Email'} \r\n                    type={'email'} \r\n                    value={user.email} \r\n                    disabled={true}\r\n                    tooltip={'Your email, it is not possible to change it.'}\r\n                />\r\n                <Edit name={'affiliation'} \r\n                    label={'Affiliation'} \r\n                    type={'text'} \r\n                    value={user.affiliation}\r\n                    required={true}\r\n                    tooltip={'Your current affiliation.'}\r\n                />\r\n                <Edit name={'country'} \r\n                    label={'Country'} \r\n                    type={'country'} \r\n                    value={user.country}\r\n                    tooltip={'Select your affiliation country.'}\r\n                />\r\n                \r\n                <Edit name={'newsletter'} \r\n                    label={'Newsletter'} \r\n                    type={'checkbox'} \r\n                    value={user.newsletter+''}\r\n                    tooltip={'Select it if you want to receive low-intensity updates from us (e.g., new releases, new learning and teaching material, and the likes).'}\r\n                />\r\n\r\n                <button className=\"btn alert-btn my-2  px-4 space-above\">save</button>\r\n            </div>\r\n            <div className={'p-2 edit-container space-above'}>\r\n                <div className={'password-container'}>\r\n                    <h3><i className=\"bi bi-fingerprint\"></i> Password</h3>\r\n\r\n                    <Edit name={'password'} \r\n                        label={'Password'} \r\n                        type={'password'} \r\n                        value={'user.password'}                 \r\n                    />\r\n                    <Edit name={'password'} \r\n                        label={'New Password'} \r\n                        type={'password'} \r\n                        value={'user.password'}\r\n                        className={'space-above small'}                 \r\n                    />\r\n                    <Edit name={'password'} \r\n                        label={'Confirm Password'} \r\n                        type={'password'} \r\n                        value={'user.password'}                 \r\n                    />\r\n                    <button className=\"btn alert-btn my-2  px-4 space-above\">change password</button>\r\n                </div>\r\n\r\n            </div>\r\n            </>\r\n        </Dashboard>\r\n    </Try>);\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    user: LUser;\r\n    version: DState[\"version\"];\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.user = LUser.fromPointer(DUser.current);\r\n    ret.version = state.version;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nconst AllProjectsConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AccountComponent);\r\n\r\nconst AccountPage = (props: OwnProps, children: (string | Component)[] = []): ReactElement => {\r\n    return <AllProjectsConnected {...{...props, children}} />;\r\n}\r\n\r\nexport {AccountPage};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}