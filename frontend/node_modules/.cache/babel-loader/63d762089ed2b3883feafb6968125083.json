{"ast":null,"code":"import _defineProperty from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var _dec,_class;import{DViewElement,DVoidEdge,EdgeBendingMode,EdgeHead,RuntimeAccessible,U}from'../joiner';import React from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";// const beautify = require('js-beautify').html; // BEWARE: this adds some newline that might be breaking and introduce syntax errors in our JSX parser\nvar beautify=function beautify(s){return s;};var ShortAttribETypes=window.ShortAttribETypes;export var DV=(_dec=RuntimeAccessible('DV'),_dec(_class=/*#__PURE__*/function(){function DV(){_classCallCheck(this,DV);}_createClass(DV,null,[{key:\"invisibleJsx\",value:function invisibleJsx(){return'';}},{key:\"modelView\",value:function modelView(){return beautify(DefaultView.model());}// damiano: che fa beautify? magari potremmo settarlo in LView.set_jsx invece che solo qui, così viene formattato anche l'input utente?\n},{key:\"packageView\",value:function packageView(){return beautify(DefaultView.package());}},{key:\"classView\",value:function classView(){return beautify(DefaultView.class());}},{key:\"attributeView\",value:function attributeView(){return beautify(DefaultView.feature());}},{key:\"referenceView\",value:function referenceView(){return beautify(DefaultView.feature());}},{key:\"enumeratorView\",value:function enumeratorView(){return beautify(DefaultView.enum());}},{key:\"literalView\",value:function literalView(){return beautify(DefaultView.literal());}},{key:\"voidView\",value:function voidView(){return beautify(DefaultView.void());}},{key:\"operationView\",value:function operationView(){return beautify(DefaultView.operation());}},{key:\"parameterView\",value:function parameterView(){return beautify(DefaultView.parameter());}// damiano: i want to keep it because it will be useful for a candidate next feature in m1 & layoutable elements\n// it is still work in progress.\n},{key:\"operationViewm1\",value:function operationViewm1(){return beautify(DefaultView.operationm1());}},{key:\"objectView\",value:function objectView(){return beautify(DefaultView.object());}},{key:\"valueView\",value:function valueView(){return beautify(DefaultView.value());}},{key:\"defaultPackage\",value:function defaultPackage(){return beautify(DefaultView.defaultPackage());}},{key:\"error_raw\",value:function error_raw(){return DefaultView.error.apply(DefaultView,arguments);}},{key:\"errorView\",value:function errorView(publicmsg,debughiddenmsg,errortype,data,node,v){var visibleMessage=publicmsg&&typeof publicmsg===\"string\"?U.replaceAll(publicmsg,\"Parse Error:\",\"\").trim():publicmsg;console.error(\"error in view:\",{publicmsg:publicmsg,debuginfo:debughiddenmsg});return DefaultView.error(visibleMessage,errortype,data,node,v);}},{key:\"errorView_string\",value:function errorView_string(publicmsg,debughiddenmsg,errortype,data,node,v){var visibleMessage=publicmsg&&typeof publicmsg===\"string\"?U.replaceAll(publicmsg,\"Parse Error:\",\"\").trim():publicmsg;console.error(\"error in view:\",{publicmsg:publicmsg,debuginfo:debughiddenmsg});return DefaultView.error_string(visibleMessage,errortype,data,node,v);}// {ancors.map( a => <EdgePoint view={\"aaaaa\"} initialSize={{x: node.w * a.x, y: node.h * a.y}}/>)}\n},{key:\"anchorJSX\",value:function anchorJSX(){return\"\\n<div className={\\\"overlap\\\"}>\\n{Object.keys(anchors).map( (k) => { let a = anchors[k]; return(\\n<div className={\\\"anchor draggable resizable\\\"} data-anchorName={a.name} data-anchorKey={k}\\n    onDragEnd={(coords/*Point*/)=>node.events.dragAnchor(coords, k)} onMouseUp={()=>{node.events.assignAnchor(k)}}\\n    style={{left: 100*a.x+'%', top:100*a.y+'%', width:a.w+'px', height:a.h+'px'}} />)})\\n}</div>\\n\";}},{key:\"edgePointView\",value:function edgePointView(){return beautify(\"<div className={\\\"edgePoint\\\"} tabIndex=\\\"-1\\\">\\n    {decorators}\\n</div>\");}},{key:\"edgePointViewSVG\",value:function edgePointViewSVG(){return beautify(\"<ellipse stroke={\\\"black\\\"} fill={\\\"red\\\"} cx={\\\"50\\\"} cy={\\\"50\\\"} rx={\\\"20\\\"} ry={\\\"20\\\"} />\"//`<ellipse stroke={\"black\"} fill={\"red\"} cx={props.node.x} cy={props.node.y} rx={props.node.w} ry={props.node.h} />`\n);}},{key:\"svgHeadTail\",value:function svgHeadTail(head,type){var ret;var headstr=head===\"head\"?\"segments.head\":\"segments.tail\";var styleTranslateRotate='transform:\"translate(\" + '+headstr+'.x + \"px, \" + '+headstr+'.y + \"px) rotate(\" + ('+headstr+'.rad) + \"rad)\",'+' \"transformOrigin\":'+headstr+'.w/2+\"px \"+ '+headstr+'.h/2+\"px\"';var attrs=\"\\n\\t\\t\\t\\tstyle={{\"+styleTranslateRotate+\"}}\\n\\t\\t\\t\\tclassName={\\\"\"+head+\" \"+type+\" preview\\\"} />\\n\";var path;var hoverAttrs=\"\\n\\t\\t\\t\\tstyle={{\"+styleTranslateRotate+\"}}\\n\\t\\t\\t\\tclassName={\\\"\"+head+\" \"+type+\" clickable content\\\"} tabIndex=\\\"-1\\\" />\\n\";var d;switch(type){default:ret=\"edge '\"+head+\"' with type: '\"+type+\"' not found\";break;case EdgeHead.extend://if (head === \"tail\") return undefined;\nd=\"M 0 0   L x y/2   L 0 y   Z\";path=\"<path  \";ret=path+attrs+\"\\n\\t\\t\\t\\t\"+path+hoverAttrs;break;case EdgeHead.reference://if (head === \"tail\") return undefined;\nd=\"M 0 0   L x y/2   L 0 y\";path=\"<path  \";ret=path+attrs+\"\\n\\t\\t\\t\\t\"+path+hoverAttrs;break;case EdgeHead.aggregation://if (head === \"head\") return undefined;\nd=\"M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z\";path=\"<path  \";ret=path+attrs+\"\\n\\t\\t\\t\\t\"+path+hoverAttrs;break;case EdgeHead.composition://if (head === \"head\") return undefined;\nd=\"M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z\";path=\"<path  \";ret=path+attrs+\"\\n\\t\\t\\t\\t\"+path+hoverAttrs;break;/* `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" style={overflow: \"visible\"}>\r\n                                            <path d={\"M 10 0 L 0 20 L 20 20 Z\"} fill=\"#ffffff\" stroke=\"#808080\" strokeWidth=\"1\"></path>\r\n                                         </svg>`;*/ //  style={transform: \"rotate3d(xcenter, ycenter, zcenter??, 90deg)\"}\n}//  transform={\"rotate(\"+`+headstr+`.rad+\"rad \"+ segments.all[0].start.pt.toString(false, \" \")}\nreturn ret;// no wrap because of .hoverable > .preview  on root & subelements must be consecutive\n// return `<g className=\"edge`+head + ` ` + type +`\" style={` + styleTranslate + `}>\\n`+ ret +`</g>`\n}// about label rotation in .edge > foreignObect > div (label)\n// first transform is h-center. second is rotate, third adds [0, 50%] of 50% vertical offset AFTER rotation to take label out of edge. fourth is to add a margin.\n},{key:\"edgeView\",value:function edgeView(modename,headSize,tailSize,dashing,vp,name){var _headdict;var fill;switch(modename){case EdgeHead.reference:default:fill='#fff0';break;case EdgeHead.composition:fill='#000';break;case EdgeHead.aggregation:case EdgeHead.extend:fill='#fff';break;}var agglabel=\"◇ Aggregation / Composition\";var extendlabel=\"△ \"+EdgeHead.extend;var asslabel=\"Λ \"+EdgeHead.reference;var headdict=(_headdict={},_defineProperty(_headdict,asslabel,'M 0 0   L x y/2   L 0 y'),_defineProperty(_headdict,extendlabel,'M 0 0   L x y/2   L 0 y   Z'),_defineProperty(_headdict,agglabel,'M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z'),_headdict);var predefinedPaths=Object.entries(headdict).map(function(e){return{k:e[0],v:e[1]};});var headPath='',tailPath='';switch(modename){default:break;case EdgeHead.extend:headPath=extendlabel;break;case EdgeHead.reference:headPath=asslabel;break;case EdgeHead.aggregation:tailPath=agglabel;break;case EdgeHead.composition:tailPath=agglabel;break;}headPath=headdict[headPath]||'';tailPath=headdict[tailPath]||'';var palette={'anchorSize':{type:'number',value:20,unit:'px'},'dashing':{value:dashing||'',type:\"text\"},'stroke-color':U.hexToPalette('#777'),'stroke-width':{value:1,type:'number',unit:'px'},'stroke-color-hover':U.hexToPalette('#000'),'stroke-width-hover':{value:3,type:'number',unit:'px'},'head':{type:'path',value:headPath,options:predefinedPaths,x:'edgeHeadSize.x',y:'edgeHeadSize.y'},'tail':{type:'path',value:tailPath,options:predefinedPaths,x:'edgeTailSize.x',y:'edgeTailSize.y'},'fill':U.hexToPalette(fill)};var css=\".edge-anchor{\"+\"\\n\\tcursor: crosshair;\"+\"\\n\\tstroke: transparent;\"+\"\\n\\tfill: none;\"+\"\\n\\tr:var(--anchorSize);\"+\"\\n\\toutline: var(--stroke-width) solid var(--stroke-color);\"+\"\\n\\toutline-offset: calc(var(--stroke-width) * -1);\"+\"\\n\\tborder-radius: 100%;\"+\"\\n}\"+\"\\n.clickthrough, .unclickable{\"+\"\\n\\tpointer-events: none;\"+\"\\n}\"+\"\\n.clickable{\"+\"\\n\\tpointer-events: all;\"+\"\\n}\"+\"\\n.fullscreen{\"+\"\\n\\toverflow: visible;\"+\"\\n\\twidth: 100vw;\"+\"\\n\\theight: 100vh;\"+\"\\n}\"+\"\\npath{\"+\"\\n\\tfill: none;\"+\"\\n\\tstroke-dasharray: var(--dashing);\"+\"\\n\\t&.head{\"+\"\\n\\t\\td: path(var(--head));\"+\"\\n\\t}\"+\"\\n\\t&.tail{\"+\"\\n\\t\\td: path(var(--tail));\"+\"\\n\\t}\"+\"\\n}\"+\"\\npath.edge.full, path.tail, path.head{\"+\"\\n\\tstroke: var(--stroke-color);\"+\"\\n\\tstroke-width: var(--stroke-width);\"+\"\\n}\"+\"\\npath.tail, path.head{\"+\"\\n\\tfill:var(--fill);\"+\"\\n}\"+\"\\npath.edge.full.hover-activator{\"+\"\\n\\tstroke-width: var(--stroke-width-hover);\"+\"\\n\\tstroke: none;\"+\"\\n}\"+\"\\npath.content{\"+\"\\n\\tstroke: var(--stroke-color-hover);\"+\"\\n\\tstroke-width: var(--stroke-width-hover);\"+\"\\n}\"+\"\\nforeignObject.label{\"+\"\\n\\toverflow: visible;\"+\"\\n\\twidth:0;\"+\"\\n\\theight:0;\"+\"\\n\\twhite-space: pre;\"+\"\\n\\t> div{\"+\"\\n\\t\\twidth: fit-content;\"+\"\\n\\t}\"+\"\\n}\"+\"\\n\\t\"+\"\\n\\t\"+\"\";var head=DV.svgHeadTail(\"head\",modename)||'';var tail=DV.svgHeadTail(\"tail\",modename)||'';var jsx=beautify(\"<div className={\\\"edge hoverable hide-ep clickthrough fullscreen \"+modename+\"\\\"}>\\n            <svg className={\\\"clickthrough fullscreen\\\"}>\\n                { /* edge full paths\\n               \\n                 first is preview path, normally seen\\n                 third (segmented) is path onHover\\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\\n                \\n                */ }\\n                <path className={\\\"preview edge full\"+(dashing?' dashed':'')+\"\\\"} d={this.edge.d} />\\n                <path className={\\\"preview edge full hover-activator\\\"} d={this.edge.d} />\\n                { /* edge separate segments */ }\\n                {segments && segments.all && segments.all.flatMap(s => [\\n                    <path tabIndex=\\\"-1\\\" className={\\\"clickable content segment\\\"} d={s.dpart}></path>,\\n                    s.label && <foreignObject className=\\\"label\\\" x={(s.start.pt.x + s.end.pt.x)/2+\\\"px\\\"} y={(s.start.pt.y + s.end.pt.y)/2+\\\"px\\\"}>\\n                    <div\\n                     style={{transform: \\\"translate(-50%, 0%) rotate(\\\"+s.radLabels+\\\"rad) translate(0%, -\\\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\\\"%)\\\"+\\n                     \\\" translate(0%, -5px\\\", color: strokeColor}}>{s.label}</div>\\n                    </foreignObject>\\n                ])}\\n                { /* edge head */ }\\n                \"+head+\"\\n                { /* edge tail */ }\\n                \"+tail+\"\\n                { /* edge anchor start */ }\\n                {edge.start && <circle className=\\\"edge-anchor content clickable\\\"\\n                 style={{transform: \\\"translate(\\\" + segments.all[0].start.pt.x +\\\"px, \\\" + segments.all[0].start.pt.y +\\\"px)\\\"}}\\n                 onMouseDown={()=> edge.startFollow=true}\\n                 onMouseUp={()=> edge.startfollow=false} />}\\n                { /* edge anchor end */ }\\n                {edge.end && <circle className=\\\"edge-anchor content clickable\\\" \"+// cx={0*segments.all.last().end.pt.x} cy={0*segments.all.last().end.pt.y}\n\"style={{transform: \\\"translate(\\\" + segments.all.last().end.pt.x +\\\"px, \\\" + segments.all.last().end.pt.y +\\\"px)\\\"}}\\n                 onMouseDown={()=> edge.endFollow=true}\\n                 onMouseUp={()=> edge.endfollow=false} />}\\n\\n            </svg>\\n            { /* interactively added edgepoints */ }\\n            {\\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\\\"EdgePoint\\\"} /> )\\n            }\\n            {decorators}\\n        </div>\");var edgePrerenderFunc=\"(ret)=>{\\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"\\n\"+\"}\";var edgeUsageDeclarations=\"(ret)=>{\\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"// ret.data = data\\n\"+\"ret.edgeview = edge.view.id\\n\"+\"ret.view = view\\n\"+\"// data, edge, view are dependencies by default. delete them above if you want to remove them.\\n\"+\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"ret.start = edge.start\\n\"+\"ret.end = edge.end\\n\"+\"ret.segments = edge.segments\\n\"+\"}\";var ev=DViewElement.new2(\"Edge\"+name,jsx,function(v){v.appliableToClasses=[DVoidEdge.cname];v.appliableTo='Edge';v.bendingMode=EdgeBendingMode.Line;v.edgeHeadSize=headSize;v.edgeTailSize=tailSize;//v.constants = edgeConstants;\nv.palette=palette;v.css=css;v.usageDeclarations=edgeUsageDeclarations;v.preRenderFunc=edgePrerenderFunc;},false,vp,'Pointer_ViewEdge'+name);return ev;}/*\r\n    {\r\n        false && edge.end.model.attributes.map( (m, index, arr) => <EdgePoint data={m.id} initialSize={(parent) => {\r\n            let segs = parent.segments.segments;\r\n            let pos = segs[0].start.pt.multiply(1-(index+1)/(arr.length+1), true).add(segs[segs.length-1].end.pt.multiply((index+1)/(arr.length+1), true));\r\n            // console.trace(\"initial ep\", {segs, pos, ratio:(index+1)/(arr.length+1), s:segs[0].start.pt, e:segs[segs.length-1].end.pt});\r\n            return {...pos, w:55, h:55}}} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\r\n    }{\r\n        false && <EdgePoint key={\"midnode1\"} view={\"Pointer_ViewEdgePoint\"} />\r\n    }{\r\n        false && <EdgePoint key={\"midnode2\"} view={\"Pointer_ViewEdgePoint\"} />\r\n    }{\r\n        false && props.children && \"this would cause loop no idea why, needs to be fixed to allow passing EdgeNodes here\" || []\r\n    }\r\n    */},{key:\"semanticErrorOverlay_old\",value:function semanticErrorOverlay_old(){return\"<section className=\\\"overlap\\\">\\n    <div className=\\\"error-message\\\">Lowerbound violation</div>\\n</section>\";}},{key:\"semanticErrorOverlay\",value:function semanticErrorOverlay(){return\"<section className=\\\"overlap\\\">\\n    <div className=\\\"error-message\\\">{errors.join(<br/>)}</div>\\n</section>\";}}]);return DV;}())||_class);// DV class end\nvar valuecolormap={};valuecolormap[ShortAttribETypes.EBoolean]=\"orange\";valuecolormap[ShortAttribETypes.EByte]=\"orange\";valuecolormap[ShortAttribETypes.EShort]=\"orange\";valuecolormap[ShortAttribETypes.EInt]=\"orange\";valuecolormap[ShortAttribETypes.ELong]=\"orange\";valuecolormap[ShortAttribETypes.EFloat]=\"orange\";valuecolormap[ShortAttribETypes.EDouble]=\"orange\";valuecolormap[ShortAttribETypes.EDate]=\"green\";valuecolormap[ShortAttribETypes.EString]=\"green\";valuecolormap[ShortAttribETypes.EChar]=\"green\";valuecolormap[ShortAttribETypes.EVoid]=\"gray\";// &&[]bn\nvar valuecolormap_str=JSON.stringify(valuecolormap);// can this be declared inside view.constants ?\nvar DefaultView=/*#__PURE__*/function(){function DefaultView(){_classCallCheck(this,DefaultView);}_createClass(DefaultView,null,[{key:\"model\",value:function model(){return\"<div className={'root'}>\\n    {!data && \\\"Model data missing.\\\"}\\n    <ControlPanel node={node}></ControlPanel>\\n    <label className={\\\"detail-level\\\"}>\\n        <input onChange={(e)=>{node.state = {level:+e.target.value}}} min=\\\"0\\\" max=\\\"3\\\" type=\\\"range\\\" step=\\\"1\\\" value={level}/>\\n        <div>Detail level:{level}</div>\\n    </label>\\n    <div className={'edges'}>\\n        {[\\n            refEdges.map(se => <Edge anchorStart={0} anchorEnd={0} key={se.id}\\n            start={se.start.father.node} end={se.end.node} view={'Edge' + ( se.start.containment && 'Composition' || 'Association')} />),\\n            extendEdges.map(se => <Edge start={se.start} end={se.end} view={'EdgeInheritance'} key={se.id} />)\\n        ]}\\n    </div>\\n    {otherPackages.filter(p => p).map(pkg => <DefaultNode key={pkg.id} data={pkg} />)}\\n    {level >= 1 && firstPackage && firstPackage.children.filter(c => c).map(classifier => <DefaultNode key={classifier.id} data={classifier} />)}\\n    {level >= 1 && m1Objects.filter(o => o).map(m1object => <DefaultNode key={m1object.id} data={m1object} />)}\\n    {decorators}\\n</div>\";}},{key:\"void\",value:function _void(){return\"<div className={'round bg-white root void model-less p-1'}>\\n    <div>voidvertex element test</div>\\n    <div>data: {props.data ? props.data.name : \\\"empty\\\"}</div>\\n    {decorators}\\n</div>\";}},{key:\"package\",value:function _package(){return\"<div className={'root package'}>\\n    <div className={'package-children'}>\\n        {upperLevel >= 1 ? [\\n            <label className={\\\"detail-level\\\"}>\\n                <input onChange={(e)=>{node.state = {level:+e.target.value}}} min=\\\"0\\\" max=\\\"3\\\" type=\\\"range\\\" step=\\\"1\\\" value={level}/>\\n                <div>Detail level:{level}</div>\\n            </label>,\\n            data.children.map(c => <DefaultNode key={c.id} data={c} />)\\n        ] :\\n        [\\n            <div className={\\\"summary\\\"}><b>URI:</b><span className={\\\"ms-1\\\"}>{data.uri}</span></div>,\\n            <div className={\\\"summary\\\"}>{[\\n                data.classes.length ? data.classes.length + \\\" classes\\\" : '',\\n                data.enumerators.length ? data.enumerators.length + \\\" enumerators\\\" : ''\\n               ].filter(v=>!!v).join(',')}</div>\\n        ]}\\n    </div>\\n    {decorators}\\n</div>\";}},{key:\"defaultPackage\",value:function defaultPackage(){return\"<div className={'root'}>\\n    <div className={'package-children'}>\\n        {data.children.map(c => <DefaultNode key={c.id} data={c} />)}\\n    </div>\\n    {decorators}\\n</div>\";}},{key:\"class\",value:function _class(){return\"<View className={'root class'} onClick={()=>{/*node.events.e1(Math.random().toFixed(3))*/}}>\\n    <div className={(abstract ? 'abstract' : '')}>\\n        <Input data={data} field={'name'} hidden={true} autosize={true} \\n            jsxLabel={<b className={'class-name'}>{interface ? \\\"Interface\\\" : \\\"Class\\\"}:</b>} />\\n    </div>\\n    <hr/>\\n    <div className={'class-children'}>\\n        {level >= 2 && [\\n            attributes.map(c => <DefaultNode key={c.id} data={c} />),\\n            references.map(c => <DefaultNode key={c.id} data={c} />),\\n            operations.map(c => <DefaultNode key={c.id} data={c} />)\\n          ]\\n         || [/*\\n         <div className={\\\"\\\"}><b>isInterface:</b><span className={\\\"ms-1\\\"}>{''+data.interface}</span></div>,\\n         <div className={\\\"\\\"}><b>isAbstract:</b><span className={\\\"ms-1\\\"}>{''+data.abstract}</span></div>,\\n         <div className={\\\"\\\"}><b>Instances:</b><span className={\\\"ms-1\\\"}>{data.instances.length}</span></div>,*/\\n         <div className={\\\"summary\\\"}>{[\\n             attributes.length ? attributes.length + \\\" attributes\\\" : '',\\n             references.length ? references.length + \\\" references\\\" : '',\\n             operations.length ? operations.length + \\\" operations\\\" : '',\\n             !(attributes.length + references.length + operations.length) ? '- empty -' : ''\\n            ].filter(v=>!!v).join(',')}</div>\\n         ]\\n        }\\n    </div>\\n    {decorators}\\n</View>\";}},{key:\"enum\",value:function _enum(){return\"<div className={'root enumerator'}>\\n    <Input jsxLabel={<b className={'enumerator-name'}>Enum:</b>} data={data} field={'name'} hidden={true} autosize={true} />\\n    <hr />\\n    <div className={'enumerator-children'}>\\n        {level >= 2 && literals.map(c => <DefaultNode key={c.id} data={c}/>)\\n          || <div className={\\\"summary\\\"}>{literals.length} literals</div>}\\n    </div>\\n    {decorators}\\n</div>\";}},{key:\"feature\",value:function feature(){return\"<div className={'root w-100 feature'}>\\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name} />\\n    {decorators}\\n</div>\";}},{key:\"literal\",value:function literal(){return\"<label className={'root d-block text-center'}>\\n    {data.name}\\n    {decorators}\\n</label>\";}},{key:\"operation\",value:function operation(){return\"<div className={'root w-100'}>\\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name + ' =>'} />\\n    {data.exceptions.length ? \\\" throws \\\" + data.exceptions.join(\\\", \\\") : ''}\\n    <div className={\\\"parameters\\\"}>{\\n        level >= 3 && data.parameters.map(p => <DefaultNode data={p} key={p.id} />)\\n    }</div>\\n    {decorators}\\n</div>\";}},{key:\"parameter\",value:function parameter(){return\"<div className={'root w-100 ms-1'}>\\n    <Select className={'p-1 d-flex'} data={data} field={'type'}\\n        label={data.name + '' + (data.lowerBound === 0 ? '?:' : ':' )}\\n        postlabel={data.upperBound === 0 ? '&nbsp;&nbsp;' : '[]'}/>\\n    {decorators}\\n</div>\";}// damiano: i want to keep it because it will be useful for a candidate next feature in m1 & layoutable elements\n// it is still work in progress.\n},{key:\"operationm1\",value:function operationm1(){return\"<div className={'d-flex root operationm1'} style={{paddingRight: \\\"6px\\\"}}>\\n    <label className={'d-block ms-1'}>{this.props.data.instanceof.name}</label>\\n    <label className={'d-block ms-auto hover-root'} style={{color:\"+valuecolormap_str+\"[this.props.data.values.type] || \\\"gray\\\"}}>\\n        \\u2192\\u2192\\u2192\\n        <div className=\\\"hover-content\\\">\\n            <ParameterForm operation={this.props.data.id} vertical={true} />\\n        </div>\\n    </label>\\n    {decorators}\\n</div>\";}},{key:\"objectOld\",value:function objectOld(){return\"<div className={'round bg-white root class'}>\\n    <label className={'ms-1'}>\\n        <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \\\"Object\\\"}:</b>} \\n           data={data} field={'name'} hidden={true} autosize={true}/>\\n    </label>\\n    <hr />\\n    <div className={'object-children'}>\\n        { features.map(c => <DefaultNode key={c.id} data={c} />) }\\n    </div>\\n    {decorators}\\n</div>\";}},{key:\"object\",value:function object(){return\"<div className={'root object'}>\\n    <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \\\"Object\\\"}:</b>}\\n            data={data} field={'name'} hidden={true} autosize={true} />\\n    <hr/>\\n    <div className={'object-children'}>\\n        {level >= 2 && data.features.map(f => <DefaultNode key={f.id} data={f} />)}\\n    </div>\\n    {decorators}\\n</div>\";}},{key:\"value\",value:function value(){return\"<div className={'root d-flex value'}>\\n     {instanceofname && <label className={'d-block ms-1'}>{instanceofname}</label>}\\n     {!instanceofname && <Input asLabel={true} data={data} field={'name'} hidden={true} autosize={true} />}\\n    <label className={'d-block m-auto values_str'} style={{color: constants[typeString] || 'gray'}}>\\n        : {valuesString}\\n    </label>\\n    {decorators}\\n</div>\";}},{key:\"error\",value:function error(msg,errortype,data,node,v){var dname=data&&(data.name||data.className.substring(1));if(dname&&dname.length>=10)dname=dname.substring(0,7)+'…';var nodename=((node===null||node===void 0?void 0:node.className)||'').replace(/[^A-Z]+/g,\"\").substring(1);var on=dname&&nodename?\" on \"+dname+\" / \"+nodename:dname||nodename?\" on \"+(dname||nodename):'';return/*#__PURE__*/_jsx(\"div\",{className:(v?'w-100 h-100':'raw_error')+' round bg-white border border-danger',style:{minHeight:\"50px\",overflow:\"scroll\"},children:/*#__PURE__*/_jsxs(\"div\",{className:'text-center text-danger',tabIndex:-1,style:{background:\"#fff\",overflow:'visible',zIndex:100,minWidth:\"min-content\"},children:[/*#__PURE__*/_jsxs(\"b\",{\"data-dname\":dname,\"data-nodename\":nodename,\"data-str\":true,children:[errortype,\" ERROR\",on]}),/*#__PURE__*/_jsx(\"hr\",{}),v&&/*#__PURE__*/_jsxs(\"label\",{className:'text-center mx-1 d-block',children:[\"While applying view \\\"\",v.name,\"\\\"\"]}),msg&&/*#__PURE__*/_jsx(\"label\",{className:'text-center mx-1 d-block',style:{color:\"black\"},children:msg})]})});}},{key:\"error_string\",value:function error_string(msg,errortype,data,node,v){var dname=data&&(data.name||data.className.substring(1));if(dname&&dname.length>=10)dname=dname.substring(0,7)+'…';var nodename=((node===null||node===void 0?void 0:node.className)||'').replace(/[^A-Z]+/g,\"\").substring(1);var on=dname&&nodename?\" on \"+dname+\" / \"+nodename:dname||nodename?\" on \"+(dname||nodename):'';return\"<div className={'w-100 h-100 round bg-white border border-danger'} style={{minHeight:\\\"50px\\\", overflow:\\\"scroll\\\"}}>\\n            <div className={'text-center text-danger'} tabIndex={-1} style={{background:\\\"#fff\\\", overflow: 'visible', zIndex:100, minWidth:\\\"min-content\\\"}}>\\n                <b>{errortype}_ERROR\"+on+\"</b>\\n                <hr/>\\n                <label className={'text-center mx-1 d-block'}>\\n                    While applying view \\\"\".concat(v===null||v===void 0?void 0:v.name,\"\\\"\\n                </label>\\n                {\").concat(msg,\" && <label className={'text-center mx-1 d-block'} style={{color:\\\"black\\\"}}>\").concat(msg,\"</label>}\\n            </div>\\n        </div>\");}}]);return DefaultView;}();","map":{"version":3,"names":["DViewElement","DVoidEdge","EdgeBendingMode","EdgeHead","RuntimeAccessible","U","React","jsxs","_jsxs","jsx","_jsx","beautify","s","ShortAttribETypes","window","DV","_dec","_class","_classCallCheck","_createClass","key","value","invisibleJsx","modelView","DefaultView","model","packageView","package","classView","class","attributeView","feature","referenceView","enumeratorView","enum","literalView","literal","voidView","void","operationView","operation","parameterView","parameter","operationViewm1","operationm1","objectView","object","valueView","defaultPackage","error_raw","error","apply","arguments","errorView","publicmsg","debughiddenmsg","errortype","data","node","v","visibleMessage","replaceAll","trim","console","debuginfo","errorView_string","error_string","anchorJSX","edgePointView","edgePointViewSVG","svgHeadTail","head","type","ret","headstr","styleTranslateRotate","attrs","path","hoverAttrs","d","extend","reference","aggregation","composition","edgeView","modename","headSize","tailSize","dashing","vp","name","_headdict","fill","agglabel","extendlabel","asslabel","headdict","_defineProperty","predefinedPaths","Object","entries","map","e","k","headPath","tailPath","palette","unit","hexToPalette","options","x","y","css","tail","edgePrerenderFunc","edgeUsageDeclarations","ev","new2","appliableToClasses","cname","appliableTo","bendingMode","Line","edgeHeadSize","edgeTailSize","usageDeclarations","preRenderFunc","semanticErrorOverlay_old","semanticErrorOverlay","valuecolormap","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","EDate","EString","EChar","EVoid","valuecolormap_str","JSON","stringify","_void","_package","_enum","objectOld","msg","dname","className","substring","length","nodename","replace","on","style","minHeight","overflow","children","tabIndex","background","zIndex","minWidth","color","concat"],"sources":["C:/d/Programming/web/jodel-mde/src/common/DV.tsx"],"sourcesContent":["import {\r\n    DGraphElement, Dictionary,\r\n    DModelElement,\r\n    DViewElement,\r\n    DViewPoint,\r\n    DVoidEdge,\r\n    EdgeBendingMode,\r\n    EdgeHead,\r\n    GObject,\r\n    GraphPoint,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    ShortAttribETypes as SAType,\r\n    U\r\n} from '../joiner';\r\nimport React, {ReactNode} from \"react\";\r\nimport {PaletteType} from \"../view/viewElement/view\";\r\n// const beautify = require('js-beautify').html; // BEWARE: this adds some newline that might be breaking and introduce syntax errors in our JSX parser\r\nconst beautify = (s: string) => s;\r\nlet ShortAttribETypes: typeof SAType = (window as any).ShortAttribETypes;\r\n\r\n@RuntimeAccessible('DV')\r\nexport class DV {\r\n    public static invisibleJsx(): string { return ''; }\r\n    public static modelView(): string { return beautify(DefaultView.model()); } // damiano: che fa beautify? magari potremmo settarlo in LView.set_jsx invece che solo qui, così viene formattato anche l'input utente?\r\n    public static packageView(): string { return beautify(DefaultView.package()); }\r\n    public static classView(): string { return beautify(DefaultView.class()); }\r\n    public static attributeView(): string { return beautify(DefaultView.feature()); }\r\n    public static referenceView(): string { return beautify(DefaultView.feature()); }\r\n    public static enumeratorView(): string { return beautify(DefaultView.enum()); }\r\n    public static literalView(): string { return beautify(DefaultView.literal()); }\r\n    public static voidView(): string { return beautify(DefaultView.void()); }\r\n    public static operationView(): string { return beautify(DefaultView.operation()); }\r\n    public static parameterView(): string { return beautify(DefaultView.parameter()); }\r\n\r\n    // damiano: i want to keep it because it will be useful for a candidate next feature in m1 & layoutable elements\r\n    // it is still work in progress.\r\n    public static operationViewm1(): string { return beautify(DefaultView.operationm1()); }\r\n    public static objectView(): string { return beautify(DefaultView.object()); }\r\n    public static valueView(): string { return beautify(DefaultView.value()); }\r\n    public static defaultPackage(): string { return beautify(DefaultView.defaultPackage()); }\r\n    public static error_raw(...a: Parameters<(typeof DefaultView)[\"error\"]>): React.ReactNode {\r\n        return DefaultView.error(...a);\r\n    }\r\n\r\n    public static errorView(publicmsg: ReactNode, debughiddenmsg:any, errortype: string, data?: DModelElement | undefined, node?: DGraphElement | undefined, v?: DViewElement): React.ReactNode {\r\n        let visibleMessage = publicmsg && typeof publicmsg === \"string\" ? U.replaceAll(publicmsg, \"Parse Error:\", \"\").trim() : publicmsg;\r\n        console.error(\"error in view:\", {publicmsg, debuginfo:debughiddenmsg});\r\n        return DefaultView.error(visibleMessage, errortype, data, node, v); }\r\n    public static errorView_string(publicmsg: string, debughiddenmsg:any, errortype: string, data?: DModelElement | undefined, node?: DGraphElement | undefined, v?: DViewElement): React.ReactNode {\r\n        let visibleMessage = publicmsg && typeof publicmsg === \"string\" ? U.replaceAll(publicmsg, \"Parse Error:\", \"\").trim() : publicmsg;\r\n        console.error(\"error in view:\", {publicmsg, debuginfo:debughiddenmsg});\r\n        return DefaultView.error_string(visibleMessage, errortype, data, node, v); }\r\n\r\n    // {ancors.map( a => <EdgePoint view={\"aaaaa\"} initialSize={{x: node.w * a.x, y: node.h * a.y}}/>)}\r\n    public static anchorJSX(): string { return (`\r\n<div className={\"overlap\"}>\r\n{Object.keys(anchors).map( (k) => { let a = anchors[k]; return(\r\n<div className={\"anchor draggable resizable\"} data-anchorName={a.name} data-anchorKey={k}\r\n    onDragEnd={(coords/*Point*/)=>node.events.dragAnchor(coords, k)} onMouseUp={()=>{node.events.assignAnchor(k)}}\r\n    style={{left: 100*a.x+'%', top:100*a.y+'%', width:a.w+'px', height:a.h+'px'}} />)})\r\n}</div>\r\n`);}\r\n    static edgePointView(): string { return beautify((\r\n`<div className={\"edgePoint\"} tabIndex=\"-1\">\r\n    {decorators}\r\n</div>`\r\n))}\r\n    static edgePointViewSVG(): string { return beautify(\r\n        `<ellipse stroke={\"black\"} fill={\"red\"} cx={\"50\"} cy={\"50\"} rx={\"20\"} ry={\"20\"} />`\r\n        //`<ellipse stroke={\"black\"} fill={\"red\"} cx={props.node.x} cy={props.node.y} rx={props.node.w} ry={props.node.h} />`\r\n    )}\r\n\r\n    static svgHeadTail(head: \"head\" | \"tail\", type: EdgeHead): string | undefined {\r\n        let ret: string;\r\n        let headstr = head===\"head\" ? \"segments.head\" : \"segments.tail\";\r\n        let styleTranslateRotate = 'transform:\"translate(\" + ' + headstr + '.x + \"px, \" + ' + headstr + '.y + \"px) rotate(\" + (' + headstr + '.rad) + \"rad)\",' +\r\n            ' \"transformOrigin\":'+headstr+'.w/2+\"px \"+ '+headstr+'.h/2+\"px\"';\r\n        let attrs = `\\n\\t\\t\\t\\tstyle={{`+styleTranslateRotate +`}}\\n\\t\\t\\t\\tclassName={\"` + head + ` ` + type +` preview\"} />\\n`;\r\n        let path: string;\r\n        let hoverAttrs = `\\n\\t\\t\\t\\tstyle={{`+styleTranslateRotate +`}}\\n\\t\\t\\t\\tclassName={\"` + head + ` ` + type +` clickable content\"} tabIndex=\"-1\" />\\n`;\r\n        let d: string;\r\n        switch (type) {\r\n            default:\r\n                ret = \"edge '\" + head + \"' with type: '\" +type + \"' not found\";\r\n                break;\r\n            case EdgeHead.extend:\r\n                //if (head === \"tail\") return undefined;\r\n                d = `M 0 0   L x y/2   L 0 y   Z`;\r\n                path = `<path  `;\r\n                ret = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.reference:\r\n                //if (head === \"tail\") return undefined;\r\n                d = `M 0 0   L x y/2   L 0 y`;\r\n                path = `<path  `;\r\n                ret = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.aggregation:\r\n                //if (head === \"head\") return undefined;\r\n                d = `M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z`;\r\n                path = `<path  `;\r\n                ret = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n            case EdgeHead.composition:\r\n                //if (head === \"head\") return undefined;\r\n                d = `M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z`;\r\n                path = `<path  `;\r\n                ret = path + attrs + \"\\n\\t\\t\\t\\t\" + path + hoverAttrs;\r\n                break;\r\n                /* `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" style={overflow: \"visible\"}>\r\n                                            <path d={\"M 10 0 L 0 20 L 20 20 Z\"} fill=\"#ffffff\" stroke=\"#808080\" strokeWidth=\"1\"></path>\r\n                                         </svg>`;*/\r\n                //  style={transform: \"rotate3d(xcenter, ycenter, zcenter??, 90deg)\"}\r\n        }\r\n        //  transform={\"rotate(\"+`+headstr+`.rad+\"rad \"+ segments.all[0].start.pt.toString(false, \" \")}\r\n        return ret; // no wrap because of .hoverable > .preview  on root & subelements must be consecutive\r\n        // return `<g className=\"edge`+head + ` ` + type +`\" style={` + styleTranslate + `}>\\n`+ ret +`</g>`\r\n    }\r\n\r\n    // about label rotation in .edge > foreignObect > div (label)\r\n    // first transform is h-center. second is rotate, third adds [0, 50%] of 50% vertical offset AFTER rotation to take label out of edge. fourth is to add a margin.\r\n    static edgeView(modename: EdgeHead, headSize: GraphPoint, tailSize: GraphPoint, dashing: string | undefined, vp: Pointer<DViewPoint>, name: string): DViewElement {\r\n        let fill: string;\r\n        switch (modename){\r\n            case EdgeHead.reference:\r\n            default: fill = '#fff0'; break;\r\n            case EdgeHead.composition: fill = '#000'; break;\r\n            case EdgeHead.aggregation:\r\n            case EdgeHead.extend: fill = '#fff'; break;\r\n        }\r\n\r\n        const agglabel = \"◇ Aggregation / Composition\";\r\n        const extendlabel = \"△ \"+EdgeHead.extend;\r\n        const asslabel = \"Λ \"+EdgeHead.reference;\r\n        let headdict: Dictionary<string, string> = {\r\n            [asslabel]: 'M 0 0   L x y/2   L 0 y',\r\n            [extendlabel]: 'M 0 0   L x y/2   L 0 y   Z',\r\n            [agglabel]: 'M 0 y/2   L x/2 0   L x y/2   L x/2 y   Z',\r\n        };\r\n        let predefinedPaths: {k:string, v:string}[] = Object.entries(headdict).map((e)=>({k:e[0], v:e[1]}));\r\n\r\n        let headPath: string = '', tailPath: string = '';\r\n        switch (modename) {\r\n            default: break;\r\n            case EdgeHead.extend: headPath = extendlabel; break;\r\n            case EdgeHead.reference: headPath = asslabel; break;\r\n            case EdgeHead.aggregation: tailPath = agglabel; break;\r\n            case EdgeHead.composition: tailPath = agglabel; break;\r\n        }\r\n        headPath = headdict[headPath] || '';\r\n        tailPath = headdict[tailPath] || '';\r\n\r\n        let palette: PaletteType = {\r\n            'anchorSize': {type: 'number', value:20, unit:'px'},\r\n            'dashing': {value:dashing || '', type: \"text\"},\r\n            'stroke-color': U.hexToPalette('#777'),\r\n            'stroke-width': {value:1, type: 'number', unit: 'px'},\r\n            'stroke-color-hover': U.hexToPalette('#000'),\r\n            'stroke-width-hover': {value:3, type: 'number', unit: 'px'},\r\n            'head': {type:'path', value:headPath, options: predefinedPaths, x:'edgeHeadSize.x', y:'edgeHeadSize.y'},\r\n            'tail': {type:'path', value:tailPath, options: predefinedPaths, x:'edgeTailSize.x', y:'edgeTailSize.y'},\r\n            'fill': U.hexToPalette(fill),\r\n        };\r\n\r\n        let css = \".edge-anchor{\" +\r\n        \"\\n\\tcursor: crosshair;\" +\r\n        \"\\n\\tstroke: transparent;\" +\r\n        \"\\n\\tfill: none;\" +\r\n        \"\\n\\tr:var(--anchorSize);\" +\r\n        \"\\n\\toutline: var(--stroke-width) solid var(--stroke-color);\"+\r\n        \"\\n\\toutline-offset: calc(var(--stroke-width) * -1);\" +\r\n        \"\\n\\tborder-radius: 100%;\" +\r\n        \"\\n}\" +\r\n        \"\\n.clickthrough, .unclickable{\" +\r\n        \"\\n\\tpointer-events: none;\" +\r\n        \"\\n}\" +\r\n        \"\\n.clickable{\" +\r\n        \"\\n\\tpointer-events: all;\" +\r\n        \"\\n}\" +\r\n        \"\\n.fullscreen{\" +\r\n        \"\\n\\toverflow: visible;\" +\r\n        \"\\n\\twidth: 100vw;\" +\r\n        \"\\n\\theight: 100vh;\" +\r\n        \"\\n}\" +\r\n        \"\\npath{\" +\r\n        \"\\n\\tfill: none;\" +\r\n        \"\\n\\tstroke-dasharray: var(--dashing);\" +\r\n        \"\\n\\t&.head{\" +\r\n        \"\\n\\t\\td: path(var(--head));\" +\r\n        \"\\n\\t}\" +\r\n        \"\\n\\t&.tail{\" +\r\n        \"\\n\\t\\td: path(var(--tail));\" +\r\n        \"\\n\\t}\" +\r\n        \"\\n}\" +\r\n        \"\\npath.edge.full, path.tail, path.head{\" +\r\n        \"\\n\\tstroke: var(--stroke-color);\" +\r\n        \"\\n\\tstroke-width: var(--stroke-width);\" +\r\n        \"\\n}\" +\r\n        \"\\npath.tail, path.head{\" +\r\n        \"\\n\\tfill:var(--fill);\" +\r\n        \"\\n}\" +\r\n        \"\\npath.edge.full.hover-activator{\" +\r\n        \"\\n\\tstroke-width: var(--stroke-width-hover);\" +\r\n        \"\\n\\tstroke: none;\" +\r\n        \"\\n}\" +\r\n        \"\\npath.content{\" +\r\n        \"\\n\\tstroke: var(--stroke-color-hover);\" +\r\n        \"\\n\\tstroke-width: var(--stroke-width-hover);\" +\r\n        \"\\n}\" +\r\n        \"\\nforeignObject.label{\" +\r\n        \"\\n\\toverflow: visible;\" +\r\n        \"\\n\\twidth:0;\" +\r\n        \"\\n\\theight:0;\" +\r\n        \"\\n\\twhite-space: pre;\" +\r\n        \"\\n\\t> div{\" +\r\n        \"\\n\\t\\twidth: fit-content;\" +\r\n        \"\\n\\t}\" +\r\n        \"\\n}\" +\r\n        \"\\n\\t\" +\r\n        \"\\n\\t\" +\r\n        \"\";\r\n        let head = DV.svgHeadTail(\"head\", modename) || '';\r\n        let tail = DV.svgHeadTail(\"tail\", modename) || '';\r\n        let jsx = beautify(\r\n        `<div className={\"edge hoverable hide-ep clickthrough fullscreen ` + modename + `\"}>\r\n            <svg className={\"clickthrough fullscreen\"}>\r\n                { /* edge full paths\r\n               \r\n                 first is preview path, normally seen\r\n                 third (segmented) is path onHover\r\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\r\n                \r\n                */ }\r\n                <path className={\"preview edge full` + (dashing ? ' dashed' : '') + `\"} d={this.edge.d} />\r\n                <path className={\"preview edge full hover-activator\"} d={this.edge.d} />\r\n                { /* edge separate segments */ }\r\n                {segments && segments.all && segments.all.flatMap(s => [\r\n                    <path tabIndex=\"-1\" className={\"clickable content segment\"} d={s.dpart}></path>,\r\n                    s.label && <foreignObject className=\"label\" x={(s.start.pt.x + s.end.pt.x)/2+\"px\"} y={(s.start.pt.y + s.end.pt.y)/2+\"px\"}>\r\n                    <div\r\n                     style={{transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\r\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\r\n                    </foreignObject>\r\n                ])}\r\n                { /* edge head */ }\r\n                ` + head + `\r\n                { /* edge tail */ }\r\n                ` + tail + `\r\n                { /* edge anchor start */ }\r\n                {edge.start && <circle className=\"edge-anchor content clickable\"\r\n                 style={{transform: \"translate(\" + segments.all[0].start.pt.x +\"px, \" + segments.all[0].start.pt.y +\"px)\"}}\r\n                 onMouseDown={()=> edge.startFollow=true}\r\n                 onMouseUp={()=> edge.startfollow=false} />}\r\n                { /* edge anchor end */ }\r\n                {edge.end && <circle className=\"edge-anchor content clickable\" `+ // cx={0*segments.all.last().end.pt.x} cy={0*segments.all.last().end.pt.y}\r\n                `style={{transform: \"translate(\" + segments.all.last().end.pt.x +\"px, \" + segments.all.last().end.pt.y +\"px)\"}}\r\n                 onMouseDown={()=> edge.endFollow=true}\r\n                 onMouseUp={()=> edge.endfollow=false} />}\r\n\r\n            </svg>\r\n            { /* interactively added edgepoints */ }\r\n            {\r\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"EdgePoint\"} /> )\r\n            }\r\n            {decorators}\r\n        </div>`\r\n    );\r\n        let edgePrerenderFunc: string = \"(ret)=>{\\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"\\n\"+\r\n            \"}\";\r\n\r\n        let edgeUsageDeclarations = \"(ret)=>{\\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// ret.data = data\\n\" +\r\n            \"ret.edgeview = edge.view.id\\n\" +\r\n            \"ret.view = view\\n\" +\r\n            \"// data, edge, view are dependencies by default. delete them above if you want to remove them.\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.start = edge.start\\n\"+\r\n            \"ret.end = edge.end\\n\"+\r\n            \"ret.segments = edge.segments\\n\"+\r\n            \"}\";\r\n        let ev = DViewElement.new2(\"Edge\"+name, jsx,\r\n            (v: DViewElement) => {\r\n                v.appliableToClasses = [DVoidEdge.cname];\r\n                v.appliableTo = 'Edge';\r\n                v.bendingMode = EdgeBendingMode.Line;\r\n                v.edgeHeadSize = headSize;\r\n                v.edgeTailSize = tailSize;\r\n                //v.constants = edgeConstants;\r\n                v.palette = palette;\r\n                v.css = css\r\n                v.usageDeclarations = edgeUsageDeclarations;\r\n                v.preRenderFunc = edgePrerenderFunc;\r\n            }, false, vp, 'Pointer_ViewEdge' + name);\r\n        return ev;\r\n    }\r\n    /*\r\n    {\r\n        false && edge.end.model.attributes.map( (m, index, arr) => <EdgePoint data={m.id} initialSize={(parent) => {\r\n            let segs = parent.segments.segments;\r\n            let pos = segs[0].start.pt.multiply(1-(index+1)/(arr.length+1), true).add(segs[segs.length-1].end.pt.multiply((index+1)/(arr.length+1), true));\r\n            // console.trace(\"initial ep\", {segs, pos, ratio:(index+1)/(arr.length+1), s:segs[0].start.pt, e:segs[segs.length-1].end.pt});\r\n            return {...pos, w:55, h:55}}} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\r\n    }{\r\n        false && <EdgePoint key={\"midnode1\"} view={\"Pointer_ViewEdgePoint\"} />\r\n    }{\r\n        false && <EdgePoint key={\"midnode2\"} view={\"Pointer_ViewEdgePoint\"} />\r\n    }{\r\n        false && props.children && \"this would cause loop no idea why, needs to be fixed to allow passing EdgeNodes here\" || []\r\n    }\r\n    */\r\n    static semanticErrorOverlay_old() { return (\r\n`<section className=\"overlap\">\r\n    <div className=\"error-message\">Lowerbound violation</div>\r\n</section>`\r\n)}    static semanticErrorOverlay() { return (\r\n`<section className=\"overlap\">\r\n    <div className=\"error-message\">{errors.join(<br/>)}</div>\r\n</section>`\r\n)}\r\n\r\n\r\n} // DV class end\r\n\r\nlet valuecolormap: GObject = {};\r\nvaluecolormap[ShortAttribETypes.EBoolean] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EByte] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EShort] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EInt] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.ELong] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EFloat] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EDouble] = \"orange\";\r\nvaluecolormap[ShortAttribETypes.EDate] = \"green\";\r\nvaluecolormap[ShortAttribETypes.EString] = \"green\";\r\nvaluecolormap[ShortAttribETypes.EChar] = \"green\";\r\nvaluecolormap[ShortAttribETypes.EVoid] = \"gray\";\r\n\r\n// &&[]bn\r\nlet valuecolormap_str = JSON.stringify(valuecolormap); // can this be declared inside view.constants ?\r\n\r\n\r\nclass DefaultView {\r\n\r\n    public static model(): string { return (\r\n`<div className={'root'}>\r\n    {!data && \"Model data missing.\"}\r\n    <ControlPanel node={node}></ControlPanel>\r\n    <label className={\"detail-level\"}>\r\n        <input onChange={(e)=>{node.state = {level:+e.target.value}}} min=\"0\" max=\"3\" type=\"range\" step=\"1\" value={level}/>\r\n        <div>Detail level:{level}</div>\r\n    </label>\r\n    <div className={'edges'}>\r\n        {[\r\n            refEdges.map(se => <Edge anchorStart={0} anchorEnd={0} key={se.id}\r\n            start={se.start.father.node} end={se.end.node} view={'Edge' + ( se.start.containment && 'Composition' || 'Association')} />),\r\n            extendEdges.map(se => <Edge start={se.start} end={se.end} view={'EdgeInheritance'} key={se.id} />)\r\n        ]}\r\n    </div>\r\n    {otherPackages.filter(p => p).map(pkg => <DefaultNode key={pkg.id} data={pkg} />)}\r\n    {level >= 1 && firstPackage && firstPackage.children.filter(c => c).map(classifier => <DefaultNode key={classifier.id} data={classifier} />)}\r\n    {level >= 1 && m1Objects.filter(o => o).map(m1object => <DefaultNode key={m1object.id} data={m1object} />)}\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static void(): string { return (\r\n`<div className={'round bg-white root void model-less p-1'}>\r\n    <div>voidvertex element test</div>\r\n    <div>data: {props.data ? props.data.name : \"empty\"}</div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static package(): string { return (\r\n`<div className={'root package'}>\r\n    <div className={'package-children'}>\r\n        {upperLevel >= 1 ? [\r\n            <label className={\"detail-level\"}>\r\n                <input onChange={(e)=>{node.state = {level:+e.target.value}}} min=\"0\" max=\"3\" type=\"range\" step=\"1\" value={level}/>\r\n                <div>Detail level:{level}</div>\r\n            </label>,\r\n            data.children.map(c => <DefaultNode key={c.id} data={c} />)\r\n        ] :\r\n        [\r\n            <div className={\"summary\"}><b>URI:</b><span className={\"ms-1\"}>{data.uri}</span></div>,\r\n            <div className={\"summary\"}>{[\r\n                data.classes.length ? data.classes.length + \" classes\" : '',\r\n                data.enumerators.length ? data.enumerators.length + \" enumerators\" : ''\r\n               ].filter(v=>!!v).join(',')}</div>\r\n        ]}\r\n    </div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static defaultPackage(): string { return (\r\n`<div className={'root'}>\r\n    <div className={'package-children'}>\r\n        {data.children.map(c => <DefaultNode key={c.id} data={c} />)}\r\n    </div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static class(): string { return (\r\n`<View className={'root class'} onClick={()=>{/*node.events.e1(Math.random().toFixed(3))*/}}>\r\n    <div className={(abstract ? 'abstract' : '')}>\r\n        <Input data={data} field={'name'} hidden={true} autosize={true} \r\n            jsxLabel={<b className={'class-name'}>{interface ? \"Interface\" : \"Class\"}:</b>} />\r\n    </div>\r\n    <hr/>\r\n    <div className={'class-children'}>\r\n        {level >= 2 && [\r\n            attributes.map(c => <DefaultNode key={c.id} data={c} />),\r\n            references.map(c => <DefaultNode key={c.id} data={c} />),\r\n            operations.map(c => <DefaultNode key={c.id} data={c} />)\r\n          ]\r\n         || [/*\r\n         <div className={\"\"}><b>isInterface:</b><span className={\"ms-1\"}>{''+data.interface}</span></div>,\r\n         <div className={\"\"}><b>isAbstract:</b><span className={\"ms-1\"}>{''+data.abstract}</span></div>,\r\n         <div className={\"\"}><b>Instances:</b><span className={\"ms-1\"}>{data.instances.length}</span></div>,*/\r\n         <div className={\"summary\"}>{[\r\n             attributes.length ? attributes.length + \" attributes\" : '',\r\n             references.length ? references.length + \" references\" : '',\r\n             operations.length ? operations.length + \" operations\" : '',\r\n             !(attributes.length + references.length + operations.length) ? '- empty -' : ''\r\n            ].filter(v=>!!v).join(',')}</div>\r\n         ]\r\n        }\r\n    </div>\r\n    {decorators}\r\n</View>`\r\n);}\r\n\r\n    public static enum(): string { return (\r\n`<div className={'root enumerator'}>\r\n    <Input jsxLabel={<b className={'enumerator-name'}>Enum:</b>} data={data} field={'name'} hidden={true} autosize={true} />\r\n    <hr />\r\n    <div className={'enumerator-children'}>\r\n        {level >= 2 && literals.map(c => <DefaultNode key={c.id} data={c}/>)\r\n          || <div className={\"summary\"}>{literals.length} literals</div>}\r\n    </div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static feature(): string { return (\r\n`<div className={'root w-100 feature'}>\r\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name} />\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static literal(): string { return (\r\n`<label className={'root d-block text-center'}>\r\n    {data.name}\r\n    {decorators}\r\n</label>`\r\n);}\r\n\r\n    public static operation(): string { return (\r\n`<div className={'root w-100'}>\r\n    <Select className={'p-1 d-flex'} data={data} field={'type'} label={data.name + ' =>'} />\r\n    {data.exceptions.length ? \" throws \" + data.exceptions.join(\", \") : ''}\r\n    <div className={\"parameters\"}>{\r\n        level >= 3 && data.parameters.map(p => <DefaultNode data={p} key={p.id} />)\r\n    }</div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\npublic static parameter(): string { return (\r\n`<div className={'root w-100 ms-1'}>\r\n    <Select className={'p-1 d-flex'} data={data} field={'type'}\r\n        label={data.name + '' + (data.lowerBound === 0 ? '?:' : ':' )}\r\n        postlabel={data.upperBound === 0 ? '&nbsp;&nbsp;' : '[]'}/>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    // damiano: i want to keep it because it will be useful for a candidate next feature in m1 & layoutable elements\r\n    // it is still work in progress.\r\n    public static operationm1(): string { return (\r\n`<div className={'d-flex root operationm1'} style={{paddingRight: \"6px\"}}>\r\n    <label className={'d-block ms-1'}>{this.props.data.instanceof.name}</label>\r\n    <label className={'d-block ms-auto hover-root'} style={{color:` + valuecolormap_str + `[this.props.data.values.type] || \"gray\"}}>\r\n        →→→\r\n        <div className=\"hover-content\">\r\n            <ParameterForm operation={this.props.data.id} vertical={true} />\r\n        </div>\r\n    </label>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static objectOld(): string { return (\r\n`<div className={'round bg-white root class'}>\r\n    <label className={'ms-1'}>\r\n        <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \"Object\"}:</b>} \r\n           data={data} field={'name'} hidden={true} autosize={true}/>\r\n    </label>\r\n    <hr />\r\n    <div className={'object-children'}>\r\n        { features.map(c => <DefaultNode key={c.id} data={c} />) }\r\n    </div>\r\n    {decorators}\r\n</div>`);\r\n}\r\n\r\n    public static object(): string { return (\r\n`<div className={'root object'}>\r\n    <Input jsxLabel={<b className={'object-name'}>{data.instanceof ? data.instanceof.name : \"Object\"}:</b>}\r\n            data={data} field={'name'} hidden={true} autosize={true} />\r\n    <hr/>\r\n    <div className={'object-children'}>\r\n        {level >= 2 && data.features.map(f => <DefaultNode key={f.id} data={f} />)}\r\n    </div>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n    public static value() { return (\r\n`<div className={'root d-flex value'}>\r\n     {instanceofname && <label className={'d-block ms-1'}>{instanceofname}</label>}\r\n     {!instanceofname && <Input asLabel={true} data={data} field={'name'} hidden={true} autosize={true} />}\r\n    <label className={'d-block m-auto values_str'} style={{color: constants[typeString] || 'gray'}}>\r\n        : {valuesString}\r\n    </label>\r\n    {decorators}\r\n</div>`\r\n);}\r\n\r\n\r\n\r\n    public static error(msg: undefined | ReactNode, errortype: string | \"SYNTAX\" | \"RUNTIME\",\r\n                        data?: DModelElement | undefined, node?: DGraphElement | undefined, v?: DViewElement): React.ReactNode {\r\n\r\n        let dname: string | undefined = data && ((data as any).name || data.className.substring(1));\r\n        if (dname && dname.length >= 10) dname = dname.substring(0, 7) + '…';\r\n        let nodename: string = (node?.className || '').replace(/[^A-Z]+/g, \"\").substring(1);\r\n        let on = dname && nodename ? \" on \" + dname + \" / \" + nodename : (dname || nodename ? \" on \" + (dname || nodename) : '');\r\n        return <div className={(v ? 'w-100 h-100' : 'raw_error') + ' round bg-white border border-danger'} style={{minHeight:\"50px\", overflow:\"scroll\"}}>\r\n            <div className={'text-center text-danger'} tabIndex={-1} style={{background:\"#fff\", overflow: 'visible', zIndex:100, minWidth:\"min-content\"}}>\r\n                <b data-dname={dname} data-nodename={nodename} data-str={true}>\r\n                    {errortype} ERROR{on}</b>\r\n                <hr/>\r\n                {v && <label className={'text-center mx-1 d-block'}>\r\n                    While applying view \"{v.name}\"\r\n                </label>}\r\n                {msg && <label className={'text-center mx-1 d-block'} style={{color:\"black\"}}>{msg}</label>}\r\n            </div>\r\n        </div>;\r\n    }\r\n    public static error_string(msg: undefined | ReactNode, errortype: string | \"SYNTAX\" | \"RUNTIME\", data?: DModelElement | undefined, node?: DGraphElement | undefined, v?: DViewElement) {\r\n        let dname: string | undefined = data && ((data as any).name || data.className.substring(1));\r\n        if (dname && dname.length >= 10) dname = dname.substring(0, 7) + '…';\r\n        let nodename: string = (node?.className || '').replace(/[^A-Z]+/g, \"\").substring(1);\r\n        let on = dname && nodename ? \" on \" + dname + \" / \" + nodename : (dname || nodename ? \" on \" + (dname || nodename) : '');\r\n        return `<div className={'w-100 h-100 round bg-white border border-danger'} style={{minHeight:\"50px\", overflow:\"scroll\"}}>\r\n            <div className={'text-center text-danger'} tabIndex={-1} style={{background:\"#fff\", overflow: 'visible', zIndex:100, minWidth:\"min-content\"}}>\r\n                <b>{errortype}_ERROR` + on + `</b>\r\n                <hr/>\r\n                <label className={'text-center mx-1 d-block'}>\r\n                    While applying view \"${v?.name}\"\r\n                </label>\r\n                {${msg} && <label className={'text-center mx-1 d-block'} style={{color:\"black\"}}>${msg}</label>}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}