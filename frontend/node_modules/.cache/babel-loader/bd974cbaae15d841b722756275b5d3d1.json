{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\topbar\\\\undoredocomponent.tsx\";\nimport React, { PureComponent } from 'react';\nimport { DUser, U, RedoAction, statehistory, UndoAction, store, DPointerTargetable } from '../../joiner';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UndoRedoState {\n  constructor(jsx) {\n    this.hover = false;\n    this.jsx = void 0;\n    this.jsx = jsx;\n  }\n}\n\n// private\n\n// private\n\n// private\n\n// private\n\n// private\n\nexport class SaveManagerComponent extends PureComponent {\n  printablePointer(pathsegment, state) {\n    let obj = DPointerTargetable.from(pathsegment, state);\n    if (!obj) return pathsegment;\n    if (obj.name) return \"$\" + obj.name;\n    if (obj.className) return \"#\" + obj.className;\n    return pathsegment;\n  }\n  // redo list is updated only when the user mouse-enters it. for efficiency.\n\n  constructor(props, context) {\n    var _this;\n    super(props, context);\n    _this = this;\n    this.undoredolistoutdated = void 0;\n    this.do_undo = index => {\n      UndoAction.new(index + 1);\n      this.undoenter(); // updates list\n    };\n    this.do_redo = index => {\n      console.log(\"redo(\" + index + \")\");\n      RedoAction.new(index + 1);\n      this.redoenter();\n    };\n    this.undoredoenter = function () {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"undo\";\n      console.log(\"statemanager undo update\", {\n        thiss: _this,\n        undo: _this.props.undo,\n        redo: _this.props.redo,\n        props: _this.props,\n        state: _this.state\n      });\n      if (!_this.undoredolistoutdated) return;\n      let s = store.getState();\n      let arr = [..._this.props[key]].reverse().slice(0, _this.props.maxlistsize);\n      let list = arr.map((delta, index) => {\n        let out = [];\n        U.ObjectToAssignementStrings(delta, 10, 6, 20, \"â€¦\", out, true);\n        console.log(\"undoredo update\", out);\n        if (out.best.fullstr.includes(\"Pointer\")) {\n          let editedfullpath = out.best.fullpath.map(pathsegment => {\n            //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\n            return _this.printablePointer(pathsegment, s);\n          });\n          out.best.str = editedfullpath.join(\".\") + \" = \" + out.best.val;\n          console.log(\"undoredo replace attempt\", {\n            editedfullpath,\n            beststr: out.best.str,\n            best: out.best\n          });\n        }\n        if (out.best.path[0] === \"idlookup\") out.best.str = \"\" + out.best.str.substring(\"idlookup.\".length);\n        if (out.best.fullvalue.includes(\"Pointer\")) {\n          out.best.val = _this.printablePointer(out.best.fullvalue.substring(1, out.best.fullvalue.length - 1), s); // 1, -1 because string values have quotes \"\"\n          out.best.str = out.best.str.substring(0, out.best.str.lastIndexOf(\"=\")) + \"= \" + out.best.val;\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => _this[\"do_\" + key](index),\n          className: \"hoverable\",\n          style: {\n            overflow: \"visible\",\n            height: \"24px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview\",\n            children: out.best.str\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            style: {\n              overflow: \"visible\",\n              height: \"100%\",\n              width: \"max-content\",\n              maxWidth: \"75vw\"\n            },\n            children: out.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: \"#ddd\",\n                marginLeft: \"-20px\",\n                paddingLeft: \"20px\",\n                height: \"fit-content\",\n                pointerEvents: \"none\"\n              },\n              children: row.fullpath.join(\".\") + \" = \" + row.fullvalue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 36\n            }, _this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, _this);\n      });\n      let jsx = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: list\n      }, void 0, false);\n      let obj = {};\n      obj[key] = {\n        ..._this.state[key],\n        hover: true,\n        jsx\n      };\n      // {undo: {...this.state.undo, hover: true, jsx}}\n      _this.undoredolistoutdated = false;\n      _this.setState(obj);\n    };\n    this.undoenter = () => {\n      return this.undoredoenter(\"undo\");\n    };\n    this.redoenter = () => {\n      return this.undoredoenter(\"redo\");\n    };\n    this.undoleave = () => {\n      this.setState({\n        undo: {\n          ...this.state.undo,\n          hover: false\n        }\n      });\n    };\n    this.redoleave = () => {\n      this.setState({\n        redo: {\n          ...this.state.redo,\n          hover: false\n        }\n      });\n    };\n    let undo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"undo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 38\n    }, void 0));\n    let redo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"redo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 38\n    }, void 0));\n    this.state = {\n      undo,\n      redo\n    };\n    this.undoredolistoutdated = true;\n    // this.setState({undo, redo});\n  }\n  render() {\n    this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\n    // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.undoenter,\n          onMouseLeave: this.undoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_undo(0);\n            },\n            children: [\"Undo (\", this.props.undo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), this.props.debug && this.props.undo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.undo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.redoenter,\n          onMouseLeave: this.redoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_redo(0);\n            },\n            children: [\"Redo (\", this.props.redo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), this.props.debug && this.props.redo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.redo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 67\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            statehistory[DUser.current].undoable = [];\n            statehistory[DUser.current].redoable = [];\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nSaveManagerComponent.cname = \"SaveManagerComponent\";\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.undo = statehistory[DUser.current].undoable;\n  ret.redo = statehistory[DUser.current].redoable;\n  ret.maxlistsize = 10;\n  ret.debug = state.debug;\n  /// to fill\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  /// to fill\n  return ret;\n}\nexport const SaveManagerConnected = connect(mapStateToProps, mapDispatchToProps)(SaveManagerComponent);\nexport default SaveManagerConnected;\nexport const Undoredocomponent = SaveManagerConnected;","map":{"version":3,"names":["React","PureComponent","DUser","U","RedoAction","statehistory","UndoAction","store","DPointerTargetable","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","UndoRedoState","constructor","jsx","hover","SaveManagerComponent","printablePointer","pathsegment","state","obj","from","name","className","props","context","_this","this","undoredolistoutdated","do_undo","index","new","undoenter","do_redo","console","log","redoenter","undoredoenter","key","arguments","length","undefined","thiss","undo","redo","s","getState","arr","reverse","slice","maxlistsize","list","map","delta","out","ObjectToAssignementStrings","best","fullstr","includes","editedfullpath","fullpath","str","join","val","beststr","path","substring","fullvalue","lastIndexOf","onClick","style","overflow","height","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","row","background","marginLeft","paddingLeft","pointerEvents","setState","undoleave","redoleave","render","display","position","onMouseEnter","onMouseLeave","e","debug","zIndex","current","undoable","redoable","cname","mapStateToProps","ownProps","ret","mapDispatchToProps","dispatch","SaveManagerConnected","Undoredocomponent"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/topbar/undoredocomponent.tsx"],"sourcesContent":["import React, {Dispatch, PureComponent, ReactNode} from 'react';\r\nimport {\r\n    Dictionary, DUser,\r\n    GObject, DState,\r\n    Log, U, RedoAction,\r\n    statehistory,\r\n    UndoAction, store, DPointerTargetable,\r\n} from '../../joiner';\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface SaveManagerProps {}\r\n\r\nclass UndoRedoState{\r\n    hover: boolean = false;\r\n    jsx: any | null;\r\n    constructor(jsx: any) {  this.jsx = jsx; }\r\n}\r\n\r\n// private\r\ninterface ThisState {\r\n    undo: UndoRedoState;\r\n    redo: UndoRedoState;\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n    maxlistsize: number;\r\n    undo: GObject<\"delta\">[],\r\n    redo: GObject<\"delta\">[],\r\n    debug: boolean\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\ntype R = {str: string, fullstr: string, path:string[], fullpath:string[], val: string, fullvalue: string, pathlength?: number};\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nexport class SaveManagerComponent extends PureComponent<AllProps, ThisState>{\r\n    public static cname: string = \"SaveManagerComponent\";\r\n    private undoredolistoutdated: boolean;\r\n    do_undo = (index: number) => {\r\n        UndoAction.new(index+1);\r\n        this.undoenter(); // updates list\r\n    }\r\n    do_redo = (index: number) => {\r\n        console.log(\"redo(\" + index + \")\");\r\n        RedoAction.new(index+1);\r\n        this.redoenter();\r\n    }\r\n    printablePointer(pathsegment: string, state: DState){\r\n        let obj = DPointerTargetable.from(pathsegment, state) as GObject;\r\n        if (!obj) return pathsegment;\r\n        if (obj.name) return \"$\"+obj.name;\r\n        if (obj.className) return \"#\"+obj.className;\r\n        return pathsegment;\r\n    }\r\n    // redo list is updated only when the user mouse-enters it. for efficiency.\r\n    undoredoenter = (key: string = \"undo\") => {\r\n        console.log(\"statemanager undo update\", {thiss:this, undo:this.props.undo, redo: this.props.redo, props: this.props, state:this.state});\r\n        if (!this.undoredolistoutdated) return;\r\n        let s: DState = store.getState();\r\n        let arr = [...(this.props as GObject)[key]].reverse().slice(0, this.props.maxlistsize);\r\n        let list = arr.map((delta, index) => {\r\n            let out: {best: R}&R[] = [] as GObject as R[] & {best:R};\r\n            U.ObjectToAssignementStrings(delta, 10, 6, 20, \"â€¦\", out, true);\r\n            console.log(\"undoredo update\", out);\r\n            if (out.best.fullstr.includes(\"Pointer\")) {\r\n                let editedfullpath = out.best.fullpath.map( (pathsegment) => {\r\n                    //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\r\n                    return this.printablePointer(pathsegment, s); });\r\n                out.best.str = editedfullpath.join(\".\") + \" = \" + out.best.val;\r\n                console.log(\"undoredo replace attempt\", {editedfullpath, beststr:out.best.str, best: out.best});\r\n            }\r\n\r\n            if (out.best.path[0] === \"idlookup\") out.best.str = \"\" + out.best.str.substring(\"idlookup.\".length);\r\n            if (out.best.fullvalue.includes(\"Pointer\")) {\r\n                out.best.val = this.printablePointer(out.best.fullvalue.substring(1, out.best.fullvalue.length-1), s); // 1, -1 because string values have quotes \"\"\r\n                out.best.str = out.best.str.substring(0, out.best.str.lastIndexOf(\"=\")) + \"= \" + out.best.val;\r\n            }\r\n            return <li onClick={() => ((this as GObject)[\"do_\"+key](index))} className=\"hoverable\" key={index} style={{overflow: \"visible\", height: \"24px\"}}>\r\n                <div className={\"preview\"}>{out.best.str}</div>\r\n                <div className={\"content\"} style={{overflow: \"visible\", height:\"100%\",\r\n                    width: \"max-content\", maxWidth: \"75vw\"}}>{\r\n                    out.map(row => <div style={{background: \"#ddd\", marginLeft: \"-20px\", paddingLeft:\"20px\", height:\"fit-content\", pointerEvents:\"none\"}}>{row.fullpath.join(\".\") + \" = \" + row.fullvalue}</div>)\r\n                }</div>\r\n            </li>\r\n        });\r\n        let jsx = <>{list}</>;\r\n        let obj: GObject = {};\r\n        obj[key] = {...(this.state as GObject)[key], hover: true, jsx};\r\n        // {undo: {...this.state.undo, hover: true, jsx}}\r\n        this.undoredolistoutdated = false;\r\n        this.setState(obj as ThisState);\r\n    }\r\n\r\n    undoenter = ()=>{ return this.undoredoenter(\"undo\"); }\r\n    redoenter = ()=>{ return this.undoredoenter(\"redo\"); }\r\n    undoleave = ()=>{ this.setState({undo: {...this.state.undo, hover: false}}); }\r\n    redoleave = ()=>{ this.setState({redo: {...this.state.redo, hover: false}}); }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        let undo = new UndoRedoState(<div>undo list example</div>);\r\n        let redo = new UndoRedoState(<div>redo list example</div>);\r\n        this.state = {undo, redo};\r\n        this.undoredolistoutdated = true;\r\n        // this.setState({undo, redo});\r\n    }\r\n    render(): ReactNode {\r\n        this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\r\n        // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\r\n        return(<>\r\n            <div style={{display: \"inline-block\"}}>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.undoenter} onMouseLeave={this.undoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_undo(0) }}>Undo ({this.props.undo.length})</button>\r\n                    {this.props.debug && this.props.undo.length ?\r\n                        <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.undo.jsx}</ul>\r\n                        : null}\r\n                </span>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.redoenter} onMouseLeave={this.redoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_redo(0) }}>Redo ({this.props.redo.length})</button>\r\n                    {this.props.debug && this.props.redo.length ? <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.redo.jsx}</ul> : null}\r\n                </span>\r\n                <button onClick={()=>{statehistory[DUser.current].undoable = []; statehistory[DUser.current].redoable = [];}}>x</button>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.undo = statehistory[DUser.current].undoable;\r\n    ret.redo = statehistory[DUser.current].redoable;\r\n    ret.maxlistsize = 10;\r\n    ret.debug = state.debug;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const SaveManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SaveManagerComponent);\r\n\r\nexport default SaveManagerConnected;\r\nexport const Undoredocomponent = SaveManagerConnected;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}