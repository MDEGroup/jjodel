{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OclIsTypeOfExpression = void 0;\nvar Utils_1 = require(\"../Utils\");\nvar Expression_1 = require(\"./Expression\");\n/**\n * Checks if *self* is an instance of exact the class identified by the name\n *\n * @oclExpression oclIsTypeOf(s : String) : Boolean\n */\nvar OclIsTypeOfExpression = /** @class */function (_super) {\n  __extends(OclIsTypeOfExpression, _super);\n  function OclIsTypeOfExpression() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  OclIsTypeOfExpression.prototype.evaluate = function (visitor, localVariables) {\n    var source = this.getSource().evaluate(visitor, localVariables);\n    source = Utils_1.Utils.getClassName(source);\n    var body = this.getBody().evaluate(visitor, localVariables);\n    if (typeof body !== 'string') {\n      body = Utils_1.Utils.getClassName(body);\n    }\n    return source === body;\n  };\n  return OclIsTypeOfExpression;\n}(Expression_1.BodyBasedExpression);\nexports.OclIsTypeOfExpression = OclIsTypeOfExpression;","map":{"version":3,"names":["Utils_1","require","Expression_1","OclIsTypeOfExpression","_super","__extends","prototype","evaluate","visitor","localVariables","source","getSource","Utils","getClassName","body","getBody","BodyBasedExpression","exports"],"sources":["../../../lib/components/expressions/OclIsTypeOfExpression.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAD,OAAA;AAEA;;;;;AAKA,IAAAE,qBAAA,0BAAAC,MAAA;EAA2CC,SAAA,CAAAF,qBAAA,EAAAC,MAAA;EAA3C,SAAAD,sBAAA;;EAaA;EAZIA,qBAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,OAA4B,EAAEC,cAAoB;IACvD,IAAIC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE,CAACJ,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;IAC/DC,MAAM,GAAGV,OAAA,CAAAY,KAAK,CAACC,YAAY,CAACH,MAAM,CAAC;IAEnC,IAAII,IAAI,GAAG,IAAI,CAACC,OAAO,EAAE,CAACR,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;IAE3D,IAAI,OAAOK,IAAI,KAAK,QAAQ,EAAE;MAC1BA,IAAI,GAAGd,OAAA,CAAAY,KAAK,CAACC,YAAY,CAACC,IAAI,CAAC;;IAGnC,OAAOJ,MAAM,KAAKI,IAAI;EAC1B,CAAC;EACL,OAAAX,qBAAC;AAAD,CAAC,CAb0CD,YAAA,CAAAc,mBAAmB;AAAjDC,OAAA,CAAAd,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"script"}