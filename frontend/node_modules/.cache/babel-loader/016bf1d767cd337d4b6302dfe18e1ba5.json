{"ast":null,"code":"import{AttribETypes,CoordinateMode,EdgeBendingMode,EdgeHead,EGraphElements,EModelElements,stateInitializer,ShortAttribETypes,windoww,AccessModifier,EdgeGapMode}from\"../joiner\";import*as Componentss from'../joiner/components';import React from\"react\";/*\r\nlet pairs = [\r\n    [DAnnotation, LAnnotation],\r\n    [DModelElement, LModelElement],\r\n    [DAttribute, LAttribute],\r\n    [DClass, LClass],\r\n    [DClassifier, LClassifier],\r\n    [DEnumerator, LEnumerator],\r\n    [DEnumLiteral, LEnumLiteral],\r\n    [DModel, LModel],\r\n    [DObject, LObject],\r\n    [DOperation, LOperation],\r\n    [DPackage, LPackage],\r\n    [DParameter, LParameter],\r\n    [DReference, LReference],\r\n    [DStructuralFeature, LStructuralFeature],\r\n    [DValue, LValue],\r\n    [DModelElementTransientProperties, LModelElementTransientProperties],\r\n    [DViewTransientProperties, LViewTransientProperties],\r\n    [DViewPrivateTransientProperties, LViewPrivateTransientProperties],\r\n    [DViewElement, LViewElement],\r\n    [DVoidVertex, LVoidVertex]\r\n    // [DMap, LMap],\r\n];\r\n*/ /*for (let pair of pairs as any[]) {\r\n    pair[0].logic = pair[1];\r\n    pair[1].singleton = new pair[1]();\r\n    pair[1].structure = pair[0];\r\n    windoww[pair[0].name] = pair[0];\r\n    windoww[pair[1].name] = pair[1];\r\n}*/ /*\r\nDAnnotation.logic = LAnnotation;\r\nLAnnotation.singleton = new LAnnotation();\r\n\r\nDModelElement.logic = LModelElement;\r\nLModelElement.singleton = new LModelElement();\r\nDAttribute.logic = LAttribute;\r\nLAttribute.singleton = new LAttribute();\r\nDClass.logic = LClass;\r\nDClassifier.logic = LClassifier;\r\nDEnumerator.logic = LEnumerator;\r\nDEnumLiteral.logic = LEnumLiteral;\r\nDModel.logic = LModel;\r\nDOBject.logic = LObject;\r\nDOperation.logic = LOperation;\r\nDPackage.logic = LPackage;\r\nDParameter.logic = LParameter;\r\nDReference.logic = LReference;\r\nDStructuralFeature.logic = LStructuralFeature;\r\nDValue.logic = LValue;\r\nDModelElementTransientProperties.logic = LModelElementTransientProperties;\r\n\r\nLClass.singleton = new LClass();\r\nLClassifier.singleton = new LClassifier();\r\nLEnumerator.singleton = new LEnumerator();\r\nLEnumLiteral.singleton = new LEnumLiteral();\r\nLOperation.singleton = new LOperation();\r\nLPackage.singleton = new LPackage();\r\nLParameter.singleton = new LParameter();\r\nLReference.singleton = new LReference();\r\nLStructuralFeature.singleton = new LStructuralFeature();\r\nLValue.singleton = new LValue();\r\nLModel.singleton = new LModel();\r\nLObject.singleton = new LObject();\r\nLModelElementTransientProperties.singleton = new LModelElementTransientProperties();\r\n*/export const fakeExport={};// just to import-execute this file\n// DState.fakeinit();\n// Symbol.prototype.toString = function(): string { alert('symbol to string'); return String(this); }\nlet Components=Componentss;/*\r\nComponents.map(C=> {\r\n    if (typeof C === 'object') return\r\n})\r\nfor (let Comp of Components) {\r\n\r\n}*/let wComponents={...Components};// set fallback keys without \"Component\" string, only if this does not make a naming conflict.\nfor(let key in wComponents){let index=key.indexOf(\"Component\");if(index===-1)continue;let newkey=key.substring(0,index);if(Components[newkey])continue;wComponents[newkey]=Components[key];}windoww.React=React;// (Components as any)[\"input\"] = Components[\"InputComponent\"];\nwindoww.Components=wComponents;for(let k in wComponents){if(windoww[k]&&windoww[k]!==wComponents[k]){let str=\"Component naming conflict with a preexisting variable \\\"\"+k+\"\\\"\";console.error(str,{inWindow:windoww[k],inComponents:wComponents[k]});throw new Error(str);}windoww[k]=wComponents[k];}windoww.enumerators={};window.ShortAttribETypes=ShortAttribETypes;window.enumerators.ShortAttribETypes=ShortAttribETypes;window.AccessModifier=AccessModifier;window.enumerators.AccessModifier=AccessModifier;window.AttribETypes=AttribETypes;window.enumerators.AttribETypes=AttribETypes;window.CoordinateMode=CoordinateMode;window.enumerators.CoordinateMode=CoordinateMode;window.EdgeHead=EdgeHead;window.enumerators.EdgeHead=EdgeHead;window.EGraphElements=EGraphElements;window.enumerators.EGraphElements=EGraphElements;window.EModelElements=EModelElements;window.enumerators.EModelElements=EModelElements;window.EdgeGapMode=EdgeGapMode;window.enumerators.EdgeGapMode=EdgeGapMode;window.EdgeBendingMode=EdgeBendingMode;window.enumerators.EdgeBendingMode=EdgeBendingMode;function afterStoreLoad(){stateInitializer();}// afterStoreLoad();\n// setTimeout( afterStoreLoad, 0);","map":{"version":3,"names":["AttribETypes","CoordinateMode","EdgeBendingMode","EdgeHead","EGraphElements","EModelElements","stateInitializer","ShortAttribETypes","windoww","AccessModifier","EdgeGapMode","Componentss","React","fakeExport","Components","wComponents","key","index","indexOf","newkey","substring","k","str","console","error","inWindow","inComponents","Error","enumerators","window","afterStoreLoad"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/joiner/ExecuteOnRead.ts"],"sourcesContent":["import {\r\n    AttribETypes,\r\n    CoordinateMode,\r\n    EdgeBendingMode,\r\n    EdgeHead,\r\n    EGraphElements,\r\n    EModelElements,\r\n    stateInitializer,\r\n    ShortAttribETypes,\r\n    windoww,\r\n    AccessModifier,\r\n    EdgeGapMode, GObject\r\n} from \"../joiner\";\r\nimport * as Componentss from '../joiner/components';\r\nimport React from \"react\";\r\n\r\n\r\n/*\r\nlet pairs = [\r\n    [DAnnotation, LAnnotation],\r\n    [DModelElement, LModelElement],\r\n    [DAttribute, LAttribute],\r\n    [DClass, LClass],\r\n    [DClassifier, LClassifier],\r\n    [DEnumerator, LEnumerator],\r\n    [DEnumLiteral, LEnumLiteral],\r\n    [DModel, LModel],\r\n    [DObject, LObject],\r\n    [DOperation, LOperation],\r\n    [DPackage, LPackage],\r\n    [DParameter, LParameter],\r\n    [DReference, LReference],\r\n    [DStructuralFeature, LStructuralFeature],\r\n    [DValue, LValue],\r\n    [DModelElementTransientProperties, LModelElementTransientProperties],\r\n    [DViewTransientProperties, LViewTransientProperties],\r\n    [DViewPrivateTransientProperties, LViewPrivateTransientProperties],\r\n    [DViewElement, LViewElement],\r\n    [DVoidVertex, LVoidVertex]\r\n    // [DMap, LMap],\r\n];\r\n*/\r\n\r\n/*for (let pair of pairs as any[]) {\r\n    pair[0].logic = pair[1];\r\n    pair[1].singleton = new pair[1]();\r\n    pair[1].structure = pair[0];\r\n    windoww[pair[0].name] = pair[0];\r\n    windoww[pair[1].name] = pair[1];\r\n}*/\r\n\r\n/*\r\nDAnnotation.logic = LAnnotation;\r\nLAnnotation.singleton = new LAnnotation();\r\n\r\nDModelElement.logic = LModelElement;\r\nLModelElement.singleton = new LModelElement();\r\nDAttribute.logic = LAttribute;\r\nLAttribute.singleton = new LAttribute();\r\nDClass.logic = LClass;\r\nDClassifier.logic = LClassifier;\r\nDEnumerator.logic = LEnumerator;\r\nDEnumLiteral.logic = LEnumLiteral;\r\nDModel.logic = LModel;\r\nDOBject.logic = LObject;\r\nDOperation.logic = LOperation;\r\nDPackage.logic = LPackage;\r\nDParameter.logic = LParameter;\r\nDReference.logic = LReference;\r\nDStructuralFeature.logic = LStructuralFeature;\r\nDValue.logic = LValue;\r\nDModelElementTransientProperties.logic = LModelElementTransientProperties;\r\n\r\nLClass.singleton = new LClass();\r\nLClassifier.singleton = new LClassifier();\r\nLEnumerator.singleton = new LEnumerator();\r\nLEnumLiteral.singleton = new LEnumLiteral();\r\nLOperation.singleton = new LOperation();\r\nLPackage.singleton = new LPackage();\r\nLParameter.singleton = new LParameter();\r\nLReference.singleton = new LReference();\r\nLStructuralFeature.singleton = new LStructuralFeature();\r\nLValue.singleton = new LValue();\r\nLModel.singleton = new LModel();\r\nLObject.singleton = new LObject();\r\nLModelElementTransientProperties.singleton = new LModelElementTransientProperties();\r\n*/\r\nexport const fakeExport = {}; // just to import-execute this file\r\n// DState.fakeinit();\r\n// Symbol.prototype.toString = function(): string { alert('symbol to string'); return String(this); }\r\n\r\nlet Components = Componentss;\r\n/*\r\nComponents.map(C=> {\r\n    if (typeof C === 'object') return\r\n})\r\nfor (let Comp of Components) {\r\n\r\n}*/\r\nlet wComponents: GObject = {...Components}\r\n// set fallback keys without \"Component\" string, only if this does not make a naming conflict.\r\nfor (let key in wComponents) {\r\n    let index = key.indexOf(\"Component\")\r\n    if (index === -1) continue;\r\n    let newkey = key.substring(0, index);\r\n    if ((Components as any)[newkey]) continue;\r\n    (wComponents as any)[newkey] = (Components as any)[key];\r\n}\r\nwindoww.React = React;\r\n// (Components as any)[\"input\"] = Components[\"InputComponent\"];\r\nwindoww.Components = wComponents;\r\nfor (let k in wComponents) {\r\n    if (windoww[k] && windoww[k] !== wComponents[k]) {\r\n        let str = \"Component naming conflict with a preexisting variable \\\"\" + k + \"\\\"\";\r\n        console.error(str, {inWindow:windoww[k], inComponents:wComponents[k]});\r\n        throw new Error(str);\r\n    }\r\n    windoww[k] = wComponents[k];\r\n}\r\n\r\nwindoww.enumerators = {};\r\n\r\n\r\n(window as any).ShortAttribETypes = ShortAttribETypes;\r\n(window as any).enumerators.ShortAttribETypes = ShortAttribETypes;\r\n(window as any).AccessModifier = AccessModifier;\r\n(window as any).enumerators.AccessModifier = AccessModifier;\r\n(window as any).AttribETypes = AttribETypes;\r\n(window as any).enumerators.AttribETypes = AttribETypes;\r\n(window as any).CoordinateMode = CoordinateMode;\r\n(window as any).enumerators.CoordinateMode = CoordinateMode;\r\n(window as any).EdgeHead = EdgeHead;\r\n(window as any).enumerators.EdgeHead = EdgeHead;\r\n(window as any).EGraphElements = EGraphElements;\r\n(window as any).enumerators.EGraphElements = EGraphElements;\r\n(window as any).EModelElements = EModelElements;\r\n(window as any).enumerators.EModelElements = EModelElements;\r\n(window as any).EdgeGapMode = EdgeGapMode;\r\n(window as any).enumerators.EdgeGapMode = EdgeGapMode;\r\n(window as any).EdgeBendingMode = EdgeBendingMode;\r\n(window as any).enumerators.EdgeBendingMode = EdgeBendingMode;\r\n\r\nfunction afterStoreLoad() {\r\n    stateInitializer();\r\n}\r\n\r\n// afterStoreLoad();\r\n// setTimeout( afterStoreLoad, 0);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}