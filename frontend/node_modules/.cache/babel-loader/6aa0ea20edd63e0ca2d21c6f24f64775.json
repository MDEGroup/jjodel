{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.scss';\nimport './styles/view.scss';\nimport './styles/style.scss';\nimport { DUser, stateInitializer, LUser, statehistory, SetRootFieldAction, LPointerTargetable } from \"./joiner\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/loader/Loader\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Editor from \"./pages/Editor\";\nimport Helper from \"./components/helper/Helper\";\nimport Auth from \"./pages/Auth\";\nimport { useEffectOnce } from \"usehooks-ts\";\nimport PersistanceApi from \"./api/persistance\";\nimport CollaborativeAttacher from './components/collaborative/CollaborativeAttacher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet userHasInteracted = false;\nfunction endPendingActions() {\n  if (!userHasInteracted) firstInteraction();\n}\nfunction firstInteraction() {\n  statehistory.globalcanundostate = true;\n}\n\n// todo: memoization which also checks for DUser.current and DUser.offlineMode changes other than prop changes\nfunction App(props) {\n  _s();\n  var _user;\n  const debug = props.debug;\n  const isLoading = props.isLoading;\n  let user = props.user;\n  console.log(\"app render\", {\n    u: DUser.current,\n    o: DUser.offlineMode\n  });\n  if (DUser.offlineMode && !DUser.current) {\n    stateInitializer();\n    let du = DUser.new('adminOffline', \"Pointer_adminOffline\");\n    DUser.current = du.id;\n    user = LPointerTargetable.from(du);\n  }\n  useEffectOnce(() => {\n    if (!debug || DUser.offlineMode) return;\n    (async function () {\n      SetRootFieldAction.new('isLoading', true);\n      const response = await PersistanceApi.login('admin@mail.it', 'admin');\n      const user = response.body;\n      const id = user.id;\n      const username = user.username;\n      DUser.new(username, id);\n      DUser.current = id;\n      stateInitializer();\n      SetRootFieldAction.new('isLoading', false);\n    })();\n  });\n  const project = (_user = user) === null || _user === void 0 ? void 0 : _user.project;\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex flex-column h-100 p-1 REACT-ROOT' + (props.debug ? ' debug' : ''),\n      onClick: e => statehistory.globalcanundostate = true,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Helper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), project ? project.type === 'collaborative' && !DUser.offlineMode ? /*#__PURE__*/_jsxDEV(CollaborativeAttacher, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 85\n      }, this) : /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 131\n      }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 144\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(App, \"CDxPF1ymP5P7fskLwxmw8nmIJ1w=\", false, function () {\n  return [useEffectOnce];\n});\n_c = App;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.debug = state.debug;\n  ret.isLoading = state.isLoading;\n  ret.user = LUser.fromPointer(DUser.current);\n  // needed here as props, because apparently functional components are memoized by default.\n  ret.offlineMode = DUser.offlineMode;\n  console.log(\"app re mapstate\", {\n    u: DUser.current,\n    o: DUser.offlineMode\n  });\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const AppConnected = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default AppConnected;\n\n/* SPLASH SCREEN\r\nreturn(<div className={'w-100 h-100 text-center bg-smoke'}>\r\n    <img style={{height: '60%', width: '80%'}} className={'mt-3 rounded shadow'} src={SplashImage}></img>\r\n    <Oval height={80} width={80} wrapperStyle={{justifyContent: 'center'}} wrapperClass={'mt-3'}\r\n          color={'#475e6c'} secondaryColor={'#ff8811'} />\r\n</div>);\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","DUser","stateInitializer","LUser","statehistory","SetRootFieldAction","LPointerTargetable","connect","Loader","Navbar","Dashboard","Editor","Helper","Auth","useEffectOnce","PersistanceApi","CollaborativeAttacher","jsxDEV","_jsxDEV","Fragment","_Fragment","userHasInteracted","endPendingActions","firstInteraction","globalcanundostate","App","props","_s","_user","debug","isLoading","user","console","log","u","current","o","offlineMode","du","new","id","from","response","login","body","username","project","className","onClick","e","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","mapStateToProps","state","ownProps","ret","fromPointer","mapDispatchToProps","dispatch","AppConnected","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/App.tsx"],"sourcesContent":["import React, {Dispatch} from 'react';\r\nimport './App.scss';\r\nimport './styles/view.scss';\r\nimport './styles/style.scss';\r\nimport {\r\n    DState,\r\n    DUser,\r\n    stateInitializer,\r\n    LUser,\r\n    statehistory,\r\n    Json,\r\n    SetRootFieldAction,\r\n    LPointerTargetable\r\n} from \"./joiner\";\r\nimport {connect} from \"react-redux\";\r\nimport Loader from \"./components/loader/Loader\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {FakeStateProps} from \"./joiner/types\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Editor from \"./pages/Editor\";\r\nimport Helper from \"./components/helper/Helper\";\r\nimport Auth from \"./pages/Auth\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport PersistanceApi from \"./api/persistance\";\r\nimport CollaborativeAttacher from './components/collaborative/CollaborativeAttacher';\r\nimport {StateMachine} from './examples/StateMachine';\r\n\r\nlet userHasInteracted = false;\r\nfunction endPendingActions() {\r\n    if (!userHasInteracted) firstInteraction();\r\n}\r\nfunction firstInteraction(){\r\n    statehistory.globalcanundostate = true;\r\n}\r\n\r\n// todo: memoization which also checks for DUser.current and DUser.offlineMode changes other than prop changes\r\nfunction App(props: AllProps): JSX.Element {\r\n    const debug = props.debug;\r\n    const isLoading = props.isLoading;\r\n    let user: LUser = props.user;\r\n\r\n    console.log(\"app render\", {u:DUser.current, o:DUser.offlineMode})\r\n    if (DUser.offlineMode && !DUser.current) {\r\n        stateInitializer();\r\n        let du = DUser.new('adminOffline', \"Pointer_adminOffline\");\r\n        DUser.current = du.id;\r\n        user = LPointerTargetable.from(du);\r\n    }\r\n    useEffectOnce(() => {\r\n        if (!debug || DUser.offlineMode) return;\r\n        (async function() {\r\n            SetRootFieldAction.new('isLoading', true);\r\n            const response = await PersistanceApi.login('admin@mail.it', 'admin');\r\n            const user = response.body as Json;\r\n            const id = user.id as string;\r\n            const username = user.username as string;\r\n            DUser.new(username, id);\r\n            DUser.current = id;\r\n            stateInitializer();\r\n            SetRootFieldAction.new('isLoading', false);\r\n        })();\r\n    })\r\n\r\n    const project = user?.project;\r\n    if (user) {\r\n        return(<div className={'d-flex flex-column h-100 p-1 REACT-ROOT' + (props.debug ? ' debug' : '')}\r\n                    onClick={e => statehistory.globalcanundostate = true}>\r\n            {isLoading && <Loader />}\r\n            <Navbar />\r\n            <Helper />\r\n            {(project) ? (project.type === 'collaborative' && !DUser.offlineMode) ? <CollaborativeAttacher project={project} /> : <Editor /> : <Dashboard />}\r\n        </div>);\r\n    } else {\r\n        return(<>\r\n            {isLoading && <Loader />}\r\n            <Auth />\r\n        </>);\r\n    }\r\n}\r\n\r\ninterface OwnProps {room?: string}\r\ninterface StateProps {\r\n    offlineMode: boolean,\r\n    debug: boolean,\r\n    isLoading: boolean,\r\n    user: LUser\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.debug = state.debug;\r\n    ret.isLoading = state.isLoading;\r\n    ret.user = LUser.fromPointer(DUser.current);\r\n    // needed here as props, because apparently functional components are memoized by default.\r\n    ret.offlineMode = DUser.offlineMode;\r\n    console.log(\"app re mapstate\", {u:DUser.current, o:DUser.offlineMode});\r\n\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const AppConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n\r\nexport default AppConnected;\r\n\r\n\r\n/* SPLASH SCREEN\r\nreturn(<div className={'w-100 h-100 text-center bg-smoke'}>\r\n    <img style={{height: '60%', width: '80%'}} className={'mt-3 rounded shadow'} src={SplashImage}></img>\r\n    <Oval height={80} width={80} wrapperStyle={{justifyContent: 'center'}} wrapperClass={'mt-3'}\r\n          color={'#475e6c'} secondaryColor={'#ff8811'} />\r\n</div>);\r\n*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}