{"ast":null,"code":"import axios from 'axios';\nimport { LNamedElement } from \"../joiner\";\nexport default class MemoRec {\n  static async post(path, obj) {\n    return await axios.post('/memorec/' + path, obj);\n  }\n  static async structuralFeature(me) {\n    const named = LNamedElement.fromPointer(me.id);\n    const model = me.model;\n    const classes = model.classes;\n    const memorecClasses = [];\n    for (let myClass of classes) {\n      const attributes = myClass.attributes.map(x => x.name);\n      const references = myClass.references.map(x => x.name);\n      memorecClasses.push({\n        name: myClass.name,\n        methodInvocations: [...attributes, ...references]\n      });\n    }\n    const memorecModel = {\n      name: model.name,\n      methodDeclarations: memorecClasses\n    };\n    const memorecObject = {\n      context: named.name,\n      model: memorecModel\n    };\n    console.log('input', memorecObject);\n    const response = await MemoRec.post('structuralFeatures', memorecObject);\n    console.log(response);\n    const data = response.data;\n    data.sort((a, b) => b.score - a.score);\n    return {\n      data: data,\n      type: 'class'\n    };\n  }\n  static async classifier(me) {\n    console.clear();\n    const named = LNamedElement.fromPointer(me.id);\n    const model = me.model;\n    const packages = model.packages;\n    const memorecPackages = [];\n    for (let myPackage of packages) {\n      const classes = myPackage.classes.map(x => x.name);\n      memorecPackages.push({\n        name: myPackage.name,\n        methodInvocations: classes\n      });\n    }\n    const memorecModel = {\n      name: model.name,\n      methodDeclarations: memorecPackages\n    };\n    const memorecObject = {\n      context: named.name,\n      model: memorecModel\n    };\n    console.log('input', memorecObject);\n    const response = await MemoRec.post('classes', memorecObject);\n    console.log(response);\n    const data = response.data;\n    data.sort((a, b) => b.score - a.score);\n    return {\n      data: data,\n      type: 'package'\n    };\n  }\n}","map":{"version":3,"names":["axios","LNamedElement","MemoRec","post","path","obj","structuralFeature","me","named","fromPointer","id","model","classes","memorecClasses","myClass","attributes","map","x","name","references","push","methodInvocations","memorecModel","methodDeclarations","memorecObject","context","console","log","response","data","sort","a","b","score","type","classifier","clear","packages","memorecPackages","myPackage"],"sources":["C:/d/Programming/web/jodel-mde/src/memorec/api.ts"],"sourcesContent":["import axios, {AxiosResponse} from 'axios';\r\nimport {GObject, LModelElement, LNamedElement} from \"../joiner\";\r\nimport {MemoRecModel, MemoRecNamed, MemoRecObject} from \"./types\";\r\n\r\n\r\nexport default class MemoRec {\r\n    static async post(path: string, obj: MemoRecObject): Promise<AxiosResponse> {\r\n        return await axios.post('/memorec/' + path, obj);\r\n    }\r\n\r\n    static async structuralFeature(me: LModelElement): Promise<{data:GObject[], type:'class'|'package'}> {\r\n\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const classes = model.classes;\r\n\r\n        const memorecClasses: MemoRecNamed[] = [];\r\n\r\n        for(let myClass of classes) {\r\n            const attributes = myClass.attributes.map(x => x.name);\r\n            const references = myClass.references.map(x => x.name);\r\n            memorecClasses.push({name: myClass.name, methodInvocations: [...attributes, ...references]});\r\n        }\r\n\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecClasses};\r\n\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        console.log('input', memorecObject);\r\n\r\n        const response = await MemoRec.post('structuralFeatures', memorecObject);\r\n        console.log(response);\r\n\r\n        const data: GObject[] = response.data;\r\n        data.sort((a,b) => b.score - a.score);\r\n\r\n        return {data: data, type: 'class'};\r\n\r\n    }\r\n\r\n    static async classifier(me: LModelElement): Promise<{data:GObject[], type:'class'|'package'}> {\r\n        console.clear();\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const packages= model.packages;\r\n\r\n        const memorecPackages: MemoRecNamed[] = [];\r\n\r\n        for(let myPackage of packages) {\r\n            const classes = myPackage.classes.map(x => x.name);\r\n            memorecPackages.push({name: myPackage.name, methodInvocations: classes});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecPackages};\r\n\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        console.log('input', memorecObject);\r\n\r\n        const response = await MemoRec.post('classes', memorecObject);\r\n        console.log(response);\r\n\r\n        const data:GObject[] = response.data;\r\n        data.sort((a,b) => b.score - a.score);\r\n        return {data: data, type: 'package'};\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}