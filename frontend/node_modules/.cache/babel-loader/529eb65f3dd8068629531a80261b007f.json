{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\editors\\\\Console.tsx\",\n  _this = this;\nimport { LGraphElement, Log, RuntimeAccessibleClass, transientProperties, U, windoww } from '../../joiner';\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport './style.scss'; // <-- tenuto per retro-compatibilità ma dovrebbe sparire\nimport './editors.scss'; // <-- stile comune a tutte le tab editor (idealmente da tenere leggero)\nimport './console.scss'; // <-- stile di questa tab\nimport ReactDOM from \"react-dom\";\nimport { Empty } from \"./Empty\";\nimport { Tooltip } from \"../forEndUser/Tooltip\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Convert = require('ansi-to-html');\nlet ansiConvert = window.ansiConvert;\nif (!ansiConvert) window.ansiconvert = ansiConvert = new Convert();\nclass ThisState {\n  constructor() {\n    this.expression = '';\n    this.output = null;\n    this.expressionIndex = 0;\n    this.expressionHistory = [''];\n    this.initialState = true;\n    this.time = 0;\n  }\n}\n\n// trasformato in class component così puoi usare il this nella console. e non usa accidentalmente window come contesto\n\nlet hiddenkeys = [\"jsxString\", \"pointedBy\", \"clonedCounter\", \"parent\", \"_subMaps\", \"inspect\", \"__random\"];\nfunction fixproxy(output) {\n  var _output;\n  let addDKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let addLKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let ret = {\n    output\n  };\n  if (!output) return ret;\n  let proxy;\n  if ((_output = output) === null || _output === void 0 ? void 0 : _output.__isProxy) {\n    proxy = output;\n    output = output.__raw; //Object.fromEntries(Object.getOwnPropertyNames(p).map(k => [k, p[k]]));\n  } else proxy = undefined;\n  console.log('console short in 1', {\n    output,\n    proxy,\n    ret,\n    addLKeys,\n    iff: addLKeys && proxy\n  });\n  switch (typeof output) {\n    case \"function\":\n      {\n        let fdata = U.buildFunctionDocumentation(output);\n        return {\n          output: fdata\n        };\n      }\n    default:\n      return ret;\n    case \"object\":\n      // if (Array.isArray(output)) { ret.output = output; break; /* no need to go inside, it is already done at render phase */ }\n      ret.output = output = {\n        ...output\n      };\n      // if (ret.output.anchors) ret.output.anchors = JSON.stringify(ret.output.anchors);\n      if (addLKeys && proxy) {\n        var _RuntimeAccessibleCla, _RuntimeAccessibleCla2, _output2, _output3, _RuntimeAccessibleCla3, _output4;\n        let Lsingleton = ((_RuntimeAccessibleCla = RuntimeAccessibleClass.get((_output2 = output) === null || _output2 === void 0 ? void 0 : _output2.className)) === null || _RuntimeAccessibleCla === void 0 ? void 0 : (_RuntimeAccessibleCla2 = _RuntimeAccessibleCla.logic) === null || _RuntimeAccessibleCla2 === void 0 ? void 0 : _RuntimeAccessibleCla2.singleton) || {};\n        let comments = {};\n        ret.shortcuts = {\n          ...Lsingleton\n        };\n        console.log('console short in 2', {\n          output,\n          Lsingleton,\n          DClass: RuntimeAccessibleClass.get((_output3 = output) === null || _output3 === void 0 ? void 0 : _output3.className),\n          LClass: (_RuntimeAccessibleCla3 = RuntimeAccessibleClass.get((_output4 = output) === null || _output4 === void 0 ? void 0 : _output4.className)) === null || _RuntimeAccessibleCla3 === void 0 ? void 0 : _RuntimeAccessibleCla3.logic\n        });\n        ret.comments = comments;\n        for (let key in output) {\n          if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\n        }\n        for (let key in Lsingleton) {\n          if (key in output || key.indexOf(\"__info_of__\") === 0) {\n            delete ret.shortcuts[key];\n            continue;\n          } else {\n            if (ret.shortcuts[key] === undefined) ret.shortcuts[key] = '';\n          }\n          if (key.indexOf(\"info\") >= 0 && key.indexOf(\"of\") >= 0) {\n            Log.eDevv('Possible error on __info_of__ misnamed as ' + key + ', if the name was intentional' + ' and not an Info object add an allowal rule here.');\n            continue;\n          }\n          if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\n          if (comments[key]) continue; // if explicitly commented, i will not attempt to generate documentation.\n          let entryvalue = Lsingleton[key];\n          switch (typeof entryvalue) {\n            default:\n            case \"object\":\n              ret.shortcuts[key] = entryvalue;\n              break;\n            case \"function\":\n              ret.shortcuts[key] = U.buildFunctionDocumentation(entryvalue);\n              break;\n          }\n        }\n      }\n      if (hiddenkeys) {\n        ret.hiddenkeys = {};\n        for (let key of hiddenkeys) {\n          ret.hiddenkeys[key] = output[key];\n          delete output[key];\n          // delete output.shortcuts[key];\n        }\n      }\n      break;\n  }\n\n  //@ts-ignore\n  ret = {\n    ...ret,\n    shortcuts: undefined,\n    comments: undefined,\n    hiddenkeys: undefined\n  };\n  console.log('kkkk', ret);\n  return ret;\n}\nclass ConsoleComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.lastNode = void 0;\n    this._context = {};\n    this.outputhtml = null;\n    this.state = new ThisState();\n    this.change = this.change.bind(this);\n    this.change(undefined);\n  }\n  change(evt) {\n    var _this$props$node;\n    if (!this) return; // component being destroyed and remade after code hot update\n    let expression0 = (evt ? evt.target.value : this.state.expression) || '';\n    let expression = expression0.trim();\n    let output;\n    // let context = {...this.props, props: this.props}; // makeEvalContext(this.props as any, {} as any);\n\n    let nid = (_this$props$node = this.props.node) === null || _this$props$node === void 0 ? void 0 : _this$props$node.id;\n    let tn = transientProperties.node[nid];\n    if (nid && tn) {\n      // let component = GraphElementComponent.map[this.props.node.id];\n      this._context = {\n        ...tn.viewScores[tn.mainView.id].evalContext\n      };\n      this._context.fromcomponent = true;\n    } else {\n      this._context = {\n        ...this.props,\n        props: this.props\n      };\n    }\n    try {\n      // if (expression === 'this') expression = 'data'; // it does a mess by taking a L-singleton with all his __info_of__ stuff\n      if (expression === 'this') output = this._context;else output = U.evalInContextAndScope(expression || '<span class=\"console-msg\">undefined</span>', this._context, this._context);\n    } catch (e) {\n      console.error(\"console error\", e);\n      // output = '<span class=\"console-error\">Invalid Syntax!</span> <span class=\"console-error-msg\">' + e.toString() + '<span>' ; }\n      output = '<span class=\"console-error-msg\"><i class=\"bi bi-exclamation-square-fill\"></i><span>' + e.toString() + '</span></span>';\n    }\n    this.setState({\n      expression: expression0,\n      output\n    });\n  }\n\n  // textarea: HTMLTextAreaElement | null = null;\n  getClickableEntry(expression, k, arr) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => {\n        let isnum = !isNaN(+k);\n        let isregular = isnum ? true : /\\w/.test(k);\n        let append;\n        if (isnum) append = '[' + k + ']';else if (isregular) append = '.' + k;else append = '[' + JSON.stringify(k) + ']';\n        this.setState({\n          expression: expression ? expression + append : k\n        } /*, ()=> { this.change(); }*/);\n      },\n      children: [k, arr && arr[k] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\":\", arr[k]]\n      }, void 0, true) : undefined]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 16\n    }, this);\n  }\n  setState(s, callback) {\n    if (s) {\n      if (s.initialState) {\n        delete s.initialState;\n        return super.setState(s);\n      }\n      let s0 = {\n        ...s\n      };\n      let olds = this.state;\n      if (s0.expressionIndex && s0.expressionIndex !== olds.expressionIndex) s.expression = olds.expressionHistory[s0.expressionIndex];\n      if (s0.expressionHistory && s0.expressionHistory !== olds.expressionHistory) {\n        let len = s0.expressionHistory.length;\n        if (len > 10) s.expressionHistory = s0.expressionHistory.slice(len - 10, len);\n      }\n      if (s0.expression && s0.expression !== olds.expression) {\n        var _s$expressionIndex;\n        let time = new Date().getTime();\n        let oldtime = olds.time;\n        Log.exDev(s0.expressionIndex !== undefined, 'cannot set both index and expression together');\n        let i = (_s$expressionIndex = s.expressionIndex) !== null && _s$expressionIndex !== void 0 ? _s$expressionIndex : olds.expressionIndex;\n        let slice;\n        if (time - oldtime < 1000) {\n          slice = olds.expressionHistory.slice(0, i);\n        } else {\n          slice = olds.expressionHistory.slice(0, i + 1);\n          s.expressionIndex = i + 1;\n        }\n        s.time = time;\n        s.expressionHistory = [...slice, s0.expression];\n        console.log('setstate', {\n          olds: {\n            ...olds\n          },\n          s,\n          slice,\n          i,\n          s0\n        });\n      }\n      if (s.expression !== olds.expression && !('output' in s)) {\n        let call0 = callback;\n        callback = () => {\n          call0 === null || call0 === void 0 ? void 0 : call0();\n          this.change();\n        };\n      }\n    }\n    super.setState(s, callback);\n  }\n  render() {\n    var _this$state$output, _this$props$node2, _this$props$node3;\n    /*const [expression, setExpression] = useStateIfMounted('data');\r\n    const [output, setOutput] = useStateIfMounted('');*/\n\n    if (!this.props.node) return /*#__PURE__*/_jsxDEV(Empty, {\n      msg: \"Select a node.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 38\n    }, this);\n    let expression = this.state.expression.trim();\n    if (expression === 'this') expression = 'data';\n    const data = this.props.data;\n    if (this.lastNode !== this.props.node.id) this.change(); // force reevaluation if selected node changed\n    this.lastNode = this.props.node.id;\n    let outstr;\n    // try { outstr = U.circularStringify(this.state.output, (key, value)=> { return value.__isProxy ? value.name : value; }, \"\\t\", 1) }\n    // (window as any).inspect = util.inspect;\n    // (window as any).tmpp = this.state.output;\n    let ashtml;\n    let output = this.state.output;\n    let shortcuts = undefined;\n    let comments = undefined;\n    let hidden = undefined;\n    let jsxComments = {};\n    let shortcutsjsx = undefined;\n    try {\n      var _output5;\n      if (Array.isArray(output)) {\n        comments = {\n          \"separator\": '<span>Similar to <a href={\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"}>Array.join(separator)</a>' + ', but supports array of JSX nodes and JSX as separator argument.</span>'\n        };\n        shortcuts = {\n          \"separator\": \"\"\n        };\n        output = output.map(o => fixproxy(o).output);\n      } else {\n        console.log('console short pre', {\n          output\n        });\n        let ret = fixproxy(output);\n        output = ret.output;\n        comments = ret.comments;\n        shortcuts = ret.shortcuts;\n        console.log('console short', {\n          shortcuts,\n          ret,\n          output\n        });\n        hidden = ret.hiddenkeys;\n      }\n      // todo: as i fix the displaying of a LViewElement without replacing it with __raw,\n      //  i will fix window, component and props displaying too i think they crash for props.data, props.view...\n      if ((_output5 = output) === null || _output5 === void 0 ? void 0 : _output5._reactInternals) {\n        output = {\n          \"React.Component\": {\n            props: \"...navigate to expand...\",\n            state: \"\",\n            _isMounted: output._isMounted\n          }\n        };\n      }\n      outstr = '<h4>Result</h4><section class=\"group result-container\"><div class=\"output-row\" tabindex=\"984\">' + U.objectInspect(output) + \"<span>\";\n      let commentsPopup = \"\";\n      if (shortcuts || comments) {\n        // if(!shortcuts) shortcuts = {};\n        if (!comments) comments = {};\n        for (let commentKey in comments) {\n          var _commentVal, _commentVal2, _commentVal3, _commentVal3$type;\n          let commentVal = comments[commentKey];\n          let txt = (_commentVal = commentVal) === null || _commentVal === void 0 ? void 0 : _commentVal.txt;\n          if (txt && typeof txt !== \"string\") {\n            // try to inject jsx\n            jsxComments[commentKey] = txt;\n            txt = \"<span id='console_output_comment_\" + commentKey + \"'  class='console-msg'/>\";\n            // fallback read text, that should go deep iteration, but 1 level deep should be enough.\n            // let arr: any[] = (Array.isArray(txt?.props?.children) ? txt.props.children : (txt.props.children ? [txt.props.children] : []));\n            // txt = arr.map(e => typeof e === \"string\" ? e : e?.props?.children + '' || '').join(\"\");\n          }\n          if ((_commentVal2 = commentVal) === null || _commentVal2 === void 0 ? void 0 : _commentVal2.type) commentVal = \"\\t\\t<span class='console-msg'>\" + (((_commentVal3 = commentVal) === null || _commentVal3 === void 0 ? void 0 : (_commentVal3$type = _commentVal3.type) === null || _commentVal3$type === void 0 ? void 0 : _commentVal3$type.cname) || commentVal.type) + \"</span>\"; // + \" ~ \" + txt;\n          // warning: unicode char but should not make a problem. 𐀹\n          commentVal += '<div class=\"output-comment my-tooltip\">' + txt + '</div></div><div class=\"output-row\" tabindex=\"984\">';\n          let commentKeyEscaped = U.multiReplaceAll(commentKey, [\"$\", \"-\"], [\"\\\\$\", \"\\\\-\"]); // _ should be safe, .-,?^ not happening?\n          let regexp = new RegExp(\"^({?\\\\s*\" + commentKeyEscaped + \":.*)$\", \"gm\");\n          let regexpCloseTags = new RegExp(\"(\\\\<span style\\\\=\\\"color\\\\:\\\\#)\", \"gm\");\n          outstr = U.replaceAll(outstr, \"$\", \"£\");\n          outstr = outstr.replace(regexp, \"$1\" + commentVal);\n          outstr = outstr.replace(regexpCloseTags, \"</span>$1\");\n          outstr = U.replaceAll(outstr, \"£\", \"$\");\n        }\n\n        /*if (shortcuts) outstr += \"</div></section><br><br>\" +\r\n            \"<h4>Shortcuts</h4><section class='group shortcuts-container'><div class=\\\"output-row\\\" tabindex=\\\"984\\\">\" + U.objectInspect(shortcuts)+\"</section>\";\r\n        */\n\n        if (shortcuts) {\n          shortcutsjsx = /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.keys(shortcuts).sort().map(k => this.getClickableEntry(expression, k, shortcuts))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 36\n          }, this);\n        }\n        // if (hidden) outstr +=\"</div><br><br><h4>Other less useful properties</h4><div class=\\\"output-row\\\" tabindex=\\\"984\\\">\" + format(hidden);\n        // warning: unicode char but should not make a problem.\n        // outstr = U.replaceAll( outstr, '𐀹,\\n', '],</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span style=\"color:#000\">');\n        outstr = U.replaceAll(outstr, '<span style=\"color:#000\" class=\"console-msg\">,\\n', '</span><span style=\"color:#000\" class=\"console-msg\">,</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\n        outstr = U.replaceAll(outstr, '],\\n', '],</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\n        outstr = U.replaceAll(outstr, '},\\n', '},</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\n      }\n      ashtml = true;\n    } catch (e) {\n      console.error(e);\n      throw e;\n      outstr = \"[circular object]: \" + e.toString();\n      ashtml = false;\n    }\n    let contextkeysarr;\n    let contextkeys = '';\n    if (this.state.expression.trim() === \"this\") contextkeys = \"Warning: \\\"this\\\" in the console is aliased to data instead of the whole context of a GraphElement component.\";\n    let objraw = ((_this$state$output = this.state.output) === null || _this$state$output === void 0 ? void 0 : _this$state$output.__raw) || (typeof this.state.output === \"object\" ? this.state.output : \"[primitiveValue]\") || {};\n    if (this.state.expression.trim() === \"\") contextkeysarr = [\"data\", \"node\", \"view\", \"component\"];else if (typeof objraw === \"string\") {\n      contextkeysarr = Object.keys(String.prototype);\n    } else contextkeysarr = (Array.isArray(objraw) ? [...Object.keys(objraw).filter(k => k <= 10).map(k => k === 10 ? '...' : '' + k), ...Object.keys(Array.prototype)] : Object.getOwnPropertyNames(objraw)) || [];\n    contextkeys = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contextkeysarr.sort().map(k => this.getClickableEntry(expression, k))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }, this);\n    let injectCommentJSX = () => {\n      try {\n        for (let key in jsxComments) {\n          if (hiddenkeys.includes(key)) continue;\n          let commentNode = document.getElementById(\"console_output_comment_\" + key);\n          Log.eDev(!commentNode, \"failed to find comment placeholder\", {\n            key,\n            v: jsxComments[key],\n            jsxComments\n          });\n          if (commentNode) ReactDOM.render(jsxComments[key], commentNode);\n        }\n      } catch (e) {\n        console.error(\"failed to inject console output comment:\", e);\n      }\n    };\n    setTimeout(injectCommentJSX, 1);\n    this.setNativeConsoleVariables();\n    windoww.output = output;\n    windoww.contextkeysarr = contextkeysarr;\n    windoww.contextkeys = contextkeys;\n    const undo = () => {\n      let expressionIndex = Math.max(0, this.state.expressionIndex - 1);\n      if (expressionIndex === this.state.expressionIndex) return;\n      this.setState({\n        expressionIndex\n      });\n    };\n    const redo = () => {\n      const expressionHistory = this.state.expressionHistory;\n      let expressionIndex = Math.min(expressionHistory.length - 1, this.state.expressionIndex + 1);\n      if (expressionIndex === this.state.expressionIndex) return;\n      this.setState({\n        expressionIndex\n      });\n    };\n    let canredo = this.state.expressionIndex < this.state.expressionHistory.length - 1;\n    let canundo = this.state.expressionIndex > 0;\n    let advanced = this.props.advanced;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'w-100 h-100 p-2 console',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"On \", ((data === null || data === void 0 ? void 0 : data.name) || \"model-less node (\" + ((_this$props$node2 = this.props.node) === null || _this$props$node2 === void 0 ? void 0 : _this$props$node2.className) + \")\") + \" - \" + ((_this$props$node3 = this.props.node) === null || _this$props$node3 === void 0 ? void 0 : _this$props$node3.className)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-terminal p-0 mb-2 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commands\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: e => {\n              this.setState({\n                expression: ''\n              });\n            },\n            title: 'Empty console',\n            className: \"bi bi-slash-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: e => {\n              var _this$outputhtml;\n              if (!this.state.expression.trim()) {\n                return Tooltip.show('Nothing to copy', undefined, undefined, 2);\n              }\n              let s = ((_this$outputhtml = this.outputhtml) === null || _this$outputhtml === void 0 ? void 0 : _this$outputhtml.innerText) || '';\n              s = s.substring('Result'.length).trim();\n              U.clipboardCopy(s, () => Tooltip.show('Content copied to clipboard', undefined, undefined, 2));\n            },\n            title: 'Copy in the clipboard',\n            className: \"bi bi-clipboard-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: redo,\n            title: 'redo',\n            className: \"redo bi bi-arrow-right-square\" + (canredo ? '' : \" disabled\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: undo,\n            title: 'undo',\n            className: \"undo bi bi-arrow-left-square\" + (canundo ? '' : \" disabled\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: 'console',\n          spellCheck: false,\n          className: 'p-0 input w-100',\n          onChange: this.change,\n          value: this.state.expression\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), advanced && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Debug history (index = \", this.state.expressionIndex + 1, \")\", this.state.expressionHistory.slice(-5).map((s, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '1px solid ' + (i === this.state.expressionIndex ? 'red' : 'gray'),\n              marginTop: '5px',\n              height: '30px'\n            },\n            children: i + 1 + ') ' + s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: 'mt-1 mb-1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }, this), this.state.expression && ashtml && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-output-container console-msg\",\n        ref: e => this.outputhtml = e,\n        dangerouslySetInnerHTML: ashtml ? {\n          __html: outstr\n        } : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 51\n      }, this), this.state.expression && !ashtml && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-output-container console-msg\",\n        ref: e => this.outputhtml = e,\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: outstr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"context-keys mt-2\",\n        children: \"Context keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: 'group context-keys-list',\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: [contextkeys, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), shortcutsjsx && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shortcuts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"group shortcuts-container\",\n          children: shortcutsjsx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 16\n    }, this);\n  }\n  setNativeConsoleVariables() {\n    var _context$data, _context$data2;\n    // just fordebugging\n    let context = this._context;\n    windoww.context = context;\n    windoww.data = context.data;\n    windoww.node = context.node;\n    windoww.edge = context.edge;\n    windoww.output = this.state.output;\n    if ((_context$data = context.data) === null || _context$data === void 0 ? void 0 : _context$data.model) windoww.model = (_context$data2 = context.data) === null || _context$data2 === void 0 ? void 0 : _context$data2.model;\n  }\n}\nConsoleComponent.cname = \"ConsoleComponent\";\nfunction mapStateToProps(state, ownProps) {\n  var _state$_lastSelected;\n  const ret = {};\n  const nodeid = (_state$_lastSelected = state._lastSelected) === null || _state$_lastSelected === void 0 ? void 0 : _state$_lastSelected.node;\n  const node = nodeid ? LGraphElement.fromPointer(nodeid) : null;\n  ret.node = node;\n  ret.data = (node === null || node === void 0 ? void 0 : node.model) ? node.model : null;\n  ret.view = (node === null || node === void 0 ? void 0 : node.view) ? node.view : null;\n  ret.advanced = state.advanced;\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ConsoleConnected = connect(mapStateToProps, mapDispatchToProps)(ConsoleComponent);\nexport const Console = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ConsoleConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 12\n  }, _this);\n};\n_c = Console;\nexport default Console;\nvar _c;\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"names":["LGraphElement","Log","RuntimeAccessibleClass","transientProperties","U","windoww","React","PureComponent","connect","ReactDOM","Empty","Tooltip","Fragment","_Fragment","jsxDEV","_jsxDEV","Convert","require","ansiConvert","window","ansiconvert","ThisState","constructor","expression","output","expressionIndex","expressionHistory","initialState","time","hiddenkeys","fixproxy","_output","addDKeys","arguments","length","undefined","addLKeys","ret","proxy","__isProxy","__raw","console","log","iff","fdata","buildFunctionDocumentation","_RuntimeAccessibleCla","_RuntimeAccessibleCla2","_output2","_output3","_RuntimeAccessibleCla3","_output4","Lsingleton","get","className","logic","singleton","comments","shortcuts","DClass","LClass","key","indexOf","eDevv","entryvalue","ConsoleComponent","props","lastNode","_context","outputhtml","state","change","bind","evt","_this$props$node","expression0","target","value","trim","nid","node","id","tn","viewScores","mainView","evalContext","fromcomponent","evalInContextAndScope","e","error","toString","setState","getClickableEntry","k","arr","onClick","isnum","isNaN","isregular","test","append","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","s","callback","s0","olds","len","slice","_s$expressionIndex","Date","getTime","oldtime","exDev","i","call0","render","_this$state$output","_this$props$node2","_this$props$node3","msg","data","outstr","ashtml","hidden","jsxComments","shortcutsjsx","_output5","Array","isArray","map","o","_reactInternals","_isMounted","objectInspect","commentsPopup","commentKey","_commentVal","_commentVal2","_commentVal3","_commentVal3$type","commentVal","txt","type","cname","commentKeyEscaped","multiReplaceAll","regexp","RegExp","regexpCloseTags","replaceAll","replace","Object","keys","sort","contextkeysarr","contextkeys","objraw","String","prototype","filter","getOwnPropertyNames","injectCommentJSX","includes","commentNode","document","getElementById","eDev","v","setTimeout","setNativeConsoleVariables","undo","Math","max","redo","min","canredo","canundo","advanced","name","title","_this$outputhtml","show","innerText","substring","clipboardCopy","spellCheck","onChange","style","border","marginTop","height","ref","dangerouslySetInnerHTML","__html","whiteSpace","_context$data","_context$data2","context","edge","model","mapStateToProps","ownProps","_state$_lastSelected","nodeid","_lastSelected","fromPointer","view","mapDispatchToProps","dispatch","ConsoleConnected","Console","_this","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/editors/Console.tsx"],"sourcesContent":["import {\r\n    DEdge,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DState,\r\n    GObject,\r\n    LGraphElement,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    Pointer,\r\n    RuntimeAccessibleClass,\r\n    transientProperties,\r\n    U,\r\n    windoww\r\n} from '../../joiner';\r\nimport {FakeStateProps} from '../../joiner/types';\r\nimport React, {Component, Dispatch, PureComponent, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './style.scss'; // <-- tenuto per retro-compatibilità ma dovrebbe sparire\r\nimport './editors.scss'; // <-- stile comune a tutte le tab editor (idealmente da tenere leggero)\r\nimport './console.scss'; // <-- stile di questa tab\r\nimport ReactDOM from \"react-dom\";\r\nimport {Empty} from \"./Empty\";\r\nimport {Tooltip} from \"../forEndUser/Tooltip\";\r\n\r\nconst Convert = require('ansi-to-html');\r\n\r\nlet ansiConvert = (window as any).ansiConvert;\r\nif (!ansiConvert) (window as any).ansiconvert = ansiConvert = new Convert();\r\n\r\nclass ThisState{\r\n    expression: string = '';\r\n    output: any = null;\r\n    expressionIndex: number = 0;\r\n    expressionHistory: string[] = [''];\r\n    initialState: boolean = true;\r\n    time: number = 0;\r\n}\r\n\r\n// trasformato in class component così puoi usare il this nella console. e non usa accidentalmente window come contesto\r\n\r\nlet hiddenkeys = [\"jsxString\", \"pointedBy\", \"clonedCounter\", \"parent\", \"_subMaps\", \"inspect\", \"__random\"];\r\nfunction fixproxy(output: any/*but not array*/, addDKeys: boolean = true, addLKeys: boolean = true):\r\n    { output: any, shortcuts?: GObject<'L singleton'>, comments?: Dictionary<string, string | {type:string, txt:string}>, hiddenkeys?: GObject} {\r\n\r\n    let ret: ReturnType<typeof fixproxy> = {output};\r\n    if (!output) return ret;\r\n\r\n    let proxy: LPointerTargetable | undefined;\r\n    if (output?.__isProxy) {\r\n        proxy = output;\r\n        output = output.__raw; //Object.fromEntries(Object.getOwnPropertyNames(p).map(k => [k, p[k]]));\r\n    } else proxy = undefined;\r\n\r\n    console.log('console short in 1', {output, proxy, ret, addLKeys, iff:addLKeys && proxy});\r\n\r\n    switch (typeof output) {\r\n        case \"function\": {\r\n            let fdata =  U.buildFunctionDocumentation(output);\r\n            return {output: fdata};\r\n        }\r\n        default: return ret;\r\n        case \"object\":\r\n            // if (Array.isArray(output)) { ret.output = output; break; /* no need to go inside, it is already done at render phase */ }\r\n            ret.output = output = {...output};\r\n            // if (ret.output.anchors) ret.output.anchors = JSON.stringify(ret.output.anchors);\r\n            if (addLKeys && proxy) {\r\n                let Lsingleton: GObject<'L singleton'> = (RuntimeAccessibleClass.get(output?.className)?.logic?.singleton) || {};\r\n                let comments: Dictionary<string, string | {type:string, txt:string}> = {};\r\n                ret.shortcuts = {...Lsingleton};\r\n                console.log('console short in 2', {output, Lsingleton, DClass:RuntimeAccessibleClass.get(output?.className), LClass:RuntimeAccessibleClass.get(output?.className)?.logic});\r\n                ret.comments = comments;\r\n                for (let key in output) {\r\n                    if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\r\n                }\r\n                for (let key in Lsingleton) {\r\n                    if ((key in output) || (key.indexOf(\"__info_of__\") === 0)) {\r\n                        delete ret.shortcuts[key];\r\n                        continue;\r\n                    } else { if (ret.shortcuts[key] === undefined) ret.shortcuts[key] = ''; }\r\n                    if (key.indexOf(\"info\") >=0 && key.indexOf(\"of\") >=0){\r\n                        Log.eDevv('Possible error on __info_of__ misnamed as '+key+', if the name was intentional' +\r\n                            ' and not an Info object add an allowal rule here.');\r\n                        continue;\r\n                    }\r\n                    if (Lsingleton[\"__info_of__\" + key]) comments[key] = Lsingleton[\"__info_of__\" + key];\r\n                    if (comments[key]) continue; // if explicitly commented, i will not attempt to generate documentation.\r\n                    let entryvalue = Lsingleton[key];\r\n                    switch (typeof entryvalue) {\r\n                        default:\r\n                        case \"object\":\r\n                            ret.shortcuts[key] = entryvalue;\r\n                            break;\r\n                        case \"function\":\r\n                            ret.shortcuts[key] = U.buildFunctionDocumentation(entryvalue);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (hiddenkeys) {\r\n                ret.hiddenkeys = {};\r\n                for (let key of hiddenkeys) {\r\n                    ret.hiddenkeys[key] = output[key];\r\n                    delete output[key];\r\n                    // delete output.shortcuts[key];\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    //@ts-ignore\r\n    ret ={...ret, shortcuts: undefined, comments: undefined, hiddenkeys: undefined};\r\n    console.log('kkkk',  ret);\r\n\r\n    return ret;\r\n}\r\n\r\n\r\nclass ConsoleComponent extends PureComponent<AllProps, ThisState>{\r\n    public static cname: string = \"ConsoleComponent\";\r\n    lastNode?: Pointer<DGraphElement>;\r\n    constructor(props: AllProps) {\r\n        super(props);\r\n        this.state = new ThisState();\r\n        this.change = this.change.bind(this);\r\n        this.change(undefined);\r\n    }\r\n    private _context: GObject = {};\r\n    change(evt?: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        if (!this) return; // component being destroyed and remade after code hot update\r\n        let expression0: string = (evt ? evt.target.value : this.state.expression) || '';\r\n        let expression: string = expression0.trim();\r\n        let output;\r\n        // let context = {...this.props, props: this.props}; // makeEvalContext(this.props as any, {} as any);\r\n\r\n        let nid = this.props.node?.id;\r\n        let tn = transientProperties.node[nid as string];\r\n        if (nid && tn) {\r\n            // let component = GraphElementComponent.map[this.props.node.id];\r\n            this._context = {...tn.viewScores[tn.mainView.id].evalContext};\r\n            this._context.fromcomponent = true;\r\n        }\r\n        else {\r\n            this._context = {...this.props, props: this.props};\r\n        }\r\n        try {\r\n            // if (expression === 'this') expression = 'data'; // it does a mess by taking a L-singleton with all his __info_of__ stuff\r\n            if (expression === 'this') output = this._context;\r\n            else output = U.evalInContextAndScope(expression || '<span class=\"console-msg\">undefined</span>', this._context, this._context);\r\n        }\r\n        catch (e: any) {\r\n            console.error(\"console error\", e);\r\n            // output = '<span class=\"console-error\">Invalid Syntax!</span> <span class=\"console-error-msg\">' + e.toString() + '<span>' ; }\r\n            output = '<span class=\"console-error-msg\"><i class=\"bi bi-exclamation-square-fill\"></i><span>' + e.toString() + '</span></span>' ; }\r\n        this.setState({expression:expression0, output });\r\n    }\r\n\r\n    // textarea: HTMLTextAreaElement | null = null;\r\n    getClickableEntry(expression: string, k: string, arr?: any): JSX.Element{\r\n        return <li onClick={()=> {\r\n            let isnum = !isNaN(+k);\r\n            let isregular: boolean = isnum ? true : /\\w/.test(k);\r\n            let append: string;\r\n            if (isnum) append = '['+k+']';\r\n            else if (isregular) append = '.'+k;\r\n            else append = '['+JSON.stringify(k)+']';\r\n            this.setState({expression: (expression ? expression + append : k)}/*, ()=> { this.change(); }*/);\r\n        }}>{k}{arr && arr[k] ? <>:{arr[k]}</> : undefined}</li>;\r\n    }\r\n\r\n    outputhtml: HTMLElement | null = null;\r\n    setState(s: GObject<Partial<ThisState>> | null, callback?: (...a:any) => any): void{\r\n        if (s){\r\n            if (s.initialState) {\r\n                delete s.initialState;\r\n                return super.setState(s as any);\r\n            }\r\n            let s0: GObject<ThisState> = {...s} as any;\r\n            let olds = this.state;\r\n            if (s0.expressionIndex && s0.expressionIndex !== olds.expressionIndex) s.expression = olds.expressionHistory[s0.expressionIndex];\r\n            if (s0.expressionHistory && s0.expressionHistory !== olds.expressionHistory){\r\n                let len = s0.expressionHistory.length;\r\n                if (len > 10) s.expressionHistory = s0.expressionHistory.slice(len - 10, len);\r\n            }\r\n            if (s0.expression && s0.expression !== olds.expression) {\r\n                let time = new Date().getTime();\r\n                let oldtime = olds.time;\r\n                Log.exDev(s0.expressionIndex !== undefined, 'cannot set both index and expression together');\r\n                let i = s.expressionIndex ?? olds.expressionIndex;\r\n                let slice: string[];\r\n                if (time - oldtime < 1000) {\r\n                    slice = olds.expressionHistory.slice(0, i);\r\n                }\r\n                else {\r\n                    slice = olds.expressionHistory.slice(0, i+1);\r\n                    s.expressionIndex = i + 1;\r\n                }\r\n                s.time = time;\r\n                s.expressionHistory = [...slice, s0.expression];\r\n                console.log('setstate', {olds: {...olds}, s, slice, i, s0});\r\n            }\r\n            if (s.expression !== olds.expression && !('output' in s)) {\r\n                let call0 = callback;\r\n                callback = () => { call0?.(); this.change(); }\r\n            }\r\n        }\r\n        super.setState(s as any, callback);\r\n    }\r\n    render(){\r\n        /*const [expression, setExpression] = useStateIfMounted('data');\r\n        const [output, setOutput] = useStateIfMounted('');*/\r\n\r\n        if (!this.props.node) return <Empty msg={\"Select a node.\"} />;\r\n        let expression = this.state.expression.trim();\r\n        if (expression === 'this') expression = 'data';\r\n        const data = this.props.data;\r\n        if (this.lastNode !== this.props.node.id) this.change(); // force reevaluation if selected node changed\r\n        this.lastNode = this.props.node.id;\r\n\r\n        let outstr;\r\n        // try { outstr = U.circularStringify(this.state.output, (key, value)=> { return value.__isProxy ? value.name : value; }, \"\\t\", 1) }\r\n        // (window as any).inspect = util.inspect;\r\n        // (window as any).tmpp = this.state.output;\r\n        let ashtml: boolean\r\n        let output: any = this.state.output;\r\n        let shortcuts: GObject<'L singleton'> | undefined = undefined;\r\n        let comments: Dictionary<string, string | {type:string, txt:string}> | undefined = undefined;\r\n        let hidden: Dictionary<string, string> | undefined = undefined;\r\n        let jsxComments: Dictionary<string, JSX.Element[]> = {};\r\n        let shortcutsjsx: ReactNode = undefined;\r\n        try {\r\n            if (Array.isArray(output)){\r\n                comments = {\"separator\": '<span>Similar to <a href={\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"}>Array.join(separator)</a>' +\r\n                        ', but supports array of JSX nodes and JSX as separator argument.</span>'};\r\n                shortcuts = {\"separator\": \"\"};\r\n                output = output.map(o => fixproxy(o).output);\r\n            }\r\n            else {\r\n                console.log('console short pre', {output});\r\n                let ret = fixproxy(output);\r\n                output = ret.output;\r\n                comments = ret.comments;\r\n                shortcuts = ret.shortcuts;\r\n                console.log('console short', {shortcuts, ret, output});\r\n                hidden = ret.hiddenkeys;\r\n            }\r\n            // todo: as i fix the displaying of a LViewElement without replacing it with __raw,\r\n            //  i will fix window, component and props displaying too i think they crash for props.data, props.view...\r\n            if (output?._reactInternals) {\r\n                output = {\"React.Component\": {props:\"...navigate to expand...\", state:\"\", _isMounted:output._isMounted}}\r\n            }\r\n            outstr = '<h4>Result</h4><section class=\"group result-container\"><div class=\"output-row\" tabindex=\"984\">' + U.objectInspect(output)+\"<span>\";\r\n            let commentsPopup = \"\";\r\n            if (shortcuts || comments){\r\n                // if(!shortcuts) shortcuts = {};\r\n                if (!comments) comments = {};\r\n                for (let commentKey in comments){\r\n                    let commentVal: any = comments[commentKey];\r\n                    let txt = commentVal?.txt;\r\n                    if (txt && typeof txt !== \"string\") {\r\n                        // try to inject jsx\r\n                        jsxComments[commentKey] = txt;\r\n                        txt = \"<span id='console_output_comment_\" + commentKey + \"'  class='console-msg'/>\";\r\n                        // fallback read text, that should go deep iteration, but 1 level deep should be enough.\r\n                        // let arr: any[] = (Array.isArray(txt?.props?.children) ? txt.props.children : (txt.props.children ? [txt.props.children] : []));\r\n                        // txt = arr.map(e => typeof e === \"string\" ? e : e?.props?.children + '' || '').join(\"\");\r\n                    }\r\n                    if (commentVal?.type) commentVal = \"\\t\\t<span class='console-msg'>\" + (commentVal?.type?.cname || commentVal.type)+\"</span>\"; // + \" ~ \" + txt;\r\n                    // warning: unicode char but should not make a problem. 𐀹\r\n                    commentVal += '<div class=\"output-comment my-tooltip\">' + txt + '</div></div><div class=\"output-row\" tabindex=\"984\">'\r\n\r\n                    let commentKeyEscaped = U.multiReplaceAll(commentKey, [\"$\", \"-\"], [\"\\\\$\", \"\\\\-\"]); // _ should be safe, .-,?^ not happening?\r\n                    let regexp = new RegExp(\"^({?\\\\s*\" +commentKeyEscaped+\":.*)$\", \"gm\");\r\n                    let regexpCloseTags = new RegExp(\"(\\\\<span style\\\\=\\\"color\\\\:\\\\#)\", \"gm\");\r\n                    outstr = U.replaceAll( outstr, \"$\", \"£\");\r\n                    outstr = outstr.replace(regexp, \"$1\" + commentVal);\r\n                    outstr = outstr.replace(regexpCloseTags,  \"</span>$1\");\r\n                    outstr = U.replaceAll(outstr, \"£\", \"$\");\r\n                }\r\n\r\n\r\n                /*if (shortcuts) outstr += \"</div></section><br><br>\" +\r\n                    \"<h4>Shortcuts</h4><section class='group shortcuts-container'><div class=\\\"output-row\\\" tabindex=\\\"984\\\">\" + U.objectInspect(shortcuts)+\"</section>\";\r\n                */\r\n\r\n                if (shortcuts) {\r\n                    shortcutsjsx = <ul>{\r\n                        Object.keys(shortcuts).sort().map(k=>this.getClickableEntry(expression, k, shortcuts))\r\n                    }</ul>\r\n                }\r\n                // if (hidden) outstr +=\"</div><br><br><h4>Other less useful properties</h4><div class=\\\"output-row\\\" tabindex=\\\"984\\\">\" + format(hidden);\r\n                // warning: unicode char but should not make a problem.\r\n                // outstr = U.replaceAll( outstr, '𐀹,\\n', '],</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span style=\"color:#000\">');\r\n                outstr = U.replaceAll( outstr, '<span style=\"color:#000\" class=\"console-msg\">,\\n',\r\n                    '</span><span style=\"color:#000\" class=\"console-msg\">,</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\r\n                outstr = U.replaceAll( outstr, '],\\n', '],</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\r\n                outstr = U.replaceAll( outstr, '},\\n', '},</span>\\n</div><div class=\"output-row\" tabindex=\"984\"><span class=\"console-msg\" style=\"color:#000\">');\r\n            }\r\n            ashtml = true; }\r\n        catch(e: any) {\r\n            console.error(e);\r\n            throw e;\r\n            outstr = \"[circular object]: \" + e.toString();\r\n            ashtml = false;\r\n        }\r\n        let contextkeysarr: (string)[];\r\n        let contextkeys: ReactNode = '';\r\n        if (this.state.expression.trim() === \"this\") contextkeys = \"Warning: \\\"this\\\" in the console is aliased to data instead of the whole context of a GraphElement component.\";\r\n\r\n        let objraw = this.state.output?.__raw || (typeof this.state.output === \"object\" ? this.state.output : \"[primitiveValue]\") || {};\r\n        if (this.state.expression.trim() === \"\") contextkeysarr = [\"data\", \"node\", \"view\", \"component\"];\r\n        else if (typeof objraw === \"string\") { contextkeysarr = Object.keys(String.prototype); }\r\n        else contextkeysarr = (Array.isArray(objraw) ?\r\n                [...(Object.keys(objraw) as any as number[]).filter(k => (k) <= 10).map(k=>k===10 ? '...' : ''+k), ...Object.keys(Array.prototype)]\r\n                : Object.getOwnPropertyNames(objraw)) || [];\r\n\r\n        contextkeys = <ul>{\r\n            contextkeysarr.sort().map(k=>this.getClickableEntry(expression, k))\r\n        }</ul>;\r\n\r\n\r\n        let injectCommentJSX = () => {\r\n            try{ for (let key in jsxComments) {\r\n                if (hiddenkeys.includes(key)) continue;\r\n                let commentNode: HTMLElement | null = document.getElementById(\"console_output_comment_\"+key);\r\n                Log.eDev(!commentNode, \"failed to find comment placeholder\", {key, v:jsxComments[key], jsxComments});\r\n                if (commentNode) ReactDOM.render(jsxComments[key], commentNode);\r\n            } }\r\n            catch (e) { console.error(\"failed to inject console output comment:\", e)}\r\n        }\r\n        setTimeout(injectCommentJSX, 1)\r\n        this.setNativeConsoleVariables();\r\n        windoww.output = output;\r\n        windoww.contextkeysarr = contextkeysarr;\r\n        windoww.contextkeys = contextkeys;\r\n        const undo = ()=>{\r\n            let expressionIndex = Math.max(0, this.state.expressionIndex - 1);\r\n            if (expressionIndex === this.state.expressionIndex) return;\r\n            this.setState({ expressionIndex })\r\n        }\r\n        const redo = ()=>{\r\n            const expressionHistory = this.state.expressionHistory;\r\n            let expressionIndex = Math.min(expressionHistory.length-1, this.state.expressionIndex + 1);\r\n            if (expressionIndex === this.state.expressionIndex) return;\r\n            this.setState({ expressionIndex })\r\n        }\r\n        let canredo = this.state.expressionIndex < this.state.expressionHistory.length - 1;\r\n        let canundo = this.state.expressionIndex > 0;\r\n        let advanced = this.props.advanced;\r\n\r\n        return(<div className={'w-100 h-100 p-2 console'}>\r\n            <h1>\r\n                On {((data as GObject)?.name || \"model-less node (\" + this.props.node?.className + \")\") + \" - \" + this.props.node?.className}\r\n            </h1>\r\n            <div className='console-terminal p-0 mb-2 w-100'>\r\n                <div className='commands'>\r\n                    <i onClick={(e) => { this.setState({expression:''})} } title={'Empty console'} className=\"bi bi-slash-circle\" />\r\n                    <i onClick={(e) => {\r\n                        if (!this.state.expression.trim()) { return Tooltip.show('Nothing to copy', undefined, undefined, 2); }\r\n                        let s = this.outputhtml?.innerText || '';\r\n                        s = s.substring('Result'.length).trim();\r\n                        U.clipboardCopy(s, ()=> Tooltip.show('Content copied to clipboard', undefined, undefined, 2));\r\n                    }} title={'Copy in the clipboard'} className=\"bi bi-clipboard-plus\" />\r\n                    {/* @ts-ignore */}\r\n                    <i onClick={redo} title={'redo'} className={\"redo bi bi-arrow-right-square\" + (canredo ? '':\" disabled\")} />\r\n                    {/* @ts-ignore */}\r\n                    <i onClick={undo} title={'undo'} className={\"undo bi bi-arrow-left-square\" + (canundo ? '':\" disabled\")} />\r\n                </div>\r\n                <textarea id={'console'} spellCheck={false} className={'p-0 input w-100'} onChange={this.change} value={this.state.expression} ></textarea>\r\n            </div>\r\n            {advanced && <div>Debug history (index = {this.state.expressionIndex+1})\r\n                {this.state.expressionHistory.slice(-5).map((s, i) => <>\r\n                        <div style={{\r\n                            border: '1px solid ' + (i === this.state.expressionIndex ? 'red' : 'gray'),\r\n                            marginTop: '5px',\r\n                            height: '30px'\r\n                        }}>{(i+1) + ') ' + s}</div>\r\n                    </>)}</div>}\r\n            {/*<label>Query {(this.state.expression)}</label>*/}\r\n            <hr className={'mt-1 mb-1'} />\r\n            { this.state.expression &&  ashtml && <div className={\"console-output-container console-msg\"}\r\n                        ref={(e)=>this.outputhtml = e} dangerouslySetInnerHTML={ashtml ? { __html: outstr as string} : undefined} /> }\r\n\r\n            { this.state.expression && !ashtml && <div className={\"console-output-container console-msg\"}\r\n                        ref={(e)=>this.outputhtml = e} style={{whiteSpace:\"pre\"}}>{ outstr }</div>}\r\n\r\n            <label className={\"context-keys mt-2\"}>Context keys</label>\r\n            {\r\n                <section className={'group context-keys-list'} style={{whiteSpace:\"pre\"}}>{contextkeys} </section>\r\n            }\r\n            {shortcutsjsx && <><h4>Shortcuts</h4><section className='group shortcuts-container'>{shortcutsjsx}</section></>}\r\n        </div>)\r\n    }\r\n\r\n    private setNativeConsoleVariables(): void { // just fordebugging\r\n        let context = this._context;\r\n        windoww.context = context;\r\n        windoww.data = context.data;\r\n        windoww.node = context.node;\r\n        windoww.edge = context.edge;\r\n        windoww.output = this.state.output;\r\n        if (context.data?.model) windoww.model = context.data?.model;\r\n    }\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    data: LModelElement|null;\r\n    node: LGraphElement|null;\r\n    view: LViewElement|null;\r\n    advanced: boolean;\r\n}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    const nodeid = state._lastSelected?.node;\r\n    const node: LGraphElement|null = (nodeid) ? LGraphElement.fromPointer(nodeid) : null;\r\n    ret.node = node;\r\n    ret.data = (node?.model) ? node.model : null;\r\n    ret.view = (node?.view) ? node.view : null;\r\n    ret.advanced = state.advanced;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ConsoleConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ConsoleComponent);\r\n\r\nexport const Console = (props: OwnProps, children: (string | Component)[] = []): ReactElement => {\r\n    return <ConsoleConnected {...{...props, children}} />;\r\n}\r\nexport default Console;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}