{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{DEdge,EdgeBendingMode,GraphElementComponent,GraphElementDispatchProps,GraphElementStatee,LPointerTargetable,RuntimeAccessibleClass,U,EdgeOwnProps,EdgeStateProps,DModelElement}from\"../../joiner\";import{jsx as _jsx}from\"react/jsx-runtime\";let groupingsize={};groupingsize[EdgeBendingMode.Line]=1;groupingsize[EdgeBendingMode.Bezier_quadratic]=2;groupingsize[EdgeBendingMode.Bezier_cubic]=3;// groupingsize[EdgeBendingMode.Bezier_quadratic_mirrored] = 1;\n// groupingsize[EdgeBendingMode.Bezier_cubic_mirrored] = 2;\ngroupingsize[EdgeBendingMode.Elliptical_arc]=2;// (1_coord), (rotation), (sweep    arc), (1_coord)\nconst superclassGraphElementComponent=RuntimeAccessibleClass.classes.GraphElementComponent;const superclassGraphElementComponentuntyped=RuntimeAccessibleClass.classes.GraphElementComponent;class ThisStatee extends GraphElementStatee{}export class EdgeComponent extends superclassGraphElementComponent{constructor(props,context){super(props,context);}/*\r\n    path(): string {\r\n        let coords = this.pathCoords();\r\n        let svgletter: EdgeBendingMode = (this.props.view.bendingMode || \"L\");\r\n        let strings: string[] = coords.map(gp => gp.x+\" \" + gp.y);\r\n        return \"M\"+strings.join(\" \" + svgletter); }\r\n\r\n    pathCoords(): GraphPoint[] {\r\n        const ret = this.props;\r\n        let svgletter: EdgeBendingMode = (ret).view.bendingMode;\r\n        if (!ret.node) return []; // \"node missing\"\r\n        let coords: GraphPoint[] = (ret.node.midnodes as { x:number, y:number }[] as GraphPoint[]) || [];\r\n        let grouping = groupingsize[svgletter];\r\n        console.log(\"edgeee\", {coords, svgletter, groupingsize, midnodes:ret.node.midnodes, mnraw: ret.node.midnodes.map(mn=>mn.__raw), ret});\r\n        let scoord: GraphPoint = ret.node.startPoint || new GraphPoint(10, 10);\r\n        let ecoord: GraphPoint = ret.node.endPoint || new GraphPoint(100, 100);\r\n        return [scoord, ...coords, ecoord]; }\r\n\r\n    pathSegments(): GraphPoint[][]{\r\n        return U.pairArrayElements(this.pathCoords(), true); }\r\n*/render(){if(this.props.__skipRender)return null;if(!this.props.node)return\"loading\";// set classes\nlet nodeType=\"Edge\";let classesoverride=[nodeType];// set classes end\nlet styleoverride={};return super.render(nodeType,styleoverride,classesoverride);}}EdgeComponent.cname=\"EdgeComponent\";EdgeComponent.defaultProps=EdgeOwnProps.new();class DispatchProps extends GraphElementDispatchProps{}function mapStateToProps(state,ownProps){let ret=EdgeStateProps.new();if(!ownProps.data&&!ownProps.start||!ownProps.end)return{__skipRender:true};if(!ownProps.data){let lstart=LPointerTargetable.from(ownProps.start);if(RuntimeAccessibleClass.extends(lstart.className,DModelElement.cname))ret.data=lstart;}ret=GraphElementComponent.mapStateToProps(state,ownProps,DEdge,ret);// superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\nret.isEdgePending={user:LPointerTargetable.from(state.isEdgePending.user),source:LPointerTargetable.from(state.isEdgePending.source)};let l;if(ownProps.start){l=LPointerTargetable.from(ownProps.start);if(l)ret.start=l;}if(ownProps.end){l=LPointerTargetable.from(ownProps.end);if(l)ret.end=l;}U.removeEmptyObjectKeys(ret);if(!ret.start||!ret.end)return{__skipRender:true};return ret;}function mapDispatchToProps(dispatch){const superret=GraphElementComponent.mapDispatchToProps(dispatch);const ret=new GraphElementDispatchProps();U.objectMergeInPlace(superret,ret);U.removeEmptyObjectKeys(superret);return superret;}export const EdgeConnected=connect(mapStateToProps,mapDispatchToProps)(EdgeComponent);export const Edge=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(EdgeConnected,{...props,children,isGraph:false,isGraphVertex:false,isVertex:false,isEdgePoint:false,isField:false,isEdge:true,isVoid:false});};EdgeComponent.cname=\"EdgeComponent\";EdgeConnected.cname=\"EdgeConnected\";Edge.cname=\"Edge\";","map":{"version":3,"names":["React","connect","DEdge","EdgeBendingMode","GraphElementComponent","GraphElementDispatchProps","GraphElementStatee","LPointerTargetable","RuntimeAccessibleClass","U","EdgeOwnProps","EdgeStateProps","DModelElement","jsx","_jsx","groupingsize","Line","Bezier_quadratic","Bezier_cubic","Elliptical_arc","superclassGraphElementComponent","classes","superclassGraphElementComponentuntyped","ThisStatee","EdgeComponent","constructor","props","context","render","__skipRender","node","nodeType","classesoverride","styleoverride","cname","defaultProps","new","DispatchProps","mapStateToProps","state","ownProps","ret","data","start","end","lstart","from","extends","className","isEdgePending","user","source","l","removeEmptyObjectKeys","mapDispatchToProps","dispatch","superret","objectMergeInPlace","EdgeConnected","Edge","children","arguments","length","undefined","isGraph","isGraphVertex","isVertex","isEdgePoint","isField","isEdge","isVoid"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/graph/damedges/damedge.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex, Dictionary,\r\n    DVoidVertex, EdgeBendingMode, GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee, GraphPoint,\r\n    GraphSize,\r\n    DState,\r\n    LClass, LEdge, LGraphElement,\r\n    LModelElement,\r\n    LPointerTargetable,\r\n    LUser,\r\n    LVoidVertex, Overlap,\r\n    RuntimeAccessibleClass,\r\n    U,\r\n    EdgeOwnProps, EdgeStateProps,\r\n    LViewPoint, DModelElement, SetFieldAction, LVertex\r\n} from \"../../joiner\";\r\n\r\nlet groupingsize: Dictionary<EdgeBendingMode, number> = {} as any;\r\ngroupingsize[EdgeBendingMode.Line] = 1;\r\ngroupingsize[EdgeBendingMode.Bezier_quadratic] = 2;\r\ngroupingsize[EdgeBendingMode.Bezier_cubic] = 3;\r\n// groupingsize[EdgeBendingMode.Bezier_quadratic_mirrored] = 1;\r\n// groupingsize[EdgeBendingMode.Bezier_cubic_mirrored] = 2;\r\ngroupingsize[EdgeBendingMode.Elliptical_arc] = 2; // (1_coord), (rotation), (sweep    arc), (1_coord)\r\n\r\nconst superclassGraphElementComponent: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\nconst superclassGraphElementComponentuntyped: any = RuntimeAccessibleClass.classes.GraphElementComponent as any;\r\nclass ThisStatee extends GraphElementStatee {}\r\n\r\nexport class EdgeComponent<AllProps extends AllPropss = AllPropss, ThisState extends ThisStatee = ThisStatee>\r\n    extends superclassGraphElementComponent<AllProps, ThisState> {\r\n    public static cname: string = \"EdgeComponent\";\r\n    static defaultProps: Partial<EdgeOwnProps> = EdgeOwnProps.new();\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n/*\r\n    path(): string {\r\n        let coords = this.pathCoords();\r\n        let svgletter: EdgeBendingMode = (this.props.view.bendingMode || \"L\");\r\n        let strings: string[] = coords.map(gp => gp.x+\" \" + gp.y);\r\n        return \"M\"+strings.join(\" \" + svgletter); }\r\n\r\n    pathCoords(): GraphPoint[] {\r\n        const ret = this.props;\r\n        let svgletter: EdgeBendingMode = (ret).view.bendingMode;\r\n        if (!ret.node) return []; // \"node missing\"\r\n        let coords: GraphPoint[] = (ret.node.midnodes as { x:number, y:number }[] as GraphPoint[]) || [];\r\n        let grouping = groupingsize[svgletter];\r\n        console.log(\"edgeee\", {coords, svgletter, groupingsize, midnodes:ret.node.midnodes, mnraw: ret.node.midnodes.map(mn=>mn.__raw), ret});\r\n        let scoord: GraphPoint = ret.node.startPoint || new GraphPoint(10, 10);\r\n        let ecoord: GraphPoint = ret.node.endPoint || new GraphPoint(100, 100);\r\n        return [scoord, ...coords, ecoord]; }\r\n\r\n    pathSegments(): GraphPoint[][]{\r\n        return U.pairArrayElements(this.pathCoords(), true); }\r\n*/\r\n    render(): ReactNode {\r\n        if (this.props.__skipRender) return null;\r\n        if (!this.props.node) return \"loading\";\r\n        // set classes\r\n        let nodeType = \"Edge\";\r\n        let classesoverride = [nodeType];\r\n        // set classes end\r\n        let styleoverride: React.CSSProperties = {}\r\n        return super.render(nodeType, styleoverride, classesoverride);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass DispatchProps extends GraphElementDispatchProps {\r\n}\r\n\r\ntype AllPropss = Overlap<Overlap<EdgeOwnProps, EdgeStateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: EdgeOwnProps): EdgeStateProps {\r\n    let ret: EdgeStateProps = EdgeStateProps.new();\r\n    if (!ownProps.data && !ownProps.start || !ownProps.end) return {__skipRender: true} as any;\r\n    if (!ownProps.data) {\r\n        let lstart = LPointerTargetable.from(ownProps.start);\r\n        if (RuntimeAccessibleClass.extends(lstart.className, DModelElement.cname)) ret.data = lstart as any;\r\n    }\r\n    ret = GraphElementComponent.mapStateToProps(state, ownProps, DEdge, ret) as EdgeStateProps;\r\n    // superret.lastSelected = state._lastSelected ? LPointerTargetable.from(state._lastSelected.modelElement) : null;\r\n    ret.isEdgePending = {\r\n        user: LPointerTargetable.from(state.isEdgePending.user),\r\n        source: LPointerTargetable.from(state.isEdgePending.source)\r\n    };\r\n    let l: GObject;\r\n\r\n    if (ownProps.start){ l = LPointerTargetable.from(ownProps.start); if (l) ret.start = l as LVertex; }\r\n    if (ownProps.end){ l = LPointerTargetable.from(ownProps.end); if (l) ret.end = l as LVertex; }\r\n\r\n    U.removeEmptyObjectKeys(ret);\r\n    if (!ret.start || !ret.end) return {__skipRender: true} as any;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const superret: GraphElementDispatchProps = GraphElementComponent.mapDispatchToProps(dispatch);\r\n    const ret: GraphElementDispatchProps = new GraphElementDispatchProps();\r\n    U.objectMergeInPlace(superret, ret);\r\n    U.removeEmptyObjectKeys(superret);\r\n    return superret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<EdgeStateProps, DispatchProps, EdgeOwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent as any);\r\n\r\nexport const Edge = (props: EdgeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, children}}\r\n                          isGraph={false} isGraphVertex={false} isVertex={false} isEdgePoint={false} isField={false} isEdge={true} isVoid={false} />;\r\n}\r\n\r\nEdgeComponent.cname = \"EdgeComponent\";\r\nEdgeConnected.cname = \"EdgeConnected\";\r\nEdge.cname = \"Edge\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}