{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\topbar\\\\undoredocomponent.tsx\";\nimport React, { PureComponent } from 'react';\nimport { DUser, U, RedoAction, statehistory, UndoAction, store, DPointerTargetable } from '../../joiner';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UndoRedoState {\n  constructor(jsx) {\n    this.hover = false;\n    this.jsx = void 0;\n    this.jsx = jsx;\n  }\n}\n\n// private\n\n// private\n\n// private\n\n// private\n\n// private\n\nexport class SaveManagerComponent extends PureComponent {\n  printablePointer(pathsegment, state) {\n    let obj = DPointerTargetable.from(pathsegment, state);\n    if (!obj) return pathsegment;\n    if (obj.name) return \"$\" + obj.name;\n    if (obj.className) return \"#\" + obj.className;\n    return pathsegment;\n  }\n  improveText(e) {\n    if (e.fullstr.includes(\"Pointer\")) {\n      let editedfullpath = e.fullpath.map(pathsegment => {\n        //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\n        return this.printablePointer(pathsegment, s);\n      });\n      e.str = editedfullpath.join(\".\") + \" = \" + e.val;\n      console.log(\"undoredo replace attempt\", {\n        editedfullpath,\n        beststr: e.str,\n        best: e\n      });\n    }\n    if (e.path[0] === \"idlookup\") e.str = \"\" + e.str.substring(\"idlookup.\".length);\n    if (e.fullvalue.includes(\"Pointer\")) {\n      e.val = this.printablePointer(e.fullvalue.substring(1, e.fullvalue.length - 1), s); // 1, -1 because string values have quotes \"\"\n      e.str = e.str.substring(0, e.str.lastIndexOf(\"=\")) + \"= \" + e.val;\n    }\n  }\n  // redo list is updated only when the user mouse-enters it. for efficiency.\n\n  constructor(props, context) {\n    var _this;\n    super(props, context);\n    _this = this;\n    this.undoredolistoutdated = void 0;\n    this.do_undo = index => {\n      UndoAction.new(index + 1);\n      this.undoenter(); // updates list\n    };\n    this.do_redo = index => {\n      console.log(\"redo(\" + index + \")\");\n      RedoAction.new(index + 1);\n      this.redoenter();\n    };\n    this.undoredoenter = function () {\n      let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"undo\";\n      console.log(\"statemanager undo update\", {\n        thiss: _this,\n        undo: _this.props.undo,\n        redo: _this.props.redo,\n        props: _this.props,\n        state: _this.state\n      });\n      if (!_this.undoredolistoutdated) return;\n      let s = store.getState();\n      let arr = [..._this.props[key]].reverse().slice(0, _this.props.maxlistsize);\n      let list = arr.map((delta, index) => {\n        let out = [];\n        U.ObjectToAssignementStrings(delta, 10, 6, 20, \"â€¦\", out, true);\n        console.log(\"undoredo update\", out);\n        _this.improveText(out.best);\n        let other = out.slice(0, _this.props.maxDetailSize); //.map(e=>this.improveText(e));\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => _this[\"do_\" + key](index),\n          className: \"hoverable\",\n          style: {\n            overflow: \"visible\",\n            height: \"24px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview\",\n            children: out.best.str\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            style: {\n              overflow: \"visible\",\n              height: \"100%\",\n              width: \"max-content\",\n              maxWidth: \"75vw\"\n            },\n            children: other.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: \"#ddd\",\n                marginLeft: \"-20px\",\n                paddingLeft: \"20px\",\n                height: \"fit-content\",\n                pointerEvents: \"none\"\n              },\n              children: row.fullpath.join(\".\") + \" = \" + row.fullvalue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, _this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, _this);\n      });\n      let jsx = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: list\n      }, void 0, false);\n      let obj = {};\n      obj[key] = {\n        ..._this.state[key],\n        hover: true,\n        jsx\n      };\n      // {undo: {...this.state.undo, hover: true, jsx}}\n      _this.undoredolistoutdated = false;\n      _this.setState(obj);\n    };\n    this.undoenter = () => {\n      return this.undoredoenter(\"undo\");\n    };\n    this.redoenter = () => {\n      return this.undoredoenter(\"redo\");\n    };\n    this.undoleave = () => {\n      this.setState({\n        undo: {\n          ...this.state.undo,\n          hover: false\n        }\n      });\n    };\n    this.redoleave = () => {\n      this.setState({\n        redo: {\n          ...this.state.redo,\n          hover: false\n        }\n      });\n    };\n    let undo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"undo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 38\n    }, void 0));\n    let redo = new UndoRedoState( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"redo list example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 38\n    }, void 0));\n    this.state = {\n      undo,\n      redo\n    };\n    this.undoredolistoutdated = true;\n    // this.setState({undo, redo});\n  }\n  render() {\n    this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\n    // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.undoenter,\n          onMouseLeave: this.undoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_undo(0);\n            },\n            children: [\"Undo (\", this.props.undo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), this.props.debug && this.props.undo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.undo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hoverable\",\n          style: {\n            position: \"relative\",\n            background: \"white\"\n          },\n          onMouseEnter: this.redoenter,\n          onMouseLeave: this.redoleave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'item border round ms-1',\n            onClick: e => {\n              this.do_redo(0);\n            },\n            children: [\"Redo (\", this.props.redo.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), this.props.debug && this.props.redo.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              background: \"inherit\",\n              width: \"max-content\",\n              zIndex: 10000\n            },\n            className: \"content\",\n            children: this.state.redo.jsx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 67\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            statehistory[DUser.current].undoable = [];\n            statehistory[DUser.current].redoable = [];\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nSaveManagerComponent.cname = \"SaveManagerComponent\";\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.undo = statehistory[DUser.current].undoable;\n  ret.redo = statehistory[DUser.current].redoable;\n  ret.maxlistsize = 10;\n  ret.maxDetailSize = 20;\n  ret.debug = state.debug;\n  /// to fill\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  /// to fill\n  return ret;\n}\nexport const SaveManagerConnected = connect(mapStateToProps, mapDispatchToProps)(SaveManagerComponent);\nexport default SaveManagerConnected;\nexport const Undoredocomponent = SaveManagerConnected;","map":{"version":3,"names":["React","PureComponent","DUser","U","RedoAction","statehistory","UndoAction","store","DPointerTargetable","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","UndoRedoState","constructor","jsx","hover","SaveManagerComponent","printablePointer","pathsegment","state","obj","from","name","className","improveText","e","fullstr","includes","editedfullpath","fullpath","map","s","str","join","val","console","log","beststr","best","path","substring","length","fullvalue","lastIndexOf","props","context","_this","this","undoredolistoutdated","do_undo","index","new","undoenter","do_redo","redoenter","undoredoenter","key","arguments","undefined","thiss","undo","redo","getState","arr","reverse","slice","maxlistsize","list","delta","out","ObjectToAssignementStrings","other","maxDetailSize","onClick","style","overflow","height","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","row","background","marginLeft","paddingLeft","pointerEvents","setState","undoleave","redoleave","render","display","position","onMouseEnter","onMouseLeave","debug","zIndex","current","undoable","redoable","cname","mapStateToProps","ownProps","ret","mapDispatchToProps","dispatch","SaveManagerConnected","Undoredocomponent"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/topbar/undoredocomponent.tsx"],"sourcesContent":["import React, {Dispatch, PureComponent, ReactNode} from 'react';\r\nimport {\r\n    Dictionary, DUser,\r\n    GObject, DState,\r\n    Log, U, RedoAction,\r\n    statehistory,\r\n    UndoAction, store, DPointerTargetable,\r\n} from '../../joiner';\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface SaveManagerProps {}\r\n\r\nclass UndoRedoState{\r\n    hover: boolean = false;\r\n    jsx: any | null;\r\n    constructor(jsx: any) {  this.jsx = jsx; }\r\n}\r\n\r\n// private\r\ninterface ThisState {\r\n    undo: UndoRedoState;\r\n    redo: UndoRedoState;\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n    maxlistsize: number;\r\n    maxDetailSize: number;\r\n    undo: GObject<\"delta\">[],\r\n    redo: GObject<\"delta\">[],\r\n    debug: boolean\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\ntype R = {str: string, fullstr: string, path:string[], fullpath:string[], val: string, fullvalue: string, pathlength?: number};\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\nexport class SaveManagerComponent extends PureComponent<AllProps, ThisState>{\r\n    public static cname: string = \"SaveManagerComponent\";\r\n    private undoredolistoutdated: boolean;\r\n    do_undo = (index: number) => {\r\n        UndoAction.new(index+1);\r\n        this.undoenter(); // updates list\r\n    }\r\n    do_redo = (index: number) => {\r\n        console.log(\"redo(\" + index + \")\");\r\n        RedoAction.new(index+1);\r\n        this.redoenter();\r\n    }\r\n    printablePointer(pathsegment: string, state: DState){\r\n        let obj = DPointerTargetable.from(pathsegment, state) as GObject;\r\n        if (!obj) return pathsegment;\r\n        if (obj.name) return \"$\"+obj.name;\r\n        if (obj.className) return \"#\"+obj.className;\r\n        return pathsegment;\r\n    }\r\n    improveText(e: R) {\r\n        if (e.fullstr.includes(\"Pointer\")) {\r\n            let editedfullpath = e.fullpath.map( (pathsegment) => {\r\n                //  console.log(\"undoredo replace attempt\", {pathsegment, idlookup:s.idlookup, dobj:s.idlookup[pathsegment], replacement: this.printablePointer(pathsegment, s)});\r\n                return this.printablePointer(pathsegment, s); });\r\n            e.str = editedfullpath.join(\".\") + \" = \" + e.val;\r\n            console.log(\"undoredo replace attempt\", {editedfullpath, beststr:e.str, best: e});\r\n        }\r\n        if (e.path[0] === \"idlookup\") e.str = \"\" + e.str.substring(\"idlookup.\".length);\r\n        if (e.fullvalue.includes(\"Pointer\")) {\r\n            e.val = this.printablePointer(e.fullvalue.substring(1, e.fullvalue.length-1), s); // 1, -1 because string values have quotes \"\"\r\n            e.str = e.str.substring(0, e.str.lastIndexOf(\"=\")) + \"= \" + e.val;\r\n        }\r\n    }\r\n    // redo list is updated only when the user mouse-enters it. for efficiency.\r\n    undoredoenter = (key: string = \"undo\") => {\r\n        console.log(\"statemanager undo update\", {thiss:this, undo:this.props.undo, redo: this.props.redo, props: this.props, state:this.state});\r\n        if (!this.undoredolistoutdated) return;\r\n        let s: DState = store.getState();\r\n        let arr = [...(this.props as GObject)[key]].reverse().slice(0, this.props.maxlistsize);\r\n        let list = arr.map((delta, index) => {\r\n            let out: {best: R}&R[] = [] as GObject as R[] & {best:R};\r\n            U.ObjectToAssignementStrings(delta, 10, 6, 20, \"â€¦\", out, true);\r\n            console.log(\"undoredo update\", out);\r\n            this.improveText(out.best);\r\n            let other = out.slice(0, this.props.maxDetailSize); //.map(e=>this.improveText(e));\r\n            return <li onClick={() => ((this as GObject)[\"do_\"+key](index))} className=\"hoverable\" key={index} style={{overflow: \"visible\", height: \"24px\"}}>\r\n                <div className={\"preview\"}>{out.best.str}</div>\r\n                <div className={\"content\"} style={{overflow: \"visible\", height:\"100%\", width: \"max-content\", maxWidth: \"75vw\"}}>{\r\n                    other.map(row => (\r\n                        <div style={{background: \"#ddd\", marginLeft: \"-20px\", paddingLeft:\"20px\", height:\"fit-content\", pointerEvents:\"none\"}}>{row.fullpath.join(\".\") + \" = \" + row.fullvalue}</div>\r\n                    ))\r\n                }</div>\r\n            </li>\r\n        });\r\n        let jsx = <>{list}</>;\r\n        let obj: GObject = {};\r\n        obj[key] = {...(this.state as GObject)[key], hover: true, jsx};\r\n        // {undo: {...this.state.undo, hover: true, jsx}}\r\n        this.undoredolistoutdated = false;\r\n        this.setState(obj as ThisState);\r\n    }\r\n\r\n    undoenter = ()=>{ return this.undoredoenter(\"undo\"); }\r\n    redoenter = ()=>{ return this.undoredoenter(\"redo\"); }\r\n    undoleave = ()=>{ this.setState({undo: {...this.state.undo, hover: false}}); }\r\n    redoleave = ()=>{ this.setState({redo: {...this.state.redo, hover: false}}); }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        let undo = new UndoRedoState(<div>undo list example</div>);\r\n        let redo = new UndoRedoState(<div>redo list example</div>);\r\n        this.state = {undo, redo};\r\n        this.undoredolistoutdated = true;\r\n        // this.setState({undo, redo});\r\n    }\r\n    render(): ReactNode {\r\n        this.undoredolistoutdated = true; // if render is called it means redux state props he's watching (redux-state) changed, so the preview list in component-state is outdated.\r\n        // console.log(\"undoredomanager\", {thiss:this, undo:this.props.undo, props: this.props, state:this.state});\r\n        return(<>\r\n            <div style={{display: \"inline-block\"}}>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.undoenter} onMouseLeave={this.undoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_undo(0) }}>Undo ({this.props.undo.length})</button>\r\n                    {this.props.debug && this.props.undo.length ?\r\n                        <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.undo.jsx}</ul>\r\n                        : null}\r\n                </span>\r\n                <span className={\"hoverable\"} style={{position: \"relative\", background: \"white\"}} onMouseEnter={this.redoenter} onMouseLeave={this.redoleave}>\r\n                    <button className={'item border round ms-1'} onClick={(e)=> { this.do_redo(0) }}>Redo ({this.props.redo.length})</button>\r\n                    {this.props.debug && this.props.redo.length ? <ul style={{background: \"inherit\", width: \"max-content\", zIndex:10000}} className={\"content\"}>{this.state.redo.jsx}</ul> : null}\r\n                </span>\r\n                <button onClick={()=>{statehistory[DUser.current].undoable = []; statehistory[DUser.current].redoable = [];}}>x</button>\r\n            </div>\r\n        </>);\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.undo = statehistory[DUser.current].undoable;\r\n    ret.redo = statehistory[DUser.current].redoable;\r\n    ret.maxlistsize = 10;\r\n    ret.maxDetailSize = 20;\r\n    ret.debug = state.debug;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const SaveManagerConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SaveManagerComponent);\r\n\r\nexport default SaveManagerConnected;\r\nexport const Undoredocomponent = SaveManagerConnected;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}