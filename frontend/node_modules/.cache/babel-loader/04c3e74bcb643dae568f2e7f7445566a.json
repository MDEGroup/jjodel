{"ast":null,"code":"// export {Graph, GraphComponent} from \"../graph/graph/graph\"; // require graphelement\n// export {Graph} from \"../graph/vertex/Vertex\"; // require graphelement\n// imports graphelements\n\nimport { Graph, Vertex, GraphVertex, Field, EdgePoint } from \"../graph/vertex/Vertex\"; // require overlap, graphelement\nimport { Polygon, Circle, Cross, Decagon, Asterisk, Ellipse, Enneagon, Hexagon, Octagon, Heptagon, Pentagon, Rectangle, Square, SimpleStar, DecoratedStar, Trapezoid, Triangle } from \"../graph/vertex/Shapes\";\n// require graphelement\n\n// require vertex, graph\nimport { Edge } from \"../graph/damedges/damedge\";\n// exports graphelements\nexport { GraphElement, GraphElementComponent } from \"../graph/graphElement/graphElement\";\nexport { Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent } from \"../graph/vertex/Vertex\"; // require overlap, graphelement\nexport { Polygon, Circle, Cross, Decagon, Asterisk, Ellipse, Enneagon, Hexagon, Nonagon, Octagon, Heptagon, Pentagon, Rectangle, Septagon, Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle } from \"../graph/vertex/Shapes\";\nexport { DefaultNode, DefaultNodeComponent } from \"../graph/defaultNode/DefaultNode\"; // require graphelement\nexport { GraphsContainer, GraphsContainerComponent } from \"../graph/graph/graphContainer\"; // require vertex, graph\nexport { Edge, EdgeComponent } from \"../graph/damedges/damedge\";\nexport { GenericInput } from \"../components/forEndUser/GenericInput\";\n// other exports\n//export {DockLayoutComponent} from \"../components/abstract/DockLayoutComponent\";\n\nexport { Input, Edit, TextArea, Select } from \"../components/forEndUser/Input\";\n// export {TextArea} from \"../components/forEndUser/TextArea\";\nexport { Selector } from \"../components/forEndUser/Selector\";\nexport { View } from \"../components/forEndUser/Aliases\";\nexport { Try } from \"../components/forEndUser/Try\";\n\n// export {Image} from \"../components/forEndUser/Image\";\n\nexport { DataOutputComponent } from \"../components/logger/DataOutput\";\nexport { LoggerComponent } from \"../components/logger/loggerComponent\";\n\n/// import components that must save themselves to global variable to be accessible for user\n\nexport { Overlap } from \"../components/forEndUser/Overlap\";\nexport { ControlPanel } from '../components/forEndUser/ControlPanel';\nexport { Control, Slider, Toggle } from '../components/forEndUser/Control';\nexport const Graphs = {\n  Graph: Graph,\n  GraphVertex: GraphVertex\n};\nexport const Edges = {\n  Edge: Edge,\n  EdgePoint: EdgePoint\n};\nexport const Fields = {\n  Field: Field\n  // GraphElement: GraphElement,\n};\nexport const Vertexes = {\n  Vertex: Vertex,\n  // VoidVertex: VoidVertex,\n  Circle: Circle,\n  Polygon: Polygon,\n  Cross: Cross,\n  Asterisk: Asterisk,\n  //Star: Star,\n  SimpleStar: SimpleStar,\n  DecoratedStar: DecoratedStar,\n  Triangle: Triangle,\n  Square: Square,\n  Pentagon: Pentagon,\n  Hexagon: Hexagon,\n  Heptagon: Heptagon,\n  Octagon: Octagon,\n  Enneagon: Enneagon,\n  Decagon: Decagon,\n  // Nonagon: Nonagon, Septagon: Septagon,\n  // Diamond: Diamond, Rhombus: Rhombus,\n  Ellipse: Ellipse,\n  Rectangle: Rectangle,\n  Trapezoid: Trapezoid\n};\nexport const GraphElements = {\n  ...Graphs,\n  ...Vertexes,\n  ...Fields,\n  ...Edges\n}; // T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;\nfor (let key in GraphElements) if (!GraphElements[key]) {\n  console.log({\n    GraphElements,\n    v: GraphElements[key]\n  });\n  throw new Error(\"wrong initialization fo components\");\n}\n// U.objectMergeInPlace(GraphElements, Graphs, Edges as any, Vertexes, Fields, {Graphs, Edges, Vertexes, Fields});\n// console.info('components loaded');\nexport { Measurable, MeasurableComponent, ScrollableComponent, Scrollable, Draggable, Resizable, Rotatable } from \"../components/forEndUser/Measurable\";\n\n// icons\nimport * as _Tb from 'react-icons/tb';\nexport { _Tb as Tb };\nimport * as _Fa from 'react-icons/fa';\nexport { _Fa as Fa };","map":{"version":3,"names":["Graph","Vertex","GraphVertex","Field","EdgePoint","Polygon","Circle","Cross","Decagon","Asterisk","Ellipse","Enneagon","Hexagon","Octagon","Heptagon","Pentagon","Rectangle","Square","SimpleStar","DecoratedStar","Trapezoid","Triangle","Edge","GraphElement","GraphElementComponent","VoidVertex","VertexComponent","Nonagon","Septagon","Star","DefaultNode","DefaultNodeComponent","GraphsContainer","GraphsContainerComponent","EdgeComponent","GenericInput","Input","Edit","TextArea","Select","Selector","View","Try","DataOutputComponent","LoggerComponent","Overlap","ControlPanel","Control","Slider","Toggle","Graphs","Edges","Fields","Vertexes","GraphElements","key","console","log","v","Error","Measurable","MeasurableComponent","ScrollableComponent","Scrollable","Draggable","Resizable","Rotatable","_Tb","Tb","_Fa","Fa"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/joiner/components.tsx"],"sourcesContent":["import type { Dictionary } from \"./types\";\r\n\r\n// export {Graph, GraphComponent} from \"../graph/graph/graph\"; // require graphelement\r\n// export {Graph} from \"../graph/vertex/Vertex\"; // require graphelement\r\n// imports graphelements\r\nimport {GraphElement, GraphElementComponent} from \"../graph/graphElement/graphElement\";\r\nimport {Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent} from \"../graph/vertex/Vertex\"; // require overlap, graphelement\r\nimport { Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle\r\n} from  \"../graph/vertex/Shapes\";\r\nimport {DefaultNode, DefaultNodeComponent} from \"../graph/defaultNode/DefaultNode\"; // require graphelement\r\nimport {GraphsContainer, GraphsContainerComponent} from \"../graph/graph/graphContainer\"; // require vertex, graph\r\nimport {Edge, EdgeComponent} from \"../graph/damedges/damedge\";\r\nimport {GenericInput} from \"../components/forEndUser/GenericInput\"\r\nimport {U} from \"./index\";\r\nimport { Control } from \"../components/forEndUser/Control\";\r\n// exports graphelements\r\nexport {GraphElement, GraphElementComponent} from \"../graph/graphElement/graphElement\";\r\nexport {Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent} from \"../graph/vertex/Vertex\"; // require overlap, graphelement\r\nexport { Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle\r\n} from  \"../graph/vertex/Shapes\";\r\nexport {DefaultNode, DefaultNodeComponent} from \"../graph/defaultNode/DefaultNode\"; // require graphelement\r\nexport {GraphsContainer, GraphsContainerComponent} from \"../graph/graph/graphContainer\"; // require vertex, graph\r\nexport {Edge, EdgeComponent,} from \"../graph/damedges/damedge\";\r\nexport {GenericInput} from \"../components/forEndUser/GenericInput\"\r\n// other exports\r\n//export {DockLayoutComponent} from \"../components/abstract/DockLayoutComponent\";\r\n\r\nexport {Input, Edit, TextArea, Select} from \"../components/forEndUser/Input\";\r\n// export {TextArea} from \"../components/forEndUser/TextArea\";\r\nexport {Selector} from \"../components/forEndUser/Selector\";\r\nexport {View} from \"../components/forEndUser/Aliases\";\r\nexport {Try} from \"../components/forEndUser/Try\";\r\n\r\n// export {Image} from \"../components/forEndUser/Image\";\r\n\r\n\r\nexport {DataOutputComponent} from \"../components/logger/DataOutput\";\r\nexport {LoggerComponent} from \"../components/logger/loggerComponent\";\r\n\r\n/// import components that must save themselves to global variable to be accessible for user\r\n\r\nexport {Overlap} from \"../components/forEndUser/Overlap\";\r\n\r\nexport {ControlPanel} from '../components/forEndUser/ControlPanel';\r\n\r\nexport {Control, Slider, Toggle} from '../components/forEndUser/Control';\r\n\r\ntype dict = Dictionary<string, typeof GraphElement | typeof Edge>;\r\n\r\n\r\nexport const Graphs = {\r\n    Graph: Graph, GraphVertex: GraphVertex,\r\n}\r\nexport const Edges = {\r\n    Edge: Edge,\r\n    EdgePoint: EdgePoint,\r\n}\r\nexport const Fields = {\r\n    Field: Field,\r\n    // GraphElement: GraphElement,\r\n}\r\nexport const Vertexes = {\r\n    Vertex: Vertex,\r\n    // VoidVertex: VoidVertex,\r\n    Circle: Circle,\r\n    Polygon: Polygon,\r\n    Cross: Cross,\r\n    Asterisk: Asterisk,\r\n    //Star: Star,\r\n    SimpleStar: SimpleStar, DecoratedStar: DecoratedStar,\r\n    Triangle: Triangle, Square: Square, Pentagon: Pentagon,\r\n    Hexagon: Hexagon, Heptagon: Heptagon, Octagon: Octagon,\r\n    Enneagon: Enneagon, Decagon: Decagon,\r\n    // Nonagon: Nonagon, Septagon: Septagon,\r\n    // Diamond: Diamond, Rhombus: Rhombus,\r\n    Ellipse: Ellipse,\r\n    Rectangle: Rectangle,\r\n    Trapezoid: Trapezoid\r\n}\r\nexport const GraphElements: dict = {...Graphs, ...Vertexes, ...Fields, ...Edges}; // T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;\r\nfor (let key in GraphElements) if (!(GraphElements as any)[key]) { console.log({GraphElements, v:(GraphElements as any)[key]}); throw new Error(\"wrong initialization fo components\"); }\r\n// U.objectMergeInPlace(GraphElements, Graphs, Edges as any, Vertexes, Fields, {Graphs, Edges, Vertexes, Fields});\r\n// console.info('components loaded');\r\nexport {Measurable, MeasurableComponent, ScrollableComponent, Scrollable, Draggable, Resizable, Rotatable} from \"../components/forEndUser/Measurable\";\r\n\r\n// icons\r\nexport * as Tb from 'react-icons/tb';\r\nexport * as Fa from 'react-icons/fa';\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}