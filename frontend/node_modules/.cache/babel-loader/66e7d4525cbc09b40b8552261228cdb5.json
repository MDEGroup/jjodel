{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\SplashMessage.tsx\",\n  _dec,\n  _class,\n  _class2;\nimport React from 'react';\nimport { U, RuntimeAccessible, RuntimeAccessibleClass } from '../../joiner';\nimport './splash-message.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MessageType {}\nMessageType.s = 's';\nMessageType.l = 'l';\nMessageType.w = 'w';\nMessageType.e = 'e';\nMessageType.ex = 'ex';\nclass MessageData {\n  // unix timestamp start\n  // unix timestamp end\n\n  constructor(msg, lastingTime) {\n    let requireInteraction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : MessageType.l;\n    this.msg = void 0;\n    this.type = void 0;\n    this.id = void 0;\n    this.publishingTime = void 0;\n    this.lastingTime = void 0;\n    this.requireInteraction = void 0;\n    this.msg = msg;\n    this.type = type;\n    this.requireInteraction = requireInteraction;\n    // todo: how to get text from ReactNode?\n    if (lastingTime === undefined) {\n      let msgStr = (msg === null || msg === void 0 ? void 0 : msg.innerText) || msg;\n      lastingTime = typeof msgStr == \"string\" ? msgStr.length * 3 / 30 : 4000;\n    }\n    if (lastingTime < 0) lastingTime = Number.POSITIVE_INFINITY;\n    this.publishingTime = new Date().getTime();\n    this.lastingTime = this.publishingTime + lastingTime * 1000 + MessageData.animationTime;\n    this.id = MessageData.idMax++;\n  }\n}\nMessageData.animationTime = 1000;\nMessageData.idMax = 1;\nclass MessageVisualizerState {\n  constructor() {\n    this.msg = void 0;\n    this.msg = [];\n  }\n}\nexport class MessageVisualizer extends React.Component {\n  constructor() {\n    super({});\n    this.requireInteraction = false;\n    this.state = new MessageVisualizerState();\n    MessageVisualizer.component = this;\n  }\n  render() {\n    if (!this.state.msg.length) return undefined;\n    this.requireInteraction = false;\n    let msgs = this.state.msg.map((m, i) => this.renderMessage(m, i));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash-message-container\" + (this.requireInteraction && \" blocking\"),\n      children: msgs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  renderMessage(msg, i) {\n    if (!msg) return undefined;\n    if (msg.requireInteraction) this.requireInteraction = true;\n    let wrapper = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash-message \" + msg.type,\n      onClick: e => this.onClick(e, i),\n      children: this.state.msg\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this);\n    return wrapper;\n  }\n  onClick(e, i) {\n    if (e.button === 2) {\n      // MouseRightButton\n      this.setState({\n        msg: []\n      });\n      return;\n    }\n    const msg = [...this.state.msg];\n    msg.splice(i, 1);\n    this.setState({\n      msg\n    });\n  }\n}\nMessageVisualizer.component = void 0;\nexport let Message = (_dec = RuntimeAccessible('Message'), _dec(_class = (_class2 = class Message extends RuntimeAccessibleClass {\n  // requireInteraction = true makes a black background and non-clickthrough\n  static show(msg, time) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : MessageType.i;\n    let requireInteraction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const msgo = new MessageData(msg, time, requireInteraction, type);\n    MessageVisualizer.component.setState({\n      msg: [...MessageVisualizer.component.state.msg, msgo]\n    });\n  }\n  static hide(msg) {\n    if (!msg) {\n      MessageVisualizer.component.setState({\n        msg: []\n      });\n      return;\n    }\n    let msgs = [...MessageVisualizer.component.state.msg];\n    U.arrayRemoveAll(msgs, msg);\n    MessageVisualizer.component.setState({\n      msg: msgs\n    });\n  }\n}, _class2.cname = \"Message\", _class2)) || _class);","map":{"version":3,"names":["React","U","RuntimeAccessible","RuntimeAccessibleClass","jsxDEV","_jsxDEV","MessageType","s","l","w","e","ex","MessageData","constructor","msg","lastingTime","requireInteraction","arguments","length","undefined","type","id","publishingTime","msgStr","innerText","Number","POSITIVE_INFINITY","Date","getTime","animationTime","idMax","MessageVisualizerState","MessageVisualizer","Component","state","component","render","msgs","map","m","i","renderMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","onClick","button","setState","splice","Message","_dec","_class","_class2","show","time","msgo","hide","arrayRemoveAll","cname"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/SplashMessage.tsx"],"sourcesContent":["import React, {Dispatch, isValidElement, KeyboardEvent, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {\r\n    Defaults,\r\n    DPointerTargetable,\r\n    DV,\r\n    GObject,\r\n    Keystrokes,\r\n    Log,\r\n    LPointerTargetable,\r\n    Overlap,\r\n    Pointer, store,\r\n    U, LoggerCategoryState, RuntimeAccessible, RuntimeAccessibleClass\r\n} from '../../joiner';\r\nimport './splash-message.scss';\r\nclass MessageType{\r\n    public static s = 's';\r\n    public static l = 'l';\r\n    public static w = 'w';\r\n    public static e = 'e';\r\n    public static ex = 'ex';\r\n}\r\nclass MessageData{\r\n    public static animationTime: number = 1000;\r\n    public static idMax: number = 1;\r\n    msg: ReactNode;\r\n    type: MessageType;\r\n    id: number;\r\n    publishingTime: number; // unix timestamp start\r\n    lastingTime: number; // unix timestamp end\r\n    requireInteraction: boolean;\r\n\r\n    constructor(msg: ReactNode, lastingTime?: number, requireInteraction: boolean = false, type: MessageType = MessageType.l) {\r\n        this.msg = msg;\r\n        this.type = type;\r\n        this.requireInteraction = requireInteraction;\r\n        // todo: how to get text from ReactNode?\r\n        if (lastingTime === undefined){\r\n            let msgStr = (msg as any)?.innerText || msg;\r\n            lastingTime = typeof msgStr == \"string\" ? msgStr.length * 3/30 : 4000;\r\n        }\r\n        if (lastingTime < 0) lastingTime = Number.POSITIVE_INFINITY;\r\n        this.publishingTime = new Date().getTime();\r\n        this.lastingTime = this.publishingTime + lastingTime*1000 + MessageData.animationTime;\r\n        this.id = MessageData.idMax++;\r\n    }\r\n}\r\n\r\nclass MessageVisualizerState{\r\n    msg: MessageData[];\r\n    constructor() { this.msg = []; }\r\n}\r\nexport class MessageVisualizer extends React.Component<{}, MessageVisualizerState> {\r\n    public static component: MessageVisualizer;\r\n    private requireInteraction: boolean = false;\r\n\r\n    constructor(){\r\n        super({});\r\n        this.state = new MessageVisualizerState();\r\n        MessageVisualizer.component = this;\r\n    }\r\n    render(){\r\n        if (!this.state.msg.length) return undefined;\r\n        this.requireInteraction = false;\r\n        let msgs = this.state.msg.map( (m, i) => this.renderMessage(m, i));\r\n        return <div className={\"splash-message-container\"+ (this.requireInteraction && \" blocking\")}>{msgs}</div>\r\n    }\r\n    private renderMessage(msg: MessageData, i: number){\r\n        if (!msg) return undefined;\r\n        if (msg.requireInteraction) this.requireInteraction = true;\r\n        let wrapper = <div key={msg.id} className={\"splash-message \" + msg.type} onClick={(e)=>this.onClick(e, i)}>{this.state.msg}</div>\r\n        return wrapper;\r\n    }\r\n\r\n    private onClick(e: React.MouseEvent<HTMLDivElement>, i: number) {\r\n        if (e.button === 2){ // MouseRightButton\r\n            this.setState({msg:[]});\r\n            return;\r\n        }\r\n        const msg = [...this.state.msg];\r\n        msg.splice(i, 1);\r\n        this.setState({msg})\r\n    }\r\n}\r\n\r\n@RuntimeAccessible('Message')\r\nexport class Message extends RuntimeAccessibleClass {\r\n    static cname: string = \"Message\";\r\n\r\n    // requireInteraction = true makes a black background and non-clickthrough\r\n    public static show(msg: ReactNode, time: number, type: MessageType = MessageType.i, requireInteraction: boolean = false): void{\r\n        const msgo = new MessageData(msg, time, requireInteraction, type);\r\n        MessageVisualizer.component.setState({msg:[...MessageVisualizer.component.state.msg, msgo]});\r\n    }\r\n    public static hide(msg?: ReactNode): void {\r\n        if (!msg) {\r\n            MessageVisualizer.component.setState({msg: []});\r\n            return;\r\n        }\r\n        let msgs = [...MessageVisualizer.component.state.msg];\r\n        U.arrayRemoveAll(msgs, msg);\r\n        MessageVisualizer.component.setState({msg:msgs});\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}