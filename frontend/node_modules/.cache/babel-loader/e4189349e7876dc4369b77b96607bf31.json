{"ast":null,"code":"var _dec,_class,_class2;import React from\"react\";import{connect}from\"react-redux\";import{DV,GraphElementComponent,GraphElementDispatchProps,GraphElementOwnProps,GraphElementReduxStateProps,GraphElementStatee,Log,RuntimeAccessibleClass,SetRootFieldAction,windoww,Field,Graph,GraphVertex,Vertex,VoidVertex,RuntimeAccessible,LPointerTargetable,transientProperties}from\"../../joiner\";import{GraphElements}from\"../../joiner/components\";// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";const superclass=RuntimeAccessibleClass.classes.GraphElementComponent;// private\nclass DefaultNodeStatee extends GraphElementStatee{}// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\n// Giordano: add ignore for webpack\nexport let DefaultNodeComponent=(_dec=RuntimeAccessible('DefaultNodeComponent'),_dec(_class=(_class2=class DefaultNodeComponent extends superclass{// cannot decide anything on this level, delegated to lower levels.\nstatic mapStateToProps(state,ownProps){let ret={};// NB: cannot use a constructor, must be pojo\n// GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\n// GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\n/*        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.node = undefined as any; // because DefaultNode is all about determining the correct node to create, so there is no node yet.\r\n        ret.nodeid = ownProps.nodeid as Pointer<DGraphElement>; // but nodeid exists, passed from the parent along graphid and parentview\r\n*/ // try{\nret.data=LPointerTargetable.wrap(ownProps.data);ret.dataid=ownProps.data?typeof ownProps.data===\"string\"?ownProps.data:ownProps.data.id:undefined;// if node does not exist yet it's fine, don't create it. let Vertex or Graph or Edge make it with appropriate constructor according fo first matching view on model.\n// problem: what kind of node to make / initial view assign on shapeless objects? they have both data and node undefined at first render.\nret.node=LPointerTargetable.wrap(ownProps.nodeid);if(ret.dataid){// set up transient model-> node map\nif(!transientProperties.modelElement[ret.dataid])transientProperties.modelElement[ret.dataid]={nodes:{}};transientProperties.modelElement[ret.dataid].nodes[ownProps.nodeid]=ret.node;transientProperties.modelElement[ret.dataid].node=ret.node;}GraphElementComponent.mapViewStuff(state,ret,ownProps);// GraphElementComponent.mapViewStuff(state, ret, ownProps);\nret.skiparenderforloading=false;//} catch(e) {\n//(ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\n/* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/ // Log.eDev(!ret.data, \"can't find model data:\", {state, ret, ownpropsdata:ownProps.data, ownProps});\n// Log.eDevv(\"cannot map state to props:\", {e, state, ret, ownpropsdata:ownProps.data, ownProps});\n//}\nreturn ret;}constructor(props,context){super(props,context);}shouldComponentUpdate(nextProps,nextState,nextContext){// i want to avoid double check on this and Vertex or graph.\n// actually should not use this and avoid double mapstatetoprops execution too\nreturn true;}render(){var _this$props$node;if(this.props.skiparenderforloading){windoww.bugged=this;console.log(\"realoading render: \",{thiss:this,data:this.props.data});SetRootFieldAction.new(\"rerenderforloading\",new Date().getTime());return/*#__PURE__*/_jsx(\"div\",{children:\"loading...\"});}const view=this.props.view;const modelElement=this.props.data;if(!view){Log.exx(\"cannot find view in DefaultNode\",{props:this.props,thiss:this});}// if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\nlet componentMap=windoww.components;let dmodelMap=RuntimeAccessibleClass.classes;let serializableProps={...this.props,data:this.props.data,view:this.props.view,views:this.props.views};// let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\n// console.log('dnode render', {props: {...this.props}, serializableProps});\nlet componentfunction=null;let forceNodeType=view.forceNodeType;if(forceNodeType&&forceNodeType!==\"Any\"){componentfunction=GraphElements[forceNodeType];Log.exDev(!componentfunction,'unrecognized View.forceNodeType:'+view.forceNodeType,{view,modelElement,nt:forceNodeType,GraphElements});// console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\nreturn componentfunction(serializableProps,this.props.children);}if(modelElement===null||modelElement===void 0?void 0:modelElement.className)switch(modelElement.className){case\"DModel\":componentfunction=Graph;break;case\"DPackage\":componentfunction=GraphVertex;break;case\"DClassifier\":case\"DEnumerator\":case\"DObject\":case\"DClass\":componentfunction=Vertex;break;case\"DAnnotation\":case\"DAttribute\":case\"DOperation\":case\"DParameter\":case\"DReference\":case\"DEnumLiteral\":case\"DValue\":case\"DModelElement\":componentfunction=Field;break;default:Log.exDevv('invalid model class, add a case in the switch',{modelElement,view,dmodelMap,componentMap});// const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\n// Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\n// return dmodel.defaultComponent(serializableProps, this.props.children);\n}else componentfunction=VoidVertex;// model-less, VoidVertex\nif(componentfunction)return componentfunction(serializableProps,this.props.children);// errore: questoon passa gli id correttamente al sottoelemento vertex o field\nreturn DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\",'','DefaultNode',modelElement===null||modelElement===void 0?void 0:modelElement.__raw,(_this$props$node=this.props.node)===null||_this$props$node===void 0?void 0:_this$props$node.__raw,view);}},_class2.defaultProps={},_class2))||_class);// private\nclass DefaultNodeOwnProps extends GraphElementOwnProps{}class DefaultNodeReduxStateProps extends GraphElementReduxStateProps{}class DefaultNodeDispatchProps extends GraphElementDispatchProps{}const DefaultNodeConnected=connect(DefaultNodeComponent.mapStateToProps,DefaultNodeComponent.mapDispatchToProps)(DefaultNodeComponent);// export const Vertex = VertexConnected;\nexport const DefaultNode=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(DefaultNodeConnected,{...props,children});};DefaultNodeComponent.cname=\"DefaultNodeComponent\";DefaultNodeConnected.cname=\"DefaultNodeConnected\";DefaultNode.cname=\"DefaultNode\";","map":{"version":3,"names":["React","connect","DV","GraphElementComponent","GraphElementDispatchProps","GraphElementOwnProps","GraphElementReduxStateProps","GraphElementStatee","Log","RuntimeAccessibleClass","SetRootFieldAction","windoww","Field","Graph","GraphVertex","Vertex","VoidVertex","RuntimeAccessible","LPointerTargetable","transientProperties","GraphElements","jsx","_jsx","superclass","classes","DefaultNodeStatee","DefaultNodeComponent","_dec","_class","_class2","mapStateToProps","state","ownProps","ret","data","wrap","dataid","id","undefined","node","nodeid","modelElement","nodes","mapViewStuff","skiparenderforloading","constructor","props","context","shouldComponentUpdate","nextProps","nextState","nextContext","render","_this$props$node","bugged","console","log","thiss","new","Date","getTime","children","view","exx","componentMap","components","dmodelMap","serializableProps","views","componentfunction","forceNodeType","exDev","nt","className","exDevv","errorView","__raw","defaultProps","DefaultNodeOwnProps","DefaultNodeReduxStateProps","DefaultNodeDispatchProps","DefaultNodeConnected","mapDispatchToProps","DefaultNode","arguments","length","cname"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/graph/defaultNode/DefaultNode.tsx"],"sourcesContent":["import React, {ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DClassifier,\r\n    DEnumerator,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DPackage,\r\n    DV,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    DState,\r\n    LModelElement,\r\n    Log,\r\n    LViewElement,\r\n    RuntimeAccessibleClass,\r\n    SetRootFieldAction,\r\n    windoww,\r\n    Field,\r\n    Graph,\r\n    GraphVertex,\r\n    Vertex,\r\n    VoidVertex,\r\n    RuntimeAccessible,\r\n    Polygon,\r\n    Circle,\r\n    Cross,\r\n    Decagon,\r\n    Asterisk,\r\n    Ellipse,\r\n    Enneagon,\r\n    Hexagon,\r\n    Nonagon,\r\n    Octagon,\r\n    Heptagon,\r\n    Pentagon,\r\n    Rectangle,\r\n    Septagon,\r\n    Square,\r\n    Star,\r\n    SimpleStar,\r\n    DecoratedStar,\r\n    Trapezoid,\r\n    Triangle,\r\n    Selectors,\r\n    LPointerTargetable,\r\n    Pointer,\r\n    DGraphElement,\r\n    DPointerTargetable, LGraphElement, transientProperties\r\n} from \"../../joiner\";\r\nimport { GraphElements } from \"../../joiner/components\";\r\n// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\r\n\r\nconst superclass: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\n\r\n// private\r\nclass DefaultNodeStatee extends GraphElementStatee { }\r\n\r\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\r\n\r\n// Giordano: add ignore for webpack\r\n@RuntimeAccessible('DefaultNodeComponent')\r\n//@ts-ignore\r\nexport class DefaultNodeComponent<AllProps extends AllPropss = AllPropss, NodeState = DefaultNodeStatee> extends superclass<AllProps, NodeState>{\r\n    static defaultProps: Partial<DefaultNodeOwnProps> = {}; // cannot decide anything on this level, delegated to lower levels.\r\n\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps): GraphElementReduxStateProps {\r\n        let ret: GraphElementReduxStateProps = {} as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        // GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\r\n        // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\r\n/*        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.node = undefined as any; // because DefaultNode is all about determining the correct node to create, so there is no node yet.\r\n        ret.nodeid = ownProps.nodeid as Pointer<DGraphElement>; // but nodeid exists, passed from the parent along graphid and parentview\r\n*/\r\n        // try{\r\n        ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        ret.dataid = ownProps.data ? (typeof ownProps.data === \"string\" ? ownProps.data : ownProps.data.id) : undefined;\r\n        // if node does not exist yet it's fine, don't create it. let Vertex or Graph or Edge make it with appropriate constructor according fo first matching view on model.\r\n        // problem: what kind of node to make / initial view assign on shapeless objects? they have both data and node undefined at first render.\r\n        ret.node = LPointerTargetable.wrap(ownProps.nodeid) as LGraphElement;\r\n        if (ret.dataid) {\r\n            // set up transient model-> node map\r\n            if (!transientProperties.modelElement[ret.dataid]) transientProperties.modelElement[ret.dataid] = {nodes: {}} as any;\r\n            transientProperties.modelElement[ret.dataid].nodes[ownProps.nodeid as string] = ret.node;\r\n            transientProperties.modelElement[ret.dataid].node = ret.node;\r\n        }\r\n\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n\r\n            // GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n            (ret as any).skiparenderforloading = false;\r\n        //} catch(e) {\r\n            //(ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\r\n            /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/\r\n            // Log.eDev(!ret.data, \"can't find model data:\", {state, ret, ownpropsdata:ownProps.data, ownProps});\r\n            // Log.eDevv(\"cannot map state to props:\", {e, state, ret, ownpropsdata:ownProps.data, ownProps});\r\n        //}\r\n        return ret; }\r\n\r\n    constructor(props: AllProps, context: any) { super(props, context); }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<NodeState>, nextContext: any): boolean {\r\n        // i want to avoid double check on this and Vertex or graph.\r\n        // actually should not use this and avoid double mapstatetoprops execution too\r\n        return true;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        if ((this.props as any).skiparenderforloading) {\r\n            windoww.bugged = this;\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime()); return <div>loading...</div>;}\r\n        const view: LViewElement = this.props.view;\r\n        const modelElement: LModelElement | undefined = this.props.data;\r\n        if (!view) { Log.exx(\"cannot find view in DefaultNode\", {props: this.props, thiss:this}); }\r\n        // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\r\n\r\n        let componentMap: Dictionary<string, (props: GObject, children?: (string | React.Component)[]) => ReactElement> = windoww.components;\r\n        let dmodelMap: Dictionary<string, typeof DModelElement> = RuntimeAccessibleClass.classes as any;\r\n\r\n        let serializableProps = {...this.props, data: this.props.data, view: this.props.view, views: this.props.views};\r\n        // let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\r\n\r\n        // console.log('dnode render', {props: {...this.props}, serializableProps});\r\n        let componentfunction: typeof Graph = null as any;\r\n        let forceNodeType = view.forceNodeType;\r\n        if (forceNodeType && forceNodeType !== \"Any\") {\r\n            componentfunction = GraphElements[forceNodeType] as any;\r\n            Log.exDev(!componentfunction, 'unrecognized View.forceNodeType:' + view.forceNodeType, {view, modelElement, nt: forceNodeType, GraphElements, });\r\n            // console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\r\n            return componentfunction(serializableProps, this.props.children); }\r\n\r\n        if (modelElement?.className) switch(modelElement.className) {\r\n            case \"DModel\": componentfunction = Graph; break;\r\n            case \"DPackage\": componentfunction = GraphVertex; break;\r\n            case \"DClassifier\":\r\n            case \"DEnumerator\":\r\n            case \"DObject\":\r\n            case \"DClass\": componentfunction = Vertex; break;\r\n            case \"DAnnotation\":\r\n            case \"DAttribute\":\r\n            case \"DOperation\":\r\n            case \"DParameter\":\r\n            case \"DReference\":\r\n            case \"DEnumLiteral\":\r\n            case \"DValue\":\r\n            case \"DModelElement\": componentfunction = Field; break;\r\n            default:\r\n                Log.exDevv('invalid model class, add a case in the switch', {modelElement, view, dmodelMap, componentMap});\r\n                // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\r\n                // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\r\n                // return dmodel.defaultComponent(serializableProps, this.props.children);\r\n        } else componentfunction = VoidVertex; // model-less, VoidVertex\r\n\r\n        if (componentfunction) return componentfunction(serializableProps, this.props.children);\r\n        // errore: questoon passa gli id correttamente al sottoelemento vertex o field\r\n        return DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\",\r\n            '', 'DefaultNode', modelElement?.__raw, this.props.node?.__raw, view);\r\n    }\r\n\r\n}\r\n\r\n// private\r\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\r\nclass DefaultNodeReduxStateProps  extends GraphElementReduxStateProps {}\r\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\r\ntype AllPropss = DefaultNodeOwnProps & DefaultNodeReduxStateProps & DefaultNodeDispatchProps;\r\n\r\n\r\nconst DefaultNodeConnected = connect<DefaultNodeReduxStateProps, DefaultNodeDispatchProps, DefaultNodeOwnProps, DState>(\r\n    DefaultNodeComponent.mapStateToProps,\r\n    DefaultNodeComponent.mapDispatchToProps\r\n)(DefaultNodeComponent as any);\r\n// export const Vertex = VertexConnected;\r\n\r\n\r\nexport const DefaultNode = (props: DefaultNodeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <DefaultNodeConnected {...{...props, children}} />; }\r\n\r\n\r\nDefaultNodeComponent.cname = \"DefaultNodeComponent\";\r\nDefaultNodeConnected.cname = \"DefaultNodeConnected\";\r\nDefaultNode.cname = \"DefaultNode\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}