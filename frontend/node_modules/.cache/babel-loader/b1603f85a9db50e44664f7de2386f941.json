{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\rightbar\\\\structureEditor\\\\editors\\\\Value.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { DAttribute, DClass, DEnumerator, DReference, LPointerTargetable, LStructuralFeature, LValue, Select, Selectors, SetFieldAction, U } from \"../../../../joiner\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ValueComponent(props) {\n  var _lValue$instanceof, _lValue$instanceof2;\n  const lValue = props.value;\n  const dValue = lValue.__raw;\n  const feature = LStructuralFeature.fromPointer((_lValue$instanceof = lValue.instanceof) === null || _lValue$instanceof === void 0 ? void 0 : _lValue$instanceof.id);\n  let field = 'text';\n  let stepSize = 1;\n  let maxLength = 524288;\n  let min = -9223372036854775808;\n  let max = 9223372036854775807; // for long, todo: aggiusta per tutti gli altri. in switch\n  switch (feature === null || feature === void 0 ? void 0 : feature.type.name) {\n    default:\n      field = \"text\";\n      break;\n    case 'EChar':\n      maxLength = 1;\n      break;\n    case 'EInt':\n    case 'ELong':\n    case 'EShort':\n    case 'Byte':\n      field = 'number';\n      break;\n    case 'EFloat':\n      field = 'number';\n      stepSize = 0.1;\n      break;\n    case 'EDouble':\n      field = 'number';\n      stepSize = 0.01;\n      break;\n    case 'EBoolean':\n      field = 'checkbox';\n      break;\n    case 'EDate':\n      field = 'date';\n      break;\n  }\n  let upperBound = feature ? feature.__raw.upperBound : -1;\n  if (upperBound < 0) upperBound = 999;\n  let filteredvalues = lValue.getValues(true, false, false, false, true, true);\n  const add = event => {\n    // SetFieldAction.new(dValue, 'value', U.initializeValue(feature?.type), '+=', false);\n    SetFieldAction.new(dValue, 'values', U.initializeValue(feature === null || feature === void 0 ? void 0 : feature.type), '+=', false);\n  };\n  const remove = (index, isPointer) => {\n    var _filteredvalues$index;\n    if (isPointer === undefined) isPointer = !!((_filteredvalues$index = filteredvalues[index].value) === null || _filteredvalues$index === void 0 ? void 0 : _filteredvalues$index.__isProxy); // Pointers.isPointer\n    SetFieldAction.new(dValue, 'values', index, '-=', isPointer);\n    /*\r\n    let oldValues = filteredvalues.map( v => v.rawValue);\r\n    let newValues = [...oldValues];\r\n    newValues.splice(index, 1); // removes in place\r\n    console.log(\"removing:\", {oldValues, newValues, index});\r\n    SetFieldAction.new(dValue, 'value', newValues, '=', false);*/\n  };\n  function changeDValue(event, index, isPointer) {\n    let inputvalue = field === 'checkbox' ? event.target.checked : event.target.value;\n    if (inputvalue === \"undefined\") inputvalue = undefined;\n    let result = lValue.setValueAtPosition(index, inputvalue, {\n      isPtr: isPointer\n    });\n    console.log(\"setting DValue\", {\n      inputvalue,\n      result,\n      lValue\n    });\n  }\n  let featureType = feature === null || feature === void 0 ? void 0 : feature.type;\n  let isattr = false,\n    isenum = false,\n    isref = false,\n    isshapeless = false;\n  switch (feature === null || feature === void 0 ? void 0 : feature.className) {\n    default:\n      isshapeless = true;\n      break;\n    case DAttribute.cname:\n      if (featureType.className === DClass.cname) isattr = true;else if (featureType.className === DEnumerator.cname) isenum = true;\n      break;\n    case DReference.cname:\n      isref = true;\n      break;\n  }\n\n  // let pointables: {objects:LObject[], literals: LEnumLiteral[]};\n  let select_options;\n  if (isref) {\n    let isContainment = lValue.containment;\n    // todo: move this utility in LClass.instances\n    let containerObjectsID = lValue.fatherList.map(lm => lm.id);\n    let validObjects = Selectors.getObjects().filter(obj => featureType.isSuperClassOf(obj.instanceof, true));\n    validObjects = validObjects.filter(obj => !containerObjectsID.includes(obj.id)); // avoiding containment loops damiano todo: put this filter in set_value too\n    let freeObjects = [];\n    let boundObjects = [];\n    for (let o of validObjects) {\n      // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\n      if (isContainment && o.id === lValue.father.id) continue; // no self contain\n      if (o.isRoot) freeObjects.push(o);else boundObjects.push(o);\n    }\n    let map = object => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: object.id,\n      children: object.name /*.feature('name')*/\n    }, object.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 40\n    }, this);\n    select_options = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Free     Objects\",\n        children: freeObjects.map(map)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Bound Objects\",\n        children: boundObjects.map(map)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 98\n      }, this)]\n    }, void 0, true);\n  } else if (isenum) {\n    select_options = /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: \"Literals of \" + featureType.name,\n      children: featureType.literals.map((literal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: literal.id,\n        children: literal.name\n      }, literal.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 137\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }, this);\n  } else if (isshapeless) {\n    // damiano todo: rewrite entirely this section to separate bound and free objects, copying from if(isref)\n    // pointables = {objects: Selectors.getObjects(), literals: LPointerTargetable.fromArr(Selectors.getAllEnumLiterals())};\n    let isContainment = lValue.containment;\n    let enums = LPointerTargetable.fromArr(Selectors.getAllEnumerators());\n    let classes = LPointerTargetable.fromArr(Selectors.getAllClasses());\n    let shapelessObjects = Selectors.getObjects().filter(o => !o.instanceof);\n    // console.log(\"select_options\", {enums, classes, shapelessObjects});\n    let classmap = {};\n    let shapeless = {\n      free: [],\n      bound: [],\n      all: shapelessObjects\n    };\n    for (let c of classes) {\n      let row = {\n        free: [],\n        bound: [],\n        all: c.instances\n      };\n      classmap[c.name] = row;\n      for (let o of row.all) {\n        // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\n        if (isContainment && o.id === lValue.father.id) continue; // no self contain\n        if (o.isRoot) row.free.push(o);else row.bound.push(o);\n      }\n    }\n    for (let o of shapelessObjects) {\n      if (o.isRoot) shapeless.free.push(o);else shapeless.bound.push(o);\n    }\n    select_options = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '',\n        children: \"--- Not a Reference ---\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), Object.keys(classmap).map(cname => !classmap[cname].all.length ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!classmap[cname].free.length ? null : /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"Free    instances of \" + cname,\n          children: classmap[cname].free.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: o.id,\n            children: o.name\n          }, o.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 62\n          }, this))\n        }, \"f-\" + cname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), !classmap[cname].bound.length ? null : /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: \"Bound instances of \" + cname,\n          children: classmap[cname].bound.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: o.id,\n            children: o.name\n          }, o.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 63\n          }, this))\n        }, \"b-\" + cname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)), !shapeless.free.length ? null : /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Free    shapeless objects\",\n        children: shapeless.free.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.id,\n          children: o.name\n        }, o.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 121\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 47\n      }, this), !shapeless.bound.length ? null : /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Bound shapeless objects\",\n        children: shapeless.bound.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.id,\n          children: o.name\n        }, o.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 121\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 48\n      }, this), enums.map(c => !c.literals.length ? null : /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Literals of \" + c.name,\n        children: c.literals.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.id,\n          children: o.name\n        }, o.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 125\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 60\n      }, this))]\n    }, void 0, true);\n    // console.log(\"select_options post\", {select_options, enums, classes, shapelessObjects});\n  } else select_options = null;\n\n  // let rawvalues: any[] = lValue.__raw.value || [];\n  // console.log(\"filtered values\", {filteredvalues});\n  let isPtr = isattr ? false : isenum || isref ? true : undefined /*for shapeless*/;\n  const valueslist = filteredvalues.map((val, index) => val.hidden ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'mt-1 d-flex ms-4',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'border border-dark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this), isattr && /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: evt => {\n        changeDValue(evt, index, false);\n      },\n      className: 'input m-auto ms-1',\n      value: val.value + '',\n      checked: !!val.value,\n      min: min,\n      max: max,\n      type: field,\n      step: stepSize,\n      maxLength: maxLength,\n      placeholder: \"empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }, this), isenum && /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: evt => {\n        changeDValue(evt, index, true);\n      },\n      className: 'm-auto ms-1 select',\n      value: val.rawValue + '',\n      \"data-valuedebug\": val.rawValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'undefined',\n        children: \"-----\"\n      }, \"undefined\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 22\n      }, this), select_options]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }, this), isref && /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: evt => {\n        changeDValue(evt, index, true);\n      },\n      className: 'm-auto ms-1 select',\n      value: val.rawValue + '',\n      \"data-valuedebug\": val.rawValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 'undefined',\n        children: \"-----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), select_options]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 27\n    }, this), isshapeless && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: evt => {\n          changeDValue(evt, index, false);\n        },\n        className: 'input m-auto ms-1',\n        value: val.rawValue + '',\n        list: \"objectdatalist\",\n        type: \"text\",\n        placeholder: \"empty\"\n      }, \"raw\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ms-1 my-auto\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: evt => {\n          changeDValue(evt, index, undefined);\n        },\n        className: 'select m-auto ms-1',\n        value: val.rawValue + '',\n        children: select_options\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-danger m-auto ms-2',\n      onClick: evt => {\n        remove(index, isPtr);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: 'p-1 bi bi-trash3-fill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex',\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'ms-1 my-auto',\n        children: \"Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn btn-primary ms-auto me-1',\n        disabled: filteredvalues.length >= upperBound,\n        onClick: add,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: 'p-1 bi bi-plus'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), valueslist, ((_lValue$instanceof2 = lValue.instanceof) === null || _lValue$instanceof2 === void 0 ? void 0 : _lValue$instanceof2.className) === 'DAttribute' && lValue.instanceof.isIoT && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"my-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        data: dValue,\n        field: 'topic',\n        label: 'Topic',\n        options: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: 'Topics',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: '',\n            children: \"------\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), U.extractKeys(props.topics).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t,\n            children: t\n          }, t, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 55\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), JSON.stringify(U.extractByKey(props.topics, lValue.topic))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 12\n  }, this);\n}\n_c = ValueComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.value = LValue.fromPointer(ownProps.valueID);\n  ret.topics = state.topics;\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ValueConnected = connect(mapStateToProps, mapDispatchToProps)(ValueComponent);\nexport const Value = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ValueConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = Value;\nexport default Value;\nvar _c, _c2;\n$RefreshReg$(_c, \"ValueComponent\");\n$RefreshReg$(_c2, \"Value\");","map":{"version":3,"names":["React","DAttribute","DClass","DEnumerator","DReference","LPointerTargetable","LStructuralFeature","LValue","Select","Selectors","SetFieldAction","U","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","ValueComponent","props","_lValue$instanceof","_lValue$instanceof2","lValue","value","dValue","__raw","feature","fromPointer","instanceof","id","field","stepSize","maxLength","min","max","type","name","upperBound","filteredvalues","getValues","add","event","new","initializeValue","remove","index","isPointer","_filteredvalues$index","undefined","__isProxy","changeDValue","inputvalue","target","checked","result","setValueAtPosition","isPtr","console","log","featureType","isattr","isenum","isref","isshapeless","className","cname","select_options","isContainment","containment","containerObjectsID","fatherList","map","lm","validObjects","getObjects","filter","obj","isSuperClassOf","includes","freeObjects","boundObjects","o","father","isRoot","push","object","children","fileName","_jsxFileName","lineNumber","columnNumber","label","literals","literal","i","enums","fromArr","getAllEnumerators","classes","getAllClasses","shapelessObjects","classmap","shapeless","free","bound","all","c","row","instances","Object","keys","length","valueslist","val","hidden","onChange","evt","step","placeholder","rawValue","list","onClick","disabled","isIoT","data","options","extractKeys","topics","t","JSON","stringify","extractByKey","topic","_c","mapStateToProps","state","ownProps","ret","valueID","mapDispatchToProps","dispatch","ValueConnected","Value","arguments","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/rightbar/structureEditor/editors/Value.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement} from \"react\";\r\nimport type {Dictionary, DocString, LClassifier, LReference, Pointer, ValueDetail} from \"../../../../joiner\";\r\nimport {\r\n    DAttribute,\r\n    DClass,\r\n    DEnumerator,\r\n    DReference,\r\n    DState, DValue,\r\n    LAttribute,\r\n    LClass,\r\n    LEnumerator,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LObject,\r\n    LPointerTargetable,\r\n    LStructuralFeature, LValue,\r\n    LViewElement,\r\n    Select,\r\n    Selectors,\r\n    SetFieldAction,\r\n    U\r\n} from \"../../../../joiner\";\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction ValueComponent(props: AllProps) {\r\n    const lValue = props.value;\r\n    const dValue = lValue.__raw;\r\n    const feature: LStructuralFeature = LStructuralFeature.fromPointer(lValue.instanceof?.id);\r\n    let field = 'text'; let stepSize = 1; let maxLength = 524288;\r\n    let min = -9223372036854775808;\r\n    let max = 9223372036854775807; // for long, todo: aggiusta per tutti gli altri. in switch\r\n    switch (feature?.type.name) {\r\n        default: field=\"text\"; break;\r\n        case 'EChar': maxLength = 1; break;\r\n        case 'EInt':\r\n        case 'ELong':\r\n        case 'EShort':\r\n        case 'Byte': field = 'number'; break;\r\n        case 'EFloat': field = 'number'; stepSize = 0.1; break;\r\n        case 'EDouble': field = 'number'; stepSize = 0.01; break;\r\n        case 'EBoolean': field = 'checkbox'; break;\r\n        case 'EDate': field = 'date'; break;\r\n    }\r\n    let upperBound = feature ? (feature as LReference | LAttribute).__raw.upperBound : -1;\r\n    if (upperBound < 0) upperBound = 999;\r\n    let filteredvalues: ValueDetail[] = lValue.getValues(true, false, false, false, true, true) as any;\r\n\r\n    const add = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        // SetFieldAction.new(dValue, 'value', U.initializeValue(feature?.type), '+=', false);\r\n        SetFieldAction.new(dValue, 'values', U.initializeValue(feature?.type), '+=', false);\r\n    }\r\n    const remove = (index: number, isPointer: boolean | undefined) => {\r\n        if (isPointer === undefined) isPointer = !!(filteredvalues[index].value as any)?.__isProxy; // Pointers.isPointer\r\n        SetFieldAction.new(dValue, 'values', index, '-=', isPointer);\r\n        /*\r\n        let oldValues = filteredvalues.map( v => v.rawValue);\r\n        let newValues = [...oldValues];\r\n        newValues.splice(index, 1); // removes in place\r\n        console.log(\"removing:\", {oldValues, newValues, index});\r\n        SetFieldAction.new(dValue, 'value', newValues, '=', false);*/\r\n    }\r\n    function changeDValue(event: React.ChangeEvent<HTMLInputElement|HTMLSelectElement>, index: number, isPointer: boolean | undefined) {\r\n        let inputvalue: string | boolean = field === 'checkbox' ? (event.target as HTMLInputElement).checked : event.target.value;\r\n        if (inputvalue === \"undefined\") inputvalue = undefined as any;\r\n        let result = lValue.setValueAtPosition(index, inputvalue, {isPtr: isPointer});\r\n        console.log(\"setting DValue\", {inputvalue, result, lValue});\r\n    }\r\n\r\n\r\n    let featureType: LClassifier = feature?.type;\r\n    let isattr = false, isenum = false, isref = false, isshapeless = false;\r\n    switch(feature?.className){\r\n        default: isshapeless = true; break;\r\n        case DAttribute.cname:\r\n            if (featureType.className === DClass.cname) isattr = true; else\r\n            if (featureType.className === DEnumerator.cname) isenum = true;\r\n            break;\r\n        case DReference.cname: isref = true; break;\r\n    }\r\n\r\n    // let pointables: {objects:LObject[], literals: LEnumLiteral[]};\r\n    let select_options: JSX.Element | JSX.Element[] | null;\r\n\r\n\r\n    if (isref) {\r\n        let isContainment: boolean = lValue.containment;\r\n        // todo: move this utility in LClass.instances\r\n        let containerObjectsID: Pointer[] = lValue.fatherList.map( lm => lm.id);\r\n        let validObjects = Selectors.getObjects().filter((obj) => (featureType as LClass).isSuperClassOf(obj.instanceof, true));\r\n        validObjects =  validObjects.filter( obj => !containerObjectsID.includes(obj.id)); // avoiding containment loops damiano todo: put this filter in set_value too\r\n        let freeObjects = [];\r\n        let boundObjects = [];\r\n        for (let o of validObjects) {\r\n            // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\r\n            if (isContainment && o.id === lValue.father.id) continue; // no self contain\r\n            if (o.isRoot) freeObjects.push(o); else boundObjects.push(o);\r\n        }\r\n        let map = (object: LObject) => <option key={object.id} value={object.id}>{object.name/*.feature('name')*/}</option>;\r\n        select_options = <><optgroup label={\"Free     Objects\"}>{freeObjects.map(map)}</optgroup><optgroup label={\"Bound Objects\"}>{boundObjects.map(map)}</optgroup></>; }\r\n    else if (isenum) {\r\n        select_options = <optgroup label={\"Literals of \" + featureType.name}>{(featureType as LEnumerator).literals.map((literal, i) => <option key={literal.id} value={literal.id}>{literal.name}</option>)}</optgroup>;\r\n    }\r\n    else if (isshapeless) {\r\n        // damiano todo: rewrite entirely this section to separate bound and free objects, copying from if(isref)\r\n        // pointables = {objects: Selectors.getObjects(), literals: LPointerTargetable.fromArr(Selectors.getAllEnumLiterals())};\r\n        let isContainment: boolean = lValue.containment;\r\n        let enums: LEnumerator[] = LPointerTargetable.fromArr(Selectors.getAllEnumerators())\r\n        let classes: LClass[] = LPointerTargetable.fromArr(Selectors.getAllClasses())\r\n        let shapelessObjects: LObject[] = Selectors.getObjects().filter((o) => !o.instanceof);\r\n        // console.log(\"select_options\", {enums, classes, shapelessObjects});\r\n        let classmap: Dictionary<DocString<\"classname\">, {free:LObject[], bound:LObject[], all: LObject[]}> = {};\r\n        let shapeless: {free:LObject[], bound:LObject[], all: LObject[]} = {free:[], bound:[], all: shapelessObjects};\r\n        for (let c of classes) {\r\n            let row: {free:LObject[], bound:LObject[], all: LObject[]} = {free: [], bound:[], all: c.instances};\r\n            classmap[c.name] = row;\r\n            for (let o of row.all) {\r\n                // todo: this check of self contain is too simple does not detect loops, would need to use fatherChain\r\n                if (isContainment && o.id === lValue.father.id) continue; // no self contain\r\n                if (o.isRoot) row.free.push(o); else row.bound.push(o);\r\n            }\r\n        }\r\n        for (let o of shapelessObjects) { if (o.isRoot) shapeless.free.push(o); else shapeless.bound.push(o); }\r\n\r\n        select_options = <>\r\n            <option value={''} key={0}>--- Not a Reference ---</option>\r\n            { Object.keys(classmap).map((cname) => !classmap[cname].all.length ? null :\r\n                <>\r\n                    {!classmap[cname].free.length ? null :\r\n                        <optgroup label={\"Free    instances of \" + cname} key={\"f-\" + cname}>\r\n                            {classmap[cname].free.map((o) => <option value={o.id} key={o.id}>{o.name}</option>)}\r\n                        </optgroup>\r\n                    }\r\n                    {!classmap[cname].bound.length ? null :\r\n                        <optgroup label={\"Bound instances of \" + cname} key={\"b-\" + cname}>\r\n                            {classmap[cname].bound.map((o) => <option value={o.id} key={o.id}>{o.name}</option>)}\r\n                        </optgroup>\r\n                    }\r\n                </>) }\r\n            { !shapeless.free.length ? null : <optgroup label={\"Free    shapeless objects\"}>{shapeless.free.map( (o) => <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup> }\r\n            { !shapeless.bound.length ? null : <optgroup label={\"Bound shapeless objects\"}>{shapeless.bound.map( (o) => <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup> }\r\n            { enums.map((c) => !c.literals.length ? null : <optgroup label={\"Literals of \" + c.name}>{ c.literals.map((o)=> <option value={o.id} key={o.id}>{o.name}</option>)}</optgroup>) }\r\n        </>\r\n        // console.log(\"select_options post\", {select_options, enums, classes, shapelessObjects});\r\n    }\r\n    else select_options = null;\r\n\r\n    // let rawvalues: any[] = lValue.__raw.value || [];\r\n    // console.log(\"filtered values\", {filteredvalues});\r\n    let isPtr = isattr ? false : (isenum || isref ? true : undefined/*for shapeless*/);\r\n    const valueslist = (filteredvalues).map( (val, index) =>\r\n            val.hidden ? null :\r\n            <div className={'mt-1 d-flex ms-4'} key={index}>\r\n                <div className={'border border-dark'}></div>\r\n                { isattr && <input onChange={(evt) => { changeDValue(evt, index, false) }} className={'input m-auto ms-1'} value={val.value + ''}\r\n                                   checked={!!val.value} min={min} max={max} type={field} step={stepSize} maxLength={maxLength} placeholder={\"empty\"}/> }\r\n                { isenum && <select onChange={(evt) => {changeDValue(evt, index, true)}} className={'m-auto ms-1 select'} value={val.rawValue+''} data-valuedebug={val.rawValue}>\r\n                    {<option key=\"undefined\" value={'undefined'}>-----</option>}\r\n                    { select_options }\r\n                </select>}\r\n                {isref && <select onChange={(evt) => {changeDValue(evt, index, true)}} className={'m-auto ms-1 select'} value={val.rawValue+''} data-valuedebug={val.rawValue}>\r\n                    <option value={'undefined'}>-----</option>\r\n                    {select_options}\r\n                </select>}\r\n                { isshapeless && <>\r\n                    { <input key={\"raw\"+index} onChange={(evt) => {changeDValue(evt, index, false)}} className={'input m-auto ms-1'} value={val.rawValue+''} list={\"objectdatalist\"} type={\"text\"} placeholder={\"empty\"}/> }\r\n                    <span className={\"ms-1 my-auto\"}>→</span>\r\n                    { <select key={index} onChange={(evt) => {changeDValue(evt, index, undefined)}} className={'select m-auto ms-1'} value={val.rawValue+''}>{select_options}</select> }\r\n                    { /*(val as LObject)?.id && <span>points to {val}</span> */}\r\n                </>\r\n                }\r\n                <button className={'btn btn-danger m-auto ms-2'} onClick={(evt) => {remove(index, isPtr)}}>\r\n                    <i className={'p-1 bi bi-trash3-fill'}></i>\r\n                </button>\r\n        </div>);\r\n\r\n    return(<div>\r\n        <div className={'d-flex'}>\r\n            <label className={'ms-1 my-auto'}>Values</label>\r\n            <button className={'btn btn-primary ms-auto me-1'} disabled={filteredvalues.length >= upperBound} onClick={add}>\r\n                <i className={'p-1 bi bi-plus'}></i>\r\n            </button>\r\n        </div>\r\n        {valueslist}\r\n        {lValue.instanceof?.className === 'DAttribute' && (lValue.instanceof as LAttribute).isIoT && <>\r\n            <hr className={\"my-3\"} />\r\n            <Select data={dValue} field={'topic'} label={'Topic'} options={<optgroup label={'Topics'}>\r\n                <option value={''}>------</option>\r\n                {U.extractKeys(props.topics).map(t => <option key={t} value={t}>{t}</option>)}\r\n            </optgroup>} />\r\n            {JSON.stringify(U.extractByKey(props.topics, lValue.topic))}\r\n        </>}\r\n    </div>)\r\n}\r\n\r\ninterface OwnProps {valueID: Pointer<DValue>}\r\ninterface StateProps {value: LValue, topics: DState['topics']}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.value = LValue.fromPointer(ownProps.valueID);\r\n    ret.topics = state.topics;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ValueConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ValueComponent);\r\n\r\nexport const Value = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ValueConnected {...{...props, children}} />;\r\n}\r\nexport default Value;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}