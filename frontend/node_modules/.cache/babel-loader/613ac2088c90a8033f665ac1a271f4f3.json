{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\viewsEditor\\\\data\\\\FieldData.tsx\";\nimport React from 'react';\nimport { LPointerTargetable, Select } from '../../../../joiner';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FieldDataComponent(props) {\n  const view = props.view;\n  const readOnly = props.readonly;\n  let dview = view.__raw;\n  const changeFN = evt => {\n    const value = evt.target.value;\n    view.forceNodeType = value;\n    // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\n  };\n\n  const appliableTo = dview.appliableTo;\n  let preferredDisplay = dview.forceNodeType;\n  switch (appliableTo) {\n    case undefined:\n    case 'Any':\n      break;\n    case 'GraphVertex':\n      if (preferredDisplay !== 'Graph' || preferredDisplay !== 'Vertex') preferredDisplay = appliableTo;\n      break;\n    default:\n      preferredDisplay = appliableTo;\n      break;\n  }\n  let graphElementOptions = /*#__PURE__*/_jsxDEV(\"optgroup\", {\n    label: \"Type of GraphElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Any\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"GraphVertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Vertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Edge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"EdgePoint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'p-3',\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      data: view,\n      field: 'appliableTo',\n      label: \"Appliable to\",\n      options: graphElementOptions,\n      getter: () => dview.appliableTo || 'Any',\n      setter: (data, field, v) => view.appliableTo = v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), false && ( /* already in overview but done better. */!dview.appliableTo || dview.appliableTo === 'Any') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'd-flex p-1',\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'my-auto',\n        children: \"Preferred display (in <DefaultNode />)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: 'my-auto ms-auto select',\n        disabled: readOnly,\n        value: dview.forceNodeType,\n        onChange: changeFN,\n        children: graphElementOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 116\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n_c = FieldDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const FieldData = connect(mapStateToProps, mapDispatchToProps)(FieldDataComponent);\nexport default FieldData;\nvar _c;\n$RefreshReg$(_c, \"FieldDataComponent\");","map":{"version":3,"names":["React","LPointerTargetable","Select","connect","jsxDEV","_jsxDEV","FieldDataComponent","props","view","readOnly","readonly","dview","__raw","changeFN","evt","value","target","forceNodeType","appliableTo","preferredDisplay","undefined","graphElementOptions","label","children","fileName","_jsxFileName","lineNumber","columnNumber","className","data","field","options","getter","setter","v","disabled","onChange","_c","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","FieldData","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/viewsEditor/data/FieldData.tsx"],"sourcesContent":["import React, {Dispatch} from 'react';\r\nimport {\r\n    DState, DV,\r\n    DViewElement,\r\n    GenericInput,\r\n    GObject,\r\n    Info,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    Pointer,\r\n    Select, SetFieldAction\r\n} from '../../../../joiner';\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction FieldDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    const readOnly = props.readonly;\r\n    let dview = view.__raw;\r\n    const changeFN = (evt: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const value = evt.target.value;\r\n        view.forceNodeType = value;\r\n        // SetFieldAction.new(dview.id, 'forceNodeType', value, '', false);\r\n    }\r\n\r\n    const appliableTo = dview.appliableTo;\r\n    let preferredDisplay: string = dview.forceNodeType as string;\r\n    switch (appliableTo){\r\n        case undefined: case 'Any': break;\r\n        case 'GraphVertex': if (preferredDisplay !== 'Graph' || (preferredDisplay as any) !== 'Vertex') preferredDisplay = appliableTo; break;\r\n        default: preferredDisplay = appliableTo; break;\r\n    }\r\n    let graphElementOptions = <optgroup label={\"Type of GraphElement\"}>\r\n        <option>Any</option>\r\n        <option>Graph</option>\r\n        <option>GraphVertex</option>\r\n        <option>Vertex</option>\r\n        <option>Edge</option>\r\n        <option>EdgePoint</option>\r\n        <option>Field</option>\r\n    </optgroup>\r\n    return(<section className={'p-3'}>\r\n        {/*<h5>Common Options</h5>*/}\r\n        <Select data={view} field={'appliableTo'} label={\"Appliable to\"}\r\n                options={graphElementOptions}\r\n                getter={() => dview.appliableTo || 'Any'}\r\n                setter={(data: DViewElement, field: string, v: string)=>view.appliableTo = v as any} />\r\n\r\n        {false && /* already in overview but done better. */(!dview.appliableTo || dview.appliableTo === 'Any') && <div className={'d-flex p-1'}>\r\n            <label className={'my-auto'}>Preferred display (in &lt;DefaultNode /&gt;)</label>\r\n            <select className={'my-auto ms-auto select'} disabled={readOnly}\r\n                    value={dview.forceNodeType} onChange={changeFN}>{graphElementOptions}\r\n            </select>\r\n        </div>}\r\n\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly : boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const FieldData = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FieldDataComponent);\r\n\r\nexport default FieldData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}