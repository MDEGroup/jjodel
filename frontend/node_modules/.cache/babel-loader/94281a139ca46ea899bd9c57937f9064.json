{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\widgets\\\\Widgets.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './widgets.scss';\nimport { SetRootFieldAction } from '../../joiner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InternalToggle = props => {\n  _s();\n  const [value, setValue] = useState(false);\n  const labels = props.labels ? props.labels : {\n    true: props.name + ' on',\n    false: props.name + ' off'\n  };\n  const toggleValue = () => {\n    const newValue = !value;\n    setValue(newValue);\n    SetRootFieldAction.new(props.name, newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'toggle',\n    onClick: () => {\n      toggleValue();\n    },\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: 'toggle-input',\n      id: props.name,\n      type: 'checkbox',\n      checked: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: 'toggle-label'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-labels\",\n      children: value ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-on\",\n        children: labels['true']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-off\",\n        children: labels['false']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(InternalToggle, \"HfkdrTZbv6ig6ZNY/1nxKCooDOU=\");\n_c = InternalToggle;\nexport const HRule = props => {\n  const theme = !props.theme ? 'normal' : props.theme;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.style ? /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: `hrule ${theme}`,\n      style: props.style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: `hrule ${theme}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c2 = HRule;\nvar _c, _c2;\n$RefreshReg$(_c, \"InternalToggle\");\n$RefreshReg$(_c2, \"HRule\");","map":{"version":3,"names":["React","useState","SetRootFieldAction","jsxDEV","_jsxDEV","Fragment","_Fragment","InternalToggle","props","_s","value","setValue","labels","true","name","false","toggleValue","newValue","new","className","onClick","style","children","id","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","HRule","theme","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/widgets/Widgets.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './widgets.scss';\r\nimport { event } from 'jquery';\r\nimport { int } from '../../joiner/types';\r\nimport { windoww } from '../../joiner/types';\r\nimport { SetRootFieldAction } from '../../joiner';\r\nimport { MapStateToProps } from 'react-redux';\r\nimport { InputMapStateToProps } from '../forEndUser/Input';\r\nimport { DState } from '../../joiner';\r\nimport { VertexOwnProps, VertexStateProps } from '../../graph/graphElement/sharedTypes/sharedTypes';\r\n\r\n\r\n\r\ntype InToggleValues = {\r\n    true: string | boolean;\r\n    false: string | boolean;\r\n}\r\n\r\ntype InToggleProps = {\r\n    name: string;\r\n    values?: InToggleValues;\r\n    labels?: InToggleValues;\r\n    size?: string;\r\n    style?: React.CSSProperties;\r\n};\r\n\r\nexport const InternalToggle = (props: InToggleProps) => {\r\n    const [value, setValue] = useState<boolean>(false);\r\n\r\n    const labels = props.labels ? props.labels : {true: props.name+' on', false: props.name+' off'};\r\n\r\n    const toggleValue = () => {\r\n        const newValue = !value;\r\n        setValue(newValue);\r\n        SetRootFieldAction.new(props.name, newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={'toggle'} onClick={() => {toggleValue()}} style={props.style}>\r\n\r\n            <input className={'toggle-input'} id={props.name} type={'checkbox'} checked={value}  />\r\n            <label className={'toggle-label'}></label>\r\n            <div className={\"toggle-labels\"}>\r\n                {value ?\r\n                    <span className={\"toggle-on\"}>{labels['true']}</span>\r\n                    :\r\n                    <span className={\"toggle-off\"}>{labels['false']}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype HRuleProps = {\r\n    theme?:  'normal' | 'light' | 'dark';\r\n    style?: React.CSSProperties;\r\n}\r\nexport const HRule = (props: HRuleProps) => {\r\n\r\n    const theme = (!props.theme ? 'normal' : props.theme);\r\n    return (<>\r\n        {props.style ?\r\n            <hr className={`hrule ${theme}`} style={props.style}></hr>\r\n        :\r\n            <hr className={`hrule ${theme}`} ></hr>\r\n        }\r\n    </>);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}