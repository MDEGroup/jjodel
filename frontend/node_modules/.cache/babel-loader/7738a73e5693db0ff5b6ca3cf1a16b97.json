{"ast":null,"code":"import { maximePlaceHolderId } from \"./DockData\";\nfunction addPanelToCache(panelData, cache) {\n  cache.panels.set(panelData.id, panelData);\n  for (let tab of panelData.tabs) {\n    cache.tabs.set(tab.id, tab);\n  }\n}\nfunction addBoxToCache(boxData, cache) {\n  for (let child of boxData.children) {\n    if ('tabs' in child) {\n      addPanelToCache(child, cache);\n    } else if ('children' in child) {\n      addBoxToCache(child, cache);\n    }\n  }\n}\nexport function createLayoutCache(defaultLayout) {\n  let cache = {\n    panels: new Map(),\n    tabs: new Map()\n  };\n  if (defaultLayout) {\n    if ('children' in defaultLayout) {\n      // BoxData\n      addBoxToCache(defaultLayout, cache);\n    } else {\n      // LayoutData\n      if ('dockbox' in defaultLayout) {\n        addBoxToCache(defaultLayout.dockbox, cache);\n      }\n      if ('floatbox' in defaultLayout) {\n        addBoxToCache(defaultLayout.floatbox, cache);\n      }\n    }\n  }\n  return cache;\n}\nexport function saveLayoutData(layout, saveTab, afterPanelSaved) {\n  function saveTabData(tabData) {\n    if (saveTab) {\n      return saveTab(tabData);\n    }\n    return {\n      id: tabData.id\n    };\n  }\n  function savePanelData(panelData) {\n    let tabs = [];\n    for (let tab of panelData.tabs) {\n      let savedTab = saveTabData(tab);\n      if (savedTab) {\n        tabs.push(savedTab);\n      }\n    }\n    let {\n      id,\n      size,\n      activeId\n    } = panelData;\n    let savedPanel;\n    if (panelData.parent.mode === 'float' || panelData.parent.mode === 'window') {\n      let {\n        x,\n        y,\n        z,\n        w,\n        h\n      } = panelData;\n      savedPanel = {\n        id,\n        size,\n        tabs,\n        activeId,\n        x,\n        y,\n        z,\n        w,\n        h\n      };\n    } else {\n      savedPanel = {\n        id,\n        size,\n        tabs,\n        activeId\n      };\n    }\n    if (afterPanelSaved) {\n      afterPanelSaved(savedPanel, panelData);\n    }\n    return savedPanel;\n  }\n  function saveBoxData(boxData) {\n    let children = [];\n    for (let child of boxData.children) {\n      if ('tabs' in child) {\n        children.push(savePanelData(child));\n      } else if ('children' in child) {\n        children.push(saveBoxData(child));\n      }\n    }\n    let {\n      id,\n      size,\n      mode\n    } = boxData;\n    return {\n      id,\n      size,\n      mode,\n      children\n    };\n  }\n  return {\n    dockbox: saveBoxData(layout.dockbox),\n    floatbox: saveBoxData(layout.floatbox),\n    windowbox: saveBoxData(layout.windowbox),\n    maxbox: saveBoxData(layout.maxbox)\n  };\n}\nexport function loadLayoutData(savedLayout, defaultLayout, loadTab, afterPanelLoaded) {\n  var _a, _b, _c;\n  let cache = createLayoutCache(defaultLayout);\n  function loadTabData(savedTab) {\n    if (loadTab) {\n      return loadTab(savedTab);\n    }\n    let {\n      id\n    } = savedTab;\n    if (cache.tabs.has(id)) {\n      return cache.tabs.get(id);\n    }\n    return null;\n  }\n  function loadPanelData(savedPanel) {\n    let {\n      id,\n      size,\n      activeId,\n      x,\n      y,\n      z,\n      w,\n      h\n    } = savedPanel;\n    let tabs = [];\n    for (let savedTab of savedPanel.tabs) {\n      let tabData = loadTabData(savedTab);\n      if (tabData) {\n        tabs.push(tabData);\n      }\n    }\n    let panelData;\n    if (w || h || x || y || z) {\n      panelData = {\n        id,\n        size,\n        activeId,\n        x,\n        y,\n        z,\n        w,\n        h,\n        tabs\n      };\n    } else {\n      panelData = {\n        id,\n        size,\n        activeId,\n        tabs\n      };\n    }\n    if (savedPanel.id === maximePlaceHolderId) {\n      panelData.panelLock = {};\n    } else if (afterPanelLoaded) {\n      afterPanelLoaded(savedPanel, panelData);\n    } else if (cache.panels.has(id)) {\n      panelData = Object.assign(Object.assign({}, cache.panels.get(id)), panelData);\n    }\n    return panelData;\n  }\n  function loadBoxData(savedBox) {\n    if (!savedBox) {\n      return null;\n    }\n    let children = [];\n    for (let child of savedBox.children) {\n      if ('tabs' in child) {\n        children.push(loadPanelData(child));\n      } else if ('children' in child) {\n        children.push(loadBoxData(child));\n      }\n    }\n    let {\n      id,\n      size,\n      mode\n    } = savedBox;\n    return {\n      id,\n      size,\n      mode,\n      children\n    };\n  }\n  return {\n    dockbox: loadBoxData(savedLayout.dockbox),\n    floatbox: loadBoxData((_a = savedLayout.floatbox) !== null && _a !== void 0 ? _a : {\n      mode: 'float',\n      children: [],\n      size: 0\n    }),\n    windowbox: loadBoxData((_b = savedLayout.windowbox) !== null && _b !== void 0 ? _b : {\n      mode: 'window',\n      children: [],\n      size: 0\n    }),\n    maxbox: loadBoxData((_c = savedLayout.maxbox) !== null && _c !== void 0 ? _c : {\n      mode: 'maximize',\n      children: [],\n      size: 1\n    })\n  };\n}","map":{"version":3,"names":["maximePlaceHolderId","addPanelToCache","panelData","cache","panels","set","id","tab","tabs","addBoxToCache","boxData","child","children","createLayoutCache","defaultLayout","Map","dockbox","floatbox","saveLayoutData","layout","saveTab","afterPanelSaved","saveTabData","tabData","savePanelData","savedTab","push","size","activeId","savedPanel","parent","mode","x","y","z","w","h","saveBoxData","windowbox","maxbox","loadLayoutData","savedLayout","loadTab","afterPanelLoaded","_a","_b","_c","loadTabData","has","get","loadPanelData","panelLock","Object","assign","loadBoxData","savedBox"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-dock/es/Serializer.js"],"sourcesContent":["import { maximePlaceHolderId } from \"./DockData\";\nfunction addPanelToCache(panelData, cache) {\n    cache.panels.set(panelData.id, panelData);\n    for (let tab of panelData.tabs) {\n        cache.tabs.set(tab.id, tab);\n    }\n}\nfunction addBoxToCache(boxData, cache) {\n    for (let child of boxData.children) {\n        if ('tabs' in child) {\n            addPanelToCache(child, cache);\n        }\n        else if ('children' in child) {\n            addBoxToCache(child, cache);\n        }\n    }\n}\nexport function createLayoutCache(defaultLayout) {\n    let cache = {\n        panels: new Map(),\n        tabs: new Map(),\n    };\n    if (defaultLayout) {\n        if ('children' in defaultLayout) {\n            // BoxData\n            addBoxToCache(defaultLayout, cache);\n        }\n        else {\n            // LayoutData\n            if ('dockbox' in defaultLayout) {\n                addBoxToCache(defaultLayout.dockbox, cache);\n            }\n            if ('floatbox' in defaultLayout) {\n                addBoxToCache(defaultLayout.floatbox, cache);\n            }\n        }\n    }\n    return cache;\n}\nexport function saveLayoutData(layout, saveTab, afterPanelSaved) {\n    function saveTabData(tabData) {\n        if (saveTab) {\n            return saveTab(tabData);\n        }\n        return { id: tabData.id };\n    }\n    function savePanelData(panelData) {\n        let tabs = [];\n        for (let tab of panelData.tabs) {\n            let savedTab = saveTabData(tab);\n            if (savedTab) {\n                tabs.push(savedTab);\n            }\n        }\n        let { id, size, activeId } = panelData;\n        let savedPanel;\n        if (panelData.parent.mode === 'float' || panelData.parent.mode === 'window') {\n            let { x, y, z, w, h } = panelData;\n            savedPanel = { id, size, tabs, activeId, x, y, z, w, h };\n        }\n        else {\n            savedPanel = { id, size, tabs, activeId };\n        }\n        if (afterPanelSaved) {\n            afterPanelSaved(savedPanel, panelData);\n        }\n        return savedPanel;\n    }\n    function saveBoxData(boxData) {\n        let children = [];\n        for (let child of boxData.children) {\n            if ('tabs' in child) {\n                children.push(savePanelData(child));\n            }\n            else if ('children' in child) {\n                children.push(saveBoxData(child));\n            }\n        }\n        let { id, size, mode } = boxData;\n        return { id, size, mode, children };\n    }\n    return {\n        dockbox: saveBoxData(layout.dockbox),\n        floatbox: saveBoxData(layout.floatbox),\n        windowbox: saveBoxData(layout.windowbox),\n        maxbox: saveBoxData(layout.maxbox),\n    };\n}\nexport function loadLayoutData(savedLayout, defaultLayout, loadTab, afterPanelLoaded) {\n    var _a, _b, _c;\n    let cache = createLayoutCache(defaultLayout);\n    function loadTabData(savedTab) {\n        if (loadTab) {\n            return loadTab(savedTab);\n        }\n        let { id } = savedTab;\n        if (cache.tabs.has(id)) {\n            return cache.tabs.get(id);\n        }\n        return null;\n    }\n    function loadPanelData(savedPanel) {\n        let { id, size, activeId, x, y, z, w, h } = savedPanel;\n        let tabs = [];\n        for (let savedTab of savedPanel.tabs) {\n            let tabData = loadTabData(savedTab);\n            if (tabData) {\n                tabs.push(tabData);\n            }\n        }\n        let panelData;\n        if (w || h || x || y || z) {\n            panelData = { id, size, activeId, x, y, z, w, h, tabs };\n        }\n        else {\n            panelData = { id, size, activeId, tabs };\n        }\n        if (savedPanel.id === maximePlaceHolderId) {\n            panelData.panelLock = {};\n        }\n        else if (afterPanelLoaded) {\n            afterPanelLoaded(savedPanel, panelData);\n        }\n        else if (cache.panels.has(id)) {\n            panelData = Object.assign(Object.assign({}, cache.panels.get(id)), panelData);\n        }\n        return panelData;\n    }\n    function loadBoxData(savedBox) {\n        if (!savedBox) {\n            return null;\n        }\n        let children = [];\n        for (let child of savedBox.children) {\n            if ('tabs' in child) {\n                children.push(loadPanelData(child));\n            }\n            else if ('children' in child) {\n                children.push(loadBoxData(child));\n            }\n        }\n        let { id, size, mode } = savedBox;\n        return { id, size, mode, children };\n    }\n    return {\n        dockbox: loadBoxData(savedLayout.dockbox),\n        floatbox: loadBoxData((_a = savedLayout.floatbox) !== null && _a !== void 0 ? _a : { mode: 'float', children: [], size: 0 }),\n        windowbox: loadBoxData((_b = savedLayout.windowbox) !== null && _b !== void 0 ? _b : { mode: 'window', children: [], size: 0 }),\n        maxbox: loadBoxData((_c = savedLayout.maxbox) !== null && _c !== void 0 ? _c : { mode: 'maximize', children: [], size: 1 }),\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}