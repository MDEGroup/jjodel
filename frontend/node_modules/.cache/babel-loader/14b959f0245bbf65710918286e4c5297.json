{"ast":null,"code":"import React,{PureComponent}from'react';import{connect}from'react-redux';import'./GenericInput.scss';import{Input,Log,LPointerTargetable,RuntimeAccessibleClass,Select,ShortAttribETypes,TextArea,U}from'../../joiner';import{SizeInput}from'./SizeInput';import{JavascriptEditor}from\"../editors/languages\";// private\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class GenericInputComponent extends PureComponent{constructor(props,context){super(props,context);}render(){let d=this.props.data.__raw||this.props.data;let l=LPointerTargetable.wrap(this.props.data);let field=this.props.field;let info;if(!this.props.info){let DConstructor=RuntimeAccessibleClass.get(d.className);let singleton=DConstructor.singleton;info=singleton['__info_of__'+this.props.field];}else info=this.props.info;if(!info){Log.eDevv(\"<GenericInput/> could not find info of \"+this.props.field,{props:this.props});return/*#__PURE__*/_jsx(_Fragment,{});}let type;let enumOptions={};// 'Options' entry is a fallback for items without an optgroup\nlet enumOptionsJSX;if(info.enum){type='EEnum';let prevoptgroup='Options';let group;let option;for(let key in info.enum){let val=info.enum[key];if(key.indexOf('(')===0){let end=key.indexOf(')');group=key.substring(1,end).trim();option=key.substring(end+1).trim();prevoptgroup=group;}else{option=key;group=prevoptgroup;}if(!enumOptions[group])enumOptions[group]={};enumOptions[group][option]=val;}let unsorted=enumOptions.Options;delete enumOptions.Options;enumOptionsJSX=/*#__PURE__*/_jsxs(_Fragment,{children:[//data-selected={l[field] === unsorted[optkey]}\nunsorted&&Object.keys(unsorted).map(optKey=>/*#__PURE__*/_jsx(\"option\",{value:unsorted[optKey],children:optKey})),Object.keys(enumOptions).map(grpKey=>/*#__PURE__*/_jsx(\"optgroup\",{label:grpKey,children:Object.keys(enumOptions[grpKey]).map(optKey=>/*#__PURE__*/_jsx(\"option\",{value:enumOptions[grpKey][optKey],children:optKey}))}))]});}else{if(typeof info.type==='string'){if(info.type.toLowerCase().indexOf('function')===0)type='Function';else type=info.type;}else{if(!info.type){Log.exDevv('missing __info_of__ type for '+d.className+'.'+this.props.field,{d,info,props:this.props});return/*#__PURE__*/_jsx(_Fragment,{});}let infoType=info.type;type=infoType.cname||infoType.className||infoType.name;Log.exDev(!type,'missing type:',{type,info});}}/*if (type.indexOf('|') !== -1) {\r\n            type = 'EEnum';\r\n            let options = type.split('|');\r\n            if (!enumOptions.Option) enumOptions.Option = {};\r\n            for (let o in options){\r\n                o = o.trim();\r\n                enumOptions.Option[o] = o;\r\n            }\r\n        }*/ // const otherProps: {[inputattribute:HTMLInputTypeAttribute]: any} = {...this.props};\nconst otherProps={...this.props};function setMinMax(max){if(info.min!==undefined)otherProps.min=info.min;else otherProps.min=info.positive===true?0:-max/2;// assume false if non specified\nif(info.max!==undefined)otherProps.max=info.max;else otherProps.max=info.positive===false?max/2-1:max-1;// assume true if non specified\n}let label=info.label||this.props.field;if(typeof label===\"string\")label=U.uppercaseFirstLetter(info.label||this.props.field);if(type.toLowerCase().indexOf(\"function(\")>=0||type.indexOf(\"()=>\")>=0)type=\"Function\";switch(type.toLowerCase()){default:Log.ee('invalid type in GenericInput',{type,props:this.props,info,d});return/*#__PURE__*/_jsxs(\"div\",{...otherProps,className:'danger',style:{color:'red',border:'1px solid red'},children:[\"Invalid GInput type: '\",type,\"'\"]});case'point':case'graphpoint':case'size':case'graphSsize':return/*#__PURE__*/_jsx(SizeInput,{...otherProps,data:l,field:this.props.field,label:label});case'text':return/*#__PURE__*/_jsx(TextArea,{inputClassName:'input my-auto ms-auto ',...otherProps,className:(this.props.rootClassName||'')+' '+(this.props.className||''),data:this.props.data,field:this.props.field,jsxLabel:label,tooltip:this.props.tooltip});case'function':return/*#__PURE__*/_jsx(JavascriptEditor,{className:(this.props.rootClassName||'')+' '+(this.props.className||''),placeHolder:this.props.placeholder,jsxLabel:this.props.label,data:this.props.data,field:this.props.field,tooltip:this.props.tooltip,hide:this.props.hide,style:this.props.style,title:this.props.title,getter:this.props.getter,setter:this.props.setter,readonly:this.props.readOnly,height:this.props.height,...otherProps/*not working? i had to list them all*/},this.props.key);case'eenum':return/*#__PURE__*/_jsx(Select,{inputClassName:'my-auto ms-auto select',...otherProps,className:this.props.rootClassName,data:this.props.data,field:this.props.field,options:enumOptionsJSX,jsxLabel:label,tooltip:this.props.tooltip});// <input> natives\ncase'radio':// problem: this would need to return a <form> and multiple inputs generated by a single element.\n// it should be easy but unlikely it will be needed so i won't do it for now.\nLog.eDevv('radio input type is unsupported');break;case'datetime':type='datetime-local';break;case'color':break;case'email':break;case'image':break;// ?\ncase'password':break;case'range':break;case'month':break;case'week':break;case'datetime-local':break;case'time':break;case'url':break;// ecore\ncase ShortAttribETypes.EChar.toLowerCase():type='text';if(undefined===otherProps.minLength)otherProps.minLength=1;otherProps.maxLength=1;// otherProps.pattern = '^.{1}$';\nbreak;case\"string\":case ShortAttribETypes.EString.toLowerCase():type='text';break;case ShortAttribETypes.EBoolean.toLowerCase():type='checkbox';break;case ShortAttribETypes.EByte.toLowerCase():type='number';setMinMax(2**8);break;case ShortAttribETypes.EShort.toLowerCase():type='number';setMinMax(2**16);break;case ShortAttribETypes.EInt.toLowerCase():type='number';setMinMax(2**32);break;case ShortAttribETypes.ELong.toLowerCase():type='number';setMinMax(2**64);break;case ShortAttribETypes.EFloat.toLowerCase():case ShortAttribETypes.EDouble.toLowerCase():type='number';if(!otherProps.step)otherProps.step=info.step||0.1;if(!otherProps.pattern)otherProps.pattern=info.pattern||'^[0-9]+\\.[0-9]{'+info.digits+'}$';break;case ShortAttribETypes.EDate.toLowerCase():type='datetime-local';break;}let className=(this.props.className||'')+' '+(this.props.rootClassName||'');// delete otherProps.field; delete otherProps.data; delete otherProps.infoof;\nreturn/*#__PURE__*/_jsx(Input,{...otherProps,className:className,data:this.props.data,field:this.props.field,jsxLabel:label,tooltip:this.props.tooltip,type:type});}}// private\n// {[inputattribute:HTMLInputAttribute]: any};\n// private\n// private\n// private\n////// mapper func\nfunction mapStateToProps(state,ownProps){const ret={};/// to fill\nreturn ret;}function mapDispatchToProps(dispatch){const ret={};/// to fill\nreturn ret;}export const GenericInput=connect(mapStateToProps,mapDispatchToProps)(GenericInputComponent);/*\r\n\r\nSupported __info_of__.type values:\r\n\r\n\r\n- ShortAttribETypes     =   ecore type names\r\n- text                  =   for textarea\r\n- Function              =   for textarea\r\n- richtext              =   for monaco editor\r\n- native <input> types\r\n- DPointerTargetable    = will make a select out of available elements of that kind\r\n- GraphPoint            = will make a mini interactive square where you can select a point, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n- GraphSize             = will make a mini interactive square where you can select a rectangle, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n\r\n\r\n- typescript enumerators, with optgroups defined as following\r\n        (optgroup1) option1\r\n        option2 // assumed still in optgroup1\r\n        option3 // assumed still in optgroup1\r\n        (optgroup2) option4\r\n        if first option(s) are without optgroup, they are grouped in optgroup 'Options'\r\n\r\nNOT SUPPORT\r\n- 'EEnum' string, it is only used internally. pass it the whole enum.\r\nnative <input> not supported\r\n- radio\r\n- tel\r\n- search\r\n- reset\r\n- hidden\r\n- image\r\n- button\r\n- submit\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n* */","map":{"version":3,"names":["React","PureComponent","connect","Input","Log","LPointerTargetable","RuntimeAccessibleClass","Select","ShortAttribETypes","TextArea","U","SizeInput","JavascriptEditor","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","GenericInputComponent","constructor","props","context","render","d","data","__raw","l","wrap","field","info","DConstructor","get","className","singleton","eDevv","type","enumOptions","enumOptionsJSX","enum","prevoptgroup","group","option","key","val","indexOf","end","substring","trim","unsorted","Options","children","Object","keys","map","optKey","value","grpKey","label","toLowerCase","exDevv","infoType","cname","name","exDev","otherProps","setMinMax","max","min","undefined","positive","uppercaseFirstLetter","ee","style","color","border","inputClassName","rootClassName","jsxLabel","tooltip","placeHolder","placeholder","hide","title","getter","setter","readonly","readOnly","height","options","EChar","minLength","maxLength","EString","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","step","pattern","digits","EDate","mapStateToProps","state","ownProps","ret","mapDispatchToProps","dispatch","GenericInput"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/forEndUser/GenericInput.tsx"],"sourcesContent":["import React, {Dispatch, InputHTMLAttributes, PureComponent, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './GenericInput.scss';\r\nimport {\r\n    Dictionary,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DState,\r\n    DViewElement,\r\n    GObject,\r\n    Info,\r\n    Input,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    RuntimeAccessibleClass,\r\n    Select,\r\n    ShortAttribETypes,\r\n    TextArea,\r\n    U\r\n} from '../../joiner';\r\nimport {SizeInput} from './SizeInput';\r\nimport {JavascriptEditor} from \"../editors/languages\";\r\n\r\n// private\r\ninterface ThisState {\r\n}\r\ntype Dic<K extends string|number, V> = Dictionary<K, V>;\r\ntype String<T> = DocString<T>;\r\nclass GenericInputComponent extends PureComponent<AllProps, ThisState/*undefined*/>{\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        let d: DViewElement = ((this.props.data as LPointerTargetable).__raw || this.props.data) as any;\r\n        let l: LViewElement = LPointerTargetable.wrap(this.props.data) as LViewElement;\r\n        let field: keyof LViewElement = this.props.field as any;\r\n        let info: GObject<Info>;\r\n        if (!this.props.info){\r\n            let DConstructor: typeof DPointerTargetable = RuntimeAccessibleClass.get(d.className);\r\n            let singleton: GObject<LPointerTargetable> = DConstructor.singleton;\r\n            info = singleton['__info_of__' + this.props.field] ;\r\n        } else info = this.props.info;\r\n        if (!info) {\r\n            Log.eDevv(\"<GenericInput/> could not find info of \" + this.props.field, {props:this.props});\r\n            return <></>;\r\n        }\r\n\r\n        let type: string;\r\n        let enumOptions: Dic<String<'optgroup'>, Dic<String<'options'>, String<'values'>>> = {}; // 'Options' entry is a fallback for items without an optgroup\r\n        let enumOptionsJSX: JSX.Element | undefined;\r\n        if (info.enum) {\r\n            type = 'EEnum';\r\n            let prevoptgroup: string = 'Options';\r\n            let group: string;\r\n            let option: string;\r\n            for (let key in info.enum) {\r\n                let val: string = info.enum[key];\r\n                if (key.indexOf('(') === 0) {\r\n                    let end = key.indexOf(')');\r\n                    group = key.substring(1, end).trim();\r\n                    option = key.substring(end + 1).trim();\r\n                    prevoptgroup = group;\r\n                } else {\r\n                    option = key;\r\n                    group = prevoptgroup;\r\n                }\r\n                if (!enumOptions[group]) enumOptions[group] = {};\r\n                enumOptions[group][option] = val;\r\n            }\r\n            let unsorted = enumOptions.Options;\r\n            delete enumOptions.Options;\r\n            enumOptionsJSX = <>\r\n                {\r\n                    //data-selected={l[field] === unsorted[optkey]}\r\n                    unsorted && Object.keys(unsorted).map((optKey: string) => <option value={unsorted[optKey]}>{optKey}</option>)\r\n                }\r\n                {Object.keys(enumOptions).map((grpKey: string) => <optgroup label={grpKey}>{\r\n                Object.keys(enumOptions[grpKey]).map( (optKey: string) => <option value={enumOptions[grpKey][optKey]}>{optKey}</option>)\r\n            }</optgroup>)}</>;\r\n        }\r\n        else {\r\n            if (typeof info.type === 'string') {\r\n                if (info.type.toLowerCase().indexOf('function') === 0) type = 'Function';\r\n                else type = info.type as any;\r\n            }\r\n            else {\r\n                if (!info.type) { Log.exDevv('missing __info_of__ type for ' + d.className + '.' + this.props.field, {d, info, props: this.props}); return <></>}\r\n                let infoType: GObject = info.type;\r\n                type = infoType.cname || infoType.className || infoType.name;\r\n                Log.exDev(!type, 'missing type:', {type, info});\r\n            }\r\n        }\r\n\r\n        /*if (type.indexOf('|') !== -1) {\r\n            type = 'EEnum';\r\n            let options = type.split('|');\r\n            if (!enumOptions.Option) enumOptions.Option = {};\r\n            for (let o in options){\r\n                o = o.trim();\r\n                enumOptions.Option[o] = o;\r\n            }\r\n        }*/\r\n\r\n        // const otherProps: {[inputattribute:HTMLInputTypeAttribute]: any} = {...this.props};\r\n        const otherProps: InputHTMLAttributes<Event> = {...this.props} as any;\r\n        function setMinMax(max: number): void {\r\n            if (info.min !== undefined) otherProps.min = info.min;\r\n            else otherProps.min = info.positive === true ? 0 : -max / 2; // assume false if non specified\r\n\r\n            if (info.max !== undefined) otherProps.max = info.max;\r\n            else otherProps.max = info.positive === false ? max/2 - 1 : max-1; // assume true if non specified\r\n        }\r\n\r\n        let label: ReactNode = info.label || this.props.field;\r\n        if (typeof label === \"string\") label = U.uppercaseFirstLetter(info.label || this.props.field);\r\n\r\n        if (type.toLowerCase().indexOf(\"function(\") >=0 || type.indexOf(\"()=>\") >=0) type = \"Function\";\r\n        switch (type.toLowerCase()) {\r\n            default:\r\n                Log.ee('invalid type in GenericInput', {type, props:this.props, info, d});\r\n                return <div {...otherProps as any} className={'danger'} style={{color: 'red', border: '1px solid red'}}>Invalid GInput type: '{type}'</div>;\r\n            case 'point': case 'graphpoint': case 'size': case 'graphSsize':\r\n                return <SizeInput {...otherProps} data={l} field={this.props.field} label={label} />;\r\n            case 'text':\r\n                return <TextArea inputClassName={'input my-auto ms-auto '} {...otherProps as any} className={(this.props.rootClassName||'')+' '+(this.props.className||'')}\r\n                                 data={this.props.data} field={this.props.field}\r\n                                 jsxLabel={label} tooltip={this.props.tooltip} />;\r\n            case 'function':\r\n                return <JavascriptEditor className={(this.props.rootClassName||'')+' '+(this.props.className||'')} placeHolder={this.props.placeholder}\r\n                                         jsxLabel={this.props.label}\r\n                                         data={this.props.data} field={this.props.field} tooltip={this.props.tooltip}\r\n                                         hide={this.props.hide} style={this.props.style} title={this.props.title}\r\n                                         getter={this.props.getter} setter={this.props.setter} key={this.props.key}\r\n                                         readonly={this.props.readOnly}\r\n                                         height={this.props.height}\r\n                                         {...otherProps as any /*not working? i had to list them all*/}  />;\r\n            case 'eenum':\r\n                return <Select inputClassName={'my-auto ms-auto select'} {...otherProps as any} className={this.props.rootClassName}\r\n                               data={this.props.data} field={this.props.field} options={enumOptionsJSX}\r\n                               jsxLabel={label} tooltip={this.props.tooltip} />;\r\n                // <input> natives\r\n            case 'radio':\r\n                // problem: this would need to return a <form> and multiple inputs generated by a single element.\r\n                // it should be easy but unlikely it will be needed so i won't do it for now.\r\n                Log.eDevv('radio input type is unsupported'); break;\r\n            case 'datetime': type = 'datetime-local'; break;\r\n            case 'color': break;\r\n            case 'email': break;\r\n            case 'image': break; // ?\r\n            case 'password': break;\r\n            case 'range': break;\r\n            case 'month': break;\r\n            case 'week': break;\r\n            case 'datetime-local': break;\r\n            case 'time': break;\r\n            case 'url': break;\r\n            // ecore\r\n            case ShortAttribETypes.EChar.toLowerCase():\r\n                type = 'text';\r\n                if (undefined === otherProps.minLength) otherProps.minLength = 1;\r\n                otherProps.maxLength = 1;\r\n                // otherProps.pattern = '^.{1}$';\r\n                break;\r\n            case \"string\":\r\n            case ShortAttribETypes.EString.toLowerCase(): type = 'text'; break;\r\n            case ShortAttribETypes.EBoolean.toLowerCase(): type = 'checkbox'; break;\r\n            case ShortAttribETypes.EByte.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**8);\r\n                break;\r\n            case ShortAttribETypes.EShort.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**16);\r\n                break;\r\n            case ShortAttribETypes.EInt.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**32);\r\n                break;\r\n            case ShortAttribETypes.ELong.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**64);\r\n                break;\r\n            case ShortAttribETypes.EFloat.toLowerCase():\r\n            case ShortAttribETypes.EDouble.toLowerCase():\r\n                type = 'number';\r\n                if (!otherProps.step) otherProps.step = info.step || 0.1;\r\n                if (!otherProps.pattern) otherProps.pattern = info.pattern || '^[0-9]+\\.[0-9]{' + info.digits + '}$';\r\n                break;\r\n            case ShortAttribETypes.EDate.toLowerCase(): type = 'datetime-local'; break;\r\n        }\r\n        let className = (this.props.className || '') + ' ' + ( this.props.rootClassName||'');\r\n        // delete otherProps.field; delete otherProps.data; delete otherProps.infoof;\r\n        return <Input {...otherProps} className={className}\r\n                      data={this.props.data} field={this.props.field}\r\n                      jsxLabel={label} tooltip={this.props.tooltip} type={type as any}/>;\r\n    }\r\n}\r\n\r\n// private\r\ninterface _OwnProps {\r\n    // propsRequestedFromJSX_AsAttributes: string;\r\n    data: DPointerTargetable | LPointerTargetable;\r\n    field: string;\r\n    key?: string;\r\n    label?: ReactNode;\r\n    title?: ReactNode;\r\n    info?: Info | undefined;\r\n    tooltip?: boolean|string;\r\n\r\n    className?: string;\r\n    rootClassName?: string;\r\n    inputClassName?: string;\r\n    rootStyle?: GObject;// this goes to root\r\n    style?: GObject; // this goes at the root of <Input> or <Select> element(s)\r\n    inputStyle?: GObject; // this goes to the actual native <input> or <select> element(s)\r\n    hide?: undefined | boolean; // for autohiding Javascript editor\r\n    getter?: <T extends LPointerTargetable>(data: T, field: DocString<\"keyof T\">) => string;\r\n    setter?: <T extends LPointerTargetable>(value: string|boolean, data: T, field: DocString<\"keyof T\">) => void;\r\n\r\n    /*\r\n    they might be useful, but can just add them in without declaring all of them. i pass them like <input ...otherprops>\r\n    multiple?: boolean;  // multi value for select! works on file, email (just changes default validation pattern), and maybe others\r\n    size?: ??\r\n    accept?: string // only for type = 'file'\r\n    capture?: string // only for type = 'file'\r\n    autocomplete?: string; // only for <input> types\r\n    disabled?: boolean;\r\n    height?: string; // for 'image'\r\n    list?: string; // datalist\r\n    maxLength?: string; // chars\r\n    */\r\n    // many more skipped mostly for forms\r\n\r\n}\r\ntype OwnProps = _OwnProps & InputHTMLAttributes<Event>; // {[inputattribute:HTMLInputAttribute]: any};\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\n\r\nexport const GenericInput = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GenericInputComponent);\r\n\r\n\r\n/*\r\n\r\nSupported __info_of__.type values:\r\n\r\n\r\n- ShortAttribETypes     =   ecore type names\r\n- text                  =   for textarea\r\n- Function              =   for textarea\r\n- richtext              =   for monaco editor\r\n- native <input> types\r\n- DPointerTargetable    = will make a select out of available elements of that kind\r\n- GraphPoint            = will make a mini interactive square where you can select a point, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n- GraphSize             = will make a mini interactive square where you can select a rectangle, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n\r\n\r\n- typescript enumerators, with optgroups defined as following\r\n        (optgroup1) option1\r\n        option2 // assumed still in optgroup1\r\n        option3 // assumed still in optgroup1\r\n        (optgroup2) option4\r\n        if first option(s) are without optgroup, they are grouped in optgroup 'Options'\r\n\r\nNOT SUPPORT\r\n- 'EEnum' string, it is only used internally. pass it the whole enum.\r\nnative <input> not supported\r\n- radio\r\n- tel\r\n- search\r\n- reset\r\n- hidden\r\n- image\r\n- button\r\n- submit\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n* */\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}