{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IfExpression = void 0;\nvar Expression_1 = require(\"./Expression\");\n/**\n * The IfExpression allows to execute a statement if the given condition is truthy.\n * Otherwise the else part is taken.\n */\nvar IfExpression = /** @class */function (_super) {\n  __extends(IfExpression, _super);\n  function IfExpression(condition, _then, _else) {\n    var _this = _super.call(this) || this;\n    _this.condition = condition;\n    _this.thenExpression = _then;\n    _this.elseExpression = _else;\n    return _this;\n  }\n  IfExpression.prototype.getCondition = function () {\n    return this.condition;\n  };\n  IfExpression.prototype.getThenExpression = function () {\n    return this.thenExpression;\n  };\n  IfExpression.prototype.getElseExpression = function () {\n    return this.elseExpression;\n  };\n  IfExpression.prototype.evaluate = function (visitor, localVariables) {\n    return this.getCondition().evaluate(visitor, localVariables) ? this.getThenExpression().evaluate(visitor, localVariables) : this.getElseExpression().evaluate(visitor, localVariables);\n  };\n  return IfExpression;\n}(Expression_1.Expression);\nexports.IfExpression = IfExpression;","map":{"version":3,"names":["Expression_1","require","IfExpression","_super","__extends","condition","_then","_else","_this","call","thenExpression","elseExpression","prototype","getCondition","getThenExpression","getElseExpression","evaluate","visitor","localVariables","Expression","exports"],"sources":["../../../lib/components/expressions/IfExpression.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AAEA;;;;AAIA,IAAAC,YAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAK9B,SAAAD,aAAYG,SAAqB,EAAEC,KAAiB,EAAEC,KAAiB;IAAvE,IAAAC,KAAA,GACIL,MAAA,CAAAM,IAAA,MAAO;IACPD,KAAI,CAACH,SAAS,GAAGA,SAAS;IAC1BG,KAAI,CAACE,cAAc,GAAGJ,KAAK;IAC3BE,KAAI,CAACG,cAAc,GAAGJ,KAAK;;EAC/B;EAEAL,YAAA,CAAAU,SAAA,CAAAC,YAAY,GAAZ;IACI,OAAO,IAAI,CAACR,SAAS;EACzB,CAAC;EAEDH,YAAA,CAAAU,SAAA,CAAAE,iBAAiB,GAAjB;IACI,OAAO,IAAI,CAACJ,cAAc;EAC9B,CAAC;EAEDR,YAAA,CAAAU,SAAA,CAAAG,iBAAiB,GAAjB;IACI,OAAO,IAAI,CAACJ,cAAc;EAC9B,CAAC;EAEDT,YAAA,CAAAU,SAAA,CAAAI,QAAQ,GAAR,UAASC,OAA4B,EAAEC,cAAoB;IACvD,OAAO,IAAI,CAACL,YAAY,EAAE,CAACG,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC,GACtD,IAAI,CAACJ,iBAAiB,EAAE,CAACE,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC,GAC1D,IAAI,CAACH,iBAAiB,EAAE,CAACC,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;EACpE,CAAC;EAEL,OAAAhB,YAAC;AAAD,CAAC,CA9BiCF,YAAA,CAAAmB,UAAU;AAA/BC,OAAA,CAAAlB,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script"}