{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\pages\\\\Project.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { CreateElementAction, DUser, LProject, LUser, Try, U } from '../joiner';\nimport useQuery from '../hooks/useQuery';\nimport { ProjectsApi } from '../api/persistance';\nimport { SaveManager } from '../components/topbar/SaveManager';\nimport { Dashboard } from \"./components\";\nimport CollaborativeAttacher from \"../components/collaborative/CollaborativeAttacher\";\nimport { Cards } from './components/cards/Cards';\nimport Storage from \"../data/storage\";\nimport { CSS_Units } from \"../view/viewElement/view\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProjectComponent(props) {\n  _s();\n  var _user$project;\n  const user = props.user;\n  const query = useQuery();\n  const id = query.get('id') || '';\n  if (user) user.project = LProject.fromPointer(id);\n  useEffect(() => {\n    (async function () {\n      const project = await ProjectsApi.getOne(id);\n      if (!project || !project.state) return;\n      const state = await U.decompressState(project.state);\n      const rawUser = Storage.read('user');\n      if (!rawUser) return;\n      SaveManager.load(state);\n      CreateElementAction.new(rawUser);\n      //DUser.new(rawUser.name, rawUser.surname, rawUser.nickname, rawUser.affiliation, rawUser.country, rawUser.newsletter, rawUser.email, rawUser.token, rawUser.id);\n      //DUser.current = rawUser.id;\n    })();\n  }, [id]);\n  let allViews = (user === null || user === void 0 ? void 0 : (_user$project = user.project) === null || _user$project === void 0 ? void 0 : _user$project.viewpoints.flatMap(vp => vp && vp.allSubViews)) || [];\n  allViews = allViews.filter(v => v);\n  const viewsDeDuplicator = {};\n  for (let v of allViews) viewsDeDuplicator[v.id] = v;\n  if (!(user === null || user === void 0 ? void 0 : user.project)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Try, {\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        active: 'Project',\n        version: props.version,\n        project: user.project,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"style\", {\n            id: \"views-css-injector\",\n            children: Object.values(viewsDeDuplicator).map(v => v.compiled_css).join('\\n\\n')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), CSS_Units.jsx, /*#__PURE__*/_jsxDEV(Cards, {\n            children: [user.project.metamodels.length === 0 ? /*#__PURE__*/_jsxDEV(Cards.Item, {\n              title: 'Your first metamodel ?',\n              subtitle: 'Create a new metamodel.',\n              icon: 'add',\n              style: 'red',\n              action: () => {\n                alert('new metamodel');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Cards.Item, {\n                title: 'Create another metamodel ?',\n                subtitle: 'Create a new metamodel.',\n                icon: 'add',\n                style: 'red',\n                action: () => {\n                  alert('another metamodel');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Cards.Item, {\n                title: 'Create a model ?',\n                subtitle: 'Create a new model.',\n                icon: 'add',\n                style: 'red',\n                action: () => {\n                  alert('new model');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Cards.Item, {\n              icon: 'question',\n              style: 'clear',\n              title: 'Ehy!',\n              subtitle: 'What do you want to do today?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), user.project.type === 'collaborative' && /*#__PURE__*/_jsxDEV(CollaborativeAttacher, {\n      project: user.project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true);\n}\n_s(ProjectComponent, \"SCD2u/2Ws51YgbJhV3q6Zm3fxeM=\", false, function () {\n  return [useQuery];\n});\n_c = ProjectComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.user = LUser.fromPointer(DUser.current);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ProjectConnected = connect(mapStateToProps, mapDispatchToProps)(ProjectComponent);\nconst ProjectPage = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ProjectConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = ProjectPage;\nexport { ProjectPage };\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectComponent\");\n$RefreshReg$(_c2, \"ProjectPage\");","map":{"version":3,"names":["React","useEffect","connect","CreateElementAction","DUser","LProject","LUser","Try","U","useQuery","ProjectsApi","SaveManager","Dashboard","CollaborativeAttacher","Cards","Storage","CSS_Units","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectComponent","props","_s","_user$project","user","query","id","get","project","fromPointer","getOne","state","decompressState","rawUser","read","load","new","allViews","viewpoints","flatMap","vp","allSubViews","filter","v","viewsDeDuplicator","children","fileName","_jsxFileName","lineNumber","columnNumber","active","version","Object","values","map","compiled_css","join","jsx","metamodels","length","Item","title","subtitle","icon","style","action","alert","type","_c","mapStateToProps","ownProps","ret","current","mapDispatchToProps","dispatch","ProjectConnected","ProjectPage","arguments","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/pages/Project.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, useEffect,  useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    CreateElementAction,\r\n    Dictionary,\r\n    DState,\r\n    DUser,\r\n    DViewElement,\r\n    LProject,\r\n    LUser,\r\n    LViewElement,\r\n    LViewPoint,\r\n    Pointer,\r\n    Try,\r\n    U\r\n} from '../joiner';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport useQuery from '../hooks/useQuery';\r\nimport {ProjectsApi} from '../api/persistance';\r\nimport {SaveManager} from '../components/topbar/SaveManager';\r\nimport {Dashboard} from \"./components\";\r\nimport CollaborativeAttacher from \"../components/collaborative/CollaborativeAttacher\";\r\nimport {Cards} from './components/cards/Cards';\r\nimport Storage from \"../data/storage\";\r\nimport Loader from '../components/loader/Loader';\r\nimport {Navbar} from \"./components\";\r\nimport {CSS_Units} from \"../view/viewElement/view\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\n\r\n\r\nfunction ProjectComponent(props: AllProps): JSX.Element {\r\n\r\n    const user = props.user;\r\n    const query = useQuery();\r\n    const id = query.get('id') || '';\r\n    if (user) user.project = LProject.fromPointer(id);\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n            const project = await ProjectsApi.getOne(id);\r\n            if(!project || !project.state) return;\r\n            const state = await U.decompressState(project.state);\r\n            const rawUser = Storage.read<DUser>('user');\r\n            if(!rawUser) return;\r\n            SaveManager.load(state);\r\n            CreateElementAction.new(rawUser);\r\n            //DUser.new(rawUser.name, rawUser.surname, rawUser.nickname, rawUser.affiliation, rawUser.country, rawUser.newsletter, rawUser.email, rawUser.token, rawUser.id);\r\n            //DUser.current = rawUser.id;\r\n        })();\r\n    }, [id]);\r\n\r\n    let allViews = user?.project?.viewpoints.flatMap((vp: LViewPoint) => vp && vp.allSubViews) || [];\r\n    allViews = allViews.filter(v => v);\r\n    const viewsDeDuplicator: Dictionary<Pointer<DViewElement>, LViewElement> = {};\r\n    for (let v of allViews) viewsDeDuplicator[v.id] = v;\r\n    if (!user?.project) return (<div>\r\n        <label>Loading...</label>\r\n    </div>);\r\n\r\n    return(<>\r\n        <Try>\r\n            <Dashboard active={'Project'} version={props.version} project={user.project}>\r\n                <React.Fragment>\r\n                    <style id={\"views-css-injector\"}>\r\n                        {Object.values(viewsDeDuplicator).map(v => v.compiled_css).join('\\n\\n')}\r\n                    </style>\r\n                    {CSS_Units.jsx}\r\n\r\n                    <Cards>\r\n                        {user.project.metamodels.length === 0 ?\r\n                            <Cards.Item\r\n                                title={'Your first metamodel ?'}\r\n                                subtitle={'Create a new metamodel.'}\r\n                                icon={'add'}\r\n                                style={'red'}\r\n                                action={() => {\r\n                                    alert('new metamodel')\r\n                                }}\r\n                            />\r\n                            :\r\n                            <React.Fragment>\r\n                                <Cards.Item\r\n                                    title={'Create another metamodel ?'}\r\n                                    subtitle={'Create a new metamodel.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {\r\n                                        alert('another metamodel')\r\n                                    }}\r\n                                />\r\n                                <Cards.Item\r\n                                    title={'Create a model ?'}\r\n                                    subtitle={'Create a new model.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {\r\n                                        alert('new model')\r\n                                    }}\r\n                                />\r\n                            </React.Fragment>\r\n                        }\r\n                        <Cards.Item icon={'question'} style={'clear'} title={'Ehy!'}\r\n                                    subtitle={'What do you want to do today?'}/>\r\n                    </Cards>\r\n\r\n                </React.Fragment>\r\n            </Dashboard>\r\n        </Try>\r\n\r\n        {/*<Try><Dock /></Try>*/}\r\n        {user.project.type === 'collaborative' && <CollaborativeAttacher project={user.project}/>}\r\n    </>);\r\n\r\n}\r\n\r\ninterface OwnProps {\r\n}\r\n\r\ninterface StateProps {\r\n    user: LUser,\r\n    projects: LProject[],\r\n    version: DState[\"version\"],\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.user = LUser.fromPointer(DUser.current);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const ProjectConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProjectComponent);\r\n\r\nconst ProjectPage = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ProjectConnected {...{...props, children}} />;\r\n}\r\n\r\nexport {ProjectPage};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}