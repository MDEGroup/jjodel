{"ast":null,"code":"import{LNamedElement,U}from'../../joiner';import Api from'../../data/api';export default class MemoRec{static async structuralFeature(me){const named=LNamedElement.fromPointer(me.id);const model=me.model;const classes=model.classes;const memorecClasses=[];for(const myClass of classes){const attributes=myClass.attributes.map(x=>x.name);const references=myClass.references.map(x=>x.name);memorecClasses.push({name:myClass.name,methodInvocations:[...attributes,...references]});}const memorecModel={name:model.name,methodDeclarations:memorecClasses};const memorecObject={context:named.name,model:memorecModel};const response=await Api.post(\"\".concat(Api.memorec,\"/structuralFeatures\"),U.wrapper(memorecObject));if(!response.data)return{data:[],type:'class'};const data=U.wrapper(response.data);data.sort((a,b)=>b.score-a.score);return{data:data,type:'class'};}static async classifier(me){const named=LNamedElement.fromPointer(me.id);const model=me.model;const packages=model.packages;const memorecPackages=[];for(const myPackage of packages){const classes=myPackage.classes.map(x=>x.name);memorecPackages.push({name:myPackage.name,methodInvocations:classes});}const memorecModel={name:model.name,methodDeclarations:memorecPackages};const memorecObject={context:named.name,model:memorecModel};const response=await Api.post(\"\".concat(Api.memorec,\"/classes\"),U.wrapper(memorecObject));if(!response.data)return{data:[],type:'package'};const data=U.wrapper(response.data);data.sort((a,b)=>b.score-a.score);return{data:data,type:'package'};}}","map":{"version":3,"names":["LNamedElement","U","Api","MemoRec","structuralFeature","me","named","fromPointer","id","model","classes","memorecClasses","myClass","attributes","map","x","name","references","push","methodInvocations","memorecModel","methodDeclarations","memorecObject","context","response","post","concat","memorec","wrapper","data","type","sort","a","b","score","classifier","packages","memorecPackages","myPackage"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/api/memorec/index.ts"],"sourcesContent":["import {GObject, Json, LModelElement, LNamedElement, U} from '../../joiner';\r\nimport {MemoRecModel, MemoRecNamed, MemoRecObject} from './types';\r\nimport Api from '../../data/api';\r\n\r\nexport default class MemoRec {\r\n    static async structuralFeature(me: LModelElement): Promise<{data: GObject[], type:'class'|'package'}> {\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const classes = model.classes;\r\n        const memorecClasses: MemoRecNamed[] = [];\r\n        for(const myClass of classes) {\r\n            const attributes = myClass.attributes.map(x => x.name);\r\n            const references = myClass.references.map(x => x.name);\r\n            memorecClasses.push({name: myClass.name, methodInvocations: [...attributes, ...references]});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecClasses};\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        const response = await Api.post(`${Api.memorec}/structuralFeatures`, U.wrapper<Json>(memorecObject));\r\n        if(!response.data) return {data: [], type: 'class'}\r\n        const data: GObject[] = U.wrapper<GObject[]>(response.data);\r\n        data.sort((a, b) => b.score - a.score);\r\n        return {data: data, type: 'class'};\r\n    }\r\n\r\n    static async classifier(me: LModelElement): Promise<{data: GObject[], type:'class'|'package'}> {\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const packages= model.packages;\r\n        const memorecPackages: MemoRecNamed[] = [];\r\n        for(const myPackage of packages) {\r\n            const classes = myPackage.classes.map(x => x.name);\r\n            memorecPackages.push({name: myPackage.name, methodInvocations: classes});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecPackages};\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        const response = await Api.post(`${Api.memorec}/classes`, U.wrapper<Json>(memorecObject));\r\n        if(!response.data) return {data: [], type: 'package'}\r\n        const data: GObject[] = U.wrapper<GObject[]>(response.data);\r\n        data.sort((a, b) => b.score - a.score);\r\n        return {data: data, type: 'package'};\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}