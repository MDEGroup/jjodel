{"ast":null,"code":"import { LNamedElement, U } from '../../joiner';\nimport Api from '../../data/api';\nexport default class MemoRec {\n  static async structuralFeature(me) {\n    const named = LNamedElement.fromPointer(me.id);\n    const model = me.model;\n    const classes = model.classes;\n    const memorecClasses = [];\n    for (const myClass of classes) {\n      const attributes = myClass.attributes.map(x => x.name);\n      const references = myClass.references.map(x => x.name);\n      memorecClasses.push({\n        name: myClass.name,\n        methodInvocations: [...attributes, ...references]\n      });\n    }\n    const memorecModel = {\n      name: model.name,\n      methodDeclarations: memorecClasses\n    };\n    const memorecObject = {\n      context: named.name,\n      model: memorecModel\n    };\n    const response = await Api.post(`${Api.memorec}/structuralFeatures`, U.wrapper(memorecObject));\n    if (!response.data) return {\n      data: [],\n      type: 'class'\n    };\n    const data = U.wrapper(response.data);\n    data.sort((a, b) => b.score - a.score);\n    return {\n      data: data,\n      type: 'class'\n    };\n  }\n  static async classifier(me) {\n    const named = LNamedElement.fromPointer(me.id);\n    const model = me.model;\n    const packages = model.packages;\n    const memorecPackages = [];\n    for (const myPackage of packages) {\n      const classes = myPackage.classes.map(x => x.name);\n      memorecPackages.push({\n        name: myPackage.name,\n        methodInvocations: classes\n      });\n    }\n    const memorecModel = {\n      name: model.name,\n      methodDeclarations: memorecPackages\n    };\n    const memorecObject = {\n      context: named.name,\n      model: memorecModel\n    };\n    const response = await Api.post(`${Api.memorec}/classes`, U.wrapper(memorecObject));\n    if (!response.data) return {\n      data: [],\n      type: 'package'\n    };\n    const data = U.wrapper(response.data);\n    data.sort((a, b) => b.score - a.score);\n    return {\n      data: data,\n      type: 'package'\n    };\n  }\n}","map":{"version":3,"names":["LNamedElement","U","Api","MemoRec","structuralFeature","me","named","fromPointer","id","model","classes","memorecClasses","myClass","attributes","map","x","name","references","push","methodInvocations","memorecModel","methodDeclarations","memorecObject","context","response","post","memorec","wrapper","data","type","sort","a","b","score","classifier","packages","memorecPackages","myPackage"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/api/memorec/index.ts"],"sourcesContent":["import {GObject, Json, LModelElement, LNamedElement, U} from '../../joiner';\r\nimport {MemoRecModel, MemoRecNamed, MemoRecObject} from './types';\r\nimport Api from '../../data/api';\r\n\r\nexport default class MemoRec {\r\n    static async structuralFeature(me: LModelElement): Promise<{data: GObject[], type:'class'|'package'}> {\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const classes = model.classes;\r\n        const memorecClasses: MemoRecNamed[] = [];\r\n        for(const myClass of classes) {\r\n            const attributes = myClass.attributes.map(x => x.name);\r\n            const references = myClass.references.map(x => x.name);\r\n            memorecClasses.push({name: myClass.name, methodInvocations: [...attributes, ...references]});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecClasses};\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        const response = await Api.post(`${Api.memorec}/structuralFeatures`, U.wrapper<Json>(memorecObject));\r\n        if(!response.data) return {data: [], type: 'class'}\r\n        const data: GObject[] = U.wrapper<GObject[]>(response.data);\r\n        data.sort((a, b) => b.score - a.score);\r\n        return {data: data, type: 'class'};\r\n    }\r\n\r\n    static async classifier(me: LModelElement): Promise<{data: GObject[], type:'class'|'package'}> {\r\n        const named: LNamedElement = LNamedElement.fromPointer(me.id);\r\n        const model = me.model;\r\n        const packages= model.packages;\r\n        const memorecPackages: MemoRecNamed[] = [];\r\n        for(const myPackage of packages) {\r\n            const classes = myPackage.classes.map(x => x.name);\r\n            memorecPackages.push({name: myPackage.name, methodInvocations: classes});\r\n        }\r\n        const memorecModel: MemoRecModel = {name: model.name, methodDeclarations: memorecPackages};\r\n        const memorecObject: MemoRecObject = {context: named.name, model: memorecModel};\r\n        const response = await Api.post(`${Api.memorec}/classes`, U.wrapper<Json>(memorecObject));\r\n        if(!response.data) return {data: [], type: 'package'}\r\n        const data: GObject[] = U.wrapper<GObject[]>(response.data);\r\n        data.sort((a, b) => b.score - a.score);\r\n        return {data: data, type: 'package'};\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}