{"ast":null,"code":"var utils = require('jstransform/src/utils');\nvar Syntax = require('jstransform').Syntax;\nmodule.exports = visitNode;\n\n/**\r\n * Visit tag node and desugar JSX.\r\n *\r\n * @see {@link https://github.com/facebook/jstransform}\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\nfunction visitNode(traverse, object, path, state) {\n  var options = state.g.opts;\n  var factory = options.factory;\n  var arrayChildren = options.arrayChildren;\n  var openingEl = object.openingElement;\n  var closingEl = object.closingElement;\n  var nameObj = openingEl.name;\n  var attributes = openingEl.attributes;\n  var spreadFn = options.spreadFn;\n  var unknownTagPattern = options.unknownTagPattern;\n  if (!options.renameAttrs) {\n    options.renameAttrs = {};\n  }\n  utils.catchup(openingEl.range[0], state, trimLeft);\n  var tagName = nameObj.name;\n  var isJSXIdentifier = nameObj.type === Syntax.JSXIdentifier;\n  var knownTag = tagName[0] !== tagName[0].toUpperCase() && isJSXIdentifier;\n  var hasAtLeastOneSpreadAttribute = attributes.some(function (attr) {\n    return attr.type === Syntax.JSXSpreadAttribute;\n  });\n  var secondArg = false;\n  if (knownTag) {\n    utils.append(factory + \"('\", state); // DOM('div', ...)\n  } else if (options.passUnknownTagsToFactory) {\n    if (options.unknownTagsAsString) {\n      utils.append(factory + \"('\", state);\n    } else {\n      utils.append(factory + '(', state);\n    }\n  }\n  utils.move(nameObj.range[0], state);\n  if (knownTag) {\n    // DOM('div', ...)\n    utils.catchup(nameObj.range[1], state);\n    utils.append(\"'\", state);\n    secondArg = true;\n  } else if (options.passUnknownTagsToFactory) {\n    // DOM(Component, ...)\n    utils.catchup(nameObj.range[1], state);\n    if (options.unknownTagsAsString) {\n      utils.append(\"'\", state);\n    }\n    secondArg = true;\n  } else {\n    // Component(...)\n    tagName = unknownTagPattern.replace('{tag}', nameObj.name);\n    utils.append(tagName, state);\n    utils.move(nameObj.range[1] + (tagName.length - nameObj.name.length), state);\n    utils.append('(', state);\n  }\n  if (hasAtLeastOneSpreadAttribute) {\n    if (options.passUnknownTagsToFactory || knownTag) {\n      utils.append(', ' + spreadFn + '({', state);\n    } else {\n      utils.append(spreadFn + '({', state);\n    }\n  } else if (attributes.length) {\n    if (secondArg) {\n      utils.append(', ', state);\n    }\n    utils.append('{', state);\n  }\n  var previousWasSpread = false;\n  attributes.forEach(function (attr, index) {\n    var isLast = index === attributes.length - 1;\n    if (attr.type === Syntax.JSXSpreadAttribute) {\n      // close the previous or initial object\n      if (!previousWasSpread) {\n        utils.append('}, ', state);\n      }\n\n      // Move to the expression start, ignoring everything except parenthesis\n      // and whitespace.\n      utils.catchup(attr.range[0], state, stripNonParen);\n      // Plus 1 to skip `{`.\n      utils.move(attr.range[0] + 1, state);\n      utils.catchup(attr.argument.range[0], state, stripNonParen);\n      traverse(attr.argument, path, state);\n      utils.catchup(attr.argument.range[1], state);\n\n      // Move to the end, ignoring parenthesis and the closing `}`\n      utils.catchup(attr.range[1] - 1, state, stripNonParen);\n      if (!isLast) {\n        utils.append(', ', state);\n      }\n      utils.move(attr.range[1], state);\n      previousWasSpread = true;\n      return;\n    }\n\n    // If the next attribute is a spread, we're effective last in this object\n    if (!isLast) {\n      isLast = attributes[index + 1].type === Syntax.JSXSpreadAttribute;\n    }\n    var name;\n    if (attr.name.namespace) {\n      name = attr.name.namespace.name + ':' + attr.name.name.name;\n    } else {\n      name = attr.name.name;\n    }\n    utils.catchup(attr.range[0], state, trimLeft);\n    if (previousWasSpread) {\n      utils.append('{', state);\n    }\n    utils.append(quoteJSObjKey(name) + ': ', state);\n    if (attr.value) {\n      utils.move(attr.name.range[1], state);\n      utils.catchupNewlines(attr.value.range[0], state);\n      if (attr.value.type === Syntax.Literal) {\n        renderJSXLiteral(attr.value, isLast, state);\n      } else {\n        renderJSXExpressionContainer(traverse, attr.value, isLast, path, state);\n      }\n    } else {\n      state.g.buffer += 'true';\n      state.g.position = attr.name.range[1];\n      if (!isLast) {\n        utils.append(', ', state);\n      }\n    }\n    utils.catchup(attr.range[1], state, trimLeft);\n    previousWasSpread = false;\n  });\n  if (!openingEl.selfClosing) {\n    utils.catchup(openingEl.range[1] - 1, state, trimLeft);\n    utils.move(openingEl.range[1], state);\n  }\n  if (attributes.length && !previousWasSpread) {\n    utils.append('}', state);\n  }\n  if (hasAtLeastOneSpreadAttribute) {\n    utils.append(')', state);\n  }\n\n  // filter out whitespace\n  var children = object.children.filter(function (child) {\n    return !(child.type === Syntax.Literal && typeof child.value === 'string' && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/));\n  });\n  if (children.length) {\n    if (!attributes.length) {\n      if (secondArg) {\n        utils.append(', ', state);\n      }\n      utils.append('null', state);\n    }\n    var lastRenderableIndex;\n    children.forEach(function (child, index) {\n      if (child.type !== Syntax.JSXExpressionContainer || child.expression.type !== Syntax.JSXEmptyExpression) {\n        lastRenderableIndex = index;\n      }\n    });\n    if (lastRenderableIndex !== undefined) {\n      utils.append(', ', state);\n    }\n    if (arrayChildren && children.length) {\n      utils.append('[', state);\n    }\n    children.forEach(function (child, index) {\n      utils.catchup(child.range[0], state, trimLeft);\n      var isFirst = index === 0;\n      var isLast = index >= lastRenderableIndex;\n      if (child.type === Syntax.Literal) {\n        renderJSXLiteral(child, isLast, state);\n      } else if (child.type === Syntax.JSXExpressionContainer) {\n        renderJSXExpressionContainer(traverse, child, isLast, path, state);\n      } else {\n        traverse(child, path, state);\n        if (!isLast) {\n          utils.append(',', state);\n        }\n      }\n      utils.catchup(child.range[1], state, trimLeft);\n    });\n  }\n  if (openingEl.selfClosing) {\n    // everything up to />\n    utils.catchup(openingEl.range[1] - 2, state, trimLeft);\n    utils.move(openingEl.range[1], state);\n  } else {\n    // everything up to </close>\n    utils.catchup(closingEl.range[0], state, trimLeft);\n    utils.move(closingEl.range[1], state);\n  }\n  if (arrayChildren && children.length) {\n    utils.append(']', state);\n  }\n  utils.append(')', state);\n  return false;\n}\n\n/**\r\n * Returns true if node is JSX tag.\r\n *\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\nvisitNode.test = function (object, path, state) {\n  return object.type === Syntax.JSXElement;\n};\n\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {Object} state\r\n * @param {Number} start\r\n * @param {Number} end\r\n * @private\r\n */\nfunction renderJSXLiteral(object, isLast, state, start, end) {\n  var lines = object.value.split(/\\r\\n|\\n|\\r/);\n  if (start) {\n    utils.append(start, state);\n  }\n  var lastNonEmptyLine = 0;\n  lines.forEach(function (line, index) {\n    if (line.match(/[^ \\t]/)) {\n      lastNonEmptyLine = index;\n    }\n  });\n  lines.forEach(function (line, index) {\n    var isFirstLine = index === 0;\n    var isLastLine = index === lines.length - 1;\n    var isLastNonEmptyLine = index === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    var trimmedLine = line.replace(/\\t/g, ' ');\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, '');\n    }\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, '');\n    }\n    if (!isFirstLine) {\n      utils.append(line.match(/^[ \\t]*/)[0], state);\n    }\n    if (trimmedLine || isLastNonEmptyLine) {\n      utils.append(JSON.stringify(trimmedLine) + (!isLastNonEmptyLine ? \" + ' ' +\" : ''), state);\n      if (isLastNonEmptyLine) {\n        if (end) {\n          utils.append(end, state);\n        }\n        if (!isLast) {\n          utils.append(', ', state);\n        }\n      }\n\n      // only restore tail whitespace if line had literals\n      if (trimmedLine && !isLastLine) {\n        utils.append(line.match(/[ \\t]*$/)[0], state);\n      }\n    }\n    if (!isLastLine) {\n      utils.append('\\n', state);\n    }\n  });\n  utils.move(object.range[1], state);\n}\n\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\nfunction renderJSXExpressionContainer(traverse, object, isLast, path, state) {\n  // Plus 1 to skip `{`.\n  utils.move(object.range[0] + 1, state);\n  traverse(object.expression, path, state);\n  if (!isLast && object.expression.type !== Syntax.JSXEmptyExpression) {\n    // If we need to append a comma, make sure to do so after the expression.\n    utils.catchup(object.expression.range[1], state, trimLeft);\n    utils.append(', ', state);\n  }\n\n  // Minus 1 to skip `}`.\n  utils.catchup(object.range[1] - 1, state, trimLeft);\n  utils.move(object.range[1], state);\n  return false;\n}\n\n/**\r\n * Quote invalid object literal keys.\r\n *\r\n * @param {String} name\r\n * @returns {String}\r\n * @private\r\n */\nfunction quoteJSObjKey(name) {\n  if (!/^[a-z_$][a-z\\d_$]*$/i.test(name)) {\n    return \"'\" + name + \"'\";\n  }\n  return name;\n}\n\n/**\r\n * Trim whitespace left of `val`.\r\n *\r\n * @param {String} val\r\n * @returns {String}\r\n * @private\r\n */\nfunction trimLeft(val) {\n  return val.replace(/^ +/, '');\n}\n\n/**\r\n * Removes all non-parenthesis characters\r\n */\nvar reNonParen = /([^\\(\\)])/g;\nfunction stripNonParen(value) {\n  return value.replace(reNonParen, '');\n}","map":{"version":3,"names":["utils","require","Syntax","module","exports","visitNode","traverse","object","path","state","options","g","opts","factory","arrayChildren","openingEl","openingElement","closingEl","closingElement","nameObj","name","attributes","spreadFn","unknownTagPattern","renameAttrs","catchup","range","trimLeft","tagName","isJSXIdentifier","type","JSXIdentifier","knownTag","toUpperCase","hasAtLeastOneSpreadAttribute","some","attr","JSXSpreadAttribute","secondArg","append","passUnknownTagsToFactory","unknownTagsAsString","move","replace","length","previousWasSpread","forEach","index","isLast","stripNonParen","argument","namespace","quoteJSObjKey","value","catchupNewlines","Literal","renderJSXLiteral","renderJSXExpressionContainer","buffer","position","selfClosing","children","filter","child","match","lastRenderableIndex","JSXExpressionContainer","expression","JSXEmptyExpression","undefined","isFirst","test","JSXElement","start","end","lines","split","lastNonEmptyLine","line","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","JSON","stringify","val","reNonParen"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/node_modules/jsx-transform/lib/visitor.js"],"sourcesContent":["var utils = require('jstransform/src/utils');\r\nvar Syntax = require('jstransform').Syntax;\r\n\r\nmodule.exports = visitNode;\r\n\r\n/**\r\n * Visit tag node and desugar JSX.\r\n *\r\n * @see {@link https://github.com/facebook/jstransform}\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nfunction visitNode(traverse, object, path, state) {\r\n  var options = state.g.opts;\r\n  var factory = (options.factory);\r\n  var arrayChildren = options.arrayChildren\r\n  var openingEl = object.openingElement;\r\n  var closingEl = object.closingElement;\r\n  var nameObj = openingEl.name;\r\n  var attributes = openingEl.attributes;\r\n  var spreadFn = options.spreadFn;\r\n  var unknownTagPattern = options.unknownTagPattern;\r\n\r\n  if (!options.renameAttrs) {\r\n    options.renameAttrs = {};\r\n  }\r\n\r\n  utils.catchup(openingEl.range[0], state, trimLeft);\r\n\r\n  var tagName = nameObj.name;\r\n  var isJSXIdentifier = nameObj.type === Syntax.JSXIdentifier;\r\n  var knownTag = tagName[0] !== tagName[0].toUpperCase() && isJSXIdentifier;\r\n  var hasAtLeastOneSpreadAttribute = attributes.some(function (attr) {\r\n    return attr.type === Syntax.JSXSpreadAttribute;\r\n  });\r\n  var secondArg = false;\r\n\r\n  if (knownTag) {\r\n    utils.append(factory + \"('\", state); // DOM('div', ...)\r\n  } else if (options.passUnknownTagsToFactory) {\r\n    if (options.unknownTagsAsString) {\r\n      utils.append(factory + \"('\", state);\r\n    } else {\r\n      utils.append(factory + '(', state);\r\n    }\r\n  }\r\n\r\n  utils.move(nameObj.range[0], state);\r\n\r\n  if (knownTag) {\r\n    // DOM('div', ...)\r\n    utils.catchup(nameObj.range[1], state);\r\n    utils.append(\"'\", state);\r\n    secondArg = true\r\n  } else if (options.passUnknownTagsToFactory) {\r\n    // DOM(Component, ...)\r\n    utils.catchup(nameObj.range[1], state);\r\n    if (options.unknownTagsAsString) {\r\n      utils.append(\"'\", state);\r\n    }\r\n    secondArg = true\r\n  } else {\r\n    // Component(...)\r\n    tagName = unknownTagPattern.replace('{tag}', nameObj.name);\r\n    utils.append(tagName, state);\r\n    utils.move(\r\n      nameObj.range[1] + (tagName.length - nameObj.name.length),\r\n      state\r\n    );\r\n    utils.append('(', state);\r\n  }\r\n\r\n  if (hasAtLeastOneSpreadAttribute) {\r\n    if (options.passUnknownTagsToFactory || knownTag) {\r\n      utils.append(', ' + spreadFn + '({', state);\r\n    } else {\r\n      utils.append(spreadFn + '({', state);\r\n    }\r\n  } else if (attributes.length) {\r\n    if (secondArg) {\r\n      utils.append(', ', state);\r\n    }\r\n    utils.append('{', state);\r\n  }\r\n\r\n  var previousWasSpread = false;\r\n\r\n  attributes.forEach(function(attr, index) {\r\n    var isLast = (index === (attributes.length - 1));\r\n\r\n    if (attr.type === Syntax.JSXSpreadAttribute) {\r\n      // close the previous or initial object\r\n      if (!previousWasSpread) {\r\n        utils.append('}, ', state);\r\n      }\r\n\r\n      // Move to the expression start, ignoring everything except parenthesis\r\n      // and whitespace.\r\n      utils.catchup(attr.range[0], state, stripNonParen);\r\n      // Plus 1 to skip `{`.\r\n      utils.move(attr.range[0] + 1, state);\r\n      utils.catchup(attr.argument.range[0], state, stripNonParen);\r\n\r\n      traverse(attr.argument, path, state);\r\n\r\n      utils.catchup(attr.argument.range[1], state);\r\n\r\n      // Move to the end, ignoring parenthesis and the closing `}`\r\n      utils.catchup(attr.range[1] - 1, state, stripNonParen);\r\n\r\n      if (!isLast) {\r\n        utils.append(', ', state);\r\n      }\r\n\r\n      utils.move(attr.range[1], state);\r\n\r\n      previousWasSpread = true;\r\n\r\n      return;\r\n    }\r\n\r\n    // If the next attribute is a spread, we're effective last in this object\r\n    if (!isLast) {\r\n      isLast = attributes[index + 1].type === Syntax.JSXSpreadAttribute;\r\n    }\r\n\r\n    var name\r\n    if (attr.name.namespace) {\r\n      name = attr.name.namespace.name + ':' + attr.name.name.name\r\n    }\r\n    else {\r\n      name = attr.name.name;\r\n    }\r\n\r\n    utils.catchup(attr.range[0], state, trimLeft);\r\n\r\n    if (previousWasSpread) {\r\n      utils.append('{', state);\r\n    }\r\n\r\n    utils.append(quoteJSObjKey(name) + ': ', state);\r\n\r\n    if (attr.value) {\r\n      utils.move(attr.name.range[1], state);\r\n      utils.catchupNewlines(attr.value.range[0], state);\r\n      if (attr.value.type === Syntax.Literal) {\r\n        renderJSXLiteral(attr.value, isLast, state);\r\n      } else {\r\n        renderJSXExpressionContainer(traverse, attr.value, isLast, path, state);\r\n      }\r\n    } else {\r\n      state.g.buffer += 'true';\r\n      state.g.position = attr.name.range[1];\r\n      if (!isLast) {\r\n        utils.append(', ', state);\r\n      }\r\n    }\r\n\r\n    utils.catchup(attr.range[1], state, trimLeft);\r\n\r\n    previousWasSpread = false;\r\n  });\r\n\r\n  if (!openingEl.selfClosing) {\r\n    utils.catchup(openingEl.range[1] - 1, state, trimLeft);\r\n    utils.move(openingEl.range[1], state);\r\n  }\r\n\r\n  if (attributes.length && !previousWasSpread) {\r\n    utils.append('}', state);\r\n  }\r\n\r\n  if (hasAtLeastOneSpreadAttribute) {\r\n    utils.append(')', state);\r\n  }\r\n\r\n  // filter out whitespace\r\n  var children = object.children.filter(function(child) {\r\n    return !(child.type === Syntax.Literal\r\n    && typeof child.value === 'string'\r\n    && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/));\r\n  });\r\n\r\n  if (children.length) {\r\n    if (!attributes.length) {\r\n      if (secondArg) {\r\n        utils.append(', ', state);\r\n      }\r\n      utils.append('null', state);\r\n    }\r\n    var lastRenderableIndex;\r\n\r\n    children.forEach(function(child, index) {\r\n      if (child.type !== Syntax.JSXExpressionContainer ||\r\n        child.expression.type !== Syntax.JSXEmptyExpression) {\r\n        lastRenderableIndex = index;\r\n      }\r\n    });\r\n\r\n    if (lastRenderableIndex !== undefined) {\r\n      utils.append(', ', state);\r\n    }\r\n\r\n    if (arrayChildren && children.length) {\r\n      utils.append('[', state);\r\n    }\r\n\r\n    children.forEach(function(child, index) {\r\n      utils.catchup(child.range[0], state, trimLeft);\r\n\r\n      var isFirst = index === 0;\r\n      var isLast = index >= lastRenderableIndex;\r\n\r\n      if (child.type === Syntax.Literal) {\r\n        renderJSXLiteral(child, isLast, state);\r\n      } else if (child.type === Syntax.JSXExpressionContainer) {\r\n        renderJSXExpressionContainer(traverse, child, isLast, path, state);\r\n      } else {\r\n        traverse(child, path, state);\r\n        if (!isLast) {\r\n          utils.append(',', state);\r\n        }\r\n      }\r\n\r\n      utils.catchup(child.range[1], state, trimLeft);\r\n    });\r\n  }\r\n\r\n  if (openingEl.selfClosing) {\r\n    // everything up to />\r\n    utils.catchup(openingEl.range[1] - 2, state, trimLeft);\r\n    utils.move(openingEl.range[1], state);\r\n  } else {\r\n    // everything up to </close>\r\n    utils.catchup(closingEl.range[0], state, trimLeft);\r\n    utils.move(closingEl.range[1], state);\r\n  }\r\n\r\n  if (arrayChildren && children.length) {\r\n    utils.append(']', state);\r\n  }\r\n\r\n  utils.append(')', state);\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns true if node is JSX tag.\r\n *\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nvisitNode.test = function(object, path, state) {\r\n  return object.type === Syntax.JSXElement;\r\n};\r\n\r\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {Object} state\r\n * @param {Number} start\r\n * @param {Number} end\r\n * @private\r\n */\r\nfunction renderJSXLiteral(object, isLast, state, start, end) {\r\n  var lines = object.value.split(/\\r\\n|\\n|\\r/);\r\n\r\n  if (start) {\r\n    utils.append(start, state);\r\n  }\r\n\r\n  var lastNonEmptyLine = 0;\r\n\r\n  lines.forEach(function (line, index) {\r\n    if (line.match(/[^ \\t]/)) {\r\n      lastNonEmptyLine = index;\r\n    }\r\n  });\r\n\r\n  lines.forEach(function (line, index) {\r\n    var isFirstLine = index === 0;\r\n    var isLastLine = index === lines.length - 1;\r\n    var isLastNonEmptyLine = index === lastNonEmptyLine;\r\n\r\n    // replace rendered whitespace tabs with spaces\r\n    var trimmedLine = line.replace(/\\t/g, ' ');\r\n\r\n    // trim whitespace touching a newline\r\n    if (!isFirstLine) {\r\n      trimmedLine = trimmedLine.replace(/^[ ]+/, '');\r\n    }\r\n    if (!isLastLine) {\r\n      trimmedLine = trimmedLine.replace(/[ ]+$/, '');\r\n    }\r\n\r\n    if (!isFirstLine) {\r\n      utils.append(line.match(/^[ \\t]*/)[0], state);\r\n    }\r\n\r\n    if (trimmedLine || isLastNonEmptyLine) {\r\n      utils.append(\r\n        JSON.stringify(trimmedLine) +\r\n        (!isLastNonEmptyLine ? \" + ' ' +\" : ''),\r\n        state);\r\n\r\n      if (isLastNonEmptyLine) {\r\n        if (end) {\r\n          utils.append(end, state);\r\n        }\r\n        if (!isLast) {\r\n          utils.append(', ', state);\r\n        }\r\n      }\r\n\r\n      // only restore tail whitespace if line had literals\r\n      if (trimmedLine && !isLastLine) {\r\n        utils.append(line.match(/[ \\t]*$/)[0], state);\r\n      }\r\n    }\r\n\r\n    if (!isLastLine) {\r\n      utils.append('\\n', state);\r\n    }\r\n  });\r\n\r\n  utils.move(object.range[1], state);\r\n}\r\n\r\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nfunction renderJSXExpressionContainer(traverse, object, isLast, path, state) {\r\n  // Plus 1 to skip `{`.\r\n  utils.move(object.range[0] + 1, state);\r\n  traverse(object.expression, path, state);\r\n\r\n  if (!isLast && object.expression.type !== Syntax.JSXEmptyExpression) {\r\n    // If we need to append a comma, make sure to do so after the expression.\r\n    utils.catchup(object.expression.range[1], state, trimLeft);\r\n    utils.append(', ', state);\r\n  }\r\n\r\n  // Minus 1 to skip `}`.\r\n  utils.catchup(object.range[1] - 1, state, trimLeft);\r\n  utils.move(object.range[1], state);\r\n  return false;\r\n}\r\n\r\n/**\r\n * Quote invalid object literal keys.\r\n *\r\n * @param {String} name\r\n * @returns {String}\r\n * @private\r\n */\r\nfunction quoteJSObjKey(name) {\r\n  if (!/^[a-z_$][a-z\\d_$]*$/i.test(name)) {\r\n    return \"'\" + name + \"'\";\r\n  }\r\n  return name;\r\n}\r\n\r\n/**\r\n * Trim whitespace left of `val`.\r\n *\r\n * @param {String} val\r\n * @returns {String}\r\n * @private\r\n */\r\nfunction trimLeft(val) {\r\n  return val.replace(/^ +/, '');\r\n}\r\n\r\n/**\r\n * Removes all non-parenthesis characters\r\n */\r\nvar reNonParen = /([^\\(\\)])/g;\r\nfunction stripNonParen(value) {\r\n  return value.replace(reNonParen, '');\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}