{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppendExpression = void 0;\nvar Expression_1 = require(\"../Expression\");\n/**\n * Appends the given element to the given collection and returns the extended collection.\n *\n * @oclExpression append(elem : T) : Collection<T>\n * @oclExample self.collection->append(\"string\")\n */\nvar AppendExpression = /** @class */function (_super) {\n  __extends(AppendExpression, _super);\n  function AppendExpression() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AppendExpression.prototype.evaluate = function (visitor, localVariables) {\n    var source = this.getSource().evaluate(visitor, localVariables);\n    var body = this.getBody() ? this.getBody().evaluate(visitor, localVariables) : undefined;\n    if (Array.isArray(source) && !!body) {\n      source.push(body);\n    }\n    return source;\n  };\n  return AppendExpression;\n}(Expression_1.BodyBasedExpression);\nexports.AppendExpression = AppendExpression;","map":{"version":3,"names":["Expression_1","require","AppendExpression","_super","__extends","prototype","evaluate","visitor","localVariables","source","getSource","body","getBody","undefined","Array","isArray","push","BodyBasedExpression","exports"],"sources":["../../../../lib/components/expressions/collection/AppendExpression.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA;;;;;;AAMA,IAAAC,gBAAA,0BAAAC,MAAA;EAAsCC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAAtC,SAAAD,iBAAA;;EAcA;EAbIA,gBAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,OAA4B,EAAEC,cAAoB;IACvD,IAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE,CAC1BJ,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;IAEtC,IAAMG,IAAI,GAAG,IAAI,CAACC,OAAO,EAAE,GAAG,IAAI,CAACA,OAAO,EAAE,CACvCN,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC,GAAGK,SAAS;IAElD,IAAIC,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,IAAI,CAAC,CAACE,IAAI,EAAE;MACjCF,MAAM,CAACO,IAAI,CAACL,IAAI,CAAC;;IAGrB,OAAOF,MAAM;EACjB,CAAC;EACL,OAAAP,gBAAC;AAAD,CAAC,CAdqCF,YAAA,CAAAiB,mBAAmB;AAA5CC,OAAA,CAAAhB,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script"}