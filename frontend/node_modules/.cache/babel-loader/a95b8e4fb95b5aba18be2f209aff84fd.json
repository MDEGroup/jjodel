{"ast":null,"code":"var _dec,_class,_class2;import React,{Component}from\"react\";import{createPortal}from\"react-dom\";import{connect}from\"react-redux\";import'./graphElement.scss';import{Point,Pointers,TRANSACTION,GraphPoint,Selectors}from\"../../joiner\";import{LGraphElement,store,BEGIN,CreateElementAction,DClass,Debug,DEdge,DEnumerator,DGraph,DGraphElement,DModel,DObject,DPackage,DPointerTargetable,DUser,DV,EMeasurableEvents,END,GraphElementOwnProps,GraphElementReduxStateProps,JSXT,Keystrokes,Log,LPointerTargetable,MyProxyHandler,RuntimeAccessible,SetFieldAction,SetRootFieldAction,U,UX,windoww,transientProperties}from\"../../joiner\";import{NodeTransientProperties}from\"../../joiner/classes\";// const Selectors: typeof Selectors_ = windoww.Selectors;\n/*\r\nexport function makeEvalContext(view: LViewElement, state: DState, ownProps: GraphElementOwnProps, stateProps: GraphElementReduxStateProps): GObject {\r\n    let component = GraphElementComponent.map[ownProps.nodeid as Pointer<DGraphElement>];\r\n    let allProps = {...ownProps, ...stateProps};\r\n    let parsedConstants = stateProps.view._parsedConstants;\r\n    let evalContext: GObject = {\r\n        model: stateProps.data,\r\n        ...ownProps,\r\n        ...stateProps,\r\n        edge: (RuntimeAccessibleClass.extends(stateProps.node?.className, \"DVoidEdge\") ? stateProps.node : undefined),\r\n        state,\r\n        ownProps,\r\n        stateProps,\r\n        props: allProps,\r\n        component,\r\n        constants: parsedConstants,\r\n        // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\r\n        ...parsedConstants,\r\n        // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\r\n    };\r\n    evalContext.__proto__ = windoww.defaultContext;\r\n    transientProperties.node[ownProps.nodeid as string].evalContext = evalContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>, state: DState): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    const evalContext = makeEvalContext(view, state, ownProps, stateProps);\r\n    // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\r\n\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n\r\n}*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function computeUsageDeclarations(component,allProps,state,lview){// compute usageDeclarations\nlet udret={__notInitialized:true};const view=lview.__raw;const vid=view.id;const constants=transientProperties.view[vid].constants;let UDEvalContext={...allProps,...constants,constants,component,view:lview,// data and node are inherited through props, but view needs redefinition\nusageDeclarations:undefined,stateProps:allProps,props:allProps,ownProps:allProps,state};//transientProperties.node[stateProps.nodeid].evalContext;\n/*\r\n*\r\n        \"constants\": true, \"usageDeclarations\": true,\r\n        \"component\": true,\r\n        \"htmlindex\": true,\r\n        \"state\": true, \"stateProps\": true, \"ownProps\": true,*/if(!view.usageDeclarations){udret={data:allProps.data,view,node:allProps.node};}else try{transientProperties.view[vid].UDFunction.call(UDEvalContext,UDEvalContext,udret);// console.log(\"computing usage declarations: \", {f:transientProperties.view[vid].UDFunction, udret, UDEvalContext});\n}catch(e){e.isSyntax=false;udret={data:allProps.data,view,node:allProps.node,__invalidUsageDeclarations:e};// \"@runtime:\" +e};\nLog.ee(\"Invalid usage declarations\",{e,str:view.usageDeclarations,view,data:allProps.data,stateProps:allProps});}transientProperties.node[allProps.nodeid].viewScores[vid].usageDeclarations=udret;// do not merge to create jsx final context now, because if shouldcomponentupdate fails, i want to keep the OLD context for measurable events.\nreturn udret;}let debugcount=0;let maxRenderCounter=Number.POSITIVE_INFINITY;export const lightModeAllowedElements=[DModel.cname,DPackage.cname,DClass.cname,DEnumerator.cname,DObject.cname];function getScores(ret,ownProps){return Selectors.getAppliedViewsNew({data:ret.data,node:ret.node,nid:ownProps.nodeid,pv:ownProps.parentViewId&&DPointerTargetable.from(ownProps.parentViewId)});}const countRenders=true;export let GraphElementComponent=(_dec=RuntimeAccessible('GraphElementComponent'),_dec(_class=(_class2=class GraphElementComponent extends Component{static defaultShouldComponentUpdate(instance,nextProps,nextState,nextContext){return!U.shallowEqual(instance.props,nextProps)||!U.shallowEqual(instance.state,nextState);}// requires data and node wrapping first\nstatic mapViewStuff(state,ret,ownProps){var _tn$validMainViews,_tn$mainView,_ownProps$view,_ret$node,_ret$node$father,_ret$node2;// let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\n// console.log(\"viewsss mapstate 3 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, vv:ret.view, ownProps, stateProps:{...ret}, thiss:this});\nret.parentviewid=ownProps.parentViewId;const explicitView=ret.view||ownProps.view;const explicitViews=ret.views||ownProps.views;let scores=undefined;let tn=transientProperties.node[ownProps.nodeid];// tn === scores if getScore is called (getScore have a sideeffect)\nif(!tn)transientProperties.node[ownProps.nodeid]=tn=new NodeTransientProperties();if(explicitView){let idorname=Pointers.from(explicitView)||explicitView;ret.view=tn.mainView=LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname,state));}if(!ret.view){var _scores$mainView,_ret$view;// if view is not explicitly set or the assigned view is not found, match a new one.\nif(!scores)scores=getScores(ret,ownProps);ret.view=scores.mainView=LPointerTargetable.fromPointer((_scores$mainView=scores.mainView)===null||_scores$mainView===void 0?void 0:_scores$mainView.id,state);Log.w(!!explicitView,\"Requested main view \"+ownProps.view+\" not found. Another view got assigned: \"+((_ret$view=ret.view)===null||_ret$view===void 0?void 0:_ret$view.__raw.name),{requested:ownProps.view,props:ownProps,state:ret});}if(!((_tn$validMainViews=tn.validMainViews)===null||_tn$validMainViews===void 0?void 0:_tn$validMainViews[0])||tn.validMainViews[0].id!==((_tn$mainView=tn.mainView)===null||_tn$mainView===void 0?void 0:_tn$mainView.id))tn.validMainViews=[tn.mainView,...(tn.validMainViews||[])];// @ts-ignore\nlet vname=!ret.view&&ownProps.view?' Check the manual assignment of props view={\"'+(((_ownProps$view=ownProps.view)===null||_ownProps$view===void 0?void 0:_ownProps$view.name)||ownProps.view)+'\"}':'';let pview=!ret.view?(_ret$node=ret.node)===null||_ret$node===void 0?void 0:(_ret$node$father=_ret$node.father)===null||_ret$node$father===void 0?void 0:_ret$node$father.view:undefined;Log.ex(!ret.view,\"Could not find any view applicable to element.\"+vname+(pview?' in view \"'+pview.name+'\"':''),{data:ret.data,props:ownProps,state:ret,scores:ret.viewScores,nid:ownProps.nodeid,tn:transientProperties.node[ownProps.nodeid]});if(explicitViews){// ret.views = tn.stackViews = LPointerTargetable.fromArr(explicitView);\nlet views=[];for(let v of explicitViews){let idorname=Pointers.from(v)||v;let view=LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname,state));if(view)views.push(view);else Log.ww(\"Requested decorative view \"+v+\" not found.\",{requested:v,idorname,props:ownProps,state:ret});}ret.views=tn.stackViews=views;}if(!ret.views){// if views is not explicitly set. (if some are not found, they are just missing by choice, will not replace)\nif(!scores){scores=getScores(ret,ownProps);ret.views=scores.stackViews;}else ret.views=scores.stackViews=LPointerTargetable.fromArr((scores.stackViews||[]).map(v=>v===null||v===void 0?void 0:v.id).filter(vid=>!!vid));}// console.log(\"viewsss mapstate 4 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps: {...ret}, thiss:this});\nret.viewsid=Pointers.fromArr(ret.views);ret.viewid=ret.view.id;let dnode=(_ret$node2=ret.node)===null||_ret$node2===void 0?void 0:_ret$node2.__raw;if(dnode)dnode.view=ret.viewid;ret.viewScores=tn;// debug only\n}static mapLModelStuff(state,ownProps,ret){// NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\nif(typeof ownProps.data===\"object\"){ret.dataid=ownProps.data.id;}else ret.dataid=ownProps.data;ret.data=LPointerTargetable.wrap(ret.dataid);// forcing re-wrapping even if props was a dobject or lobject, because i want to get the latest version of it.\n/*\r\n        const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n        // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n        ret.data = MyProxyHandler.wrap(meid, state);\r\n        // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n        */}static mapLGraphElementStuff(state,ownProps,ret){let dGraphElementDataClass=arguments.length>3&&arguments[3]!==undefined?arguments[3]:DGraphElement;let isDGraph=arguments.length>4?arguments[4]:undefined;let nodeid=ownProps.nodeid;let graphid=isDGraph?isDGraph.id:ownProps.graphid;let parentnodeid=ownProps.parentnodeid;ret.nodeid=nodeid;let tn=transientProperties.node[nodeid];if(!tn)tn=transientProperties.node[nodeid]=new NodeTransientProperties();// let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\n// Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\n/*if (!nodeid) {\r\n            nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '_' + stateProps.view.id : '') + '_1';\r\n            stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n            todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n        }*/let graph=DPointerTargetable.from(graphid,state);// se non c'è un grafo lo creo\nif(!graph){// Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\nif(ret.data)CreateElementAction.new(DGraph.new(0,ret.data.id,parentnodeid,graphid,graphid));}/*else {\r\n            graph = MyProxyHandler.wrap(graph);\r\n            Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n        }*/let dnode=DPointerTargetable.from(nodeid,state);// console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\nif(!dnode&&!DPointerTargetable.pendingCreation[nodeid]){/*\r\n            console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n                pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/ // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\nlet dge;/*\r\n            if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n                let initialSize = ownProps.initialSize;\r\n                dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            } else*/if(dGraphElementDataClass===DEdge){var _ret$data;// set start and end from ownprops;\nlet edgeOwnProps=ownProps;let edgeStateProps=ret;let startnodeid=LGraphElement.getNodeId(edgeOwnProps.start);let endnodeid=LGraphElement.getNodeId(edgeOwnProps.end);if(!startnodeid){startnodeid=LGraphElement.getNodeId(ret.data);}edgeStateProps.start=LPointerTargetable.fromPointer(startnodeid);edgeStateProps.end=LPointerTargetable.fromPointer(endnodeid);Log.e(!startnodeid,\"Cannot create an edge without start node\",{startnodeid,data:ret.data,propsStart:edgeOwnProps.start});Log.e(!endnodeid,\"Cannot create an edge without end node (yet)\",{endnodeid,data:ret.data,propsEnd:edgeOwnProps.end});if(!startnodeid||!endnodeid)return;let longestLabel=edgeOwnProps.label;let labels=edgeOwnProps.labels;// dge = DEdge.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\nlet ddata=(_ret$data=ret.data)===null||_ret$data===void 0?void 0:_ret$data.__raw;dge=DEdge.new2(ddata===null||ddata===void 0?void 0:ddata.id,parentnodeid,graphid,nodeid,startnodeid,endnodeid,d=>{//d.longestLabel = longestLabel;\n//d.labels = labels;\nd.isReference=!!edgeOwnProps.isReference;if(edgeOwnProps.isValue!==undefined)d.isValue=!!edgeOwnProps.isValue;else d.isValue=!!(d.isReference&&ddata&&ddata.className==='DValue');if(d.isValue)d.isReference=false;d.isDependency=!!edgeOwnProps.isDepencency;d.isExtend=!!edgeOwnProps.isExtend;let tn=transientProperties.node[nodeid];if(!tn)transientProperties.node[nodeid]={};tn.onDelete=edgeOwnProps.onDelete;tn.labels=labels;tn.longestLabel=longestLabel;d.zIndex=edgeOwnProps.htmlindex||1;if(edgeOwnProps.anchorStart)d.anchorStart=edgeOwnProps.anchorStart;if(edgeOwnProps.anchorEnd)d.anchorEnd=edgeOwnProps.anchorEnd;});edgeStateProps.node=edgeStateProps.edge=MyProxyHandler.wrap(dge);}else{var _ret$data2;let initialSize=ownProps.initialSize;dge=dGraphElementDataClass.new(ownProps.htmlindex,(_ret$data2=ret.data)===null||_ret$data2===void 0?void 0:_ret$data2.id,parentnodeid,graphid,nodeid,initialSize);if(!tn)transientProperties.node[nodeid]={};tn.onDelete=ownProps.onDelete;ret.node=MyProxyHandler.wrap(dge);}// console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\n}else{ret.node=MyProxyHandler.wrap(dnode);if(dGraphElementDataClass===DEdge)ret.edge=ret.node;}if(ret.dataid){// set up transient model-> node map\nlet ta=transientProperties.modelElement[ret.dataid];if(!ta)transientProperties.modelElement[ret.dataid]={nodes:{}};ta.nodes[ownProps.nodeid]=ret.node;ta.node=ret.node;}}////// mapper func\nstatic mapStateToProps(state,ownProps){let dGraphDataClass=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DGraphElement;let startingobj=arguments.length>3?arguments[3]:undefined;// console.log('dragx GE mapstate', {dGraphDataClass});\nlet ret=startingobj||GraphElementReduxStateProps.new();// NB: cannot use a constructor, must be pojo\n// console.log(\"viewsss mapstate 0 \" + ownProps.view + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\nGraphElementComponent.mapLModelStuff(state,ownProps,ret);if(Debug.lightMode&&(!ret.data||!lightModeAllowedElements.includes(ret.data.className))){return ret;}// console.log(\"map ge\", {ownProps, ret, state});\nGraphElementComponent.mapLGraphElementStuff(state,ownProps,ret,dGraphDataClass);// console.log(\"viewsss mapstate 2 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\nGraphElementComponent.mapViewStuff(state,ret,ownProps);// console.log(\"viewsss mapstate 5 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\nLog.exDev(!ret.view||!ret.views,'failed to assign view:',{state,ownProps,reduxProps:ret});// @ts-ignore\nret.key=ret.key||ownProps.key;// @ts-ignore\nret.forceupdate=state.forceupdate;// Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\nU.removeEmptyObjectKeys(ret);return ret;}static mapDispatchToProps(dispatch){const ret={};return ret;}// undefined or view.clonedCounter;\n// undefined or data.clonedCounter;\nshouldComponentUpdate(nextProps,nextState,nextContext,oldProps){var _nextProps$data;if(!oldProps)oldProps=this.props;//for subviewcomponent\nif(nextProps.__skipRender)return true;let debug=false;// return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\nlet data=(_nextProps$data=nextProps.data)===null||_nextProps$data===void 0?void 0:_nextProps$data.__raw;let out={reason:undefined};let skipDeepKeys={pointedBy:true,clonedCounter:true};// clonedCounter is checked manually before looping object keys\n// let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\nlet ret=false;// !U.isShallowEqualWithProxies(oldProps, nextProps, 0, 1, skipPropKeys, out);\n// if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\nlet component=nextProps.node.component;const nid=nextProps.nodeid;// U.arrayDiff()\nfor(let v of nextProps.views){const vid=v.__raw.id;let nodeviewentry=transientProperties.node[nid].viewScores[vid];let old_ud=nodeviewentry.usageDeclarations;computeUsageDeclarations(component,nextProps,nextState,v);let new_ud=nodeviewentry.usageDeclarations;nodeviewentry.shouldUpdate=!U.isShallowEqualWithProxies(old_ud,new_ud,skipDeepKeys,out);nodeviewentry.shouldUpdate_reason={...out};nodeviewentry.shouldUpdate_reasonDebug={old_ud,new_ud};Log.l(debug,\"DECORATIVE_VIEW ShouldComponentUpdate \"+(data===null||data===void 0?void 0:data.name)+(nodeviewentry.shouldUpdate?\" UPDATED \":\" REJECTED \")+vid,{ret:nodeviewentry.shouldUpdate,reason:out.reason,old_ud,new_ud,oldProps:oldProps,nextProps,vid});if(!ret&&nodeviewentry.shouldUpdate)ret=true;}const vid=nextProps.view.__raw.id;let nodeviewentry=transientProperties.node[nextProps.nodeid].viewScores[vid];let old_ud=nodeviewentry.usageDeclarations;computeUsageDeclarations(component,nextProps,nextState,nextProps.view);let new_ud=nodeviewentry.usageDeclarations;nodeviewentry.shouldUpdate=!U.isShallowEqualWithProxies(old_ud,new_ud,skipDeepKeys,out);nodeviewentry.shouldUpdate_reason={...out};nodeviewentry.shouldUpdate_reasonDebug={old_ud,new_ud};Log.l(debug,\"ShouldComponentUpdate \"+(data===null||data===void 0?void 0:data.name)+(nodeviewentry.shouldUpdate?\" UPDATED \":\" REJECTED \")+vid,{ret:nodeviewentry.shouldUpdate,reason:out.reason,old_ud,new_ud,oldProps:oldProps,nextProps});if(!ret&&nodeviewentry.shouldUpdate)ret=true;return ret;// if any of main view or decorative views need updating\n// apparently node changes are not working? also check docklayout shouldupdate\n}doMeasurableEvent(type,vid){if(Debug.lightMode)return false;let measurableFunc=transientProperties.view[vid][type];if(!measurableFunc)return false;let context=this.getJSXContext(vid);// context + usagedeclarations of main view only\ntry{measurableFunc.call(context,context);console.log(\"measurable executed\",{type,measurableFunc,vid,transient:transientProperties.view[vid]});}catch(e){Log.ee('Error in measurable \"'+type+'\" '+e.message,{e,measurableFunc,context});}// it has executed at least partially.\n// i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\nreturn true;}select(forUser){var _this$props$node,_this$props$data;// if (forUser === DUser.current && this.html.current) this.html.current.focus();\nBEGIN();(_this$props$node=this.props.node)===null||_this$props$node===void 0?void 0:_this$props$node.select(forUser);SetRootFieldAction.new('_lastSelected',{node:this.props.nodeid,view:this.props.view.id,modelElement:(_this$props$data=this.props.data)===null||_this$props$data===void 0?void 0:_this$props$data.id});/*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n            //selected[forUser] = id;\r\n            SetRootFieldAction.new('selected', id, '', true);\r\n        }*/ // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\nEND();}constructor(props,context){super(props,context);this.id=void 0;this.countRenders=void 0;this._isMounted=void 0;this.html=void 0;this.lastViewChanges=void 0;this.lastOnUpdateChanges=void 0;this.stopUpdateEvents=void 0;this.dataOldClonedCounter=void 0;this.lastViewChanges=[];this.lastOnUpdateChanges=[];this.stopUpdateEvents=undefined;this._isMounted=false;this.countRenders=0;this.id=GraphElementComponent.maxid++;GraphElementComponent.all[this.id]=this;GraphElementComponent.map[props.nodeid]=this;// props might change at runtime, setting in constructor is not enough\nthis.html=/*#__PURE__*/React.createRef();let functionsToBind=[this.onClick,this.onLeave,this.onEnter,this.doContextMenu,this.onContextMenu,this.onMouseDown,this.onMouseUp,this.onKeyDown,this.onScroll,this.onMouseMove];/*\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onLeave = this.onLeave.bind(this);\r\n        this.onContextMenu = this.onContextMenu.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.select = this.select.bind(this);*/for(let f of functionsToBind)this[f.name]=f.bind(this);// @ts-ignore\nthis.state={classes:[]};this.shouldComponentUpdate(this.props,this.state,undefined,undefined);}// constants: evalutate solo durante il primo render, può essere una funzione con effetti collaterali sul componente,\n// in tal caso la si esegue e si prende il valore di ritorno.\n// preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\n// jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\ncomponentDidMount(){// after first render\nthis._isMounted=true;}componentWillUnmount(){// todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista più.\n//  e non venga cancellato se il componente viene smontato perchè ho solo cambiato vista\n//  LOW PRIORITY perchè funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\n// if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\n}/*\r\n        componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n            const newProps = this.props\r\n            if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n    }*/getJSXContext(vid){let context=transientProperties.node[this.props.nodeid].viewScores[vid].evalContext;if(context&&context.component)return context;// else rebuild + update it\nlet tnv=transientProperties.node[this.props.nodeid].viewScores[vid];let tv=transientProperties.view[vid];context=tnv.evalContext={...this.props,...tv.constants,...tnv.usageDeclarations,// add component stuff that could not be computed in reducer\ncomponent:this,otherViews:this.props.views,constants:tv.constants,usageDeclarations:tnv.usageDeclarations,props:this.props};context._context=context;return context;}static displayError(e,where,view,data,node){let asString=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let printData=arguments.length>6?arguments[6]:undefined;// const view: LViewElement = this.props.view; //data._transient.currentView;\nlet errormsg=(where===\"preRenderFunc\"?\"Pre-Render \":\"\")+(e.message||\"\\n\").split(\"\\n\")[0];if(e.message.indexOf(\"Unexpected token .\")>=0||view.jsxString.indexOf('?.')>=0||view.jsxString.indexOf('??')>=0){errormsg+='\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.';}else if(view.jsxString.indexOf('?.')>=0){errormsg+='\\n\\nReminder: ?. operator and empty tags <></> are not supported.';}else if(e.message.indexOf(\"Unexpected token '<'\")!==-1){errormsg+='\\n\\nDid you forgot to close a html </tag>?';}try{let ee=e.stack||\"\";let stackerrorlast=ee.split(\"\\n\")[1];let icol=stackerrorlast.lastIndexOf(\":\");let jsxString=view.jsxString;// let col = stackerrorlast.substring(icol+1);\nlet irow=stackerrorlast.lastIndexOf(\":\",icol-1);const offset={row:-2,col:1};let stackerrorlinenum={row:Number.parseInt(stackerrorlast.substring(irow+1,icol))+offset.row,col:Number.parseInt(stackerrorlast.substring(icol+1))+offset.col};let linesPre=1;let linesPost=1;let jsxlines=jsxString.split(\"\\n\");let culpritlinesPre=jsxlines.slice(stackerrorlinenum.row-linesPre-1,stackerrorlinenum.row-1);let culpritline=jsxlines[stackerrorlinenum.row-1];// stack start counting lines from 1\nlet culpritlinesPost=jsxlines.slice(stackerrorlinenum.row,stackerrorlinenum.row+linesPost);console.error(\"errr\",{e,node,jsxlines,culpritlinesPre,culpritline,culpritlinesPost,stackerrorlinenum,icol,irow,stackerrorlast});if(stackerrorlinenum.col-offset.col>(culpritline===null||culpritline===void 0?void 0:culpritline.length)&&stackerrorlinenum.row===1)stackerrorlinenum.col=0;let caretCursor=\"▓\";// ⵊ ꕯ 𝙸 Ꮖ\nif(culpritline&&stackerrorlinenum.col-offset.col<=(culpritline===null||culpritline===void 0?void 0:culpritline.length)&&stackerrorlast.indexOf(\"main.chunk.js\")===-1){let rowPre=culpritline.substring(0,stackerrorlinenum.col);let rowPost=culpritline.substring(stackerrorlinenum.col);let jsxcode=/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:\"monospaced sans-serif\",color:\"#444\"},children:[culpritlinesPre.map(l=>/*#__PURE__*/_jsx(\"div\",{children:l})),/*#__PURE__*/_jsxs(\"div\",{children:[rowPre,\" \",/*#__PURE__*/_jsxs(\"b\",{style:{color:\"red\"},children:[\" \",caretCursor,\" \"]}),\" \",rowPost]}),culpritlinesPost.map(l=>/*#__PURE__*/_jsx(\"div\",{children:l}))]});errormsg+=\" @ line \"+stackerrorlinenum.row+\", col:\"+stackerrorlinenum.col;if(asString)return DV.errorView_string('<div>'+errormsg+'\\n'+jsxcode+'</div>',{where:\"in \"+where+\"()\",e,template:view.jsxString,view:view},where,data,node,view);return DV.errorView(/*#__PURE__*/_jsxs(\"div\",{children:[errormsg,jsxcode]}),{where:\"in \"+where+\"()\",e,template:view.jsxString,view:view},where,data,node,view);}else{// it means it is likely accessing a minified.js src code, sending generic error without source mapping\n}}catch(e2){Log.eDevv(\"internal error in error view\",{e,e2,where});return null;}if(asString)return DV.errorView_string('<div>'+errormsg+'</div>',{where:\"in \"+where+\"()\",e,template:view.jsxString,view:view},where,data,node,view);return DV.errorView(/*#__PURE__*/_jsx(\"div\",{children:errormsg}),{where:\"in \"+where+\"()\",e,template:view.jsxString,view:view,...(printData||{})},where,data,node,view);}/*\r\n    protected getTemplate(): ReactNode {\r\n        /*if (!this.state.template) {\r\n            this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n        }* /\r\n        // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n\r\n        // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n        if (this.props.invalidUsageDeclarations) {\r\n            return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\r\n        }\r\n        let context: GObject = this.getContext();\r\n        // abababababab\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        try {\r\n            let preRenderFuncStr: string | undefined = this.props.view.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let obj: GObject = {};\r\n                let tempContext: GObject = {__param: obj};\r\n                tempContext.__proto__ = context;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(context, obj);\r\n            }\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\");  }\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(this.props.view.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Syntax\"); }\r\n\r\n        try { ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', context); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Semantic\"); }\r\n        return ret;\r\n    }*/getTemplate3(vid,v,context){let tnv=transientProperties.node[this.props.nodeid].viewScores[vid];let tv=transientProperties.view[vid];// console.log(\"getTemplate jsx\", {vid, v, context, tnv, tv, shouldUp: tnv.shouldUpdate, jsxFunc:tv.JSXFunction});\nlet ret=this.getTemplate3_(vid,v,context);return ret;}getTemplate3_(vid,v,context){let tnv=transientProperties.node[this.props.nodeid].viewScores[vid];if(!tnv.shouldUpdate&&tnv.jsxOutput)return tnv.jsxOutput;let tv=transientProperties.view[vid];let ret=tnv.jsxOutput=tv.JSXFunction?tv.JSXFunction.call(context,context):null;if(typeof ret===\"object\"&&ret!==null&&!/*#__PURE__*/React.isValidElement(ret)){// plain objects cannot be react nodes, but react noeds are objects. so i try serializing\n// this only happens if someone puts an object in jsx\ntry{ret=JSON.stringify(ret);}catch(e){ret=\"{__ Cyclic Object __}\";}}return ret;}getTemplate2(v,udContext){// todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\n/*\r\n        let thisContext: GObject = {};\r\n        try {\r\n            let preRenderFuncStr: string | undefined = v.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let tempContext: GObject = {__param: thisContext};\r\n                this.addToContext(udContext, {__param: thisContext});\r\n                tempContext.__proto__ = sharedContext;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(thisContext, udContext);\r\n                // thisContext.__proto__ = sharedContext;\r\n            } else thisContext = udContext;\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\", v);  }*/let ret;// eval template\nlet jsxCodeString;try{jsxCodeString=JSXT.fromString(v.jsxString,{factory:'React.createElement'});}catch(e){var _this$props$data2,_this$props$node2;return GraphElementComponent.displayError(e,\"JSX Syntax\",v.__raw,(_this$props$data2=this.props.data)===null||_this$props$data2===void 0?void 0:_this$props$data2.__raw,(_this$props$node2=this.props.node)===null||_this$props$node2===void 0?void 0:_this$props$node2.__raw);}// console.log('context for ' + (this.props.data?.name), {udContext});\ntry{let parsedFunc=U.parseFunctionWithContextAndScope('()=>{ return '+jsxCodeString+'}',udContext,udContext);ret=parsedFunc(udContext);/// ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', udContext);\n}catch(e){var _this$props$data3,_this$props$node3;return GraphElementComponent.displayError(e,\"JSX Semantic\",v.__raw,(_this$props$data3=this.props.data)===null||_this$props$data3===void 0?void 0:_this$props$data3.__raw,(_this$props$node3=this.props.node)===null||_this$props$node3===void 0?void 0:_this$props$node3.__raw,false,{udContext});}return ret;}onContextMenu(e){e.preventDefault();e.stopPropagation();// NOT executed here, but on mousedown because of IOS compatibility\n}doContextMenu(e){var _state$contextMenu;BEGIN();this.props.node.select();if(this.html.current)this.html.current.focus();let state=store.getState();if(((_state$contextMenu=state.contextMenu)===null||_state$contextMenu===void 0?void 0:_state$contextMenu.x)!==e.clientX){var _this$props$node4;SetRootFieldAction.new(\"contextMenu\",{display:true,x:e.clientX,y:e.clientY,nodeid:(_this$props$node4=this.props.node)===null||_this$props$node4===void 0?void 0:_this$props$node4.id});}END();}onEnter(e){var _this$props$isEdgePen,_this$props$data4;// instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\nconst isEdgePending=(_this$props$isEdgePen=this.props.isEdgePending)===null||_this$props$isEdgePen===void 0?void 0:_this$props$isEdgePen.source;if(!isEdgePending||((_this$props$data4=this.props.data)===null||_this$props$data4===void 0?void 0:_this$props$data4.className)!==\"DClass\")return;const extendError={reason:'',allTargetSuperClasses:[]};const canBeExtend=isEdgePending.canExtend(this.props.data,extendError);if(canBeExtend)this.setState({classes:[...this.state.classes,\"class-can-be-extended\"]});else this.setState({classes:[...this.state.classes,\"class-cannot-be-extended\"]});}onLeave(e){var _this$props$data5;if(((_this$props$data5=this.props.data)===null||_this$props$data5===void 0?void 0:_this$props$data5.className)!==\"DClass\")return;this.setState({classes:this.state.classes.filter(classname=>{return classname!==\"class-can-be-extended\"&&classname!==\"class-cannot-be-extended\";})});}onMouseDown(e){if(UX.isStoppedEvt(e))return;e.stopPropagation();GraphElementComponent.mousedownComponent=this;TRANSACTION(()=>{if(e.button===Keystrokes.clickRight){this.doContextMenu(e);}let p=this.props;console.log('try drag',{p,ig:p.isGraph,iv:p.isVertex,e});// if ((p.isGraph && !p.isVertex) || (p.isGraph && p.isVertex && e.ctrlKey)) GraphDragManager.startPanning(e, this.props.node as LGraph);\n});}onScroll(e){console.log(\"onScroll\");let scroll=new Point(e.currentTarget.scrollLeft,e.currentTarget.scrollTop);let scrollOrigin=new Point(e.nativeEvent.offsetX,e.nativeEvent.offsetY);let g=this.props.node.graph;let oldZoom=g.zoom;let newZoom=new GraphPoint(oldZoom.x+0.1,oldZoom.y+0.1);let oldOffset=g.offset;let gscrollOrigin=oldOffset.add(scrollOrigin.multiply(oldZoom,true),true);let newscrollOrigin=oldOffset.add(scrollOrigin.multiply(newZoom,true),true);let newOffset=oldOffset.add(gscrollOrigin.subtract(newscrollOrigin,true),true);TRANSACTION(()=>{g.offset=newOffset;g.zoom=newZoom;});e.stopPropagation();}onMouseMove(e){//this.onMouseUp(e);\n}onMouseUp(e){let frommousemove=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;e.stopPropagation();TRANSACTION(()=>{//GraphDragManager.stopPanning(e);\nif(GraphElementComponent.mousedownComponent!==this){return;}if(!frommousemove)this.doOnClick(e);});}onKeyDown(e){var _this$props$data6;console.log('keydown',e.key,{e,m:(_this$props$data6=this.props.data)===null||_this$props$data6===void 0?void 0:_this$props$data6.name});let target=e.target;switch(target===null||target===void 0?void 0:target.tagName.toLowerCase()){case'input':case'textarea':e.stopPropagation();return;default:if((target===null||target===void 0?void 0:target.getAttribute('contenteditable'))==='true'){e.stopPropagation();return;}}if(!(this.props.isGraph&&!this.props.isVertex))e.stopPropagation();if(e.key===Keystrokes.escape){this.props.node.deselect();if(this.props.isEdgePending){// this.stopPendingEdge(); todo\nreturn;}}let isDelete=false;if(e.key===Keystrokes.delete){isDelete=true;}if(e.shiftKey){var _this$props$data7;// todo: make them a switch\nif(e.key===\"D\"||e.key===\"d\")(_this$props$data7=this.props.data)===null||_this$props$data7===void 0?void 0:_this$props$data7.duplicate();else if(e.key===\"R\"||e.key===\"r\"){isDelete=true;}}console.log('keydown isDelete',isDelete);if(isDelete){let nid=this.props.nodeid;let tn=transientProperties.node[nid];TRANSACTION(()=>{if(tn&&tn.onDelete&&tn.onDelete(this.props.node)===false)return;// if shapeless, erase the node directly.\nif(!this.props.data){this.props.node.delete();return;}// if dictated by the model, change the model to erase indirectly the node.\nif(!this.props.isEdge){this.props.data.delete();return;}// if edge\nlet e=this.props.node;let de=e.__raw;if(de.isExtend){let data=this.props.data;data.unsetExtends(e.end.model);// SetFieldAction(data.id, 'extends', )\n}if(de.isReference){if(this.props.data.className==='DReference'){let ref=this.props.data;ref.type=ref.father.id;}else{let lval=this.props.data;lval.remove(e.end.model);}}if(de.isDependency){// pkg dependency\nlet ref=this.props.data;}else{}});}if(e.ctrlKey){var _this$props$data8,_this$props$data9,_this$props$data10,_this$props$data11,_this$props$data12,_this$props$data13,_this$props$data14,_this$props$data15,_this$props$data16,_this$props$data17;// if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\nif(e.key===\"a\")(_this$props$data8=this.props.data)===null||_this$props$data8===void 0?void 0:_this$props$data8.addChild(\"auto\");else// add class if on package, literal if on enum...\nif(e.key===\"r\")(_this$props$data9=this.props.data)===null||_this$props$data9===void 0?void 0:_this$props$data9.addChild(\"reference\");else if(e.key===\"o\")((_this$props$data10=this.props.data)===null||_this$props$data10===void 0?void 0:_this$props$data10.addChild(\"operation\"))||((_this$props$data11=this.props.data)===null||_this$props$data11===void 0?void 0:_this$props$data11.addChild(\"object\"));else if(e.key===\"l\")(_this$props$data12=this.props.data)===null||_this$props$data12===void 0?void 0:_this$props$data12.addChild(\"literal\");else if(e.key===\"p\")((_this$props$data13=this.props.data)===null||_this$props$data13===void 0?void 0:_this$props$data13.addChild(\"package\"))||((_this$props$data14=this.props.data)===null||_this$props$data14===void 0?void 0:_this$props$data14.addChild(\"parameter\"));else if(e.key===\"c\")(_this$props$data15=this.props.data)===null||_this$props$data15===void 0?void 0:_this$props$data15.addChild(\"class\");else if(e.key===\"e\")(_this$props$data16=this.props.data)===null||_this$props$data16===void 0?void 0:_this$props$data16.addChild(\"enumerator\");else if(e.key===\"q\")(_this$props$data17=this.props.data)===null||_this$props$data17===void 0?void 0:_this$props$data17.addChild(\"annotation\");else;}}doOnClick(e){var _state$contextMenu2,_this$props$isEdgePen2,_this$props$data18,_this$props$node5,_this$props$node6,_this$props$node7,_this$props$node8,_state$_lastSelected;// (e.target as any).focus();\ne.stopPropagation();let state=store.getState();if(e.button!==Keystrokes.clickRight&&((_state$contextMenu2=state.contextMenu)===null||_state$contextMenu2===void 0?void 0:_state$contextMenu2.display))SetRootFieldAction.new(\"contextMenu\",{display:false,x:0,y:0});// todo: need to move it on document or <App>\nconst edgePendingSource=(_this$props$isEdgePen2=this.props.isEdgePending)===null||_this$props$isEdgePen2===void 0?void 0:_this$props$isEdgePen2.source;console.log('mousedown select() check PRE:',{e,name:(_this$props$data18=this.props.data)===null||_this$props$data18===void 0?void 0:_this$props$data18.name,isSelected:this.props.node.isSelected(),'nodeIsSelectedMapProxy':(_this$props$node5=this.props.node)===null||_this$props$node5===void 0?void 0:_this$props$node5.isSelected,nodeIsSelectedRaw:(_this$props$node6=this.props.node)===null||_this$props$node6===void 0?void 0:_this$props$node6.__raw.isSelected});if(edgePendingSource){var _this$props$data19;if(((_this$props$data19=this.props.data)===null||_this$props$data19===void 0?void 0:_this$props$data19.className)!==\"DClass\")return;// const user = this.props.isEdgePending.user;\nconst extendError={reason:'',allTargetSuperClasses:[]};const canBeExtend=this.props.data&&edgePendingSource.canExtend(this.props.data,extendError);if(canBeExtend&&this.props.data){const lClass=LPointerTargetable.from(this.props.data.id);// SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\n// todo: use source.addExtends(lClass); or something (source is LClass)\nSetFieldAction.new(lClass.id,\"extendedBy\",edgePendingSource.id,\"+=\",true);SetFieldAction.new(edgePendingSource.id,\"extends\",lClass.id,\"+=\",true);}SetRootFieldAction.new('isEdgePending',{user:'',source:''});return;}console.log('mousedown select() check:',{e,isSelected:this.props.node.isSelected(),'nodeIsSelectedMapProxy':(_this$props$node7=this.props.node)===null||_this$props$node7===void 0?void 0:_this$props$node7.isSelected,nodeIsSelectedRaw:(_this$props$node8=this.props.node)===null||_this$props$node8===void 0?void 0:_this$props$node8.__raw.isSelected});BEGIN();windoww.node=this.props.node;this.props.node.toggleSelected(DUser.current);if(((_state$_lastSelected=state._lastSelected)===null||_state$_lastSelected===void 0?void 0:_state$_lastSelected.node)!==this.props.nodeid){var _this$props$data20;SetRootFieldAction.new('_lastSelected',{node:this.props.nodeid,view:this.props.view.id,modelElement:(_this$props$data20=this.props.data)===null||_this$props$data20===void 0?void 0:_this$props$data20.id});}if(e.shiftKey||e.ctrlKey){}else{var _this$props$node9;let allNodes=(_this$props$node9=this.props.node)===null||_this$props$node9===void 0?void 0:_this$props$node9.graph.allSubNodes;let nid=this.props.node.id;if(allNodes)for(let node of allNodes)if(node.id!==nid)node.deselect(DUser.current);}END();}onClick(e){}onDataUpdateMeasurable(view,vid,index){if(index>0){this.doMeasurableEvent(EMeasurableEvents.onDataUpdate,vid);return;}// only on first of a sequence of onDataUpdate events for all stackviews (the mainview),\n// set time of current stack of updates, to check if they are generating a loop\n// EMeasurableEvents.onDataUpdate -> handling and checking for loops\nif(!this.stopUpdateEvents||this.stopUpdateEvents!==this.props.view.clonedCounter){this.stopUpdateEvents=undefined;if(this.props.data&&this.dataOldClonedCounter!==this.props.data.clonedCounter&&this.doMeasurableEvent(EMeasurableEvents.onDataUpdate,vid)){var _this$lastOnUpdateCha;this.dataOldClonedCounter=this.props.data.clonedCounter;let thischange={t:Date.now()};this.lastOnUpdateChanges.push(thischange);if(thischange.t-((_this$lastOnUpdateCha=this.lastOnUpdateChanges[this.lastOnUpdateChanges.length-10])===null||_this$lastOnUpdateCha===void 0?void 0:_this$lastOnUpdateCha.t)<300){var _this$lastOnUpdateCha2;// if N updates in <= 0.2 sec\nthis.stopUpdateEvents=this.props.view.clonedCounter;Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\",{change_log:this.lastOnUpdateChanges,component:this,timediff:thischange.t-((_this$lastOnUpdateCha2=this.lastOnUpdateChanges[this.lastOnUpdateChanges.length-10])===null||_this$lastOnUpdateCha2===void 0?void 0:_this$lastOnUpdateCha2.t)});}}}}// returns: true if an action is fired and component needs re-rendering\nupdateNodeFromProps(props){let ret=false;let tn=transientProperties.node[props.nodeid];let ptr;if(!props.node)return false;let node=props.node;let dnode=node.__raw;let edge=props.node;let dedge=dnode;// if edge.label props is func, do not set in the dedge, just in transientproperties. totally override the \"text\" system.\n// it does not need collab sync:\n// because if the view is active for the other user, his synched jsx will generate the same function in transientProperties.\n// if it is inactive it does not matter, the value is not used.\nif(props.label){tn.longestLabel=props.label;}if(props.onDelete){tn.onDelete=props.onDelete;}if(props.longestLabel){tn.longestLabel=props.longestLabel;}if(props.labels){tn.labels=props.labels;}if(props.anchorStart&&props.isEdge){edge.anchorStart=props.anchorStart;}if(props.anchorEnd&&props.isEdge){edge.anchorEnd=props.anchorEnd;}if(props.start&&props.isEdge){ptr=Pointers.from(props.start);if(dedge.id!==ptr)edge.start=ptr;}// console.log(\"changing endpt\", props, props.end, props.end?.model?.name);\nif(props.end&&props.isEdge){ptr=Pointers.from(props.end);if(dedge.id!==ptr)edge.end=ptr;}if(props.anchorEnd){tn.labels=props.labels;}// if (typeof props.viewid === 'string') { let old = props.viewid; if (old !== props.node.view.id) { this.forceUpdate(); ret = true;} }\nif(typeof props.isReference){let old=dedge.isReference;let n=!!props.isReference;if(old!==n){edge.isReference=n;ret=true;}}if(typeof props.isExtend){let old=dedge.isExtend;let n=!!props.isExtend;if(old!==n){edge.isExtend=n;ret=true;}}if(typeof props.isValue){let old=dedge.isValue;let n=!!props.isValue;if(old!==n){edge.isValue=n;ret=true;}}if(typeof props.isDependency){let old=dedge.isDependency;let n=!!props.isDependency;if(old!==n){edge.isDependency=n;ret=true;}}if(typeof props.x==='number'){let old=dnode.x;let n=+props.x;if(old!==n){node.x=n;ret=true;}}if(typeof props.y==='number'){let old=dnode.y;let n=+props.y;if(old!==n){node.y=n;ret=true;}}// risk loop: todo loop detection and skip setting\nif(typeof props.w==='number'){let old=dnode.w;let n=+props.w;if(old!==n){node.w=n;ret=true;}}if(typeof props.h==='number'){let old=dnode.h;let n=+props.h;if(old!==n){node.h=n;ret=true;}}if(typeof props.width==='number'){let old=dnode.w;let n=+props.width;if(old!==n){node.w=n;ret=true;}}if(typeof props.height==='number'){let old=dnode.h;let n=+props.height;if(old!==n){node.h=n;ret=true;}}return ret;}render(){var _this$props$data21;let nodeType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let styleoverride=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let classes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];GraphElementComponent.map[this.props.nodeid]=this;// props might change at runtime, setting in constructor is not enough\nif(Debug.lightMode&&(!this.props.data||!lightModeAllowedElements.includes(this.props.data.className))){return this.props.data?/*#__PURE__*/_jsxs(\"div\",{children:[\" \"+this.props.data.name,\":\",this.props.data.className]}):undefined;}if(!this.props.node)return\"Loading...\";/*if (this.props.node.__raw.view !== this.props.view.id) {\r\n            this.onViewChange();\r\n            return \"Updating view...\";\r\n        }*/if(this.updateNodeFromProps(this.props))return'Updating...';let nid=this.props.nodeid;let allviews=[...this.props.views,this.props.view];// main view must be last, for renderView ordering\nfor(let i=0;i<allviews.length;i++){let v=allviews[i];const vid=v.id;let viewnodescore=transientProperties.node[nid].viewScores[v.id];if(!viewnodescore.shouldUpdate)continue;viewnodescore.evalContext=undefined;// force rebuild jsx context, needs to be done before renderView and measurable events\n// only if this exact view had UD changed, instead of being forced to rended by other in viewstack)\nthis.onDataUpdateMeasurable(v,vid,i);}/// set classes\nif(this.props.node){let isSelected=this.props.node.__raw.isSelected;if(isSelected){if(isSelected[DUser.current]){// todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\nclasses.push('selected-by-me');if(Object.keys(isSelected).length>1)classes.push('selected-by-others');}else if(Object.keys(isSelected).length)classes.push('selected-by-others');}}classes.push(((_this$props$data21=this.props.data)===null||_this$props$data21===void 0?void 0:_this$props$data21.className)||'DVoid');U.arrayMergeInPlace(classes,this.state.classes);if(Array.isArray(this.props.className)){U.arrayMergeInPlace(classes,this.props.className);}else if(this.props.className){classes.push(this.props.className);}if(Array.isArray(this.props.class)){U.arrayMergeInPlace(classes,this.props.class);}else if(this.props.class){classes.push(this.props.class);}/// end set classes\nlet mainView=this.props.view;let otherViews=this.props.views;let decoratorViewsOutput=[];/*\r\n        for (let v of this.props.views) {\r\n            if (v.isExclusiveView) {\r\n                if (mainView) continue;\r\n                mainView = v;\r\n            } else otherViews.push(v);\r\n        }*/let jsxOutput=undefined;const tn=transientProperties.node[nid];//console.log(\"render\", {mainView, otherViews, scores:tn.viewScores, tnv:tn.viewScores[this.props.viewid], ud:tn.viewScores[this.props.viewid].usageDeclarations});\nfor(let v of allviews){// main view is the last\nlet viewnodescore=transientProperties.node[nid].viewScores[v.id];jsxOutput=viewnodescore.shouldUpdate?undefined:viewnodescore.jsxOutput;let isMain=v===mainView||undefined;if(!jsxOutput)viewnodescore.jsxOutput=jsxOutput=this.renderView(this.props,v,nodeType,classes,styleoverride,isMain&&decoratorViewsOutput,mainView.id,isMain&&otherViews.map(v=>v.id));if(!isMain)decoratorViewsOutput.push(jsxOutput);if(viewnodescore.shouldUpdate)viewnodescore.shouldUpdate=false;// this needs to be placed post renderView call\n}let mainViewOutput=jsxOutput;return mainViewOutput;// console.log('rendering view stack', {mainView, otherViews, mainViewOutput, decoratorsJSX:decoratorViewsOutput});\n// windoww.debbugg = {mainViewOutput,otherViews, ret:<>renderrr{mainViewOutput}{otherViews}</>}\n// return this.props.data?.className === \"DValue\" ? <div>{mainView.jsxString}{mainViewElement}</div> : mainViewElement;\n}renderView(props,v,nodeType,classes,styleoverride,otherViews,mainviewid){var _props$node5;let subViewsID=arguments.length>7&&arguments[7]!==undefined?arguments[7]:[];let dv=v.__raw;const nid=props.nodeid;const vid=v.id;const tnv=transientProperties.node[nid].viewScores[vid];let ud=tnv.usageDeclarations;/*if (false && !ud) {\r\n            this.forceUpdate();\r\n            return <div>Loading...</div>;\r\n        }*/if(!ud)tnv.usageDeclarations=ud=computeUsageDeclarations(this,props,this.state,v);//console.log(\"renderView\", {dv, tnv, ud});\nif(ud.__invalidUsageDeclarations){var _this$props$data22,_this$props$node10;console.error(\"renderView error ud:\",{dv,tnv,ud});return GraphElementComponent.displayError(ud.__invalidUsageDeclarations,\"Usage Declaration \"+(ud.__invalidUsageDeclarations.isSyntax?\"Syntax\":\"Semantic\"),v.__raw,(_this$props$data22=this.props.data)===null||_this$props$data22===void 0?void 0:_this$props$data22.__raw,(_this$props$node10=this.props.node)===null||_this$props$node10===void 0?void 0:_this$props$node10.__raw,false,{ud});}let isMainView=!!otherViews;const context=this.getJSXContext(vid);if(isMainView)context.decorators=otherViews;let rnode;try{rnode=this.getTemplate3(vid,v,context);}catch(e){var _this$props$data23,_this$props$node11;console.error(\"renderView error get template:\",{e,dv,tnv});// rnode = undefined as any;\n// todo: move in reducer parser of jsx: catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\nrnode=GraphElementComponent.displayError(e,\"JSX Semantic\",v.__raw,(_this$props$data23=this.props.data)===null||_this$props$data23===void 0?void 0:_this$props$data23.__raw,(_this$props$node11=this.props.node)===null||_this$props$node11===void 0?void 0:_this$props$node11.__raw,false,{context});}let rawRElement=UX.ReactNodeAsElement(rnode);// \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\nfunction makeItArray(val){return val?[]:Array.isArray(val)?val:[val];}function getNodeText(node){if(['string','number'].includes(typeof node))return node;if(node instanceof Array)return node.map(getNodeText).join('');if(typeof node==='object'&&node)return getNodeText(node.props.children);}const addprops=true;let fiximport=!!this.props.node;//let a: false = true as any; if (a) return \"Loading...\";\n// if (this.props.data?.name === \"Concept 1\") console.log(\"shouldcomponentupdate rendering \" + this.props.data?.name, {cc: this.props.data.clonedCounter, attrs: (this.props.data as any).attributes});\nif(addprops&&rawRElement&&fiximport){if(windoww.debugcount&&debugcount++>windoww.debugcount)throw new Error(\"debug triggered stop\");let fixdoubleroot=true;// add view props to GraphElement children (any level down)\nconst subElements={};// this.props.getGVidMap();\ntry{let viewStyle={...(this.props.style||{})};/*\r\n                    if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n                    else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n                    if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n                    else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n                    viewStyle = {};\r\n                */ // viewStyle.pointerEvents = \"all\";\nlet injectProps={};if(isMainView){var _props$node,_props$node2,_props$node3;viewStyle.order=viewStyle.zIndex=(_props$node=props.node)===null||_props$node===void 0?void 0:_props$node.zIndex;// alias? this.props.node.z\nviewStyle.display=v===null||v===void 0?void 0:v.display;const me=props.data;// this.props.model;\nif(countRenders){classes.push(this.countRenders%2?\"animate-on-update-even\":\"animate-on-update-odd\");}/// let excludeProps = ['data', 'node', 'view', 'children', ]\nclasses.push(\"mainView\",dv.id);classes.push(...subViewsID);injectProps={ref:this.html,// damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (è perchè iniziano con <Select/> as root?)\nid:props.nodeid,\"data-nodeid\":props.nodeid,\"data-dataid\":me===null||me===void 0?void 0:me.id,\"data-viewid\":dv.id,\"data-modelname\":(me===null||me===void 0?void 0:me.className)||\"model-less\",\"data-userselecting\":JSON.stringify(((_props$node2=props.node)===null||_props$node2===void 0?void 0:_props$node2.isSelected)||{}),\"data-nodetype\":nodeType,// \"data-order\": this.props.node?.zIndex,\nstyle:{...viewStyle,...styleoverride},className:classes.join(' '),onClick:this.onClick,onContextMenu:this.onContextMenu,onMouseDown:this.onMouseDown,onMouseUp:this.onMouseUp,onMouseMove:this.onMouseMove,onKeyDown:this.onKeyDown,// onKeyUp: this.onKeyUp,\nonwheel:this.onScroll,onMouseEnter:this.onEnter,onMouseLeave:this.onLeave,tabIndex:props.tabIndex||-1,\"data-countrenders\":this.countRenders++,\"data-clonedcounter\":((_props$node3=props.node)===null||_props$node3===void 0?void 0:_props$node3.clonedCounter)||-1// decorators: otherViews,\n};let p=this.props;for(let k in p){if(typeof p[k]==='object'||typeof p[k]==='function')continue;if(!injectProps[k])injectProps[k]=p[k];}}else injectProps={\"data-viewid\":v.id,className:\"decorativeView \"+v.id,\"data-mainview\":mainviewid};let debug={};injectProps.children=UX.recursiveMap(rawRElement/*.props.children*/,(rn,index,depthIndexes)=>{let injectOffset=this.props.isGraph&&!depthIndexes[0]&&!index&&this.props.node;//injectOffset&&console.log(\"inject offset props0:\", {injectOffset});\n//console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\nreturn UX.injectProp(this,rn,subElements,this.props.parentnodeid,index,depthIndexes,injectOffset);});/*\r\n                debug.injectPropsOriginal = injectProps.children;\r\n                debug.recursivemap = injectProps.children;\r\n                debug.injectChildrensAttempt = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n                debug.rawRElement = {node:rawRElement, text: getNodeText(rawRElement)};*/if(otherViews&&false)injectProps.children=[...injectProps.children,...makeItArray(props.children),...otherViews];// injectProps.children = [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)];\nlet children=makeItArray(injectProps.children);// [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]; rawRElement.child are already in injectprops\n// injectProps.children = [<div>{children}</div>];//[]; making any change at injectprops.children breaks it?\nrawRElement=/*#__PURE__*/React.cloneElement(rawRElement,injectProps);//, ...children); // adding chioldrens after injectprops seems pointless\ndebug.rawRElementPostInjection={node:rawRElement,text:getNodeText(rawRElement)};// rawRElement = React.cloneElement(rawRElement, {children: [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]});\n// console.log('rendering view stack fixing doubles', {v0:rnode, v1:rawRElement, fixed:rawRElement.props.children})\nfixdoubleroot=false;// need to set the props to new root in that case.\nif(fixdoubleroot)rawRElement=rawRElement.props.children;// debug.rawRElementPostfixdoubleroot = {node:rawRElement, text: getNodeText(rawRElement)};\n// console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\n}catch(e){var _props$data,_props$node4;console.error(\"renderView error inject props:\",{e,dv,tnv});rawRElement=DV.errorView(\"error while injecting props to subnodes\\n:\"+(e.message||'').split('\\n')[0],{e,rawRElement,key:props.key,newid:props.nodeid},'Subelement props',(_props$data=props.data)===null||_props$data===void 0?void 0:_props$data.__raw,(_props$node4=props.node)===null||_props$node4===void 0?void 0:_props$node4.__raw,dv);/*\r\n                rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n                    DV.errorView(\"error while injecting props to subnodes\",\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n                    {});*/ // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\n}/*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n            let isEqual = true;\r\n            try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n            if (isEqual) {\r\n                this.props.node.subElements = Object.keys(subElements);\r\n            }*/}// const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n// rnode = React.cloneElement(rnode as ReactElement, injectprops);\n// console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\nif(false&&dv.isExclusiveView&&((_props$node5=props.node)===null||_props$node5===void 0?void 0:_props$node5.__raw).father){let $containedIn=$('#'+props.node.__raw.father);let $containerDropArea=$containedIn.find(\".VertexContainer\");const droparea=$containerDropArea[0]||$containedIn[0];Log.exDev(!droparea,'invalid vertex container target',{$containedIn,$containerDropArea});if(droparea)return/*#__PURE__*/createPortal(rawRElement||rnode,droparea);}/*\r\n        if (countRenders) return <>{[\r\n            rawRElement || rnode,\r\n            <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n        ]}</>/*/ //console.log(\"renderView return:\", rawRElement || rnode);\nreturn rawRElement||rnode;}},_class2.cname=void 0,_class2.all={},_class2.map={},_class2.defaultProps=GraphElementOwnProps.new(),_class2.maxid=0,_class2.mousedownComponent=void 0,_class2))||_class);// private\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\nconst GraphElementConnected=connect(GraphElementComponent.mapStateToProps,GraphElementComponent.mapDispatchToProps)(GraphElementComponent);export const GraphElement=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(GraphElementConnected,{...props,children});};// console.info('graphElement loaded');\nGraphElementComponent.cname=\"GraphElementComponent\";GraphElementConnected.cname=\"GraphElementConnected\";GraphElement.cname=\"GraphElement\";","map":{"version":3,"names":["React","Component","createPortal","connect","Point","Pointers","TRANSACTION","GraphPoint","Selectors","LGraphElement","store","BEGIN","CreateElementAction","DClass","Debug","DEdge","DEnumerator","DGraph","DGraphElement","DModel","DObject","DPackage","DPointerTargetable","DUser","DV","EMeasurableEvents","END","GraphElementOwnProps","GraphElementReduxStateProps","JSXT","Keystrokes","Log","LPointerTargetable","MyProxyHandler","RuntimeAccessible","SetFieldAction","SetRootFieldAction","U","UX","windoww","transientProperties","NodeTransientProperties","jsx","_jsx","jsxs","_jsxs","computeUsageDeclarations","component","allProps","state","lview","udret","__notInitialized","view","__raw","vid","id","constants","UDEvalContext","usageDeclarations","undefined","stateProps","props","ownProps","data","node","UDFunction","call","e","isSyntax","__invalidUsageDeclarations","ee","str","nodeid","viewScores","debugcount","maxRenderCounter","Number","POSITIVE_INFINITY","lightModeAllowedElements","cname","getScores","ret","getAppliedViewsNew","nid","pv","parentViewId","from","countRenders","GraphElementComponent","_dec","_class","_class2","defaultShouldComponentUpdate","instance","nextProps","nextState","nextContext","shallowEqual","mapViewStuff","_tn$validMainViews","_tn$mainView","_ownProps$view","_ret$node","_ret$node$father","_ret$node2","parentviewid","explicitView","explicitViews","views","scores","tn","idorname","mainView","fromD","getViewByIDOrNameD","_scores$mainView","_ret$view","fromPointer","w","name","requested","validMainViews","vname","pview","father","ex","v","push","ww","stackViews","fromArr","map","filter","viewsid","viewid","dnode","mapLModelStuff","dataid","wrap","mapLGraphElementStuff","dGraphElementDataClass","arguments","length","isDGraph","graphid","parentnodeid","graph","new","pendingCreation","dge","_ret$data","edgeOwnProps","edgeStateProps","startnodeid","getNodeId","start","endnodeid","end","propsStart","propsEnd","longestLabel","label","labels","ddata","new2","d","isReference","isValue","className","isDependency","isDepencency","isExtend","onDelete","zIndex","htmlindex","anchorStart","anchorEnd","edge","_ret$data2","initialSize","ta","modelElement","nodes","mapStateToProps","dGraphDataClass","startingobj","lightMode","includes","exDev","reduxProps","key","forceupdate","removeEmptyObjectKeys","mapDispatchToProps","dispatch","shouldComponentUpdate","oldProps","_nextProps$data","__skipRender","debug","out","reason","skipDeepKeys","pointedBy","clonedCounter","nodeviewentry","old_ud","new_ud","shouldUpdate","isShallowEqualWithProxies","shouldUpdate_reason","shouldUpdate_reasonDebug","l","doMeasurableEvent","type","measurableFunc","context","getJSXContext","console","log","transient","message","select","forUser","_this$props$node","_this$props$data","constructor","_isMounted","html","lastViewChanges","lastOnUpdateChanges","stopUpdateEvents","dataOldClonedCounter","maxid","all","createRef","functionsToBind","onClick","onLeave","onEnter","doContextMenu","onContextMenu","onMouseDown","onMouseUp","onKeyDown","onScroll","onMouseMove","f","bind","classes","componentDidMount","componentWillUnmount","evalContext","tnv","tv","otherViews","_context","displayError","where","asString","printData","errormsg","split","indexOf","jsxString","stack","stackerrorlast","icol","lastIndexOf","irow","offset","row","col","stackerrorlinenum","parseInt","substring","linesPre","linesPost","jsxlines","culpritlinesPre","slice","culpritline","culpritlinesPost","error","caretCursor","rowPre","rowPost","jsxcode","style","fontFamily","color","children","errorView_string","template","errorView","e2","eDevv","getTemplate3","getTemplate3_","jsxOutput","JSXFunction","isValidElement","JSON","stringify","getTemplate2","udContext","jsxCodeString","fromString","factory","_this$props$data2","_this$props$node2","parsedFunc","parseFunctionWithContextAndScope","_this$props$data3","_this$props$node3","preventDefault","stopPropagation","_state$contextMenu","current","focus","getState","contextMenu","x","clientX","_this$props$node4","display","y","clientY","_this$props$isEdgePen","_this$props$data4","isEdgePending","source","extendError","allTargetSuperClasses","canBeExtend","canExtend","setState","_this$props$data5","classname","isStoppedEvt","mousedownComponent","button","clickRight","p","ig","isGraph","iv","isVertex","scroll","currentTarget","scrollLeft","scrollTop","scrollOrigin","nativeEvent","offsetX","offsetY","g","oldZoom","zoom","newZoom","oldOffset","gscrollOrigin","add","multiply","newscrollOrigin","newOffset","subtract","frommousemove","doOnClick","_this$props$data6","m","target","tagName","toLowerCase","getAttribute","escape","deselect","isDelete","delete","shiftKey","_this$props$data7","duplicate","isEdge","de","unsetExtends","model","ref","lval","remove","ctrlKey","_this$props$data8","_this$props$data9","_this$props$data10","_this$props$data11","_this$props$data12","_this$props$data13","_this$props$data14","_this$props$data15","_this$props$data16","_this$props$data17","addChild","_state$contextMenu2","_this$props$isEdgePen2","_this$props$data18","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_state$_lastSelected","edgePendingSource","isSelected","nodeIsSelectedRaw","_this$props$data19","lClass","user","toggleSelected","_lastSelected","_this$props$data20","_this$props$node9","allNodes","allSubNodes","onDataUpdateMeasurable","index","onDataUpdate","_this$lastOnUpdateCha","thischange","t","Date","now","_this$lastOnUpdateCha2","change_log","timediff","updateNodeFromProps","ptr","dedge","old","n","h","width","height","render","_this$props$data21","nodeType","styleoverride","allviews","i","viewnodescore","Object","keys","arrayMergeInPlace","Array","isArray","class","decoratorViewsOutput","isMain","renderView","mainViewOutput","mainviewid","_props$node5","subViewsID","dv","ud","_this$props$data22","_this$props$node10","isMainView","decorators","rnode","_this$props$data23","_this$props$node11","rawRElement","ReactNodeAsElement","makeItArray","val","getNodeText","join","addprops","fiximport","Error","fixdoubleroot","subElements","viewStyle","injectProps","_props$node","_props$node2","_props$node3","order","me","onwheel","onMouseEnter","onMouseLeave","tabIndex","k","recursiveMap","rn","depthIndexes","injectOffset","injectProp","cloneElement","rawRElementPostInjection","text","_props$data","_props$node4","newid","isExclusiveView","$containedIn","$","$containerDropArea","find","droparea","defaultProps","GraphElementConnected","GraphElement"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/graph/graphElement/graphElement.tsx"],"sourcesContent":["import React, {Component, Dispatch, PureComponent, ReactElement, ReactNode,} from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport './graphElement.scss';\r\nimport type {EdgeOwnProps} from \"./sharedTypes/sharedTypes\";\r\nimport {\r\n    GraphSize,\r\n    LGraph, MouseUpEvent, Point,\r\n    Pointers,\r\n    Selectors as Selectors_, Size, TRANSACTION, WGraph,\r\n    GraphDragManager, GraphPoint, Selectors, DNamedElement, DVoidEdge, LEdge, LPackage, LReference, LVoidEdge, LValue\r\n} from \"../../joiner\";\r\nimport {DefaultUsageDeclarations} from \"./sharedTypes/sharedTypes\";\r\n\r\nimport {EdgeStateProps, LGraphElement, store, VertexComponent,\r\n    BEGIN,\r\n    CreateElementAction, DClass, Debug,\r\n    DEdge, DEnumerator,\r\n    DGraph,\r\n    DGraphElement,\r\n    Dictionary, DModel,\r\n    DModelElement, DObject,\r\n    DocString, DPackage,\r\n    DPointerTargetable,\r\n    DState,\r\n    DUser,\r\n    DV,\r\n    DViewElement,\r\n    EMeasurableEvents, END,\r\n    GObject,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    InOutParam,\r\n    JSXT, Keystrokes,\r\n    LClass,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Overlap,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    U,\r\n    UX,\r\n    windoww, transientProperties\r\n} from \"../../joiner\";\r\nimport {NodeTransientProperties, Pack1} from \"../../joiner/classes\";\r\n\r\n// const Selectors: typeof Selectors_ = windoww.Selectors;\r\n/*\r\nexport function makeEvalContext(view: LViewElement, state: DState, ownProps: GraphElementOwnProps, stateProps: GraphElementReduxStateProps): GObject {\r\n    let component = GraphElementComponent.map[ownProps.nodeid as Pointer<DGraphElement>];\r\n    let allProps = {...ownProps, ...stateProps};\r\n    let parsedConstants = stateProps.view._parsedConstants;\r\n    let evalContext: GObject = {\r\n        model: stateProps.data,\r\n        ...ownProps,\r\n        ...stateProps,\r\n        edge: (RuntimeAccessibleClass.extends(stateProps.node?.className, \"DVoidEdge\") ? stateProps.node : undefined),\r\n        state,\r\n        ownProps,\r\n        stateProps,\r\n        props: allProps,\r\n        component,\r\n        constants: parsedConstants,\r\n        // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\r\n        ...parsedConstants,\r\n        // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\r\n    };\r\n    evalContext.__proto__ = windoww.defaultContext;\r\n    transientProperties.node[ownProps.nodeid as string].evalContext = evalContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>, state: DState): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    const evalContext = makeEvalContext(view, state, ownProps, stateProps);\r\n    // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\r\n\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n\r\n}*/\r\n\r\nfunction computeUsageDeclarations(component: GraphElementComponent, allProps: AllPropss, state: GraphElementStatee, lview: LViewElement): GObject {\r\n    // compute usageDeclarations\r\n    let udret: GObject = {__notInitialized: true};\r\n    const view: DViewElement = lview.__raw;\r\n    const vid: Pointer<DViewElement> = view.id;\r\n    const constants = transientProperties.view[vid].constants;\r\n    let UDEvalContext: GObject = {...allProps, ...constants, constants, component,\r\n        view:lview, // data and node are inherited through props, but view needs redefinition\r\n        usageDeclarations: undefined, stateProps: allProps, props:allProps, ownProps:allProps, state}//transientProperties.node[stateProps.nodeid].evalContext;\r\n/*\r\n*\r\n        \"constants\": true, \"usageDeclarations\": true,\r\n        \"component\": true,\r\n        \"htmlindex\": true,\r\n        \"state\": true, \"stateProps\": true, \"ownProps\": true,*/\r\n    if (!view.usageDeclarations) {\r\n        udret = {data: allProps.data, view, node: allProps.node};\r\n    } else try {\r\n        transientProperties.view[vid].UDFunction.call(UDEvalContext, UDEvalContext, udret);\r\n        // console.log(\"computing usage declarations: \", {f:transientProperties.view[vid].UDFunction, udret, UDEvalContext});\r\n    } catch (e: any) {\r\n        e.isSyntax = false;\r\n        udret = {data: allProps.data, view, node: allProps.node, __invalidUsageDeclarations: e};// \"@runtime:\" +e};\r\n        Log.ee(\"Invalid usage declarations\", {e, str: view.usageDeclarations, view, data: allProps.data, stateProps: allProps});\r\n    }\r\n\r\n    transientProperties.node[allProps.nodeid].viewScores[vid].usageDeclarations = udret;\r\n    // do not merge to create jsx final context now, because if shouldcomponentupdate fails, i want to keep the OLD context for measurable events.\r\n    return udret;\r\n}\r\n\r\nlet debugcount = 0;\r\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\r\nexport const lightModeAllowedElements = [DModel.cname, DPackage.cname, DClass.cname, DEnumerator.cname, DObject.cname];\r\n\r\nfunction getScores(ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps): NodeTransientProperties{\r\n    return Selectors.getAppliedViewsNew({data:ret.data, node: ret.node,\r\n        nid: ownProps.nodeid as string, pv: ownProps.parentViewId && DPointerTargetable.from(ownProps.parentViewId)});\r\n}\r\n\r\nconst countRenders = true;\r\n@RuntimeAccessible('GraphElementComponent')\r\nexport class GraphElementComponent<AllProps extends AllPropss = AllPropss, GraphElementState extends GraphElementStatee = GraphElementStatee>\r\n    extends Component<AllProps, GraphElementState>{\r\n    public static cname: string;\r\n    static all: Dictionary<number, GraphElementComponent> = {};\r\n    public static map: Dictionary<Pointer<DGraphElement>, GraphElementComponent> = {};\r\n    static defaultProps: Partial<GraphElementOwnProps> = GraphElementOwnProps.new();\r\n    static maxid: number = 0;\r\n    id: number;\r\n\r\n    public static defaultShouldComponentUpdate<AllProps extends GObject, State extends GObject, Context extends any>\r\n    (instance: React.Component, nextProps: Readonly<AllProps>, nextState: Readonly<State>, nextContext: Context) {\r\n        return (\r\n            !U.shallowEqual(instance.props, nextProps) ||\r\n            !U.shallowEqual(instance.state, nextState)\r\n        );\r\n    }\r\n\r\n    // requires data and node wrapping first\r\n    static mapViewStuff(state: DState, ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        // let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\r\n        // console.log(\"viewsss mapstate 3 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, vv:ret.view, ownProps, stateProps:{...ret}, thiss:this});\r\n        ret.parentviewid = ownProps.parentViewId;\r\n\r\n        const explicitView: Pack1<LViewElement> | string | undefined = ret.view || ownProps.view;\r\n        const explicitViews: (Pack1<LViewElement> | string | undefined)[] = ret.views || ownProps.views;\r\n\r\n        let scores: NodeTransientProperties = undefined as any;\r\n        let tn = transientProperties.node[ownProps.nodeid as string]; // tn === scores if getScore is called (getScore have a sideeffect)\r\n        if (!tn) transientProperties.node[ownProps.nodeid as string] = tn = new NodeTransientProperties();\r\n        if (explicitView) {\r\n            let idorname: string = Pointers.from(explicitView) || explicitView as any as string;\r\n            ret.view = tn.mainView = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state) as DViewElement);\r\n\r\n        }\r\n        if (!ret.view) { // if view is not explicitly set or the assigned view is not found, match a new one.\r\n            if (!scores) scores = getScores(ret, ownProps);\r\n            ret.view = scores.mainView = LPointerTargetable.fromPointer((scores.mainView as any)?.id, state);\r\n            Log.w(!!explicitView, \"Requested main view \"+ownProps.view+\" not found. Another view got assigned: \" + ret.view?.__raw.name, {requested: ownProps.view, props: ownProps, state: ret});\r\n        }\r\n        if (!tn.validMainViews?.[0] || tn.validMainViews[0].id !== tn.mainView?.id) tn.validMainViews = [tn.mainView, ...(tn.validMainViews || [])];\r\n        // @ts-ignore\r\n        let vname: string = !ret.view && ownProps.view ? ' Check the manual assignment of props view={\"'+(ownProps.view?.name || ownProps.view) +'\"}' : '';\r\n        let pview: LViewElement|undefined = !ret.view ?  ret.node?.father?.view : undefined;\r\n        Log.ex(!ret.view, \"Could not find any view applicable to element.\" + vname + (pview ? ' in view \"'+pview.name+'\"' : ''),\r\n            {data:ret.data, props: ownProps, state: ret, scores: (ret as any).viewScores, nid: ownProps.nodeid, tn:transientProperties.node[ownProps.nodeid as any]});\r\n\r\n        if (explicitViews){\r\n            // ret.views = tn.stackViews = LPointerTargetable.fromArr(explicitView);\r\n            let views: LViewElement[] = [];\r\n            for (let v of explicitViews) {\r\n                let idorname: string = Pointers.from(v as DViewElement) || v as any as string;\r\n                let view: LViewElement = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(idorname, state) as DViewElement);\r\n                if (view) views.push(view);\r\n                else Log.ww(\"Requested decorative view \"+v+\" not found.\", {requested: v, idorname, props: ownProps, state: ret});\r\n            }\r\n            ret.views = tn.stackViews = views;\r\n        }\r\n        if (!ret.views) {\r\n            // if views is not explicitly set. (if some are not found, they are just missing by choice, will not replace)\r\n            if (!scores) {\r\n                scores = getScores(ret, ownProps);\r\n                ret.views = scores.stackViews;\r\n            }\r\n            else ret.views = scores.stackViews = LPointerTargetable.fromArr((scores.stackViews||[]).map((v:LViewElement)=>v?.id).filter(vid=>!!vid));\r\n        }\r\n        // console.log(\"viewsss mapstate 4 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps: {...ret}, thiss:this});\r\n\r\n\r\n        ret.viewsid = Pointers.fromArr(ret.views) as Pointer<DViewElement>[];\r\n        ret.viewid = ret.view.id;\r\n\r\n        let dnode = ret.node?.__raw;\r\n        if (dnode) dnode.view = ret.viewid;\r\n        (ret as any).viewScores = tn; // debug only\r\n    }\r\n\r\n    static mapLModelStuff(state: DState, ownProps: GraphElementOwnProps, ret: GraphElementReduxStateProps): void {\r\n        // NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\r\n        if (typeof ownProps.data === \"object\") { ret.dataid = (ownProps.data as any).id; }\r\n        else ret.dataid = ownProps.data as string | undefined;\r\n        ret.data = LPointerTargetable.wrap(ret.dataid) // forcing re-wrapping even if props was a dobject or lobject, because i want to get the latest version of it.\r\n\r\n        /*\r\n        const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n        // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n        ret.data = MyProxyHandler.wrap(meid, state);\r\n        // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n        */\r\n    }\r\n\r\n\r\n    static mapLGraphElementStuff(state: DState,\r\n                                 ownProps: GraphElementOwnProps,\r\n                                 ret: GraphElementReduxStateProps,\r\n                                 dGraphElementDataClass: typeof DGraphElement = DGraphElement,\r\n                                 isDGraph?: DGraph): void {\r\n        let nodeid: string = ownProps.nodeid as string;\r\n        let graphid: string = isDGraph ? isDGraph.id : ownProps.graphid as string;\r\n        let parentnodeid: string = ownProps.parentnodeid as string;\r\n        ret.nodeid = nodeid;\r\n        let tn = transientProperties.node[nodeid];\r\n        if (!tn) tn = transientProperties.node[nodeid] = new NodeTransientProperties();\r\n        // let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\r\n        // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\r\n        /*if (!nodeid) {\r\n            nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '_' + stateProps.view.id : '') + '_1';\r\n            stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n            todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n        }*/\r\n\r\n        let graph: DGraph = DPointerTargetable.from(graphid, state) as DGraphElement as any; // se non c'è un grafo lo creo\r\n        if (!graph) {\r\n            // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\r\n            if (ret.data) CreateElementAction.new(DGraph.new(0, ret.data.id, parentnodeid, graphid, graphid)); }\r\n        /*else {\r\n            graph = MyProxyHandler.wrap(graph);\r\n            Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n        }*/\r\n        let dnode: DGraphElement = DPointerTargetable.from(nodeid, state) as DGraphElement;\r\n\r\n        // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\r\n        if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {\r\n            /*\r\n            console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n                pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/\r\n            // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\r\n            let dge;\r\n            /*\r\n            if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n                let initialSize = ownProps.initialSize;\r\n                dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            } else*/\r\n            if (dGraphElementDataClass === DEdge) {\r\n                // set start and end from ownprops;\r\n                let edgeOwnProps: EdgeOwnProps = ownProps as EdgeOwnProps;\r\n                let edgeStateProps: EdgeStateProps = ret as EdgeStateProps;\r\n                let startnodeid = LGraphElement.getNodeId(edgeOwnProps.start);\r\n                let endnodeid = LGraphElement.getNodeId(edgeOwnProps.end);\r\n                if (!startnodeid) {\r\n                    startnodeid = LGraphElement.getNodeId(ret.data);\r\n                }\r\n                edgeStateProps.start = LPointerTargetable.fromPointer(startnodeid)\r\n                edgeStateProps.end = LPointerTargetable.fromPointer(endnodeid);\r\n                Log.e(!startnodeid, \"Cannot create an edge without start node\", {startnodeid, data:ret.data, propsStart:edgeOwnProps.start});\r\n                Log.e(!endnodeid, \"Cannot create an edge without end node (yet)\", {endnodeid, data:ret.data, propsEnd:edgeOwnProps.end});\r\n                if (!startnodeid || !endnodeid) return;\r\n                let longestLabel = edgeOwnProps.label;\r\n                let labels = edgeOwnProps.labels;\r\n                // dge = DEdge.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\r\n                let ddata = ret.data?.__raw;\r\n                dge = DEdge.new2(ddata?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, (d: DEdge)=>{\r\n                    //d.longestLabel = longestLabel;\r\n                    //d.labels = labels;\r\n                    d.isReference = !!edgeOwnProps.isReference;\r\n                    if (edgeOwnProps.isValue !== undefined) d.isValue = !!edgeOwnProps.isValue;\r\n                    else d.isValue = !!(d.isReference && ddata && ddata.className === 'DValue');\r\n                    if (d.isValue) d.isReference = false;\r\n                    d.isDependency = !!edgeOwnProps.isDepencency;\r\n                    d.isExtend = !!edgeOwnProps.isExtend;\r\n                    let tn = (transientProperties.node[nodeid]);\r\n                    if (!tn) transientProperties.node[nodeid] = {} as any;\r\n                    tn.onDelete = edgeOwnProps.onDelete;\r\n                    tn.labels = labels;\r\n                    tn.longestLabel = longestLabel;\r\n                    d.zIndex = edgeOwnProps.htmlindex || 1;\r\n                    if (edgeOwnProps.anchorStart) d.anchorStart = edgeOwnProps.anchorStart;\r\n                    if (edgeOwnProps.anchorEnd) d.anchorEnd = edgeOwnProps.anchorEnd;\r\n                });\r\n                edgeStateProps.node = edgeStateProps.edge = MyProxyHandler.wrap(dge);\r\n            }\r\n            else {\r\n                let initialSize = ownProps.initialSize;\r\n                dge = dGraphElementDataClass.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, initialSize);\r\n                if (!tn) transientProperties.node[nodeid] = {} as any;\r\n                tn.onDelete = ownProps.onDelete;\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            }\r\n            // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\r\n        }\r\n        else {\r\n            ret.node = MyProxyHandler.wrap(dnode);\r\n            if (dGraphElementDataClass === DEdge) (ret as EdgeStateProps).edge = ret.node as any;\r\n        }\r\n\r\n\r\n        if (ret.dataid) {\r\n            // set up transient model-> node map\r\n            let ta = transientProperties.modelElement[ret.dataid];\r\n            if (!ta) transientProperties.modelElement[ret.dataid] = {nodes: {}} as any;\r\n            ta.nodes[ownProps.nodeid as string] = ret.node;\r\n            ta.node = ret.node;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ////// mapper func\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps, dGraphDataClass: (typeof DGraphElement | typeof DEdge) = DGraphElement, startingobj?: GObject): GraphElementReduxStateProps {\r\n        // console.log('dragx GE mapstate', {dGraphDataClass});\r\n        let ret: GraphElementReduxStateProps = (startingobj || GraphElementReduxStateProps.new()) as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        // console.log(\"viewsss mapstate 0 \" + ownProps.view + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret);\r\n        if (Debug.lightMode && (!ret.data || !(lightModeAllowedElements.includes(ret.data.className)))){\r\n            return ret;\r\n        }\r\n        // console.log(\"map ge\", {ownProps, ret, state});\r\n        GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\r\n        // console.log(\"viewsss mapstate 2 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n        // console.log(\"viewsss mapstate 5 \" + ret.node?.className + \" \" + ret.data?.name, {views:ret.views, ownProps, stateProps:{...ret}, thiss:this});\r\n\r\n        Log.exDev(!ret.view || !ret.views, 'failed to assign view:', {state, ownProps, reduxProps: ret});\r\n        // @ts-ignore\r\n        ret.key = ret.key || ownProps.key;\r\n        // @ts-ignore\r\n        ret.forceupdate = state.forceupdate;\r\n\r\n        // Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\r\n        U.removeEmptyObjectKeys(ret);\r\n        return ret;\r\n    }\r\n\r\n    static mapDispatchToProps(dispatch: Dispatch<any>): GraphElementDispatchProps {\r\n        const ret: GraphElementDispatchProps = {} as any;\r\n        return ret;\r\n    }\r\n\r\n\r\n    countRenders: number;\r\n    _isMounted: boolean;\r\n    html: React.RefObject<HTMLElement | undefined>;\r\n    lastViewChanges: {t: number, vid: Pointer<DViewElement>, v: LViewElement, key?: string}[];\r\n    lastOnUpdateChanges: {t: number}[];\r\n    stopUpdateEvents?: number; // undefined or view.clonedCounter;\r\n    dataOldClonedCounter?: number; // undefined or data.clonedCounter;\r\n\r\n    public shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<GraphElementState>, nextContext: any, oldProps?: Readonly<AllProps>): boolean {\r\n        if (!oldProps) oldProps = this.props;//for subviewcomponent\r\n        if (nextProps.__skipRender) return true;\r\n        let debug = false;\r\n        // return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\r\n        let data = nextProps.data?.__raw as DNamedElement | undefined;\r\n\r\n        let out = {reason:undefined};\r\n        let skipDeepKeys = {pointedBy:true, clonedCounter: true};// clonedCounter is checked manually before looping object keys\r\n        // let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\r\n        let ret = false; // !U.isShallowEqualWithProxies(oldProps, nextProps, 0, 1, skipPropKeys, out);\r\n        // if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\r\n        let component = nextProps.node.component;\r\n        const nid = nextProps.nodeid;\r\n        // U.arrayDiff()\r\n        for (let v of nextProps.views) {\r\n            const vid: Pointer<DViewElement> = v.__raw.id;\r\n            let nodeviewentry = transientProperties.node[nid].viewScores[vid];\r\n            let old_ud = nodeviewentry.usageDeclarations;\r\n            computeUsageDeclarations(component, nextProps, nextState, v);\r\n            let new_ud = nodeviewentry.usageDeclarations;\r\n            nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud, skipDeepKeys, out);\r\n\r\n            nodeviewentry.shouldUpdate_reason = {...out};\r\n            (nodeviewentry as any).shouldUpdate_reasonDebug = {old_ud, new_ud};\r\n            Log.l(debug, \"DECORATIVE_VIEW ShouldComponentUpdate \" + data?.name + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \")  + vid,\r\n                {ret:nodeviewentry.shouldUpdate, reason: out.reason, old_ud, new_ud, oldProps:oldProps, nextProps, vid});\r\n\r\n            if (!ret && nodeviewentry.shouldUpdate) ret = true;\r\n        }\r\n\r\n        const vid: Pointer<DViewElement> = nextProps.view.__raw.id;\r\n        let nodeviewentry = transientProperties.node[nextProps.nodeid].viewScores[vid];\r\n        let old_ud = nodeviewentry.usageDeclarations;\r\n        computeUsageDeclarations(component, nextProps, nextState, nextProps.view);\r\n        let new_ud = nodeviewentry.usageDeclarations;\r\n        nodeviewentry.shouldUpdate = !U.isShallowEqualWithProxies(old_ud, new_ud,  skipDeepKeys, out);\r\n        nodeviewentry.shouldUpdate_reason = {...out};\r\n        (nodeviewentry as any).shouldUpdate_reasonDebug = {old_ud, new_ud};\r\n\r\n        Log.l(debug, \"ShouldComponentUpdate \" + data?.name + (nodeviewentry.shouldUpdate ? \" UPDATED \" : \" REJECTED \") + vid,\r\n            {ret:nodeviewentry.shouldUpdate, reason: out.reason, old_ud, new_ud, oldProps:oldProps, nextProps});\r\n        if (!ret && nodeviewentry.shouldUpdate) ret = true;\r\n        return ret; // if any of main view or decorative views need updating\r\n        // apparently node changes are not working? also check docklayout shouldupdate\r\n    }\r\n\r\n    protected doMeasurableEvent(type: EMeasurableEvents, vid: Pointer<DViewElement>): boolean {\r\n        if (Debug.lightMode) return false;\r\n        let measurableFunc: undefined | ((context:GObject)=>void) = (transientProperties.view[vid] as any)[type];\r\n        if (!measurableFunc) return false;\r\n        let context: GObject = this.getJSXContext(vid); // context + usagedeclarations of main view only\r\n        try {\r\n            measurableFunc.call(context, context);\r\n            console.log(\"measurable executed\", {type, measurableFunc, vid, transient:transientProperties.view[vid]});\r\n        }\r\n        catch (e: any) { Log.ee('Error in measurable \"'+type+'\" ' + e.message, {e, measurableFunc, context}); }\r\n        // it has executed at least partially.\r\n        // i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    select(forUser?: Pointer<DUser>): void {\r\n        // if (forUser === DUser.current && this.html.current) this.html.current.focus();\r\n        BEGIN();\r\n        this.props.node?.select(forUser);\r\n        SetRootFieldAction.new('_lastSelected', {\r\n            node: this.props.nodeid,\r\n            view: this.props.view.id,\r\n            modelElement: this.props.data?.id\r\n        });/*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n            //selected[forUser] = id;\r\n            SetRootFieldAction.new('selected', id, '', true);\r\n        }*/\r\n\r\n        // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\r\n        END();\r\n    }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.lastViewChanges = [];\r\n        this.lastOnUpdateChanges = []\r\n        this.stopUpdateEvents = undefined;\r\n        this._isMounted = false;\r\n        this.countRenders = 0;\r\n        this.id = GraphElementComponent.maxid++;\r\n        GraphElementComponent.all[this.id] = this;\r\n        GraphElementComponent.map[props.nodeid as Pointer<DGraphElement>] = this; // props might change at runtime, setting in constructor is not enough\r\n        this.html = React.createRef();\r\n        let functionsToBind = [this.onClick,\r\n            this.onLeave, this.onEnter,\r\n            this.doContextMenu, this.onContextMenu,\r\n            this.onMouseDown, this.onMouseUp, this.onKeyDown, this.onScroll, this.onMouseMove];/*\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onLeave = this.onLeave.bind(this);\r\n        this.onContextMenu = this.onContextMenu.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.select = this.select.bind(this);*/\r\n        for (let f of functionsToBind) (this as any)[f.name] = f.bind(this);\r\n        // @ts-ignore\r\n        this.state = {classes: [] as string[]};\r\n        this.shouldComponentUpdate(this.props, this.state, undefined, undefined);\r\n    }\r\n\r\n    // constants: evalutate solo durante il primo render, può essere una funzione con effetti collaterali sul componente,\r\n    // in tal caso la si esegue e si prende il valore di ritorno.\r\n    // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\r\n    // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\r\n\r\n\r\n\r\n    componentDidMount(): void {\r\n        // after first render\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista più.\r\n        //  e non venga cancellato se il componente viene smontato perchè ho solo cambiato vista\r\n        //  LOW PRIORITY perchè funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\r\n        // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\r\n    }\r\n    /*\r\n        componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n            const newProps = this.props\r\n            if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n    }*/\r\n\r\n\r\n\r\n    protected getJSXContext(vid: Pointer<DViewElement>): GObject{\r\n        let context: GObject = transientProperties.node[this.props.nodeid].viewScores[vid].evalContext;\r\n        if (context && context.component) return context;\r\n\r\n        // else rebuild + update it\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        let tv = transientProperties.view[vid];\r\n        context = tnv.evalContext = {...this.props, ...tv.constants, ...tnv.usageDeclarations,\r\n            // add component stuff that could not be computed in reducer\r\n            component: this,\r\n            otherViews: this.props.views,\r\n            constants: tv.constants,\r\n            usageDeclarations: tnv.usageDeclarations,\r\n            props: this.props};\r\n        context._context = context;\r\n        return context;\r\n    }\r\n\r\n    public static displayError(e: Error, where: string, view: DViewElement, data?: DModelElement, node?: DGraphElement, asString:boolean = false, printData?: GObject): React.ReactNode {\r\n        // const view: LViewElement = this.props.view; //data._transient.currentView;\r\n        let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") +(e.message||\"\\n\").split(\"\\n\")[0];\r\n        if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\r\n            errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.'; }\r\n        else if (view.jsxString.indexOf('?.') >= 0) { errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.'; }\r\n        else if (e.message.indexOf(\"Unexpected token '<'\") !== -1) { errormsg += '\\n\\nDid you forgot to close a html </tag>?'; }\r\n        try {\r\n            let ee = e.stack || \"\";\r\n            let stackerrorlast = ee.split(\"\\n\")[1];\r\n\r\n            let icol = stackerrorlast.lastIndexOf(\":\");\r\n            let jsxString = view.jsxString;\r\n            // let col = stackerrorlast.substring(icol+1);\r\n            let irow = stackerrorlast.lastIndexOf(\":\", icol-1);\r\n            const offset={row:-2, col:1};\r\n            let stackerrorlinenum: GObject = {\r\n                row: Number.parseInt(stackerrorlast.substring(irow+1, icol)) + offset.row,\r\n                col: Number.parseInt(stackerrorlast.substring(icol+1)) + offset.col };\r\n            let linesPre = 1;\r\n            let linesPost = 1;\r\n            let jsxlines = jsxString.split(\"\\n\");\r\n            let culpritlinesPre: string[] = jsxlines.slice(stackerrorlinenum.row-linesPre-1, stackerrorlinenum.row - 1);\r\n            let culpritline: string = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\r\n            let culpritlinesPost: string[] = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\r\n            console.error(\"errr\", {e, node, jsxlines, culpritlinesPre, culpritline, culpritlinesPost, stackerrorlinenum, icol, irow, stackerrorlast});\r\n\r\n            if (stackerrorlinenum.col - offset.col > culpritline?.length && stackerrorlinenum.row === 1) stackerrorlinenum.col = 0;\r\n            let caretCursor = \"▓\" // ⵊ ꕯ 𝙸 Ꮖ\r\n            if (culpritline && stackerrorlinenum.col - offset.col <= culpritline?.length && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\r\n                let rowPre = culpritline.substring(0, stackerrorlinenum.col);\r\n                let rowPost = culpritline.substring(stackerrorlinenum.col);\r\n                let jsxcode =\r\n                    <div style={{fontFamily: \"monospaced sans-serif\", color:\"#444\"}}>\r\n                        { culpritlinesPre.map(l => <div>{l}</div>) }\r\n                        <div>{rowPre} <b style={{color:\"red\"}}> {caretCursor} </b> {rowPost}</div>\r\n                        { culpritlinesPost.map(l => <div>{l}</div>) }\r\n                    </div>;\r\n                errormsg += \" @ line \" + stackerrorlinenum.row + \", col:\" + stackerrorlinenum.col;\r\n                if (asString) return DV.errorView_string('<div>'+errormsg+'\\n'+jsxcode+'</div>', {where:\"in \"+where+\"()\", e, template:view.jsxString, view: view}, where, data, node, view);\r\n                return DV.errorView(<div>{errormsg}{jsxcode}</div>, {where:\"in \"+where+\"()\", e, template:view.jsxString, view: view}, where, data, node, view);\r\n            } else {\r\n                // it means it is likely accessing a minified.js src code, sending generic error without source mapping\r\n            }\r\n        } catch(e2) {\r\n            Log.eDevv(\"internal error in error view\", {e, e2, where} );\r\n            return null;\r\n        }\r\n        if (asString) return DV.errorView_string('<div>'+errormsg+'</div>', {where:\"in \"+where+\"()\", e, template: view.jsxString, view: view}, where, data, node, view);\r\n        return DV.errorView(<div>{errormsg}</div>, {where:\"in \"+where+\"()\", e, template: view.jsxString, view: view, ...(printData || {})}, where, data, node, view);\r\n    }\r\n/*\r\n    protected getTemplate(): ReactNode {\r\n        /*if (!this.state.template) {\r\n            this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n        }* /\r\n        // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n\r\n        // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n        if (this.props.invalidUsageDeclarations) {\r\n            return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\r\n        }\r\n        let context: GObject = this.getContext();\r\n        // abababababab\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        try {\r\n            let preRenderFuncStr: string | undefined = this.props.view.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let obj: GObject = {};\r\n                let tempContext: GObject = {__param: obj};\r\n                tempContext.__proto__ = context;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(context, obj);\r\n            }\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\");  }\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(this.props.view.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Syntax\"); }\r\n\r\n        try { ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', context); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Semantic\"); }\r\n        return ret;\r\n    }*/\r\n    protected getTemplate3(vid: Pointer<DViewElement>, v: LViewElement, context: GObject): ReactNode {\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        let tv = transientProperties.view[vid];\r\n        // console.log(\"getTemplate jsx\", {vid, v, context, tnv, tv, shouldUp: tnv.shouldUpdate, jsxFunc:tv.JSXFunction});\r\n        let ret = this.getTemplate3_(vid, v, context);\r\n        return ret;\r\n    }\r\n    protected getTemplate3_(vid: Pointer<DViewElement>, v: LViewElement, context: GObject): ReactNode{\r\n        let tnv = transientProperties.node[this.props.nodeid].viewScores[vid];\r\n        if (!tnv.shouldUpdate && tnv.jsxOutput) return tnv.jsxOutput;\r\n        let tv = transientProperties.view[vid];\r\n        let ret = tnv.jsxOutput = (tv.JSXFunction ? tv.JSXFunction.call(context, context) : null);\r\n        if (typeof ret === \"object\" && ret !== null && !React.isValidElement(ret)) {\r\n            // plain objects cannot be react nodes, but react noeds are objects. so i try serializing\r\n            // this only happens if someone puts an object in jsx\r\n            try{\r\n                ret = JSON.stringify(ret);\r\n            }\r\n            catch(e){ ret = \"{__ Cyclic Object __}\"; }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    protected getTemplate2(v: LViewElement, udContext: GObject): ReactNode {\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        /*\r\n        let thisContext: GObject = {};\r\n        try {\r\n            let preRenderFuncStr: string | undefined = v.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let tempContext: GObject = {__param: thisContext};\r\n                this.addToContext(udContext, {__param: thisContext});\r\n                tempContext.__proto__ = sharedContext;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(thisContext, udContext);\r\n                // thisContext.__proto__ = sharedContext;\r\n            } else thisContext = udContext;\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\", v);  }*/\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(v.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\r\n\r\n        // console.log('context for ' + (this.props.data?.name), {udContext});\r\n        try {\r\n            let parsedFunc = U.parseFunctionWithContextAndScope('()=>{ return ' + jsxCodeString + '}', udContext, udContext);\r\n            ret = parsedFunc(udContext) as ReactNode;\r\n            /// ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', udContext);\r\n        }\r\n        catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, this.props.data?.__raw, this.props.node?.__raw, false, {udContext}); }\r\n        return ret;\r\n    }\r\n\r\n    onContextMenu(e: React.MouseEvent<Element>) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // NOT executed here, but on mousedown because of IOS compatibility\r\n    }\r\n\r\n    doContextMenu(e: React.MouseEvent<Element>) {\r\n        BEGIN()\r\n        this.props.node.select();\r\n        if (this.html.current) this.html.current.focus();\r\n        let state: DState = store.getState();\r\n        if (state.contextMenu?.x !== e.clientX) {\r\n            SetRootFieldAction.new(\"contextMenu\", {\r\n                display: true,\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                nodeid: this.props.node?.id\r\n            });\r\n        }\r\n        END();\r\n    }\r\n\r\n    onEnter(e: React.MouseEvent<Element>) { // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\r\n        const isEdgePending = this.props.isEdgePending?.source;\r\n        if (!isEdgePending || this.props.data?.className !== \"DClass\") return;\r\n        const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n        const canBeExtend = isEdgePending.canExtend(this.props.data as any as LClass, extendError);\r\n\r\n        if (canBeExtend) this.setState({classes:[...this.state.classes, \"class-can-be-extended\"]});\r\n        else this.setState({classes:[...this.state.classes, \"class-cannot-be-extended\"]});\r\n    }\r\n    onLeave(e: React.MouseEvent<Element>) {\r\n        if (this.props.data?.className !== \"DClass\") return;\r\n        this.setState({classes: this.state.classes.filter((classname) => {\r\n            return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\"\r\n        })});\r\n    }\r\n\r\n    static mousedownComponent: GraphElementComponent | undefined;\r\n    onMouseDown(e: React.MouseEvent): void {\r\n        if (UX.isStoppedEvt(e)) return;\r\n        e.stopPropagation();\r\n        GraphElementComponent.mousedownComponent = this;\r\n        TRANSACTION(()=>{\r\n            if (e.button === Keystrokes.clickRight) { this.doContextMenu(e); }\r\n            let p: GObject = this.props;\r\n            console.log('try drag', {p, ig: p.isGraph, iv:p.isVertex, e});\r\n            // if ((p.isGraph && !p.isVertex) || (p.isGraph && p.isVertex && e.ctrlKey)) GraphDragManager.startPanning(e, this.props.node as LGraph);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onScroll(e: React.MouseEvent): void {\r\n        console.log(\"onScroll\");\r\n        let scroll: Point = new Point(e.currentTarget.scrollLeft, e.currentTarget.scrollTop);\r\n        let scrollOrigin: Point = new Point(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n        let g: LGraph = this.props.node.graph;\r\n        let oldZoom: GraphPoint = g.zoom;\r\n        let newZoom: GraphPoint = new GraphPoint(oldZoom.x+0.1, oldZoom.y+0.1);\r\n        let oldOffset: GraphPoint = g.offset;\r\n        let gscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(oldZoom, true), true);\r\n        let newscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(newZoom, true), true);\r\n        let newOffset: GraphPoint = oldOffset.add( gscrollOrigin.subtract(newscrollOrigin, true), true);\r\n        TRANSACTION(()=>{\r\n            g.offset = newOffset;\r\n            g.zoom = newZoom;\r\n        })\r\n        e.stopPropagation();\r\n    }\r\n    onMouseMove(e: React.MouseEvent): void {\r\n        //this.onMouseUp(e);\r\n    }\r\n    onMouseUp(e: React.MouseEvent, frommousemove: boolean = false): void {\r\n        e.stopPropagation();\r\n        TRANSACTION(()=>{\r\n            //GraphDragManager.stopPanning(e);\r\n            if (GraphElementComponent.mousedownComponent !== this) { return; }\r\n            if (!frommousemove) this.doOnClick(e);\r\n        })\r\n    }\r\n    onKeyDown(e: React.KeyboardEvent){\r\n        console.log('keydown', e.key, {e, m:this.props.data?.name});\r\n        let target: HTMLElement = e.target as any;\r\n        switch (target?.tagName.toLowerCase()) {\r\n            case 'input':\r\n            case 'textarea':\r\n                e.stopPropagation(); return;\r\n            default: if (target?.getAttribute('contenteditable') === 'true') { e.stopPropagation(); return; }\r\n        }\r\n        if (!(this.props.isGraph && !this.props.isVertex)) e.stopPropagation();\r\n        if (e.key === Keystrokes.escape) {\r\n            this.props.node.deselect();\r\n            if (this.props.isEdgePending) {\r\n                // this.stopPendingEdge(); todo\r\n                return;\r\n            }\r\n        }\r\n        let isDelete: boolean = false;\r\n        if (e.key === Keystrokes.delete){ isDelete = true; }\r\n        if (e.shiftKey) {\r\n            // todo: make them a switch\r\n            if (e.key === \"D\" || e.key === \"d\") this.props.data?.duplicate(); else\r\n            if (e.key === \"R\" || e.key === \"r\") { isDelete = true; }\r\n        }\r\n        console.log('keydown isDelete', isDelete);\r\n        if (isDelete){\r\n            let nid = this.props.nodeid;\r\n            let tn = transientProperties.node[nid];\r\n            TRANSACTION(()=>{\r\n                if (tn && tn.onDelete && tn.onDelete(this.props.node) === false) return;\r\n                // if shapeless, erase the node directly.\r\n                if (!this.props.data) {\r\n                    this.props.node.delete();\r\n                    return;\r\n                }\r\n                // if dictated by the model, change the model to erase indirectly the node.\r\n                if (!this.props.isEdge) {\r\n                    this.props.data.delete();\r\n                    return;\r\n                }\r\n                // if edge\r\n                let e = this.props.node as LVoidEdge;\r\n                let de = e.__raw;\r\n                if (de.isExtend) {\r\n                    let data: LClass = this.props.data as any;\r\n                    data.unsetExtends( e.end.model as LClass);\r\n                    // SetFieldAction(data.id, 'extends', )\r\n                }\r\n                if (de.isReference){\r\n                    if (this.props.data.className === 'DReference'){\r\n                        let ref: LReference = this.props.data as any;\r\n                        ref.type = ref.father.id as any;\r\n                    } else {\r\n                        let lval: LValue = this.props.data as any;\r\n                        lval.remove(e.end.model);\r\n                    }\r\n                }\r\n                if (de.isDependency){ // pkg dependency\r\n                    let ref: LPackage = this.props.data as any;\r\n                }\r\n                else {}\r\n            })\r\n        }\r\n        if (e.ctrlKey) {\r\n            // if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\r\n            if (e.key === \"a\") this.props.data?.addChild(\"auto\"); else // add class if on package, literal if on enum...\r\n            if (e.key === \"r\") this.props.data?.addChild(\"reference\"); else\r\n            if (e.key === \"o\") this.props.data?.addChild(\"operation\") || this.props.data?.addChild(\"object\"); else\r\n            if (e.key === \"l\") this.props.data?.addChild(\"literal\"); else\r\n            if (e.key === \"p\") this.props.data?.addChild(\"package\") || this.props.data?.addChild(\"parameter\"); else\r\n            if (e.key === \"c\") this.props.data?.addChild(\"class\"); else\r\n            if (e.key === \"e\") this.props.data?.addChild(\"enumerator\"); else\r\n            if (e.key === \"q\") this.props.data?.addChild(\"annotation\"); else\r\n            ;\r\n        }\r\n    }\r\n\r\n    private doOnClick(e: React.MouseEvent): void {\r\n        // (e.target as any).focus();\r\n        e.stopPropagation();\r\n        let state: DState = store.getState();\r\n        if (e.button !== Keystrokes.clickRight && state.contextMenu?.display) SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0}); // todo: need to move it on document or <App>\r\n        const edgePendingSource = this.props.isEdgePending?.source;\r\n        console.log('mousedown select() check PRE:', {e, name: this.props.data?.name, isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n\r\n        if (edgePendingSource) {\r\n            if (this.props.data?.className !== \"DClass\") return;\r\n            // const user = this.props.isEdgePending.user;\r\n            const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n            const canBeExtend = this.props.data && edgePendingSource.canExtend(this.props.data as any as LClass, extendError);\r\n            if (canBeExtend && this.props.data) {\r\n                const lClass: LClass = LPointerTargetable.from(this.props.data.id);\r\n                // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\r\n                // todo: use source.addExtends(lClass); or something (source is LClass)\r\n                SetFieldAction.new(lClass.id, \"extendedBy\", edgePendingSource.id, \"+=\", true);\r\n                SetFieldAction.new(edgePendingSource.id, \"extends\", lClass.id, \"+=\", true);\r\n            }\r\n            SetRootFieldAction.new('isEdgePending', { user: '',  source: '' });\r\n            return;\r\n        }\r\n        console.log('mousedown select() check:', {e, isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n        BEGIN();\r\n        windoww.node = this.props.node;\r\n        this.props.node.toggleSelected(DUser.current);\r\n        if (state._lastSelected?.node !== this.props.nodeid) {\r\n            SetRootFieldAction.new('_lastSelected', {\r\n                node: this.props.nodeid,\r\n                view: this.props.view.id,\r\n                modelElement: this.props.data?.id\r\n            });\r\n        }\r\n\r\n        if (e.shiftKey || e.ctrlKey) { }\r\n        else {\r\n            let allNodes: LGraphElement[] | undefined = this.props.node?.graph.allSubNodes;\r\n            let nid = this.props.node.id;\r\n            if (allNodes) for (let node of allNodes) if (node.id !== nid) node.deselect(DUser.current);\r\n        }\r\n        END();\r\n    }\r\n\r\n    onClick(e: React.MouseEvent): void {\r\n\r\n    }\r\n\r\n    onDataUpdateMeasurable(view: LViewElement, vid: Pointer<DViewElement>, index: number): void{\r\n        if (index > 0) { this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid); return; }\r\n        // only on first of a sequence of onDataUpdate events for all stackviews (the mainview),\r\n        // set time of current stack of updates, to check if they are generating a loop\r\n\r\n        // EMeasurableEvents.onDataUpdate -> handling and checking for loops\r\n        if (!this.stopUpdateEvents || this.stopUpdateEvents !== this.props.view.clonedCounter) {\r\n            this.stopUpdateEvents = undefined;\r\n            if (this.props.data && (this.dataOldClonedCounter !== this.props.data.clonedCounter) && this.doMeasurableEvent(EMeasurableEvents.onDataUpdate, vid)) {\r\n                this.dataOldClonedCounter = this.props.data.clonedCounter;\r\n                let thischange = {t: Date.now()};\r\n                this.lastOnUpdateChanges.push(thischange);\r\n                if (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]?.t < 300) {\r\n                    // if N updates in <= 0.2 sec\r\n                    this.stopUpdateEvents = this.props.view.clonedCounter;\r\n                    Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\",{\r\n                        change_log: this.lastOnUpdateChanges,\r\n                        component: this,\r\n                        timediff: (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 10]?.t)\r\n                    } as any);\r\n                }\r\n            }\r\n    }\r\n    }\r\n\r\n\r\n    // returns: true if an action is fired and component needs re-rendering\r\n    updateNodeFromProps(props: GObject<AllProps>): boolean {\r\n        let ret = false;\r\n        let tn = transientProperties.node[props.nodeid];\r\n        let ptr: Pointer<any>;\r\n        if (!props.node) return false;\r\n        let node = props.node;\r\n        let dnode = node.__raw;\r\n        let edge: LVoidEdge = props.node as any;\r\n        let dedge: DVoidEdge = dnode as any;\r\n        // if edge.label props is func, do not set in the dedge, just in transientproperties. totally override the \"text\" system.\r\n        // it does not need collab sync:\r\n        // because if the view is active for the other user, his synched jsx will generate the same function in transientProperties.\r\n        // if it is inactive it does not matter, the value is not used.\r\n        if (props.label) { tn.longestLabel = props.label; }\r\n        if (props.onDelete) { tn.onDelete = props.onDelete; }\r\n        if (props.longestLabel) { tn.longestLabel = props.longestLabel; }\r\n        if (props.labels) { tn.labels = props.labels; }\r\n        if (props.anchorStart && props.isEdge) { edge.anchorStart = props.anchorStart; }\r\n        if (props.anchorEnd && props.isEdge) { edge.anchorEnd = props.anchorEnd; }\r\n        if (props.start && props.isEdge) {\r\n            ptr = Pointers.from(props.start);\r\n            if (dedge.id !== ptr) edge.start = ptr as any;\r\n        }\r\n        // console.log(\"changing endpt\", props, props.end, props.end?.model?.name);\r\n        if (props.end && props.isEdge) {\r\n            ptr = Pointers.from(props.end);\r\n            if (dedge.id !== ptr) edge.end = ptr as any;\r\n        }\r\n        if (props.anchorEnd) { tn.labels = props.labels; }\r\n        // if (typeof props.viewid === 'string') { let old = props.viewid; if (old !== props.node.view.id) { this.forceUpdate(); ret = true;} }\r\n        if (typeof props.isReference) { let old = dedge.isReference; let n = !!props.isReference; if (old !== n) { edge.isReference = n; ret = true;} }\r\n        if (typeof props.isExtend) { let old = dedge.isExtend; let n = !!props.isExtend; if (old !== n) { edge.isExtend = n; ret = true;} }\r\n        if (typeof props.isValue) { let old = dedge.isValue; let n = !!props.isValue; if (old !== n) { edge.isValue = n; ret = true;} }\r\n        if (typeof props.isDependency) { let old = dedge.isDependency; let n = !!props.isDependency; if (old !== n) { edge.isDependency = n; ret = true;} }\r\n        if (typeof props.x === 'number') { let old = dnode.x; let n = +props.x; if (old !== n) { node.x = n; ret = true;} }\r\n        if (typeof props.y === 'number') { let old = dnode.y; let n = +props.y; if (old !== n) { node.y = n; ret = true;} }\r\n        // risk loop: todo loop detection and skip setting\r\n        if (typeof props.w === 'number') { let old = dnode.w; let n = +props.w; if (old !== n) { node.w = n; ret = true;} }\r\n        if (typeof props.h === 'number') { let old = dnode.h; let n = +props.h; if (old !== n) { node.h = n; ret = true;} }\r\n        if (typeof props.width  === 'number') { let old = dnode.w; let n = +props.width;  if (old !== n) { node.w = n; ret = true;} }\r\n        if (typeof props.height === 'number') { let old = dnode.h; let n = +props.height; if (old !== n) { node.h = n; ret = true;} }\r\n\r\n        return ret;\r\n    }\r\n\r\n    public render(nodeType:string = '', styleoverride:React.CSSProperties={}, classes: string[]=[]): ReactNode {\r\n        GraphElementComponent.map[this.props.nodeid as Pointer<DGraphElement>] = this; // props might change at runtime, setting in constructor is not enough\r\n        if (Debug.lightMode && (!this.props.data || !(lightModeAllowedElements.includes(this.props.data.className)))){\r\n            return this.props.data ? <div>{\" \" + ((this.props.data as any).name)}:{this.props.data.className}</div> : undefined;\r\n        }\r\n        if (!this.props.node) return \"Loading...\";\r\n        /*if (this.props.node.__raw.view !== this.props.view.id) {\r\n            this.onViewChange();\r\n            return \"Updating view...\";\r\n        }*/\r\n        if (this.updateNodeFromProps(this.props as GObject<any>)) return 'Updating...';\r\n        let nid = this.props.nodeid;\r\n        let allviews = [...this.props.views, this.props.view]; // main view must be last, for renderView ordering\r\n\r\n\r\n        for (let i = 0 ; i < allviews.length; i++){\r\n            let v = allviews[i];\r\n            const vid = v.id;\r\n            let viewnodescore = transientProperties.node[nid].viewScores[v.id];\r\n            if (!viewnodescore.shouldUpdate) continue;\r\n            viewnodescore.evalContext = undefined as any; // force rebuild jsx context, needs to be done before renderView and measurable events\r\n            // only if this exact view had UD changed, instead of being forced to rended by other in viewstack)\r\n            this.onDataUpdateMeasurable(v, vid, i);\r\n        }\r\n\r\n        /// set classes\r\n        if (this.props.node) {\r\n            let isSelected: Dictionary<Pointer<DUser>, boolean> = this.props.node.__raw.isSelected;\r\n            if(isSelected) {\r\n                if (isSelected[DUser.current]) { // todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\r\n                    classes.push('selected-by-me');\r\n                    if (Object.keys(isSelected).length > 1) classes.push('selected-by-others');\r\n                } else if (Object.keys(isSelected).length) classes.push('selected-by-others');\r\n            }\r\n        }\r\n\r\n        classes.push(this.props.data?.className || 'DVoid');\r\n        U.arrayMergeInPlace(classes, this.state.classes);\r\n        if (Array.isArray(this.props.className)) { U.arrayMergeInPlace(classes, this.props.className); }\r\n        else if (this.props.className) { classes.push(this.props.className); }\r\n        if (Array.isArray(this.props.class)) { U.arrayMergeInPlace(classes, this.props.class); }\r\n        else if (this.props.class) { classes.push(this.props.class); }\r\n        /// end set classes\r\n\r\n\r\n        let mainView: LViewElement = this.props.view;\r\n        let otherViews: LViewElement[] = this.props.views;\r\n        let decoratorViewsOutput: (ReactNode | ReactElement)[] = [];/*\r\n        for (let v of this.props.views) {\r\n            if (v.isExclusiveView) {\r\n                if (mainView) continue;\r\n                mainView = v;\r\n            } else otherViews.push(v);\r\n        }*/\r\n\r\n        let jsxOutput: ReactNode = undefined as any;\r\n        const tn = transientProperties.node[nid]\r\n        //console.log(\"render\", {mainView, otherViews, scores:tn.viewScores, tnv:tn.viewScores[this.props.viewid], ud:tn.viewScores[this.props.viewid].usageDeclarations});\r\n        for (let v of allviews) { // main view is the last\r\n            let viewnodescore = transientProperties.node[nid].viewScores[v.id];\r\n            jsxOutput = viewnodescore.shouldUpdate ? undefined : viewnodescore.jsxOutput;\r\n            let isMain: true | undefined = v === mainView || undefined;\r\n            if (!jsxOutput) viewnodescore.jsxOutput = jsxOutput =\r\n                this.renderView(this.props, v, nodeType, classes, styleoverride,\r\n                    isMain && decoratorViewsOutput, mainView.id, isMain && otherViews.map(v=>v.id));\r\n            if (!isMain) decoratorViewsOutput.push(jsxOutput);\r\n            if (viewnodescore.shouldUpdate) viewnodescore.shouldUpdate = false; // this needs to be placed post renderView call\r\n        }\r\n\r\n        let mainViewOutput: ReactNode = jsxOutput;\r\n        return mainViewOutput;\r\n        // console.log('rendering view stack', {mainView, otherViews, mainViewOutput, decoratorsJSX:decoratorViewsOutput});\r\n        // windoww.debbugg = {mainViewOutput,otherViews, ret:<>renderrr{mainViewOutput}{otherViews}</>}\r\n        // return this.props.data?.className === \"DValue\" ? <div>{mainView.jsxString}{mainViewElement}</div> : mainViewElement;\r\n    }\r\n\r\n\r\n    protected renderView(props: AllProps, v: LViewElement, nodeType: string, classes: string[], styleoverride: React.CSSProperties,\r\n                         otherViews?: (ReactNode | ReactElement)[], mainviewid?: Pointer<DViewElement>, subViewsID: Pointer<DViewElement>[] = []): ReactNode | ReactElement {\r\n        let dv = v.__raw;\r\n        const nid = props.nodeid;\r\n        const vid = v.id;\r\n        const tnv = transientProperties.node[nid].viewScores[vid];\r\n        let ud: GObject | undefined = tnv.usageDeclarations;\r\n        /*if (false && !ud) {\r\n            this.forceUpdate();\r\n            return <div>Loading...</div>;\r\n        }*/\r\n\r\n        if (!ud) tnv.usageDeclarations = ud = computeUsageDeclarations(this, props, this.state, v);\r\n        //console.log(\"renderView\", {dv, tnv, ud});\r\n\r\n        if (ud.__invalidUsageDeclarations) {\r\n            console.error(\"renderView error ud:\", {dv, tnv, ud});\r\n            return GraphElementComponent.displayError(ud.__invalidUsageDeclarations, \"Usage Declaration \" + (ud.__invalidUsageDeclarations.isSyntax ? \"Syntax\" : \"Semantic\"), v.__raw,\r\n                this.props.data?.__raw, this.props.node?.__raw, false, {ud});\r\n        }\r\n        let isMainView: boolean = !!otherViews;\r\n        const context: GObject = this.getJSXContext(vid);\r\n\r\n        if (isMainView) context.decorators = otherViews;\r\n        let rnode: ReactNode;\r\n        try { rnode = this.getTemplate3(vid, v, context); }\r\n        catch (e: any) {\r\n            console.error(\"renderView error get template:\", {e, dv, tnv});\r\n            // rnode = undefined as any;\r\n            // todo: move in reducer parser of jsx: catch (e: any) { return GraphElementComponent.displayError(e, \"JSX Syntax\", v.__raw, this.props.data?.__raw, this.props.node?.__raw); }\r\n            rnode = GraphElementComponent.displayError(e, \"JSX Semantic\", v.__raw, this.props.data?.__raw, this.props.node?.__raw, false, {context});\r\n        }\r\n        let rawRElement: ReactElement | null = UX.ReactNodeAsElement(rnode);\r\n\r\n\r\n        // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\r\n\r\n        function makeItArray(val?: any) { return val ? [] : (Array.isArray(val) ? val : [val]); }\r\n        function getNodeText(node?: any | ReactNode): string | undefined {\r\n            if (['string', 'number'].includes(typeof node)) return node;\r\n            if (node instanceof Array) return node.map(getNodeText).join('');\r\n            if (typeof node === 'object' && node) return getNodeText(node.props.children);\r\n        }\r\n        const addprops: boolean = true;\r\n        let fiximport = !!this.props.node;\r\n        //let a: false = true as any; if (a) return \"Loading...\";\r\n        // if (this.props.data?.name === \"Concept 1\") console.log(\"shouldcomponentupdate rendering \" + this.props.data?.name, {cc: this.props.data.clonedCounter, attrs: (this.props.data as any).attributes});\r\n        if (addprops && rawRElement && fiximport) {\r\n            if (windoww.debugcount && debugcount++>windoww.debugcount) throw new Error(\"debug triggered stop\");\r\n            let fixdoubleroot = true;\r\n            // add view props to GraphElement children (any level down)\r\n            const subElements: Dictionary<DocString<'nodeid'>, boolean> = {}; // this.props.getGVidMap();\r\n            try {\r\n                let viewStyle: GObject = {...(this.props.style || {})};\r\n                /*\r\n                    if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n                    else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n                    if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n                    else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n                    viewStyle = {};\r\n                */\r\n                // viewStyle.pointerEvents = \"all\";\r\n                let injectProps: GObject = {};\r\n                if (isMainView) {\r\n                    viewStyle.order = viewStyle.zIndex = props.node?.zIndex; // alias? this.props.node.z\r\n                    viewStyle.display = v?.display;\r\n                    const me: LModelElement | undefined = props.data; // this.props.model;\r\n                    if (countRenders) {\r\n                        classes.push(this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\");\r\n                    }                /// let excludeProps = ['data', 'node', 'view', 'children', ]\r\n                    classes.push(\"mainView\", dv.id);\r\n                    classes.push(...subViewsID);\r\n                    injectProps = {\r\n                        ref: this.html,\r\n                        // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (è perchè iniziano con <Select/> as root?)\r\n                        id: props.nodeid,\r\n                        \"data-nodeid\": props.nodeid,\r\n                        \"data-dataid\": me?.id,\r\n                        \"data-viewid\": dv.id,\r\n                        \"data-modelname\": me?.className || \"model-less\",\r\n                        \"data-userselecting\": JSON.stringify(props.node?.isSelected || {}),\r\n                        \"data-nodetype\": nodeType,\r\n                        // \"data-order\": this.props.node?.zIndex,\r\n                        style: {...viewStyle, ...styleoverride},\r\n                        className: classes.join(' '),\r\n                        onClick: this.onClick,\r\n                        onContextMenu: this.onContextMenu,\r\n                        onMouseDown: this.onMouseDown,\r\n                        onMouseUp: this.onMouseUp,\r\n                        onMouseMove: this.onMouseMove,\r\n                        onKeyDown: this.onKeyDown,\r\n                        // onKeyUp: this.onKeyUp,\r\n                        onwheel: this.onScroll,\r\n                        onMouseEnter: this.onEnter,\r\n                        onMouseLeave: this.onLeave,\r\n                        tabIndex: (props as any).tabIndex || -1,\r\n                        \"data-countrenders\": this.countRenders++,\r\n                        \"data-clonedcounter\": props.node?.clonedCounter || -1,\r\n                        // decorators: otherViews,\r\n                    };\r\n                    let p: GObject = this.props;\r\n                    for (let k in p) {\r\n                        if (typeof p[k] === 'object' || typeof p[k] === 'function') continue;\r\n                        if (!injectProps[k]) injectProps[k] = p[k];\r\n                    }\r\n                }\r\n                else injectProps = {\"data-viewid\": v.id, className: \"decorativeView \" + v.id, \"data-mainview\": mainviewid};\r\n\r\n\r\n                let debug: GObject = {};\r\n                injectProps.children = UX.recursiveMap(rawRElement/*.props.children*/,\r\n                    (rn: ReactNode, index: number, depthIndexes: number[]) => {\r\n                        let injectOffset: undefined | LGraph = ((this.props as any).isGraph && !depthIndexes[0] && !index) && (this.props.node as LGraph);\r\n                        //injectOffset&&console.log(\"inject offset props0:\", {injectOffset});\r\n                        //console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\r\n                        return UX.injectProp(this, rn, subElements, this.props.parentnodeid as string, index, depthIndexes, injectOffset)\r\n                    });\r\n/*\r\n                debug.injectPropsOriginal = injectProps.children;\r\n                debug.recursivemap = injectProps.children;\r\n                debug.injectChildrensAttempt = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n                debug.rawRElement = {node:rawRElement, text: getNodeText(rawRElement)};*/\r\n\r\n                if (otherViews && false) injectProps.children = [...injectProps.children, ...makeItArray(props.children), ...(otherViews as any[])];\r\n\r\n                // injectProps.children = [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)];\r\n                let children = makeItArray(injectProps.children); // [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]; rawRElement.child are already in injectprops\r\n                // injectProps.children = [<div>{children}</div>];//[]; making any change at injectprops.children breaks it?\r\n                rawRElement = React.cloneElement(rawRElement, injectProps);//, ...children); // adding chioldrens after injectprops seems pointless\r\n\r\n                debug.rawRElementPostInjection = {node:rawRElement, text: getNodeText(rawRElement)};\r\n                // rawRElement = React.cloneElement(rawRElement, {children: [...makeItArray(rawRElement.props.children), ...makeItArray(injectProps.children)]});\r\n                // console.log('rendering view stack fixing doubles', {v0:rnode, v1:rawRElement, fixed:rawRElement.props.children})\r\n                fixdoubleroot = false; // need to set the props to new root in that case.\r\n                if (fixdoubleroot) rawRElement = rawRElement.props.children;\r\n                // debug.rawRElementPostfixdoubleroot = {node:rawRElement, text: getNodeText(rawRElement)};\r\n                // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\r\n            } catch (e: any) {\r\n                console.error(\"renderView error inject props:\", {e, dv, tnv});\r\n                rawRElement = DV.errorView(\"error while injecting props to subnodes\\n:\" + (e.message || '').split('\\n')[0],\r\n                    {e, rawRElement, key: props.key, newid: props.nodeid},\r\n                    'Subelement props', props.data?.__raw, props.node?.__raw, dv) as ReactElement;\r\n                /*\r\n                rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n                    DV.errorView(\"error while injecting props to subnodes\",\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n                    {});*/\r\n\r\n                // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\r\n            }\r\n            /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n            let isEqual = true;\r\n            try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n            if (isEqual) {\r\n                this.props.node.subElements = Object.keys(subElements);\r\n            }*/\r\n        }\r\n        // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n        // rnode = React.cloneElement(rnode as ReactElement, injectprops);\r\n\r\n        // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\r\n        if (false && dv.isExclusiveView && (props.node?.__raw as DGraphElement).father) {\r\n            let $containedIn = $('#' + props.node.__raw.father);\r\n            let $containerDropArea = $containedIn.find(\".VertexContainer\");\r\n            const droparea = $containerDropArea[0] || $containedIn[0];\r\n            Log.exDev(!droparea, 'invalid vertex container target', {$containedIn, $containerDropArea});\r\n            if (droparea) return createPortal(rawRElement || rnode, droparea);\r\n        }/*\r\n        if (countRenders) return <>{[\r\n            rawRElement || rnode,\r\n            <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n        ]}</>/*/\r\n\r\n        //console.log(\"renderView return:\", rawRElement || rnode);\r\n        return rawRElement || rnode;\r\n    }\r\n\r\n}\r\n\r\n// private\r\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\r\ntype AllPropss = Overlap<Overlap<GraphElementOwnProps, GraphElementDispatchProps>, GraphElementReduxStateProps>;\r\n\r\nconst GraphElementConnected = connect<GraphElementReduxStateProps, GraphElementDispatchProps, GraphElementOwnProps, DState>(\r\n    GraphElementComponent.mapStateToProps,\r\n    GraphElementComponent.mapDispatchToProps\r\n)(GraphElementComponent as any);\r\n\r\nexport const GraphElement = (props: GraphElementOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphElementConnected {...{...props, children}} />; }\r\n// console.info('graphElement loaded');\r\n\r\n\r\nGraphElementComponent.cname = \"GraphElementComponent\";\r\nGraphElementConnected.cname = \"GraphElementConnected\";\r\nGraphElement.cname = \"GraphElement\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}