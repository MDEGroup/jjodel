{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\graph\\\\graph.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DGraph, GraphElementComponent, GraphElementDispatchProps, GraphElementOwnProps, GraphElementReduxStateProps, GraphElementStatee, RuntimeAccessibleClass } from \"../../joiner\";\n// import {GraphElementStatee, GraphElementDispatchProps, GraphElementReduxStateProps, GraphElementOwnProps} from  \"../graphElement/sharedTypes/sharedTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.info('GraphComponent loading');\nclass GraphStatee extends GraphElementStatee {\n  /*graphid!: string\r\n  constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode, id: string) {\r\n      super(preRenderFunc, evalContext, templatefunc);\r\n      this.graphid = id;\r\n  }*/\n}\nconst superclass = RuntimeAccessibleClass.classes.GraphElementComponent;\nexport class GraphComponent extends superclass {\n  static mapStateToProps(state, ownProps) {\n    // console.log('dragx vertex mapstate', {DVoidVertex});\n    return GraphElementComponent.mapStateToProps(state, ownProps, DGraph);\n  }\n  // obsoleta? usa Vertex con isGraph = true e cambiagli nome\n}\n// todo: devo permettere agli elementi di: multi-selezionare, resize, drag, rotate, drop (outside-inside container)\n// private\nclass GraphOwnProps extends GraphElementOwnProps {\n  constructor() {\n    super(...arguments);\n    this.onclick = void 0;\n  } // propsRequestedFromHtmlAsAttributes: string;\n}\n// private\nclass GraphReduxStateProps extends GraphElementReduxStateProps {\n  /*nodeid!: string;\r\n  graphid!: string;*/\n  // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\n}\n\n// private\nclass GraphDispatchProps extends GraphElementDispatchProps {\n  // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\n}\n\n// private\n\nconst GraphConnected = connect(GraphComponent.mapStateToProps, GraphComponent.mapDispatchToProps)(GraphComponent);\n\n// nb: necessario per usarlo a runtime\nexport const Graph = function (props) {\n  let childrens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(GraphConnected, {\n    ...props,\n    childrens\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, _this);\n};\n\n// DModel.defaultComponent = Graph;\n// DPackage.defaultComponent = Graph;\n\n/*\r\nif (!windoww.mycomponents) windoww.mycomponents = {};\r\nwindoww.mycomponents.Graph = GraphRaw;*/\n_c = Graph;\nconsole.info('GraphComponent loaded');\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","connect","DGraph","GraphElementComponent","GraphElementDispatchProps","GraphElementOwnProps","GraphElementReduxStateProps","GraphElementStatee","RuntimeAccessibleClass","jsxDEV","_jsxDEV","console","info","GraphStatee","superclass","classes","GraphComponent","mapStateToProps","state","ownProps","GraphOwnProps","constructor","arguments","onclick","GraphReduxStateProps","GraphDispatchProps","GraphConnected","mapDispatchToProps","Graph","props","childrens","length","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/graph/graph.tsx"],"sourcesContent":["import React, {ReactElement} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    DGraph,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    IStore,\r\n    RuntimeAccessibleClass\r\n} from \"../../joiner\";\r\n// import {GraphElementStatee, GraphElementDispatchProps, GraphElementReduxStateProps, GraphElementOwnProps} from  \"../graphElement/sharedTypes/sharedTypes\";\r\n\r\nconsole.info('GraphComponent loading');\r\n\r\nclass GraphStatee extends GraphElementStatee {\r\n    /*graphid!: string\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode, id: string) {\r\n        super(preRenderFunc, evalContext, templatefunc);\r\n        this.graphid = id;\r\n    }*/\r\n}\r\n\r\nconst superclass = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\nexport class GraphComponent<AllProps extends AllPropss, GraphState extends GraphStatee>\r\n    // extends GraphElementRaw<AllProps, GraphState>\r\n    // @ts-ignore\r\n    extends superclass<AllProps, GraphState>{\r\n\r\n    static mapStateToProps(state: IStore, ownProps: GraphOwnProps): GraphReduxStateProps {\r\n        // console.log('dragx vertex mapstate', {DVoidVertex});\r\n        return GraphElementComponent.mapStateToProps(state, ownProps, DGraph);\r\n    }\r\n    // obsoleta? usa Vertex con isGraph = true e cambiagli nome\r\n\r\n}\r\n// todo: devo permettere agli elementi di: multi-selezionare, resize, drag, rotate, drop (outside-inside container)\r\n// private\r\nclass GraphOwnProps extends GraphElementOwnProps {\r\n    onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\nclass GraphReduxStateProps extends GraphElementReduxStateProps{\r\n    /*nodeid!: string;\r\n    graphid!: string;*/\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\nclass GraphDispatchProps extends GraphElementDispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllPropss = GraphOwnProps & GraphReduxStateProps & GraphDispatchProps;\r\n\r\n\r\nconst GraphConnected = connect<GraphReduxStateProps, GraphDispatchProps, GraphOwnProps, IStore>(\r\n    GraphComponent.mapStateToProps,\r\n    GraphComponent.mapDispatchToProps\r\n)(GraphComponent as any);\r\n\r\n// nb: necessario per usarlo a runtime\r\nexport const Graph = (props: GraphOwnProps, childrens: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphConnected {...{...props, childrens}} />; }\r\n\r\n// DModel.defaultComponent = Graph;\r\n// DPackage.defaultComponent = Graph;\r\n\r\n/*\r\nif (!windoww.mycomponents) windoww.mycomponents = {};\r\nwindoww.mycomponents.Graph = GraphRaw;*/\r\nconsole.info('GraphComponent loaded');\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAsB,OAAO;AACzC,SAAQC,OAAO,QAAO,aAAa;AAEnC,SACIC,MAAM,EACNC,qBAAqB,EACrBC,yBAAyB,EACzBC,oBAAoB,EACpBC,2BAA2B,EAC3BC,kBAAkB,EAElBC,sBAAsB,QACnB,cAAc;AACrB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEAC,OAAO,CAACC,IAAI,CAAC,wBAAwB,CAAC;AAEtC,MAAMC,WAAW,SAASN,kBAAkB,CAAC;EACzC;AACJ;AACA;AACA;AACA;AAJI;AAOJ,MAAMO,UAAU,GAAGN,sBAAsB,CAACO,OAAO,CAACZ,qBAA4D;AAC9G,OAAO,MAAMa,cAAc,SAGfF,UAAU,CAAsB;EAExC,OAAOG,eAAeA,CAACC,KAAa,EAAEC,QAAuB,EAAwB;IACjF;IACA,OAAOhB,qBAAqB,CAACc,eAAe,CAACC,KAAK,EAAEC,QAAQ,EAAEjB,MAAM,CAAC;EACzE;EACA;AAEJ;AACA;AACA;AACA,MAAMkB,aAAa,SAASf,oBAAoB,CAAC;EAAAgB,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC7CC,OAAO;EAAA,EACP;AACJ;AACA;AACA,MAAMC,oBAAoB,SAASlB,2BAA2B;EAC1D;AACJ;EACI;AAAA;;AAGJ;AACA,MAAMmB,kBAAkB,SAASrB,yBAAyB,CAAC;EACvD;AAAA;;AAIJ;;AAIA,MAAMsB,cAAc,GAAGzB,OAAO,CAC1Be,cAAc,CAACC,eAAe,EAC9BD,cAAc,CAACW,kBACnB,CAAC,CAACX,cAAqB,CAAC;;AAExB;AACA,OAAO,MAAMY,KAAK,GAAG,SAAAA,CAACC,KAAoB,EAAiE;EAAA,IAA/DC,SAAuC,GAAAR,SAAA,CAAAS,MAAA,QAAAT,SAAA,QAAAU,SAAA,GAAAV,SAAA,MAAG,EAAE;EACpF,oBAAOZ,OAAA,CAACgB,cAAc;IAAM,GAAGG,KAAK;IAAEC;EAAS;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAI,CAAC;AAAE,CAAC;;AAE3D;AACA;;AAEA;AACA;AACA;AAFAC,EAAA,GANaV,KAAK;AASlBjB,OAAO,CAACC,IAAI,CAAC,uBAAuB,CAAC;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}