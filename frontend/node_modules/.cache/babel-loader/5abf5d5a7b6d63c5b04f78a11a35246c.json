{"ast":null,"code":"var _dec, _class, _class2, _dec2, _class3, _dec3, _class5, _dec4, _class7, _class8;\nimport { BEGIN, Constructors, CreateElementAction, DClass, Defaults, DPointerTargetable, DViewElement, DViewPoint, EdgeHead, END, GraphPoint, Log, LPointerTargetable, Pointers, RuntimeAccessible, RuntimeAccessibleClass, SetRootFieldAction, ShortAttribETypes, store, U } from '../joiner';\nimport { DV } from \"../common/DV\";\n//import {Selected} from \"../joiner/types\";\nimport { DefaultEClasses, ShortDefaultEClasses } from \"../common/U\";\nimport DefaultViews from \"./defaults/views\";\nimport tinycolor from \"tinycolor2\";\nconsole.warn('ts loading store');\n\n// @RuntimeAccessible\n// NB: le voci che iniziano con '_' sono personali e non condivise\n\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\nexport const statehistory = {\n  globalcanundostate: false\n};\nwindow.statehistory = statehistory;\nexport let DState = (_dec = RuntimeAccessible('DState'), _dec(_class = (_class2 = class DState extends DPointerTargetable {\n  constructor() {\n    super(...arguments);\n    this.env = process.env;\n    this.debug = false;\n    this.logs = [];\n    this.models = [];\n    this.viewelements = [];\n    this.stackViews = [];\n    this.idlookup = {};\n    this.graphs = [];\n    this.voidvertexs = [];\n    this.vertexs = [];\n    this.graphvertexs = [];\n    this.graphelements = [];\n    this.edgepoints = [];\n    this.edges = [];\n    this.classifiers = [];\n    this.enumerators = [];\n    this.packages = [];\n    this.primitiveTypes = [];\n    this.attributes = [];\n    this.enumliterals = [];\n    this.references = [];\n    this.classs = [];\n    this.operations = [];\n    this.parameters = [];\n    this.ecoreClasses = [];\n    this.returnTypes = [];\n    this.isEdgePending = {\n      user: '',\n      source: ''\n    };\n    this.contextMenu = {\n      display: false,\n      x: 0,\n      y: 0,\n      nodeid: ''\n    };\n    this.objects = [];\n    this.values = [];\n    this._lastSelected = void 0;\n    this.users = [];\n    this.viewpoint = '';\n    this.viewpoints = [];\n    this.m2models = [];\n    this.m1models = [];\n    this.isLoading = false;\n    this.projects = [];\n    this.collaborativeSession = false;\n    this.VIEWS_RECOMPILE_onDataUpdate = [];\n    this.VIEWS_RECOMPILE_onDragStart = [];\n    this.VIEWS_RECOMPILE_onDragEnd = [];\n    this.VIEWS_RECOMPILE_whileDragging = [];\n    this.VIEWS_RECOMPILE_onResizeStart = [];\n    this.VIEWS_RECOMPILE_onResizeEnd = [];\n    this.VIEWS_RECOMPILE_whileResizing = [];\n    this.VIEWS_RECOMPILE_onRotationStart = [];\n    this.VIEWS_RECOMPILE_onRotationEnd = [];\n    this.VIEWS_RECOMPILE_whileRotating = [];\n    this.VIEWS_RECOMPILE_constants = [];\n    this.VIEWS_RECOMPILE_usageDeclarations = [];\n    this.VIEWS_RECOMPILE_jsxString = [];\n    this.VIEWS_RECOMPILE_preconditions = [];\n    this.VIEWS_RECOMPILE_jsCondition = [];\n    this.VIEWS_RECOMPILE_ocl = [];\n    this.VIEWS_RECOMPILE_events = [];\n    this.VIEWS_RECOMPILE_all = void 0;\n    this.ClassNameChanged = {};\n    this.tooltip = '';\n    this.topics = {\n      'sensors/1': [{\n        value: {\n          raw: 10,\n          unit: 's'\n        },\n        timestamp: 1\n      }, {\n        value: {\n          raw: 12,\n          unit: 's'\n        },\n        timestamp: 2\n      }],\n      'sensors/2': [{\n        value: {\n          raw: 20,\n          unit: 's'\n        },\n        timestamp: 2\n      }],\n      'sensors/3': [{\n        value: {\n          raw: 30,\n          unit: 's'\n        },\n        timestamp: 3\n      }]\n    };\n  }\n  static new() {\n    return new Constructors(new DState('dwc'), undefined, false, undefined).DPointerTargetable().DState().end();\n  }\n\n  //damiano: this might make problems on load\n\n  // Pointer<DModel, 0, 'N'>[] = [];\n\n  // users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\n  // collaborators: UserState[];\n  //// DClass section to fill\n  // actually fields\n  /// DClass section end\n  // private, non-shared fields\n  ////////////////     flags shared, but handled locally      /////////////////////////////\n  /* RECOMPILES MODULE */\n  // for ocl matchings by m2 class name: \"context inv Human: ...\"\n  /* IoT: Topic Table */\n  static fixcolors() {\n    window.tinycolor = tinycolor;\n    let tofix = [\"tetrad\", \"triad\", \"splitcomplement\"];\n    for (let f of tofix) {\n      tinycolor.prototype[f + \"0\"] = tinycolor.prototype[f];\n      tinycolor.prototype[f] = function () {\n        let a = this.getAlpha();\n        return this[f + '0']().map(t => t.setAlpha(a));\n      };\n    }\n  }\n  static init(store) {\n    this.fixcolors();\n    BEGIN();\n    const viewpoint = DViewPoint.new2('Default', '', vp => {\n      vp.isExclusiveView = false;\n    }, true, 'Pointer_ViewPointDefault');\n    const validationViewpoint = DViewPoint.new2('Validation default', '', vp => {\n      vp.isExclusiveView = false;\n      vp.isValidation = true;\n    }, true, 'Pointer_ViewPointValidation');\n    Log.exDev(viewpoint.id !== Defaults.viewpoints[0], \"wrong vp id initialization\", {\n      viewpoint,\n      def: Defaults.viewpoints\n    });\n    const views = makeDefaultGraphViews(viewpoint.id, validationViewpoint.id);\n    for (let view of views) {\n      CreateElementAction.new(view);\n    }\n    for (let primitiveType of Object.values(ShortAttribETypes)) {\n      let dPrimitiveType;\n      if (primitiveType === ShortAttribETypes.EVoid) continue; // or make void too without primitiveType = true, but with returnType = true?\n      dPrimitiveType = DClass.new(primitiveType, false, false, true, false, '', undefined, true, 'Pointer_' + primitiveType.toUpperCase());\n      SetRootFieldAction.new('primitiveTypes', dPrimitiveType.id, '+=', true);\n    }\n\n    /// creating m3 \"Object\" metaclass\n    let dObject = DClass.new(ShortDefaultEClasses.EObject, false, false, false, false, '', undefined, true, 'Pointer_' + ShortDefaultEClasses.EObject.toUpperCase());\n    SetRootFieldAction.new('ecoreClasses', dObject.id, '+=', true);\n    for (let defaultEcoreClass of Object.values(DefaultEClasses)) {\n      // todo: creat everyone and not just object, make the whole m3 populated.\n    }\n\n    /*\r\n    let tmp = Object.values(GraphElements);\r\n    for (let k in tmp) {\r\n        let v: any = tmp[k];\r\n        Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n        if (!v.cname) continue; // it is a subdictionary\r\n        GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n    }*/\n    END();\n  }\n}, _class2.subclasses = [], _class2._extends = [], _class2)) || _class);\nfunction makeDefaultGraphViews(vp, validationVP) {\n  let errorOverlayView = DViewElement.new2('Semantic error view', DV.semanticErrorOverlay(), v => {\n    v.jsCondition = 'let nstate = node?.state || {};\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';\n    v.usageDeclarations = \"(ret)=>{\\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" + \"// ** declarations here ** //\\n\" + \"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\" + \"ret.nstate = node.state\\n\" + \"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\" + \"\\n}\";\n    v.isExclusiveView = false;\n    v.css = `&.mainView { text-decoration-line: spelling-error; }\n&.decorativeView {\n    text-decoration-line: spelling-error;\n    \n    .overlap{\n      outline: 4px solid var(--background-3);\n      display: flex;\n    }\n    .error-message{\n        color: var(--color-3);\n        background: var(--background-3);\n        border-radius: 0 16px 16px 0;\n        margin: auto;\n        padding: 8px;\n        position:absolute;\n        top:50%; right:0;\n        transform: translate(calc(100% + 3px), calc(-50%));\n    }\n}`;\n  }, false, validationVP, 'Pointer_ViewOverlay');\n  let anchorView = DViewElement.new2('Anchors', DV.anchorJSX(), v => {\n    v.isExclusiveView = false;\n    v.palette = {\n      'anchor-': U.hexToPalette('#77f', '#f77', '#007'),\n      'anchor-hover-': U.hexToPalette('#7f7', '#a44', '#070')\n    };\n    v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" + \"// ** declarations here ** //\\n\" + \"ret.anchors = data && node.anchors;\\n\" + \"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\" + \"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\" + \"}\";\n    v.events = {\n      dragAnchor: '(coords /*Point*/, anchorName /*string*/)=>{\\n' + '\\tconst updateAnchor = {};\\n' + '\\tupdateAnchor[anchorName] = coords;\\n' + '\\tnode.anchors=updateAnchor;\\n' + '}',\n      assignAnchor: '(anchorName /*string*/)=>{\\n' + '\\tnode.assignEdgeAnchor(anchorName);\\n' + '}'\n    };\n    v.css = `\n.anchor.valid-anchor{\n    display:block;\n}\n\n.anchor{\n    display:none;\n    position: absolute;\n    background-color: var(--anchor-1);\n    outline: 2px solid var(--anchor-3);\n    transform: translate(-50%, -50%);\n    pointer-events: all;\n    cursor: crosshair;\n    \n    &:hover{\n        background-color: var(--anchor-hover-1);\n        outline: 2px solid var(--anchor-hover-3);\n    }\n    &.active-anchor{\n        background-color: var(--anchor-2);\n        &:hover{\n            background-color: var(--anchor-hover-2);\n        }\n    }\n}\n\n\n`;\n  }, false, vp, 'Pointer_ViewAnchors');\n  let errorCheckName = DViewElement.new2('Naming error view', DV.invisibleJsx(), v => {\n    v.isExclusiveView = false;\n    v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" + \"// ** declarations here ** //\\n\" + \"ret.name = data && data.name || '';\\n\" + \"ret.type = data && data.className.substring(1) || 'shapeless';\\n\" + \"}\";\n    v.onDataUpdate = `\nlet err = undefined;\n//if (name.indexOf(\" \") >= 0) err = \"\" + type + \" names cannot contain white spaces.\"; else\nif (name.length === 0 && type !== \"shapeless\") err = type + \"es must be named.\";\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \" names must begin with an alphabet letter or $_ symbols.\";\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \" names can only contain an alphanumeric chars or or $_ symbols\";\nnode.state = {error_naming:err};\n`;\n  }, false, validationVP, 'Pointer_ViewCheckName');\n  let errorCheckLowerbound = DViewElement.new2('Lowerbound error view', DV.invisibleJsx(), v => {\n    // v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\n    v.appliableToClasses = ['DValue'];\n    v.isExclusiveView = false;\n    v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" + \"// ** declarations here ** //\\n\" + \"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\" + \"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\" + \"}\";\n    v.onDataUpdate = `\nlet err = undefined;\\n\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\nnode.state = {error_lowerbound: err};\\n\n`;\n  }, false, validationVP, 'Pointer_ViewLowerbound');\n  // errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\n\n  let valuecolormap = {};\n  valuecolormap[ShortAttribETypes.EBoolean] = \"orange\";\n  valuecolormap[ShortAttribETypes.EByte] = \"orange\";\n  valuecolormap[ShortAttribETypes.EShort] = \"orange\";\n  valuecolormap[ShortAttribETypes.EInt] = \"orange\";\n  valuecolormap[ShortAttribETypes.ELong] = \"orange\";\n  valuecolormap[ShortAttribETypes.EFloat] = \"orange\";\n  valuecolormap[ShortAttribETypes.EDouble] = \"orange\";\n  valuecolormap[ShortAttribETypes.EDate] = \"green\";\n  valuecolormap[ShortAttribETypes.EString] = \"green\";\n  valuecolormap[ShortAttribETypes.EChar] = \"green\";\n  valuecolormap[ShortAttribETypes.EVoid] = \"gray\";\n  let voidView = DViewElement.new('Void', DV.voidView(), undefined, '', '', '', [], '', undefined, false, true, vp);\n  // voidView.appliableToClasses=[\"VoidVertex\"];\n  voidView.adaptWidth = true;\n  voidView.adaptHeight = true;\n  let edgeViews = [];\n  let size0 = new GraphPoint(0, 0),\n    size1 = new GraphPoint(12, 12),\n    size2 = new GraphPoint(18, 12);\n  function makeEdgeView(name, type, headSize, tailSize, dashing) {\n    let ev = DV.edgeView(type, headSize || size0, tailSize || size0, dashing ? \"10.5,9,0,0\" : undefined, vp, name);\n    edgeViews.push(ev);\n    return ev;\n  }\n  makeEdgeView(\"Association\", EdgeHead.reference, size1, undefined, false);\n  makeEdgeView(\"Dependency\", EdgeHead.reference, size1, undefined, true);\n  makeEdgeView(\"Inheritance\", EdgeHead.extend, size1, undefined, false);\n  makeEdgeView(\"Aggregation\", EdgeHead.aggregation, undefined, size2, false);\n  makeEdgeView(\"Composition\", EdgeHead.composition, undefined, size2, false);\n\n  // edgeView.forceNodeType=\"Edge\"\n\n  /*\r\n  for (let ev of edgeViews){\r\n      ev.bendingMode = EdgeBendingMode.Line;\r\n      ev.subViews = [edgePointView.id];\r\n  }*/\n  // nb: Error is not a view, just jsx. transform it in a view so users can edit it\n\n  let dv_subviews = [DefaultViews.model(vp), DefaultViews.package(vp), DefaultViews.class(vp), DefaultViews.enum(vp), DefaultViews.attribute(vp), DefaultViews.reference(vp), DefaultViews.operation(vp), DefaultViews.parameter(vp), DefaultViews.literal(vp), DefaultViews.object(vp), DefaultViews.value(vp), anchorView, voidView, ...edgeViews, DefaultViews.edgepoint(vp)];\n  let validation_subviews = [errorOverlayView, errorCheckLowerbound, errorCheckName];\n  // SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\n  // SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\n  const ret = [...dv_subviews, ...validation_subviews];\n  console.clear();\n  for (let v of ret) Log.e(!v.events, \"missing events on view \" + v.name, {\n    v,\n    ret\n  });\n  for (let v of ret) Log.w(!!!v.events, \"found events on view \" + v.name, {\n    v,\n    ret\n  });\n  return ret;\n}\nexport let ViewPointState = (_dec2 = RuntimeAccessible('ViewPointState'), _dec2(_class3 = class ViewPointState extends DPointerTargetable {\n  constructor() {\n    super(...arguments);\n    this.name = '';\n  }\n}) || _class3);\n\n// to delete?\nexport let ModelStore = (_dec3 = RuntimeAccessible('ModelStore'), _dec3(_class5 = class ModelStore {\n  constructor() {\n    this._meta = void 0;\n    this.instances = void 0;\n  }\n  // getter e setter senza proxy\n  get meta() {\n    return this._meta;\n  }\n  set meta(value) {\n    this._meta = value;\n  }\n}) || _class5);\nexport let LState = (_dec4 = RuntimeAccessible('LState'), _dec4(_class7 = (_class8 = class LState extends LPointerTargetable {\n  constructor() {\n    super(...arguments);\n    this.__raw = void 0;\n    this.contextMenu = void 0;\n    this.user = void 0;\n    this.debug = void 0;\n    this.room = void 0;\n    this._lastSelected = void 0;\n    this.idlookup = void 0;\n  }\n  // return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\n  static get() {\n    return LState.wrap(store.getState());\n  }\n  get_contextMenu(c) {\n    return c.data.contextMenu;\n  }\n  // get_user(c: Context): this[\"user\"] { return LState.wrap(c.data.user) as LUser; }\n  get_debug(c) {\n    return c.data.debug;\n  }\n  get_idlookup(c) {\n    return c.data.idlookup;\n  }\n  get__lastSelected(c) {\n    let ls = c.data._lastSelected;\n    return ls && {\n      modelElement: LState.wrap(ls.modelElement),\n      node: LState.wrap(ls.node),\n      view: LState.wrap(ls.view)\n    };\n  }\n  _defaultCollectionGetter(c, k) {\n    return LPointerTargetable.fromPointer(c.data[k]);\n  }\n  _defaultGetter(c, k) {\n    //console.log(\"default Getter\");\n    let v = c.data[k];\n    if (Array.isArray(v)) {\n      if (v.length === 0) return [];else if (Pointers.isPointer(v[0])) return this._defaultCollectionGetter(c, k);\n      return v;\n    }\n    return v;\n  }\n}, _class8.subclasses = [], _class8._extends = [], _class8.structure = void 0, _class8.singleton = void 0, _class8)) || _class7);\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DState);\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LState);","map":{"version":3,"names":["BEGIN","Constructors","CreateElementAction","DClass","Defaults","DPointerTargetable","DViewElement","DViewPoint","EdgeHead","END","GraphPoint","Log","LPointerTargetable","Pointers","RuntimeAccessible","RuntimeAccessibleClass","SetRootFieldAction","ShortAttribETypes","store","U","DV","DefaultEClasses","ShortDefaultEClasses","DefaultViews","tinycolor","console","warn","statehistory","globalcanundostate","window","DState","_dec","_class","_class2","constructor","arguments","env","process","debug","logs","models","viewelements","stackViews","idlookup","graphs","voidvertexs","vertexs","graphvertexs","graphelements","edgepoints","edges","classifiers","enumerators","packages","primitiveTypes","attributes","enumliterals","references","classs","operations","parameters","ecoreClasses","returnTypes","isEdgePending","user","source","contextMenu","display","x","y","nodeid","objects","values","_lastSelected","users","viewpoint","viewpoints","m2models","m1models","isLoading","projects","collaborativeSession","VIEWS_RECOMPILE_onDataUpdate","VIEWS_RECOMPILE_onDragStart","VIEWS_RECOMPILE_onDragEnd","VIEWS_RECOMPILE_whileDragging","VIEWS_RECOMPILE_onResizeStart","VIEWS_RECOMPILE_onResizeEnd","VIEWS_RECOMPILE_whileResizing","VIEWS_RECOMPILE_onRotationStart","VIEWS_RECOMPILE_onRotationEnd","VIEWS_RECOMPILE_whileRotating","VIEWS_RECOMPILE_constants","VIEWS_RECOMPILE_usageDeclarations","VIEWS_RECOMPILE_jsxString","VIEWS_RECOMPILE_preconditions","VIEWS_RECOMPILE_jsCondition","VIEWS_RECOMPILE_ocl","VIEWS_RECOMPILE_events","VIEWS_RECOMPILE_all","ClassNameChanged","tooltip","topics","value","raw","unit","timestamp","new","undefined","end","fixcolors","tofix","f","prototype","a","getAlpha","map","t","setAlpha","init","new2","vp","isExclusiveView","validationViewpoint","isValidation","exDev","id","def","views","makeDefaultGraphViews","view","primitiveType","Object","dPrimitiveType","EVoid","toUpperCase","dObject","EObject","defaultEcoreClass","subclasses","_extends","validationVP","errorOverlayView","semanticErrorOverlay","v","jsCondition","usageDeclarations","css","anchorView","anchorJSX","palette","hexToPalette","events","dragAnchor","assignAnchor","errorCheckName","invisibleJsx","onDataUpdate","errorCheckLowerbound","appliableToClasses","valuecolormap","EBoolean","EByte","EShort","EInt","ELong","EFloat","EDouble","EDate","EString","EChar","voidView","adaptWidth","adaptHeight","edgeViews","size0","size1","size2","makeEdgeView","name","type","headSize","tailSize","dashing","ev","edgeView","push","reference","extend","aggregation","composition","dv_subviews","model","package","class","enum","attribute","operation","parameter","literal","object","edgepoint","validation_subviews","ret","clear","e","w","ViewPointState","_dec2","_class3","ModelStore","_dec3","_class5","_meta","instances","meta","LState","_dec4","_class7","_class8","__raw","room","get","wrap","getState","get_contextMenu","c","data","get_debug","get_idlookup","get__lastSelected","ls","modelElement","node","_defaultCollectionGetter","k","fromPointer","_defaultGetter","Array","isArray","length","isPointer","structure","singleton","set_extend"],"sources":["C:/d/Programming/web/jodel-mde/src/redux/store.tsx"],"sourcesContent":["import {\r\n    Asterisk,\r\n    BEGIN, Circle,\r\n    Constructors,\r\n    CoordinateMode,\r\n    CreateElementAction, Cross,\r\n    DAttribute,\r\n    DClass,\r\n    DClassifier, Decagon, DecoratedStar, DEdge,\r\n    DEdgePoint,\r\n    Defaults,\r\n    DEnumerator,\r\n    DEnumLiteral,\r\n    DExtEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DGraphVertex,\r\n    Dictionary,\r\n    DLog,\r\n    DModel,\r\n    DModelElement,\r\n    DObject, DocString,\r\n    DOperation,\r\n    DPackage,\r\n    DParameter,\r\n    DPointerTargetable,\r\n    DProject,\r\n    DRefEdge,\r\n    DReference,\r\n    DUser,\r\n    DValue,\r\n    DVertex,\r\n    DViewElement,\r\n    DViewPoint,\r\n    DVoidEdge, Edge,\r\n    EdgeBendingMode,\r\n    EdgeHead, EdgePoint, Ellipse,\r\n    END, Enneagon, Field,\r\n    GObject, Graph, GraphElement,\r\n    GraphPoint,\r\n    GraphSize, GraphVertex, Heptagon, Hexagon,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LObject, Log,\r\n    LogicContext,\r\n    LOperation,\r\n    LPackage,\r\n    LParameter,\r\n    LPointerTargetable, LProject,\r\n    LRefEdge,\r\n    LReference,\r\n    LUser,\r\n    LValue,\r\n    LViewElement,\r\n    LViewPoint, Nonagon, Octagon,\r\n    Pentagon,\r\n    Pointer,\r\n    Pointers, Polygon, Rectangle,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass, Septagon, SetFieldAction,\r\n    SetRootFieldAction,\r\n    ShortAttribETypes, SimpleStar, Square, Star,\r\n    store, Trapezoid, Triangle, U, Vertex, VoidVertex,\r\n} from '../joiner';\r\nimport {DV} from \"../common/DV\";\r\n//import {Selected} from \"../joiner/types\";\r\nimport {DefaultEClasses, ShortDefaultEClasses} from \"../common/U\";\r\nimport { GraphElements, Graphs, Vertexes, Edges, Fields } from '../joiner';\r\nimport DefaultViews from \"./defaults/views\";\r\nimport tinycolor, {Instance} from \"tinycolor2\";\r\n\r\nconsole.warn('ts loading store');\r\n\r\n// @RuntimeAccessible\r\n// NB: le voci che iniziano con '_' sono personali e non condivise\r\n\r\n// export const statehistory_obsoleteidea: {past: IStore[], current: IStore, future: IStore[]} = { past:[], current: null, future:[] } as any;\r\nexport const statehistory: {\r\n        [userpointer:Pointer<DUser>]: {undoable:GObject<\"delta\">[], redoable: GObject<\"delta\">[]}\r\n} & {\r\n    globalcanundostate: boolean // set to true at first user click }\r\n} = { globalcanundostate: false} as any;\r\n(window as any).statehistory = statehistory;\r\n\r\n@RuntimeAccessible('DState')\r\nexport class DState extends DPointerTargetable{\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static new(): DState {\r\n        return new Constructors(new DState('dwc'), undefined, false, undefined).DPointerTargetable().DState().end();\r\n    }\r\n\r\n    env: Dictionary = process.env;  //damiano: this might make problems on load\r\n    debug: boolean = false;\r\n    logs: Pointer<DLog>[] = [];\r\n    models: Pointer<DModel, 0, 'N'> = []; // Pointer<DModel, 0, 'N'>[] = [];\r\n\r\n\r\n    viewelements: Pointer<DViewElement, 0, 'N'> = [];\r\n    stackViews: Pointer<DViewElement, 0, 'N'> = [];\r\n\r\n    // users: Dictionary<DocString<Pointer<DUser>>, UserState> = {};\r\n    // collaborators: UserState[];\r\n    idlookup: Record<Pointer<DPointerTargetable>, DPointerTargetable> = {};\r\n\r\n    //// DClass section to fill\r\n    graphs: Pointer<DGraph, 0, 'N'> = [];\r\n    voidvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    vertexs: Pointer<DVertex, 0, 'N'> = [];\r\n    graphvertexs: Pointer<DGraphVertex, 0, 'N'> = [];\r\n    graphelements: Pointer<DGraphVertex, 0, 'N'> = []; // actually fields\r\n    edgepoints: Pointer<DEdgePoint, 0, 'N'> = [];\r\n    edges: Pointer<DEdge, 0, \"N\"> = [];\r\n\r\n    classifiers: Pointer<DClassifier, 0, 'N'> = [];\r\n    enumerators: Pointer<DEnumerator, 0, 'N'> = [];\r\n    packages: Pointer<DPackage, 0, 'N'> = [];\r\n    primitiveTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    attributes: Pointer<DAttribute, 0, \"N\"> = [];\r\n    enumliterals: Pointer<DEnumLiteral, 0, \"N\"> = [];\r\n    references: Pointer<DReference, 0, \"N\"> = [];\r\n    classs: Pointer<DClass, 0, \"N\"> = [];\r\n    operations: Pointer<DOperation, 0, \"N\"> = [];\r\n    parameters: Pointer<DParameter, 0, \"N\"> = [];\r\n    ecoreClasses: Pointer<DClass, 0, \"N\"> = [];\r\n    returnTypes: Pointer<DClass, 0, \"N\"> = [];\r\n    /// DClass section end\r\n\r\n    isEdgePending: {user: Pointer<DUser>, source: Pointer<DClass>} = {user: '', source: ''};\r\n\r\n    contextMenu: { display: boolean, x: number, y: number, nodeid: Pointer} = {display: false, x: 0, y: 0, nodeid:''};\r\n\r\n    objects: Pointer<DObject, 0, 'N', LObject> = [];\r\n    values: Pointer<DValue, 0, 'N', LValue> = [];\r\n\r\n    // private, non-shared fields\r\n    _lastSelected?: {\r\n        node: Pointer<DGraphElement, 1, 1>,\r\n        view: Pointer<DViewElement, 1, 1>,\r\n        modelElement: Pointer<DModelElement, 0, 1> // if a node is clicked: a node and a view are present, a modelElement might be. a node can exist without a modelElement counterpart.\r\n    };\r\n\r\n    users: Pointer<DUser, 0, 'N', LUser> = [];\r\n\r\n    viewpoint: Pointer<DViewPoint> = '';\r\n    viewpoints: Pointer<DViewPoint, 0, 'N'> = [];\r\n\r\n    m2models: Pointer<DModel, 0, 'N'> = [];\r\n    m1models: Pointer<DModel, 0, 'N'> = [];\r\n\r\n    isLoading: boolean = false;\r\n\r\n    projects: Pointer<DProject, 0, 'N'> = [];\r\n    collaborativeSession: boolean = false;\r\n    ////////////////     flags shared, but handled locally      /////////////////////////////\r\n\r\n    /* RECOMPILES MODULE */\r\n    VIEWS_RECOMPILE_onDataUpdate: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onDragStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onDragEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileDragging: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onResizeStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onResizeEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileResizing: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_onRotationStart: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_onRotationEnd: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_whileRotating: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_constants: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_usageDeclarations: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsxString: Pointer<DViewElement>[] = [];\r\n\r\n    VIEWS_RECOMPILE_preconditions: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_jsCondition: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_ocl: Pointer<DViewElement>[] = [];\r\n    VIEWS_RECOMPILE_events: (Pointer<DViewElement> | {vid: Pointer<DViewElement>, keys: string[] | undefined})[] = [];\r\n    VIEWS_RECOMPILE_all?: boolean | Pointer<any>[];\r\n\r\n    ClassNameChanged: Dictionary<Pointer<DModelElement>, DocString<\"name\">> = {}; // for ocl matchings by m2 class name: \"context inv Human: ...\"\r\n\r\n    tooltip: string = '';\r\n\r\n    /* IoT: Topic Table */\r\n    topics: Dictionary<string, unknown> = {\r\n        'sensors/1': [{value: {raw: 10, unit: 's'}, timestamp: 1}, {value: {raw: 12, unit: 's'}, timestamp: 2}],\r\n        'sensors/2': [{value: {raw: 20, unit: 's'}, timestamp: 2}],\r\n        'sensors/3': [{value: {raw: 30, unit: 's'}, timestamp: 3}]\r\n    };\r\n\r\n\r\n    static fixcolors(){\r\n        (window as any).tinycolor = tinycolor;\r\n        let tofix = [\"tetrad\", \"triad\", \"splitcomplement\"];\r\n        for (let f of tofix) {\r\n            tinycolor.prototype[f + \"0\"] = tinycolor.prototype[f];\r\n            tinycolor.prototype[f] = function (){ let a = this.getAlpha(); return this[f+'0']().map((t: Instance) => t.setAlpha(a)); }\r\n        }\r\n    }\r\n    static init(store?: DState): void {\r\n        this.fixcolors();\r\n        BEGIN()\r\n        const viewpoint = DViewPoint.new2('Default', '', (vp)=>{ vp.isExclusiveView = false; }, true, 'Pointer_ViewPointDefault');\r\n        const validationViewpoint = DViewPoint.new2('Validation default', '', (vp)=>{ vp.isExclusiveView = false; vp.isValidation = true;}, true, 'Pointer_ViewPointValidation');\r\n\r\n        Log.exDev(viewpoint.id !== Defaults.viewpoints[0], \"wrong vp id initialization\", {viewpoint, def:Defaults.viewpoints});\r\n        const views: DViewElement[] = makeDefaultGraphViews(viewpoint.id, validationViewpoint.id);\r\n\r\n        for (let view of views) { CreateElementAction.new(view); }\r\n\r\n        for (let primitiveType of Object.values(ShortAttribETypes)) {\r\n            let dPrimitiveType;\r\n            if (primitiveType === ShortAttribETypes.EVoid) continue; // or make void too without primitiveType = true, but with returnType = true?\r\n            dPrimitiveType = DClass.new(primitiveType, false, false, true, false, '', undefined, true, 'Pointer_' + primitiveType.toUpperCase());\r\n            SetRootFieldAction.new('primitiveTypes', dPrimitiveType.id, '+=', true);\r\n        }\r\n\r\n        /// creating m3 \"Object\" metaclass\r\n        let dObject = DClass.new(ShortDefaultEClasses.EObject, false, false, false, false,\r\n            '', undefined, true, 'Pointer_' + ShortDefaultEClasses.EObject.toUpperCase());\r\n        SetRootFieldAction.new('ecoreClasses', dObject.id, '+=', true);\r\n        for (let defaultEcoreClass of Object.values(DefaultEClasses)){\r\n            // todo: creat everyone and not just object, make the whole m3 populated.\r\n        }\r\n\r\n        /*\r\n        let tmp = Object.values(GraphElements);\r\n        for (let k in tmp) {\r\n            let v: any = tmp[k];\r\n            Log.exDev(!v, 'wrong import order', {k, v, GraphElements, tmp});\r\n            if (!v.cname) continue; // it is a subdictionary\r\n            GraphElements[(v.cname as string)] = GraphElements[k] = v;\r\n        }*/\r\n        END();\r\n    }\r\n}\r\n\r\n\r\nfunction makeDefaultGraphViews(vp: Pointer<DViewPoint>, validationVP: Pointer<DViewPoint>): DViewElement[] {\r\n\r\n    let errorOverlayView: DViewElement = DViewElement.new2('Semantic error view', DV.semanticErrorOverlay(), (v) => {\r\n        v.jsCondition = 'let nstate = node?.state || {};\\nObject.keys(nstate).filter(k => k.indexOf(\"error_\")===0).map(k=>nstate[k]).join(\\'\\\\n\\').length>0';\r\n        v.usageDeclarations = \"(ret)=>{\\n\" +\r\n        \"// ** preparations and default behaviour here ** //\\n\" +\r\n        \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n        \"// ** declarations here ** //\\n\" +\r\n        \"// console.log('overlayView ud inner ' + data.name, {errs:node.state, node, noder:node.r, data});\\n\" +\r\n        \"ret.nstate = node.state\\n\" +\r\n        \"ret.errors = Object.keys(ret.nstate).filter(k => k.indexOf(\\\"error_\\\")===0).map(k=>ret.nstate[k])\\n\" +\r\n        \"\\n}\"\r\n        v.isExclusiveView = false;\r\n        v.css =\r\n`&.mainView { text-decoration-line: spelling-error; }\r\n&.decorativeView {\r\n    text-decoration-line: spelling-error;\r\n    \r\n    .overlap{\r\n      outline: 4px solid var(--background-3);\r\n      display: flex;\r\n    }\r\n    .error-message{\r\n        color: var(--color-3);\r\n        background: var(--background-3);\r\n        border-radius: 0 16px 16px 0;\r\n        margin: auto;\r\n        padding: 8px;\r\n        position:absolute;\r\n        top:50%; right:0;\r\n        transform: translate(calc(100% + 3px), calc(-50%));\r\n    }\r\n}`\r\n    }, false, validationVP, 'Pointer_ViewOverlay' );\r\n\r\n    let anchorView: DViewElement = DViewElement.new2('Anchors', DV.anchorJSX(), (v) => {\r\n        v.isExclusiveView = false;\r\n        v.palette={'anchor-': U.hexToPalette('#77f', '#f77', '#007'),\r\n            'anchor-hover-': U.hexToPalette('#7f7', '#a44', '#070')}\r\n        v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.anchors = data && node.anchors;\\n\"+\r\n            \"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\"+\r\n            \"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\"+\r\n            \"}\";\r\n        v.events = {\r\n            dragAnchor: '(coords /*Point*/, anchorName /*string*/)=>{\\n' +\r\n                '\\tconst updateAnchor = {};\\n'+\r\n                '\\tupdateAnchor[anchorName] = coords;\\n'+\r\n                '\\tnode.anchors=updateAnchor;\\n'+\r\n                '}',\r\n            assignAnchor: '(anchorName /*string*/)=>{\\n' +\r\n                '\\tnode.assignEdgeAnchor(anchorName);\\n'+\r\n                '}'}\r\n        v.css = `\r\n.anchor.valid-anchor{\r\n    display:block;\r\n}\r\n\r\n.anchor{\r\n    display:none;\r\n    position: absolute;\r\n    background-color: var(--anchor-1);\r\n    outline: 2px solid var(--anchor-3);\r\n    transform: translate(-50%, -50%);\r\n    pointer-events: all;\r\n    cursor: crosshair;\r\n    \r\n    &:hover{\r\n        background-color: var(--anchor-hover-1);\r\n        outline: 2px solid var(--anchor-hover-3);\r\n    }\r\n    &.active-anchor{\r\n        background-color: var(--anchor-2);\r\n        &:hover{\r\n            background-color: var(--anchor-hover-2);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n`\r\n    }, false, vp, 'Pointer_ViewAnchors' );\r\n\r\n    let errorCheckName: DViewElement = DViewElement.new2('Naming error view', DV.invisibleJsx(), (v) => {\r\n        v.isExclusiveView = false;\r\n        v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.name = data && data.name || '';\\n\"+\r\n            \"ret.type = data && data.className.substring(1) || 'shapeless';\\n\"+\r\n            \"}\";\r\n        v.onDataUpdate = `\r\nlet err = undefined;\r\n//if (name.indexOf(\" \") >= 0) err = \"\" + type + \" names cannot contain white spaces.\"; else\r\nif (name.length === 0 && type !== \"shapeless\") err = type + \"es must be named.\";\r\nelse if (!name[0].match(/[A-Za-z_$]/)) err = type + \" names must begin with an alphabet letter or $_ symbols.\";\r\nelse if (!name.match(/^[A-Za-z_$]+[A-Za-z0-9$_\\\\s]*$/)) err = type + \" names can only contain an alphanumeric chars or or $_ symbols\";\r\nnode.state = {error_naming:err};\r\n`;}, false, validationVP, 'Pointer_ViewCheckName' );\r\n\r\nlet errorCheckLowerbound: DViewElement = DViewElement.new2('Lowerbound error view', DV.invisibleJsx(), (v) => {\r\n            // v.jsCondition = '(data, node)=> {\\nnode.state.errors?.length>0';\r\n            v.appliableToClasses = ['DValue'];\r\n            v.isExclusiveView = false;\r\n            v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n                \"// ** preparations and default behaviour here ** //\\n\" +\r\n                \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n                \"// ** declarations here ** //\\n\" +\r\n                \"ret.valuesLength = data.values.filter(v=>(v!==undefined && v!=='')).length;\\n\"+\r\n                \"ret.missingLowerbound = Math.max(0, data.lowerBound - ret.valuesLength);\\n\" +\r\n                \"}\";\r\n            v.onDataUpdate = `\r\nlet err = undefined;\\n\r\nif (missingLowerbound > 0) err = (data.className.substring(1))\\n\r\n \\t\\t+ ' Lowerbound violation, missing ' + missingLowerbound + ' values.';\\n\r\nnode.state = {error_lowerbound: err};\\n\r\n`;\r\n    }, false, validationVP, 'Pointer_ViewLowerbound' );\r\n    // errorOverlayView.oclCondition = 'context DValue inv: self.value < 0';\r\n\r\n    let valuecolormap: GObject = {};\r\n    valuecolormap[ShortAttribETypes.EBoolean] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EByte] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EShort] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EInt] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.ELong] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EFloat] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDouble] = \"orange\";\r\n    valuecolormap[ShortAttribETypes.EDate] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EString] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EChar] = \"green\";\r\n    valuecolormap[ShortAttribETypes.EVoid] = \"gray\";\r\n\r\n\r\n    let voidView: DViewElement = DViewElement.new('Void', DV.voidView(), undefined, '', '', '',\r\n        [], '', undefined, false, true, vp);\r\n    // voidView.appliableToClasses=[\"VoidVertex\"];\r\n    voidView.adaptWidth = true; voidView.adaptHeight = true;\r\n\r\n\r\n\r\n    let edgeViews: DViewElement[] = [];\r\n    let size0: GraphPoint = new GraphPoint(0, 0), size1: GraphPoint = new GraphPoint(12, 12), size2: GraphPoint = new GraphPoint(18, 12);\r\n\r\n\r\n    function makeEdgeView(name: string, type: EdgeHead, headSize: GraphPoint | undefined, tailSize: GraphPoint | undefined, dashing: boolean): DViewElement{\r\n        let ev = DV.edgeView(type, headSize || size0, tailSize || size0, dashing ? \"10.5,9,0,0\" : undefined, vp, name);\r\n        edgeViews.push(ev);\r\n        return ev;\r\n    }\r\n\r\n    makeEdgeView(\"Association\", EdgeHead.reference,             size1,   undefined,  false);\r\n    makeEdgeView(\"Dependency\",  EdgeHead.reference,             size1,   undefined,  true);\r\n    makeEdgeView(\"Inheritance\", EdgeHead.extend,                size1,   undefined,  false);\r\n    makeEdgeView(\"Aggregation\", EdgeHead.aggregation,   undefined,      size2,      false);\r\n    makeEdgeView(\"Composition\", EdgeHead.composition,   undefined,      size2,      false);\r\n\r\n    // edgeView.forceNodeType=\"Edge\"\r\n\r\n    /*\r\n    for (let ev of edgeViews){\r\n        ev.bendingMode = EdgeBendingMode.Line;\r\n        ev.subViews = [edgePointView.id];\r\n    }*/\r\n    // nb: Error is not a view, just jsx. transform it in a view so users can edit it\r\n\r\n\r\n    let dv_subviews = [DefaultViews.model(vp), DefaultViews.package(vp), DefaultViews.class(vp), DefaultViews.enum(vp),\r\n        DefaultViews.attribute(vp), DefaultViews.reference(vp), DefaultViews.operation(vp), DefaultViews.parameter(vp),\r\n        DefaultViews.literal(vp), DefaultViews.object(vp), DefaultViews.value(vp), anchorView, voidView, ...edgeViews, DefaultViews.edgepoint(vp)];\r\n\r\n    let validation_subviews = [errorOverlayView, errorCheckLowerbound, errorCheckName];\r\n    // SetFieldAction.new(vp, 'subViews', U.objectFromArrayValues(dv_subviews.map(dv=>dv.id), 1.5));\r\n    // SetFieldAction.new(validationVP, 'subViews', U.objectFromArrayValues(validation_subviews.map(dv=>dv.id), 1.5));\r\n    const ret = [...dv_subviews, ...validation_subviews];\r\n    console.clear();\r\n    for (let v of ret) Log.e(!v.events, \"missing events on view \" + v.name, {v, ret});\r\n    for (let v of ret) Log.w(!!!v.events, \"found events on view \" + v.name, {v, ret});\r\n    return ret;\r\n}\r\n\r\n@RuntimeAccessible('ViewPointState')\r\nexport class ViewPointState extends DPointerTargetable{\r\n    name: string = '';\r\n}\r\n\r\n// to delete?\r\n@RuntimeAccessible('ModelStore')\r\nexport class ModelStore {\r\n    private _meta!: ModelStore | string;\r\n    instances!: (ModelStore | string)[];\r\n\r\n    // getter e setter senza proxy\r\n    get meta(): ModelStore | string {\r\n        return this._meta;\r\n    }\r\n\r\n    set meta(value: ModelStore | string) {\r\n        this._meta = value;\r\n    }\r\n}\r\n\r\n\r\n\r\n@RuntimeAccessible('LState')\r\nexport class LState<Context extends LogicContext<DState> = any, C extends Context = Context, D extends DState = DState> extends LPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    public __raw!: DPointerTargetable & DState;\r\n    public static structure: typeof DPointerTargetable;\r\n    public static singleton: LPointerTargetable;\r\n    // return type is wrong, but have to extend the static method of RuntimeAccessibleClass which is completely different and returns a class constructor.\r\n    static get<T2 extends typeof RuntimeAccessibleClass & { logic?: typeof LPointerTargetable | undefined; }>(): T2 & LState { return LState.wrap(store.getState() as any) as any; }\r\n    contextMenu!: {display: boolean, x: number, y: number};\r\n    user!: LUser;\r\n    debug!: boolean;\r\n    room!: string;\r\n    _lastSelected?: {modelElement?: LModelElement, node?: LGraphElement, view?: LViewElement};\r\n    idlookup!:Dictionary<Pointer, DPointerTargetable>;\r\n\r\n    get_contextMenu(c: Context): this[\"contextMenu\"] { return c.data.contextMenu; }\r\n    // get_user(c: Context): this[\"user\"] { return LState.wrap(c.data.user) as LUser; }\r\n    get_debug(c: Context): this[\"debug\"] { return c.data.debug; }\r\n    get_idlookup(c: Context): this[\"idlookup\"] { return c.data.idlookup; }\r\n    get__lastSelected(c: Context): this[\"_lastSelected\"] {\r\n        let ls = c.data._lastSelected;\r\n        return ls && {modelElement: LState.wrap(ls.modelElement), node: LState.wrap(ls.node), view: LState.wrap(ls.view)}; }\r\n\r\n    _defaultCollectionGetter(c: Context, k: keyof DState): LPointerTargetable[] { return LPointerTargetable.fromPointer(c.data[k] as any); }\r\n    _defaultGetter(c: Context, k: keyof DState) {\r\n        //console.log(\"default Getter\");\r\n        let v = c.data[k];\r\n        if (Array.isArray(v)) {\r\n            if (v.length === 0) return [];\r\n            else if (Pointers.isPointer(v[0] as any)) return this._defaultCollectionGetter(c, k);\r\n            return v;\r\n        }\r\n        return v;\r\n    }\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DState);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LState);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}