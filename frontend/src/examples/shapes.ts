export const shapes = {"className":"DState","id":"Pointer1705376669792_USER_1","pointedBy":[],"_persistCallbacks":[],"_derivedSubElements":[],"env":{"NODE_ENV":"development","PUBLIC_URL":"","FAST_REFRESH":true,"REACT_APP_COLLABORATIVE":"ws://localhost:5001","REACT_APP_MEMOREC":"http://localhost:8080","REACT_APP_PERSISTANCE":"http://localhost:5002","REACT_APP_URL":"http://localhost:3000"},"debug":true,"logs":[],"models":["Pointer1705376674067_USER_95","Pointer1705376674067_USER_96"],"viewelements":["Pointer_ViewModel","Pointer_ViewPackage","Pointer_ViewClass","Pointer_ViewEnum","Pointer_ViewAttribute","Pointer_ViewReference","Pointer_ViewOperation","Pointer_ViewLiteral","Pointer_ViewObject","Pointer_ViewValue","Pointer_ViewVoid","Pointer_ViewEdgeAssociation","Pointer_ViewEdgeDependency","Pointer_ViewEdgeInheritance","Pointer_ViewEdgeAggregation","Pointer_ViewEdgeComposition","Pointer_ViewEdgePoint","Pointer1705376879691_USER_18998","Pointer1705381917748_USER_95"],"stackViews":[],"idlookup":{"clonedCounter":269,"Pointer_EBOOLEAN":{"className":"DClass","clonedCounter":1,"id":"Pointer_EBOOLEAN","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EBoolean","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EBYTE":{"className":"DClass","clonedCounter":1,"id":"Pointer_EBYTE","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EByte","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_ECHAR":{"className":"DClass","clonedCounter":1,"id":"Pointer_ECHAR","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EChar","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EDATE":{"className":"DClass","clonedCounter":1,"id":"Pointer_EDATE","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EDate","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EDOUBLE":{"className":"DClass","clonedCounter":1,"id":"Pointer_EDOUBLE","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EDouble","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EFLOAT":{"className":"DClass","clonedCounter":1,"id":"Pointer_EFLOAT","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EFloat","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EINT":{"className":"DClass","clonedCounter":1,"id":"Pointer_EINT","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EInt","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_ELONG":{"className":"DClass","clonedCounter":1,"id":"Pointer_ELONG","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"ELong","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_EOBJECT":{"className":"DClass","clonedCounter":1,"id":"Pointer_EOBJECT","pointedBy":[{"source":"classs"},{"source":"classs[]"},{"source":"ecoreClasses+="}],"parent":[],"annotations":[],"name":"EObject","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_ESHORT":{"className":"DClass","clonedCounter":1,"id":"Pointer_ESHORT","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EShort","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_ESTRING":{"className":"DClass","clonedCounter":1,"id":"Pointer_ESTRING","pointedBy":[{"source":"classs"},{"source":"primitiveTypes"},{"source":"classs[]"}],"parent":[],"annotations":[],"name":"EString","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":true,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer_ViewAttribute":{"className":"DViewElement","id":"Pointer_ViewAttribute","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Attribute","preRenderFunc":"","jsxString":"<div className={'w-100 root feature'}>\n    <Select className={'p-1  d-flex'} data={data} field={'type'} label={data.name} />\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DAttribute"],"appliableTo":"node","subViews":[],"oclCondition":"context DAttribute inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_27_1705376670087"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_28_1705376670087"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_29_1705376670087"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_30_1705376670087"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_31_1705376670087"}},"Pointer_ViewClass":{"className":"DViewElement","id":"Pointer_ViewClass","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Class","preRenderFunc":"","jsxString":"<div className={'round bg-white root class'}>\n    <Input jsxLabel={<b className={'class-name'}>EClass:</b>} \n           data={data} field={'name'} hidden={true} autosize={true} />\n    <hr/>\n    <div className={'class-children'}>{ data.attributes.map(c => <DefaultNode key={c.id} data={c} />) }</div>\n    <div className={'class-children'}>{ data.references.map(c => <DefaultNode key={c.id} data={c} />) }</div>\n    <div className={'class-children'}>{ data.operations.map(c => <DefaultNode key={c.id} data={c} />) }</div>\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DClass"],"appliableTo":"node","subViews":[],"oclCondition":"context DClass inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_17_1705376670087"},"adaptHeight":true,"adaptWidth":true,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_18_1705376670087"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_19_1705376670087"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_20_1705376670087"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_21_1705376670087"}},"Pointer_ViewEdgeAggregation":{"className":"DViewElement","id":"Pointer_ViewEdgeAggregation","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgeAggregation","constants":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\n   ret.strokeColor = 'gray'\n   ret.strokeWidth = '2px'\n   ret.strokeColorHover = 'black'\n   ret.strokeColorLong = 'gray'\n   ret.strokeLengthLimit = 300\n   ret.strokeWidthHover = '4px'\n}","_parsedConstants":{"strokeColor":"gray","strokeWidth":"2px","strokeColorHover":"black","strokeColorLong":"gray","strokeLengthLimit":300,"strokeWidthHover":"4px"},"preRenderFunc":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.segments = edge.segments\n}","jsxString":"<div className={\"hoverable edge hide-ep EdgeAggregation\"} style={{overflow: \"visible\", width:\"100vw\", height:\"100vh\", pointerEvents:\"none\"}}>\n            <svg style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\n                { /* edge full paths\n               \n                 first is preview path, normally seen\n                 third (segmented) is path onHover\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\n                \n                */ }\n                <path className={\"preview\"} strokeWidth={strokeWidth} stroke={strokeColor}\n                fill={\"none\"} d={this.edge.d} strokeDasharray=\"undefined\"></path>\n                <path className={\"preview\"} strokeWidth={strokeWidthHover} stroke={\"transparent\"}\n                fill={\"none\"} d={this.edge.d}></path>\n                { /* edge separate segments */ }\n                {segments && segments.all && segments.all.flatMap(s => [\n                    <path tabIndex=\"-1\" className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={strokeWidthHover}\n                    stroke={s.length > strokeLengthLimit && strokeColorLong || strokeColorHover}\n                     fill={\"none\"} d={s.dpart}></path>,\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\n                    <div\n                     style={{width: \"fit-content\",\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\n                    </foreignObject>\n                ])}\n            { /* edge head */ }\n            \n            { /* edge tail */ }\n            <path d={\"M 0 \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" 0 L \" +\n                    segments.tail.w + \" \" +segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" \" + segments.tail.h + \" Z\"} fill=\"#fff\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.tail.x + \"px, \" + segments.tail.y + \"px) rotate(\" + (segments.tail.rad) + \"rad)\", \"transformOrigin\":segments.tail.w/2+\"px \"+ segments.tail.h/2+\"px\"}}\n\t\t\t\t stroke={strokeColor} strokeWidth={strokeWidth}\n className={\"edgeTail EdgeAggregation preview\"}></path>\n\n\t\t\t\t<path d={\"M 0 \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" 0 L \" +\n                    segments.tail.w + \" \" +segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" \" + segments.tail.h + \" Z\"} fill=\"#fff\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.tail.x + \"px, \" + segments.tail.y + \"px) rotate(\" + (segments.tail.rad) + \"rad)\", \"transformOrigin\":segments.tail.w/2+\"px \"+ segments.tail.h/2+\"px\"}}\n\t\t\t\t stroke={segments.all[0]&&(segments.all[0].length > strokeLengthLimit )&& strokeColorLong || strokeColorHover} strokeWidth={strokeWidthHover}\n className={\"edgeTail EdgeAggregation clickable content\"} tabIndex=\"-1\"></path>\n\n            </svg>\n            { /* interactively added edgepoints */ }\n            {\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\n            }\n        </div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// ret.data = data\nret.edgeview = edge.view.id\nret.view = view\n// data, edge, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.start = edge.start\nret.end = edge.end\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DVoidEdge"],"appliableTo":"edge","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_85_1705376670093"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"L","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_86_1705376670093"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_87_1705376670093"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":0,"y":0,"id":"POINT_67_1705376670090"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_69_1705376670090"}},"Pointer_ViewEdgeAssociation":{"className":"DViewElement","id":"Pointer_ViewEdgeAssociation","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgeAssociation","constants":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\n   ret.strokeColor = 'gray'\n   ret.strokeWidth = '2px'\n   ret.strokeColorHover = 'black'\n   ret.strokeColorLong = 'gray'\n   ret.strokeLengthLimit = 300\n   ret.strokeWidthHover = '4px'\n}","_parsedConstants":{"strokeColor":"gray","strokeWidth":"2px","strokeColorHover":"black","strokeColorLong":"gray","strokeLengthLimit":300,"strokeWidthHover":"4px"},"preRenderFunc":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.segments = edge.segments\n}","jsxString":"<div className={\"hoverable edge hide-ep EdgeReference\"} style={{overflow: \"visible\", width:\"100vw\", height:\"100vh\", pointerEvents:\"none\"}}>\n            <svg style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\n                { /* edge full paths\n               \n                 first is preview path, normally seen\n                 third (segmented) is path onHover\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\n                \n                */ }\n                <path className={\"preview\"} strokeWidth={strokeWidth} stroke={strokeColor}\n                fill={\"none\"} d={this.edge.d} strokeDasharray=\"undefined\"></path>\n                <path className={\"preview\"} strokeWidth={strokeWidthHover} stroke={\"transparent\"}\n                fill={\"none\"} d={this.edge.d}></path>\n                { /* edge separate segments */ }\n                {segments && segments.all && segments.all.flatMap(s => [\n                    <path tabIndex=\"-1\" className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={strokeWidthHover}\n                    stroke={s.length > strokeLengthLimit && strokeColorLong || strokeColorHover}\n                     fill={\"none\"} d={s.dpart}></path>,\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\n                    <div\n                     style={{width: \"fit-content\",\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\n                    </foreignObject>\n                ])}\n            { /* edge head */ }\n            <path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h } fill=\"none\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={strokeColor} strokeWidth={strokeWidth}\n className={\"edgeHead EdgeReference preview\"}></path>\n\n\t\t\t\t<path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h } fill=\"none\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={segments.all[0]&&(segments.all[0].length > strokeLengthLimit )&& strokeColorLong || strokeColorHover} strokeWidth={strokeWidthHover}\n className={\"edgeHead EdgeReference clickable content\"} tabIndex=\"-1\"></path>\n\n            { /* edge tail */ }\n            \n            </svg>\n            { /* interactively added edgepoints */ }\n            {\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\n            }\n        </div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// ret.data = data\nret.edgeview = edge.view.id\nret.view = view\n// data, edge, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.start = edge.start\nret.end = edge.end\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DVoidEdge"],"appliableTo":"edge","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_70_1705376670091"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"L","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_71_1705376670091"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_72_1705376670091"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_68_1705376670090"},"edgeTailSize":{"className":"IPoint","x":0,"y":0,"id":"POINT_67_1705376670090"}},"Pointer_ViewEdgeComposition":{"className":"DViewElement","id":"Pointer_ViewEdgeComposition","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgeComposition","constants":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\n   ret.strokeColor = 'gray'\n   ret.strokeWidth = '2px'\n   ret.strokeColorHover = 'black'\n   ret.strokeColorLong = 'gray'\n   ret.strokeLengthLimit = 300\n   ret.strokeWidthHover = '4px'\n}","_parsedConstants":{"strokeColor":"gray","strokeWidth":"2px","strokeColorHover":"black","strokeColorLong":"gray","strokeLengthLimit":300,"strokeWidthHover":"4px"},"preRenderFunc":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.segments = edge.segments\n}","jsxString":"<div className={\"hoverable edge hide-ep EdgeComposition\"} style={{overflow: \"visible\", width:\"100vw\", height:\"100vh\", pointerEvents:\"none\"}}>\n            <svg style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\n                { /* edge full paths\n               \n                 first is preview path, normally seen\n                 third (segmented) is path onHover\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\n                \n                */ }\n                <path className={\"preview\"} strokeWidth={strokeWidth} stroke={strokeColor}\n                fill={\"none\"} d={this.edge.d} strokeDasharray=\"undefined\"></path>\n                <path className={\"preview\"} strokeWidth={strokeWidthHover} stroke={\"transparent\"}\n                fill={\"none\"} d={this.edge.d}></path>\n                { /* edge separate segments */ }\n                {segments && segments.all && segments.all.flatMap(s => [\n                    <path tabIndex=\"-1\" className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={strokeWidthHover}\n                    stroke={s.length > strokeLengthLimit && strokeColorLong || strokeColorHover}\n                     fill={\"none\"} d={s.dpart}></path>,\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\n                    <div\n                     style={{width: \"fit-content\",\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\n                    </foreignObject>\n                ])}\n            { /* edge head */ }\n            \n            { /* edge tail */ }\n            <path d={\"M 0 \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" 0 L \" +\n                    segments.tail.w + \" \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" \" + segments.tail.h + \" Z\"} fill=\"#000\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.tail.x + \"px, \" + segments.tail.y + \"px) rotate(\" + (segments.tail.rad) + \"rad)\", \"transformOrigin\":segments.tail.w/2+\"px \"+ segments.tail.h/2+\"px\"}}\n\t\t\t\t stroke={strokeColor} strokeWidth={strokeWidth}\n className={\"edgeTail EdgeComposition preview\"}></path>\n\n\t\t\t\t<path d={\"M 0 \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" 0 L \" +\n                    segments.tail.w + \" \" + segments.tail.h/2 + \" L \" + segments.tail.w/2 + \" \" + segments.tail.h + \" Z\"} fill=\"#000\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.tail.x + \"px, \" + segments.tail.y + \"px) rotate(\" + (segments.tail.rad) + \"rad)\", \"transformOrigin\":segments.tail.w/2+\"px \"+ segments.tail.h/2+\"px\"}}\n\t\t\t\t stroke={segments.all[0]&&(segments.all[0].length > strokeLengthLimit )&& strokeColorLong || strokeColorHover} strokeWidth={strokeWidthHover}\n className={\"edgeTail EdgeComposition clickable content\"} tabIndex=\"-1\"></path>\n\n            </svg>\n            { /* interactively added edgepoints */ }\n            {\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\n            }\n        </div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// ret.data = data\nret.edgeview = edge.view.id\nret.view = view\n// data, edge, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.start = edge.start\nret.end = edge.end\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DVoidEdge"],"appliableTo":"edge","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_90_1705376670093"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"L","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_91_1705376670093"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_92_1705376670093"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":0,"y":0,"id":"POINT_67_1705376670090"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_69_1705376670090"}},"Pointer_ViewEdgeDependency":{"className":"DViewElement","id":"Pointer_ViewEdgeDependency","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgeDependency","constants":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\n   ret.strokeColor = 'gray'\n   ret.strokeWidth = '2px'\n   ret.strokeColorHover = 'black'\n   ret.strokeColorLong = 'gray'\n   ret.strokeLengthLimit = 300\n   ret.strokeWidthHover = '4px'\n}","_parsedConstants":{"strokeColor":"gray","strokeWidth":"2px","strokeColorHover":"black","strokeColorLong":"gray","strokeLengthLimit":300,"strokeWidthHover":"4px"},"preRenderFunc":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.segments = edge.segments\n}","jsxString":"<div className={\"hoverable edge hide-ep EdgeReference\"} style={{overflow: \"visible\", width:\"100vw\", height:\"100vh\", pointerEvents:\"none\"}}>\n            <svg style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\n                { /* edge full paths\n               \n                 first is preview path, normally seen\n                 third (segmented) is path onHover\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\n                \n                */ }\n                <path className={\"preview\"} strokeWidth={strokeWidth} stroke={strokeColor}\n                fill={\"none\"} d={this.edge.d} strokeDasharray=\"10.5,9,0,0\"></path>\n                <path className={\"preview\"} strokeWidth={strokeWidthHover} stroke={\"transparent\"}\n                fill={\"none\"} d={this.edge.d}></path>\n                { /* edge separate segments */ }\n                {segments && segments.all && segments.all.flatMap(s => [\n                    <path tabIndex=\"-1\" className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={strokeWidthHover}\n                    stroke={s.length > strokeLengthLimit && strokeColorLong || strokeColorHover}\n                     fill={\"none\"} d={s.dpart}></path>,\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\n                    <div\n                     style={{width: \"fit-content\",\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\n                    </foreignObject>\n                ])}\n            { /* edge head */ }\n            <path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h } fill=\"none\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={strokeColor} strokeWidth={strokeWidth}\n className={\"edgeHead EdgeReference preview\"}></path>\n\n\t\t\t\t<path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h } fill=\"none\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={segments.all[0]&&(segments.all[0].length > strokeLengthLimit )&& strokeColorLong || strokeColorHover} strokeWidth={strokeWidthHover}\n className={\"edgeHead EdgeReference clickable content\"} tabIndex=\"-1\"></path>\n\n            { /* edge tail */ }\n            \n            </svg>\n            { /* interactively added edgepoints */ }\n            {\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\n            }\n        </div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// ret.data = data\nret.edgeview = edge.view.id\nret.view = view\n// data, edge, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.start = edge.start\nret.end = edge.end\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DVoidEdge"],"appliableTo":"edge","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_75_1705376670092"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"L","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_76_1705376670092"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_77_1705376670092"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_68_1705376670090"},"edgeTailSize":{"className":"IPoint","x":0,"y":0,"id":"POINT_67_1705376670090"}},"Pointer_ViewEdgeInheritance":{"className":"DViewElement","id":"Pointer_ViewEdgeInheritance","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgeInheritance","constants":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\n   ret.strokeColor = 'gray'\n   ret.strokeWidth = '2px'\n   ret.strokeColorHover = 'black'\n   ret.strokeColorLong = 'gray'\n   ret.strokeLengthLimit = 300\n   ret.strokeWidthHover = '4px'\n}","_parsedConstants":{"strokeColor":"gray","strokeWidth":"2px","strokeColorHover":"black","strokeColorLong":"gray","strokeLengthLimit":300,"strokeWidthHover":"4px"},"preRenderFunc":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.segments = edge.segments\n}","jsxString":"<div className={\"hoverable edge hide-ep EdgeExtend\"} style={{overflow: \"visible\", width:\"100vw\", height:\"100vh\", pointerEvents:\"none\"}}>\n            <svg style={{width:\"100vw\", height:\"100vh\", pointerEvents:\"none\", overflow: \"visible\"}}>\n                { /* edge full paths\n               \n                 first is preview path, normally seen\n                 third (segmented) is path onHover\n                 second is to enlarge the hover area of path.preview to the same as path.content, so i avoid hover loop enter-leave and graphical flashing\n                \n                */ }\n                <path className={\"preview\"} strokeWidth={strokeWidth} stroke={strokeColor}\n                fill={\"none\"} d={this.edge.d} strokeDasharray=\"undefined\"></path>\n                <path className={\"preview\"} strokeWidth={strokeWidthHover} stroke={\"transparent\"}\n                fill={\"none\"} d={this.edge.d}></path>\n                { /* edge separate segments */ }\n                {segments && segments.all && segments.all.flatMap(s => [\n                    <path tabIndex=\"-1\" className={\"clickable content\"} style={{pointerEvents:\"all\"}} strokeWidth={strokeWidthHover}\n                    stroke={s.length > strokeLengthLimit && strokeColorLong || strokeColorHover}\n                     fill={\"none\"} d={s.dpart}></path>,\n                    s.label && <foreignObject style={{overflow: \"visible\", height:\"0\", width:\"0\", whiteSpace:\"pre\", x:(s.start.pt.x + s.end.pt.x)/2+\"px\", y:(s.start.pt.y + s.end.pt.y)/2+\"px\"}}>\n                    <div\n                     style={{width: \"fit-content\",\n                      transform: \"translate(-50%, 0%) rotate(\"+s.radLabels+\"rad) translate(0%, -\"+(1-0.5*Math.abs(Math.abs(s.radLabels)%Math.PI)/(Math.PI/2))*100+\"%)\"+\n                     \" translate(0%, -5px\", color: strokeColor}}>{s.label}</div>\n                    </foreignObject>\n                ])}\n            { /* edge head */ }\n            <path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h + \"Z\" } fill=\"#fff\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={strokeColor} strokeWidth={strokeWidth}\n className={\"edgeHead EdgeExtend preview\"}></path>\n\n\t\t\t\t<path d={\"M 0 0   L \" + segments.head.w + \" \" + segments.head.h/2 + \"   L 0 \" + segments.head.h + \"Z\" } fill=\"#fff\" \n\t\t\t\tstyle={{transform:\"translate(\" + segments.head.x + \"px, \" + segments.head.y + \"px) rotate(\" + (segments.head.rad) + \"rad)\", \"transformOrigin\":segments.head.w/2+\"px \"+ segments.head.h/2+\"px\"}}\n\t\t\t\t stroke={segments.all[0]&&(segments.all[0].length > strokeLengthLimit )&& strokeColorLong || strokeColorHover} strokeWidth={strokeWidthHover}\n className={\"edgeHead EdgeExtend clickable content\"} tabIndex=\"-1\"></path>\n\n            { /* edge tail */ }\n            \n            </svg>\n            { /* interactively added edgepoints */ }\n            {\n                edge.midPoints.map( m => <EdgePoint data={edge.father.model.id} initialSize={m} key={m.id} view={\"Pointer_ViewEdgePoint\"} /> )\n            }\n        </div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n// ret.data = data\nret.edgeview = edge.view.id\nret.view = view\n// data, edge, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.start = edge.start\nret.end = edge.end\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DVoidEdge"],"appliableTo":"edge","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_80_1705376670092"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"L","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_81_1705376670092"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_82_1705376670092"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_68_1705376670090"},"edgeTailSize":{"className":"IPoint","x":0,"y":0,"id":"POINT_67_1705376670090"}},"Pointer_ViewEdgePoint":{"className":"DViewElement","id":"Pointer_ViewEdgePoint","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"EdgePoint","preRenderFunc":"","jsxString":"<div className={\"edgePoint\"} tabIndex=\"-1\" hoverscale={\"hardcoded in css\"} style={{borderRadius:\"999px\", border: \"2px solid black\", background:\"white\", width:\"100%\", height:\"100%\"}} />","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":[],"appliableTo":"edgePoint","subViews":[],"oclCondition":"","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":25,"h":25,"id":"SIZE_62_1705376670089"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":false,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_63_1705376670089"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_64_1705376670089"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"absolute","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_65_1705376670089"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_66_1705376670089"}},"Pointer_ViewEnum":{"className":"DViewElement","id":"Pointer_ViewEnum","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Enum","preRenderFunc":"","jsxString":"<div className={'round bg-white root enumerator'}>\n    <Input jsxLabel={<b className={'my-auto enumerator-name'}>EEnum:</b>} \n           data={data} field={'name'} hidden={true} autosize={true} />\n    <hr />\n    <div className={'enumerator-children'}>\n        {data.children.map((child, index) => {\n            return <DefaultNode key={child.id} data={child}></DefaultNode>\n        })}\n    </div>\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DEnumerator"],"appliableTo":"node","subViews":[],"oclCondition":"context DEnumerator inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_22_1705376670087"},"adaptHeight":true,"adaptWidth":true,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_23_1705376670087"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_24_1705376670087"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_25_1705376670087"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_26_1705376670087"}},"Pointer_ViewLiteral":{"className":"DViewElement","id":"Pointer_ViewLiteral","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Literal","preRenderFunc":"","jsxString":"<label className={'d-block text-center root literal'}>{data.name}</label>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DEnumLiteral"],"appliableTo":"node","subViews":[],"oclCondition":"context DEnumLiteral inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_42_1705376670088"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_43_1705376670088"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_44_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_45_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_46_1705376670088"}},"Pointer_ViewModel":{"className":"DViewElement","id":"Pointer_ViewModel","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Model","preRenderFunc":"","jsxString":"<div className={'root'}>\n    {!data && \"Model data missing.\"}\n    <div className=\"edges\" style={{zIndex:101, position: \"absolute\", height:0, width:0, overflow: \"visible\"}}>{[\n            refEdges.map(se=> <Edge start={se.start.father.node} end={se.end.node} view={\"Pointer_ViewEdge\" + ( se.start.containment && \"Composition\" || \"Association\")} key={se.start.node.id+\"~\"+se.end.node.id}/>)\n            , extendEdges.map(se=><Edge start={se.start} end={se.end} view={\"Pointer_ViewEdgeInheritance\"} key={\"EXT_\"+se.start.node.id+\"~\"+se.end.node.id}/>)]\n        }\n    </div>\n    {otherPackages.map(pkg => <DefaultNode key={pkg.id} data={pkg} />)}\n    {firstPackage && firstPackage.children.map(classifier => <DefaultNode key={classifier.id} data={classifier} />)}\n    {m1Objects.map(m1object => <DefaultNode key={m1object.id} data={m1object}></DefaultNode>)}\n</div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n//ret.data = data\nret.node = node\nret.view = view\n// custom preparations:\nlet packages = data && data.isMetamodel ? data.packages : [];\nlet suggestedEdges = data?.suggestedEdges || {};\n// data, node, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.firstPackage = packages[0]\nret.otherPackages = packages.slice(1)\nret.m1Objects = data && !data.isMetamodel ? data.allSubObjects : []\nret.refEdges = (suggestedEdges.reference || []).filter(e => !e.vertexOverlaps)\nret.extendEdges = (suggestedEdges.extend || []).filter(e => !e.vertexOverlaps)\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DModel"],"appliableTo":"node","subViews":[],"oclCondition":"context DModel inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_7_1705376670086"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":false,"resizable":false,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_8_1705376670086"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_9_1705376670086"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_10_1705376670086"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_11_1705376670086"}},"Pointer_ViewObject":{"className":"DViewElement","id":"Pointer_ViewObject","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Object","preRenderFunc":"","jsxString":"<div className={'round bg-white root class'}>\n    <label className={'ms-1'}>\n        <Input jsxLabel={<b className={'my-auto class-name'}>{metaclassName}:</b>} \n           data={data} field={'name'} hidden={true} autosize={true}/>\n    </label>\n    <hr />\n    <div className={'object-children'}>\n        {features.map((child) => {\n            return <DefaultNode key={child.id} data={child}></DefaultNode>\n        })}\n    </div>\n</div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\nret.data = data\nret.node = node\nret.view = view\n// data, node, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.metaclassName = data.instanceof?.name || \"Object\"\nret.features = data.features\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DObject"],"appliableTo":"node","subViews":[],"oclCondition":"context DObject inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_47_1705376670088"},"adaptHeight":true,"adaptWidth":true,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_48_1705376670088"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_49_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_50_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_51_1705376670088"}},"Pointer_ViewOperation":{"className":"DViewElement","id":"Pointer_ViewOperation","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Operation","preRenderFunc":"","jsxString":"<div className={'w-100'}>\n    <Select className={'p-1 root operation d-flex'} data={data} field={'type'} label={data.name + ' () => '} />\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DOperation"],"appliableTo":"node","subViews":[],"oclCondition":"context DOperation inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_37_1705376670088"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_38_1705376670088"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_39_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_40_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_41_1705376670088"}},"Pointer_ViewPackage":{"className":"DViewElement","id":"Pointer_ViewPackage","pointedBy":[{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews"},{"source":"viewelements"}],"name":"Package","preRenderFunc":"","jsxString":"<div className={'round root bg-white package'}>\n    <div className={'package-children'}>\n        {data.children.map((child, index) => {\n            return <DefaultNode key={child.id} data={child} />\n        })}\n    </div>\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DPackage"],"appliableTo":"node","subViews":[],"oclCondition":"context DPackage inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":400,"h":500,"id":"SIZE_0_1705376669737"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_13_1705376670087"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_14_1705376670087"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_15_1705376670087"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_16_1705376670087"}},"Pointer_ViewPointDefault":{"className":"DViewPoint","clonedCounter":4,"id":"Pointer_ViewPointDefault","pointedBy":[{"source":"viewpoints"},{"source":"idlookup.Pointer_ViewModel.viewpoint"},{"source":"idlookup.Pointer_ViewPackage.viewpoint"},{"source":"idlookup.Pointer_ViewClass.viewpoint"},{"source":"idlookup.Pointer_ViewEnum.viewpoint"},{"source":"idlookup.Pointer_ViewAttribute.viewpoint"},{"source":"idlookup.Pointer_ViewReference.viewpoint"},{"source":"idlookup.Pointer_ViewOperation.viewpoint"},{"source":"idlookup.Pointer_ViewLiteral.viewpoint"},{"source":"idlookup.Pointer_ViewObject.viewpoint"},{"source":"idlookup.Pointer_ViewValue.viewpoint"},{"source":"idlookup.Pointer_ViewVoid.viewpoint"},{"source":"idlookup.Pointer_ViewEdgeAssociation.viewpoint"},{"source":"idlookup.Pointer_ViewEdgeDependency.viewpoint"},{"source":"idlookup.Pointer_ViewEdgeInheritance.viewpoint"},{"source":"idlookup.Pointer_ViewEdgeAggregation.viewpoint"},{"source":"idlookup.Pointer_ViewEdgeComposition.viewpoint"},{"source":"idlookup.Pointer_ViewEdgePoint.viewpoint"},{"source":"viewpoints"}],"name":"Default","preRenderFunc":"","jsxString":"","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":[],"appliableTo":"node","subViews":["Pointer_ViewModel","Pointer_ViewPackage","Pointer_ViewClass","Pointer_ViewEnum","Pointer_ViewAttribute","Pointer_ViewReference","Pointer_ViewOperation","Pointer_ViewLiteral","Pointer_ViewObject","Pointer_ViewValue","Pointer_ViewVoid","Pointer_ViewEdgeAssociation","Pointer_ViewEdgeDependency","Pointer_ViewEdgeInheritance","Pointer_ViewEdgeAggregation","Pointer_ViewEdgeComposition","Pointer_ViewEdgePoint"],"oclCondition":"","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_2_1705376669892"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_3_1705376669892"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_4_1705376669892"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_5_1705376669892"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_6_1705376669892"}},"Pointer_ViewReference":{"className":"DViewElement","clonedCounter":1,"id":"Pointer_ViewReference","pointedBy":[{"source":"viewelements"},{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews+="}],"name":"Reference","preRenderFunc":"","jsxString":"<div className={'w-100 root feature'}>\n    <Select className={'p-1  d-flex'} data={data} field={'type'} label={data.name} />\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DReference"],"appliableTo":"node","subViews":[],"oclCondition":"context DReference inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_32_1705376670087"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_33_1705376670087"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_34_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_35_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_36_1705376670088"}},"Pointer_ViewValue":{"className":"DViewElement","clonedCounter":1,"id":"Pointer_ViewValue","pointedBy":[{"source":"viewelements"},{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews+="}],"name":"Value","preRenderFunc":"","jsxString":"<div className={'d-flex root value'} style={{paddingRight: \"6px\"}}>\n     {instanceofname && <label className={'d-block ms-1'}>{instanceofname}</label>}\n     {!instanceofname && <Input asLabel={true} data={data} field={'name'} hidden={true} autosize={true} />}\n    <label className={'d-block m-auto'} style={{color: constants[typeString] || \"gray\"\n    }}>: {valuesString}</label>\n    {console.log(\"inside eval\", {thiss:this, props, ts: typeString, vs: valuesString})}\n</div>","usageDeclarations":"(ret)=>{ // scope: data, node, view, state, \n// ** preparations and default behaviour here ** //\n// ret.data = data // object does not need it because it displays only: features (listed individually) and name input being a subcomponent\nret.node = node\nret.view = view\n// todo: put only first N values as dependency and show only those.\n// data, node, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.instanceofname = data.instanceof?.name\nret.valuesString = data.valuesString()\nret.typeString = data.typeString\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DValue"],"appliableTo":"node","subViews":[],"oclCondition":"context DValue inv: true","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_52_1705376670088"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_53_1705376670088"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_54_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_55_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_56_1705376670088"}},"Pointer_ViewVoid":{"className":"DViewElement","clonedCounter":1,"id":"Pointer_ViewVoid","pointedBy":[{"source":"viewelements"},{"source":"viewelements"},{"source":"idlookup.Pointer_ViewPointDefault.subViews+="}],"name":"Void","preRenderFunc":"","jsxString":"<div className={'round bg-white root void model-less p-1'}>\n    <div>voidvertex element test</div>\n    <div>data: {props.data ? props.data.name : \"empty\"}</div>\n</div>","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["VoidVertex"],"appliableTo":"node","subViews":[],"oclCondition":"","explicitApplicationPriority":2,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_57_1705376670089"},"adaptHeight":true,"adaptWidth":true,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer_ViewPointDefault","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_58_1705376670089"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_59_1705376670089"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_60_1705376670089"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_61_1705376670089"}},"Pointer_adminOffline":{"className":"DUser","clonedCounter":1,"id":"Pointer_adminOffline","pointedBy":[{"source":"users"},{"source":"users"}],"username":"adminOffline","projects":["Pointer1705376674068_USER_97"],"project":"Pointer1705376674068_USER_97","__isUser":true},"Pointer1705376674067_USER_95":{"className":"DModel","clonedCounter":1,"id":"Pointer1705376674067_USER_95","pointedBy":[{"source":"models"},{"source":"idlookup.Pointer1705376674067_USER_96.instanceof"},{"source":"idlookup.Pointer1705376674069_USER_98.father"},{"source":"m2models"},{"source":"models"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.model"}],"parent":[],"annotations":[],"name":"metamodel","packages":["Pointer1705376674069_USER_98"],"isMetamodel":true,"objects":[],"models":[],"instanceof":null,"instances":["Pointer1705376674067_USER_96"]},"Pointer1705376674067_USER_96":{"className":"DModel","clonedCounter":2,"id":"Pointer1705376674067_USER_96","pointedBy":[{"source":"models"},{"source":"m1models"},{"source":"models"},{"source":"idlookup.Pointer1705376674067_USER_95.instances+="},{"source":"idlookup.Pointer1705376674067_USER_96^graph1.model"}],"parent":[],"annotations":[],"name":"model","packages":[],"isMetamodel":false,"objects":[],"models":[],"instanceof":"Pointer1705376674067_USER_95"},"Pointer1705376674068_USER_97":{"className":"DProject","clonedCounter":7,"id":"Pointer1705376674068_USER_97","pointedBy":[{"source":"projects"},{"source":"idlookup.Pointer_adminOffline.project"},{"source":"idlookup.Pointer_adminOffline.projects"},{"source":"projects"}],"type":"public","name":"shapes2023","author":"Pointer_adminOffline","collaborators":[],"onlineUsers":0,"metamodels":["Pointer1705376674067_USER_95"],"models":["Pointer1705376674067_USER_96"],"graphs":["Pointer1705376674067_USER_95^graph0","Pointer1705376674067_USER_96^graph1"],"viewpoints":["Pointer1705376874098_USER_18704"],"activeViewpoint":"Pointer1705376874098_USER_18704"},"Pointer1705376674069_USER_98":{"className":"DPackage","clonedCounter":7,"id":"Pointer1705376674069_USER_98","pointedBy":[{"source":"packages"},{"source":"packages"},{"source":"idlookup.Pointer1705376674067_USER_95.packages+="},{"source":"idlookup.Pointer1705376710667_USER_143.father"},{"source":"idlookup.Pointer1705376717850_USER_551.father"},{"source":"idlookup.Pointer1705376726626_USER_1347.father"},{"source":"idlookup.Pointer1705376740514_USER_2427.father"},{"source":"idlookup.Pointer1705376765952_USER_4303.father"},{"source":"idlookup.Pointer1705383463169_USER_1261.father"}],"parent":[],"father":"Pointer1705376674067_USER_95","annotations":[],"name":"pkg_1","classifiers":["Pointer1705376710667_USER_143","Pointer1705376717850_USER_551","Pointer1705376726626_USER_1347","Pointer1705376740514_USER_2427","Pointer1705376765952_USER_4303","Pointer1705383463169_USER_1261"],"subpackages":[],"uri":"","prefix":""},"Pointer1705376674067_USER_95^graph0":{"className":"DGraph","clonedCounter":25,"_subMaps":{"zoom":true,"graphSize":true},"id":"Pointer1705376674067_USER_95^graph0","pointedBy":[{"source":"graphs"},{"source":"idlookup.Pointer1705376674068_USER_97.graphs"},{"source":"graphs[]"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.graph"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N.graph"}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376674067_USER_95","isSelected":{"Pointer_adminOffline":true},"subElements":["Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N","Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N","Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N","Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N"],"state":{},"x":0,"y":0,"zIndex":0,"w":0,"h":0,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"zoom":{"className":"IPoint","x":1,"y":1,"id":"POINT_99_1705376675158"},"offset":{"className":"IPoint","x":0,"y":0,"id":"POINT_100_1705376675158"}},"Pointer1705376674067_USER_96^graph1":{"className":"DGraph","clonedCounter":6,"_subMaps":{"zoom":true,"graphSize":true},"id":"Pointer1705376674067_USER_96^graph1","pointedBy":[{"source":"graphs"},{"source":"idlookup.Pointer1705376674068_USER_97.graphs"},{"source":"graphs"},{"source":"graphs"}],"graph":"Pointer1705376674067_USER_96^graph1","model":"Pointer1705376674067_USER_96","isSelected":{},"subElements":[],"state":{},"x":0,"y":0,"zIndex":0,"w":0,"h":0,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"zoom":{"className":"IPoint","x":1,"y":1,"id":"POINT_107_1705376708621"},"offset":{"className":"IPoint","x":0,"y":0,"id":"POINT_108_1705376708621"}},"Pointer1705376710667_USER_143":{"className":"DClass","clonedCounter":2,"id":"Pointer1705376710667_USER_143","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"Polygon","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N":{"className":"DVertex","clonedCounter":63,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376710667_USER_143","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":474.9914779663086,"y":209.98580169677734,"zIndex":2,"w":130.26988220214844,"h":32.52840805053711,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"isResized":false},"Pointer1705376717850_USER_551":{"className":"DClass","clonedCounter":3,"id":"Pointer1705376717850_USER_551","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="},{"source":"idlookup.Pointer1705376827501_USER_14257.type"},{"source":"idlookup.Pointer1705376828515_USER_14670.type"}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"Star","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N":{"className":"DVertex","clonedCounter":20,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.end"}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376717850_USER_551","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":68.9886245727539,"y":195.99431610107422,"zIndex":3,"w":104.64488220214844,"h":32.52840805053711,"favoriteNode":false,"edgesIn":["Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N"],"edgesOut":[],"isResized":false},"Pointer1705376726626_USER_1347":{"className":"DClass","clonedCounter":4,"id":"Pointer1705376726626_USER_1347","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="},{"source":"idlookup.Pointer1705376827501_USER_14257.father"},{"source":"idlookup.Pointer1705376828515_USER_14670.father"}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"Arco","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":["Pointer1705376827501_USER_14257","Pointer1705376828515_USER_14670"],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N":{"className":"DVertex","clonedCounter":31,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N.father"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.start"}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376726626_USER_1347","isSelected":{},"subElements":["Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N","Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N"],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":32.991477966308594,"y":361.9914779663086,"zIndex":4,"w":174.44601440429688,"h":91.70454406738281,"favoriteNode":false,"edgesIn":[],"edgesOut":["Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N"],"isResized":false},"Pointer1705376740514_USER_2427":{"className":"DClass","clonedCounter":3,"id":"Pointer1705376740514_USER_2427","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"DecoratedStar","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N":{"className":"DVertex","clonedCounter":22,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376740514_USER_2427","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":259.9943161010742,"y":211.99715423583984,"zIndex":5,"w":171.0795440673828,"h":32.52840805053711,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"isResized":false},"Pointer1705376765952_USER_4303":{"className":"DClass","clonedCounter":2,"id":"Pointer1705376765952_USER_4303","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"Shape","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N":{"className":"DVertex","clonedCounter":20,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376765952_USER_4303","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":317.99715423583984,"y":99.98863983154297,"zIndex":6,"w":119.87215423583984,"h":32.52840805053711,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"isResized":false},"Pointer1705376827501_USER_14257":{"className":"DReference","clonedCounter":5,"id":"Pointer1705376827501_USER_14257","pointedBy":[{"source":"references"},{"source":"references"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N.model"},{"source":"idlookup.Pointer1705376726626_USER_1347.references+="}],"annotations":[],"name":"inizio","type":"Pointer1705376717850_USER_551","ordered":true,"unique":true,"lowerBound":1,"upperBound":1,"changeable":true,"volatile":true,"transient":false,"unsettable":false,"derived":false,"defaultValueLiteral":"","parent":[],"father":"Pointer1705376726626_USER_1347","instances":[],"containment":false,"container":false,"resolveProxies":true,"target":[],"edges":[]},"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N":{"className":"DGraphElement","clonedCounter":13,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N","pointedBy":[{"source":"graphelements"},{"source":"graphelements[]"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376827501_USER_14257","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","zIndex":0,"favoriteNode":false,"edgesIn":[],"edgesOut":[]},"Pointer1705376828515_USER_14670":{"className":"DReference","clonedCounter":5,"id":"Pointer1705376828515_USER_14670","pointedBy":[{"source":"references"},{"source":"references"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N.model"},{"source":"idlookup.Pointer1705376726626_USER_1347.references+="}],"annotations":[],"name":"fine","type":"Pointer1705376717850_USER_551","ordered":true,"unique":true,"lowerBound":1,"upperBound":1,"changeable":true,"volatile":true,"transient":false,"unsettable":false,"derived":false,"defaultValueLiteral":"","parent":[],"father":"Pointer1705376726626_USER_1347","instances":[],"containment":false,"container":false,"resolveProxies":true,"target":[],"edges":[]},"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N":{"className":"DGraphElement","clonedCounter":9,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N","pointedBy":[{"source":"graphelements"},{"source":"graphelements[]"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705376828515_USER_14670","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","zIndex":1,"favoriteNode":false,"edgesIn":[],"edgesOut":[]},"Pointer1705376874098_USER_18704":{"className":"DViewPoint","clonedCounter":3,"id":"Pointer1705376874098_USER_18704","pointedBy":[{"source":"viewpoints"},{"source":"viewpoints"},{"source":"idlookup.Pointer1705376674068_USER_97.viewpoints+="},{"source":"idlookup.Pointer1705376879691_USER_18998.viewpoint"},{"source":"idlookup.Pointer1705381917748_USER_95.viewpoint"},{"source":"idlookup.Pointer1705376674068_USER_97.activeViewpoint"}],"name":"viewpoint_1","preRenderFunc":"","jsxString":"","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":[],"appliableTo":"node","subViews":["Pointer1705376879691_USER_18998","Pointer1705381917748_USER_95"],"oclCondition":"","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_18705_1705376874098"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_18706_1705376874098"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_18707_1705376874098"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_18708_1705376874098"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_18709_1705376874098"}},"Pointer1705376879691_USER_18998":{"className":"DViewElement","clonedCounter":38,"id":"Pointer1705376879691_USER_18998","pointedBy":[{"source":"viewelements"},{"source":"viewelements"},{"source":"idlookup.Pointer1705376874098_USER_18704.subViews"}],"name":"Model","preRenderFunc":"() => {}","jsxString":"<div className={'root'}>\n    {!data && \"Model data missing.\"}\n    <div className=\"edges\" style={{zIndex:101, position: \"absolute\", height:0, width:0, overflow: \"visible\"}}>{[\n            refEdges.map(se=> <Edge start={se.start.father.node} end={se.end.node} view={\"Pointer_ViewEdge\" + ( se.start.containment && \"Composition\" || \"Association\")} key={se.start.node.id+\"~\"+se.end.node.id}/>)\n           ]\n        }\n    </div>\n    {data.$ellipses.map((o, i) => <Ellipse key={o.id} data={o} initialSize={{y:50, x: i*100, w:75, h:200}} />)}\n    {data.$polygons.map((o, i) => <Polygon key={o.id} data={o} sides={i+3} initialSize={{y:0, x: i*100, w:100, h:100}} />)}\n    {data.$stars.map((o, i) => <SimpleStar key={o.id} data={o} sides={i+3} initialSize={{y:200, x: i*100, w:100, h:100}}/>)}\n    {data.$decoratedstars.map((o, i) => <Star key={o.id} data={o} sides={i+3} initialSize={{y:400, x: i*100, w:100, h:100}}/>)}\n    {data.$arcos.map(o => o.$inizio.value && o.$fine.value\n                        &&  <Edge key={o.id} data={o} start={o.$inizio.value} end={o.$fine.value} view={\"Pointer_ViewEdgeAssociation\"} />\n                        ||  <DefaultNode key={o.id} data={o} />)}\n\n    {data.otherObjects().map(m1object => <DefaultNode key={m1object.id} data={m1object}/>)}\n</div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\n//ret.data = data\nret.node = node\nret.view = view\n// custom preparations:\nlet packages = data && data.isMetamodel ? data.packages : [];\nlet suggestedEdges = data?.suggestedEdges || {};\n// data, node, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n\n\n// ** declarations here ** //\nret.firstPackage = packages[0]\nret.otherPackages = packages.slice(1)\nret.m1Objects = data && !data.isMetamodel ? data.allSubObjects : []\nret.refEdges = (suggestedEdges.reference || []).filter(e => !e.vertexOverlaps)\nret.archi = data.$arcos.filter(o => o.$inizio.value && o.$fine.value)\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DModel"],"appliableTo":"node","subViews":[],"oclCondition":"context DModel inv: self.isMetamodel = false","explicitApplicationPriority":1,"defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_7_1705376670086"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":false,"resizable":false,"viewpoint":"Pointer1705376874098_USER_18704","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_8_1705376670086"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_9_1705376670086"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_10_1705376670086"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_11_1705376670086"}},"Pointer1705381917748_USER_95":{"className":"DViewElement","clonedCounter":4,"id":"Pointer1705381917748_USER_95","pointedBy":[{"source":"viewelements"},{"source":"viewelements"},{"source":"idlookup.Pointer1705376874098_USER_18704.subViews"}],"name":"Object Copy","preRenderFunc":"() => {}","jsxString":"<div className={'round bg-white root class'}>\n    <label className={'ms-1'}>\n        <Input jsxLabel={<b className={'my-auto class-name'}>{metaclassName}:</b>} \n           data={data} field={'name'} hidden={true} autosize={true}/>\n    </label>\n    <hr />\n    <div className={'object-children'}>\n        {features.map((child) => {\n            return <DefaultNode key={child.id} data={child}></DefaultNode>\n        })}\n    </div>\n</div>","usageDeclarations":"(ret)=>{\n// ** preparations and default behaviour here ** //\nret.data = data\nret.node = node\nret.view = view\n// data, node, view are dependencies by default. delete them above if you want to remove them.\n// add preparation code here (like for loops to count something), then list the dependencies below.\n// ** declarations here ** //\nret.metaclassName = data.instanceof?.name || \"Object\"\nret.features = data.features\n}","scalezoomx":false,"scalezoomy":false,"storeTemporaryPositions":false,"appliableToClasses":["DObject"],"appliableTo":"node","subViews":[],"oclCondition":"context DObject inv: true","explicitApplicationPriority":"2","defaultVSize":{"className":"ISize","x":0,"y":0,"w":351,"h":201,"id":"SIZE_47_1705376670088"},"adaptHeight":false,"adaptWidth":false,"width":200,"height":100,"draggable":true,"resizable":true,"viewpoint":"Pointer1705376874098_USER_18704","display":"flex","constraints":[],"onDataUpdate":"","onDragStart":"","onDragEnd":"","whileDragging":"","onResizeStart":"","onResizeEnd":"","whileResizing":"","onRotationStart":"","onRotationEnd":"","whileRotating":"","bendingMode":"Q","edgeGapMode":"center","storeSize":false,"size":{},"lazySizeUpdate":true,"edgeStartOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_48_1705376670088"},"edgeEndOffset":{"className":"IPoint","x":50,"y":50,"id":"POINT_49_1705376670088"},"edgeStartOffset_isPercentage":true,"edgeEndOffset_isPercentage":true,"edgeStartStopAtBoundaries":true,"edgeEndStopAtBoundaries":true,"edgePointCoordMode":"relativeOffset","edgeHeadSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_50_1705376670088"},"edgeTailSize":{"className":"IPoint","x":20,"y":20,"id":"POINT_51_1705376670088"}},"Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N":{"className":"DEdge","clonedCounter":1,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","pointedBy":[{"source":"edges"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N.edgesIn"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N.edgesOut"},{"source":"edges[]"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","zIndex":0,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"start":"Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","end":"Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","midPoints":[],"midnodes":[]},"Pointer1705383463169_USER_1261":{"className":"DClass","clonedCounter":2,"id":"Pointer1705383463169_USER_1261","pointedBy":[{"source":"classs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N.model"},{"source":"classs[]"},{"source":"idlookup.Pointer1705376674069_USER_98.classifiers+="}],"parent":[],"father":"Pointer1705376674069_USER_98","annotations":[],"name":"Ellipse","abstract":false,"interface":false,"instances":[],"operations":[],"features":[],"references":[],"attributes":[],"referencedBy":[],"extends":[],"extendedBy":[],"isPrimitive":false,"implements":[],"implementedBy":[],"partial":false,"partialdefaultname":""},"Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N":{"className":"DVertex","clonedCounter":7,"id":"Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N","pointedBy":[{"source":"vertexs"},{"source":"vertexs"},{"source":"idlookup.Pointer1705376674067_USER_95^graph0.subElements+="}],"graph":"Pointer1705376674067_USER_95^graph0","model":"Pointer1705383463169_USER_1261","isSelected":{},"subElements":[],"state":{},"father":"Pointer1705376674067_USER_95^graph0","x":623,"y":212,"zIndex":7,"w":120.65340423583984,"h":32.52840805053711,"favoriteNode":false,"edgesIn":[],"edgesOut":[],"isResized":false}},"graphs":["Pointer1705376674067_USER_95^graph0","Pointer1705376674067_USER_96^graph1"],"voidvertexs":[],"vertexs":["Pointer1705376674067_USER_95^graph0^Pointer1705376710667_USER_143N","Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N","Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N","Pointer1705376674067_USER_95^graph0^Pointer1705376740514_USER_2427N","Pointer1705376674067_USER_95^graph0^Pointer1705376765952_USER_4303N","Pointer1705376674067_USER_95^graph0^Pointer1705383463169_USER_1261N"],"graphvertexs":[],"edgepoints":[],"extEdges":[],"refEdges":[],"classifiers":[],"enumerators":[],"packages":["Pointer1705376674069_USER_98"],"primitiveTypes":["Pointer_ECHAR","Pointer_ESTRING","Pointer_EDATE","Pointer_EBOOLEAN","Pointer_EBYTE","Pointer_ESHORT","Pointer_EINT","Pointer_ELONG","Pointer_EFLOAT","Pointer_EDOUBLE"],"attributes":[],"enumliterals":[],"references":["Pointer1705376827501_USER_14257","Pointer1705376828515_USER_14670"],"classs":["Pointer_ECHAR","Pointer_ESTRING","Pointer_EDATE","Pointer_EBOOLEAN","Pointer_EBYTE","Pointer_ESHORT","Pointer_EINT","Pointer_ELONG","Pointer_EFLOAT","Pointer_EDOUBLE","Pointer_EOBJECT","Pointer1705376710667_USER_143","Pointer1705376717850_USER_551","Pointer1705376726626_USER_1347","Pointer1705376740514_USER_2427","Pointer1705376765952_USER_4303","Pointer1705383463169_USER_1261"],"operations":[],"parameters":[],"ecoreClasses":["Pointer_EOBJECT"],"returnTypes":[],"isEdgePending":{"user":"","source":""},"contextMenu":{"display":false,"x":0,"y":0},"objects":[],"values":[],"_lastSelected":{"node":"Pointer1705376674067_USER_95^graph0","view":"Pointer_ViewModel","modelElement":"Pointer1705376674067_USER_95"},"users":["Pointer_adminOffline"],"viewpoint":"","viewpoints":["Pointer_ViewPointDefault","Pointer1705376874098_USER_18704"],"m2models":["Pointer1705376674067_USER_95"],"m1models":["Pointer1705376674067_USER_96"],"isLoading":false,"projects":["Pointer1705376674068_USER_97"],"collaborativeSession":false,"graphelements":["Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376827501_USER_14257N","Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N^Pointer1705376828515_USER_14670N"],"edges":["Pointer1705376674067_USER_95^graph0^Pointer1705376674067_USER_95^graph0^Pointer1705376726626_USER_1347N~Pointer1705376674067_USER_95^graph0^Pointer1705376717850_USER_551N"]};
