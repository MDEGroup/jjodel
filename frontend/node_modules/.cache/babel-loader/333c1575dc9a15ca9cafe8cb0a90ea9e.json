{"ast":null,"code":"import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n    config: config$1,\n    isInitialized: false,\n    resolve: null,\n    reject: null,\n    monaco: null\n  }),\n  _state$create2 = _slicedToArray(_state$create, 2),\n  getState = _state$create2[0],\n  setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\nfunction config(config) {\n  setState(function (state) {\n    return {\n      config: merge(state.config, validators.config(config))\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var isInitialized = _ref.isInitialized;\n    return {\n      isInitialized: isInitialized\n    };\n  });\n  if (!state.isInitialized) {\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n    setState({\n      isInitialized: true\n    });\n  }\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n      reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n      resolve = _ref3.resolve,\n      reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n  require.config(state.config);\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\nexport default loader;","map":{"version":3,"names":["slicedToArray","_slicedToArray","state","config$1","validators","compose","merge","makeCancelable","_state$create","create","config","isInitialized","resolve","reject","monaco","_state$create2","getState","setState","init","_ref","window","editor","storeMonacoInstance","Promise","injectScripts","getMonacoLoaderScript","configureLoader","wrapperPromise","script","document","body","appendChild","createScript","src","createElement","_ref2","loaderScript","concat","paths","vs","onload","onerror","_ref3","require","error","__getMonacoInstance","_ref4","loader"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/@monaco-editor/loader/lib/es/loader/index.js"],"sourcesContent":["import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(config) {\n  setState(function (state) {\n    return {\n      config: merge(state.config, validators.config(config))\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var isInitialized = _ref.isInitialized;\n    return {\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n    setState({\n      isInitialized: true\n    });\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}