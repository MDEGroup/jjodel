{"ast":null,"code":"import React from'react';import'./mytooltip.scss';import{jsx as _jsx}from\"react/jsx-runtime\";export const MyTooltip=props=>{const tooltip=props.text;return/*#__PURE__*/_jsx(\"label\",{className:'my-tooltip',children:tooltip});};/*\r\nfunction TooltipComponent(props: TooltipProps) {\r\n    const tooltip = props.label;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {tooltip: string}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.tooltip = state.tooltip;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TooltipComponent);\r\n\r\nexport const Tooltip = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return(<TooltipConnected {...{...props, children}} />);\r\n}\r\nexport default Tooltip;\r\n*/","map":{"version":3,"names":["React","jsx","_jsx","MyTooltip","props","tooltip","text","className","children"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/tooltip/MyTooltip.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../joiner';\r\nimport {FakeStateProps} from '../../joiner/types';\r\nimport './mytooltip.scss';\r\n\r\n\r\ntype TooltipProps = {\r\n    text: string;\r\n}\r\n\r\nexport const MyTooltip = (props: TooltipProps) => {\r\n    const tooltip = props.text;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\n/*\r\nfunction TooltipComponent(props: TooltipProps) {\r\n    const tooltip = props.label;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {tooltip: string}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.tooltip = state.tooltip;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TooltipComponent);\r\n\r\nexport const Tooltip = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return(<TooltipConnected {...{...props, children}} />);\r\n}\r\nexport default Tooltip;\r\n*/\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAgC,OAAO,CAInD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAO1B,MAAO,MAAM,CAAAC,SAAS,CAAIC,KAAmB,EAAK,CAC9C,KAAM,CAAAC,OAAO,CAAGD,KAAK,CAACE,IAAI,CAE1B,mBACIJ,IAAA,UAAOK,SAAS,CAAE,YAAa,CAAAC,QAAA,CAAEH,OAAO,CAAQ,CAAC,CAEzD,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}