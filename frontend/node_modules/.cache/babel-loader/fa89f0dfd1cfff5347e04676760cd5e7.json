{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\editors\\\\views\\\\data\\\\GenericNodeData.tsx\";\nimport React from 'react';\nimport { LPointerTargetable } from '../../../../joiner';\nimport { connect } from \"react-redux\";\nimport EdgeData from \"./EdgeData\";\nimport EdgePointData from \"./EdgePointData\";\nimport FieldData from \"./FieldData\";\nimport GraphData from \"./GraphData\";\nimport NodeData from \"./NodeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericNodeDataComponent(props) {\n  const view = props.view;\n  let dview = view.__raw || view;\n  const vid = props.view.id;\n  const readOnly = props.readonly;\n  let isField = true;\n  let isGraph = false;\n  let isVertex = false;\n  let isEdge = false;\n  let isEdgePoint = false;\n  switch (dview.appliableTo) {\n    case 'Graph':\n      isGraph = true;\n      break;\n    case 'GraphVertex':\n      isGraph = isVertex = true;\n      break;\n    case 'Vertex':\n      isVertex = true;\n      break;\n    case 'Edge':\n      isEdge = true;\n      break;\n    case 'EdgePoint':\n      isEdgePoint = isVertex = true;\n      break;\n    case undefined:\n    case 'Any':\n      isGraph = isVertex = isEdge = isEdgePoint = true;\n      break;\n    default:\n    case 'Field':\n      break;\n  }\n  /*\r\n      isField = false;\r\n      isGraph = false;\r\n      isVertex = false;\r\n      isEdge = false;\r\n      isEdgePoint = false;*/\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'p-3 options-tab',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: 'view',\n      children: [\"View: \", view.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), isField && /*#__PURE__*/_jsxDEV(FieldData, {\n      viewID: vid,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), isEdge && /*#__PURE__*/_jsxDEV(EdgeData, {\n      viewID: vid,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this), isEdgePoint && /*#__PURE__*/_jsxDEV(EdgePointData, {\n      viewID: vid,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this), isVertex && /*#__PURE__*/_jsxDEV(NodeData, {\n      viewID: vid,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this), isGraph && /*#__PURE__*/_jsxDEV(GraphData, {\n      viewID: vid,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n_c = GenericNodeDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const GenericNodeData = connect(mapStateToProps, mapDispatchToProps)(GenericNodeDataComponent);\nexport default GenericNodeData;\nvar _c;\n$RefreshReg$(_c, \"GenericNodeDataComponent\");","map":{"version":3,"names":["React","LPointerTargetable","connect","EdgeData","EdgePointData","FieldData","GraphData","NodeData","jsxDEV","_jsxDEV","GenericNodeDataComponent","props","view","dview","__raw","vid","id","readOnly","readonly","isField","isGraph","isVertex","isEdge","isEdgePoint","appliableTo","undefined","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","viewID","_c","mapStateToProps","state","ownProps","ret","fromPointer","mapDispatchToProps","dispatch","GenericNodeData","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/editors/views/data/GenericNodeData.tsx"],"sourcesContent":["import React, {Dispatch} from 'react';\r\nimport {DState, DViewElement, LPointerTargetable, LViewElement, Overlap, Pointer} from '../../../../joiner';\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {connect} from \"react-redux\";\r\nimport EdgeData from \"./EdgeData\";\r\nimport EdgePointData from \"./EdgePointData\";\r\nimport FieldData from \"./FieldData\";\r\nimport GraphData from \"./GraphData\";\r\nimport NodeData from \"./NodeData\";\r\n\r\nfunction GenericNodeDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    let dview = (view.__raw || view) as DViewElement;\r\n    const vid = props.view.id;\r\n    const readOnly = props.readonly;\r\n    let isField = true;\r\n    let isGraph = false;\r\n    let isVertex = false;\r\n    let isEdge = false;\r\n    let isEdgePoint = false;\r\n    switch (dview.appliableTo) {\r\n        case 'Graph': isGraph = true; break;\r\n        case 'GraphVertex': isGraph = isVertex = true; break;\r\n        case 'Vertex': isVertex = true; break;\r\n        case 'Edge': isEdge = true; break;\r\n        case 'EdgePoint': isEdgePoint = isVertex = true; break;\r\n        case undefined: case 'Any': isGraph = isVertex = isEdge = isEdgePoint = true; break;\r\n        default: case 'Field': break;\r\n    }\r\n/*\r\n    isField = false;\r\n    isGraph = false;\r\n    isVertex = false;\r\n    isEdge = false;\r\n    isEdgePoint = false;*/\r\n    return(<section className={'p-3 options-tab'}>\r\n        <h1 className={'view'}>View: {view.name}</h1>\r\n        {isField && <FieldData viewID={vid} readonly={readOnly} />}\r\n        {isEdge && <EdgeData viewID={vid} readonly={readOnly} />}\r\n        {isEdgePoint && <EdgePointData viewID={vid} readonly={readOnly} />}\r\n        {isVertex && <NodeData viewID={vid} readonly={readOnly} />}\r\n        {isGraph && <GraphData viewID={vid} readonly={readOnly} />}\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly : boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {}\r\ntype AllProps = Overlap<Overlap<OwnProps, StateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const GenericNodeData = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GenericNodeDataComponent);\r\n\r\nexport default GenericNodeData;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,SAA8BC,kBAAkB,QAAuC,oBAAoB;AAE3G,SAAQC,OAAO,QAAO,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,wBAAwBA,CAACC,KAAe,EAAE;EAC/C,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,IAAIC,KAAK,GAAID,IAAI,CAACE,KAAK,IAAIF,IAAqB;EAChD,MAAMG,GAAG,GAAGJ,KAAK,CAACC,IAAI,CAACI,EAAE;EACzB,MAAMC,QAAQ,GAAGN,KAAK,CAACO,QAAQ;EAC/B,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,MAAM,GAAG,KAAK;EAClB,IAAIC,WAAW,GAAG,KAAK;EACvB,QAAQV,KAAK,CAACW,WAAW;IACrB,KAAK,OAAO;MAAEJ,OAAO,GAAG,IAAI;MAAE;IAC9B,KAAK,aAAa;MAAEA,OAAO,GAAGC,QAAQ,GAAG,IAAI;MAAE;IAC/C,KAAK,QAAQ;MAAEA,QAAQ,GAAG,IAAI;MAAE;IAChC,KAAK,MAAM;MAAEC,MAAM,GAAG,IAAI;MAAE;IAC5B,KAAK,WAAW;MAAEC,WAAW,GAAGF,QAAQ,GAAG,IAAI;MAAE;IACjD,KAAKI,SAAS;IAAE,KAAK,KAAK;MAAEL,OAAO,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,WAAW,GAAG,IAAI;MAAE;IAC9E;IAAS,KAAK,OAAO;MAAE;EAC3B;EACJ;AACA;AACA;AACA;AACA;AACA;EACI,oBAAOd,OAAA;IAASiB,SAAS,EAAE,iBAAkB;IAAAC,QAAA,gBACzClB,OAAA;MAAIiB,SAAS,EAAE,MAAO;MAAAC,QAAA,GAAC,QAAM,EAACf,IAAI,CAACgB,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5Cb,OAAO,iBAAIV,OAAA,CAACJ,SAAS;MAAC4B,MAAM,EAAElB,GAAI;MAACG,QAAQ,EAAED;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDV,MAAM,iBAAIb,OAAA,CAACN,QAAQ;MAAC8B,MAAM,EAAElB,GAAI;MAACG,QAAQ,EAAED;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvDT,WAAW,iBAAId,OAAA,CAACL,aAAa;MAAC6B,MAAM,EAAElB,GAAI;MAACG,QAAQ,EAAED;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjEX,QAAQ,iBAAIZ,OAAA,CAACF,QAAQ;MAAC0B,MAAM,EAAElB,GAAI;MAACG,QAAQ,EAAED;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDZ,OAAO,iBAAIX,OAAA,CAACH,SAAS;MAAC2B,MAAM,EAAElB,GAAI;MAACG,QAAQ,EAAED;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AACd;AAACE,EAAA,GAjCQxB,wBAAwB;AA+CjC,SAASyB,eAAeA,CAACC,KAAa,EAAEC,QAAkB,EAAc;EACpE,MAAMC,GAAe,GAAG,CAAC,CAAmB;EAC5CA,GAAG,CAAC1B,IAAI,GAAGX,kBAAkB,CAACsC,WAAW,CAACF,QAAQ,CAACJ,MAAM,CAAC;EAC1D,OAAOK,GAAG;AACd;AAEA,SAASE,kBAAkBA,CAACC,QAAuB,EAAiB;EAChE,MAAMH,GAAkB,GAAG,CAAC,CAAC;EAC7B,OAAOA,GAAG;AACd;AAEA,OAAO,MAAMI,eAAe,GAAGxC,OAAO,CAClCiC,eAAe,EACfK,kBACJ,CAAC,CAAC9B,wBAAwB,CAAC;AAE3B,eAAegC,eAAe;AAAC,IAAAR,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}