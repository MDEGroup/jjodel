{"ast":null,"code":"import { DModel, LClass, LModel, LPackage, SetFieldAction } from '../../../joiner';\nexport class StateMachine_M2 {\n  static load(project) {\n    const elements = this.create(project);\n    const m2 = elements[0];\n    const pkg = elements[1];\n    const abstractEvent = this.createAbstractEvent(pkg);\n    const command = this.createCommand(pkg, abstractEvent);\n    const event = this.createEvent(pkg, abstractEvent);\n    const state = this.createState(pkg, command);\n    const transition = this.createTransition(pkg, state, event);\n    // const stateMachine = this.createStateMachine(pkg, state, transition);\n    return [m2, pkg, state, transition, abstractEvent, command, event];\n  }\n  static create(project) {\n    var _lModel$node;\n    const dModel = DModel.new('metamodel_1', undefined, true);\n    const lModel = LModel.fromD(dModel);\n    SetFieldAction.new(project.id, 'metamodels', lModel.id, '+=', true);\n    SetFieldAction.new(project.id, 'graphs', (_lModel$node = lModel.node) === null || _lModel$node === void 0 ? void 0 : _lModel$node.id, '+=', true);\n    // project.metamodels = [...project.metamodels, lModel];\n    // project.graphs = [...project.graphs, lModel.node as LGraph];\n    const dPackage = lModel.addChild('package');\n    const lPackage = LPackage.fromD(dPackage);\n    lPackage.name = 'default';\n    // const tab = TabDataMaker.metamodel(dModel);\n    // await DockManager.open('models', tab);\n    return [lModel, lPackage];\n  }\n  static createStateMachine(pkg, state, transition) {\n    const dClass = pkg.addClass('StateMachine');\n    const lClass = LClass.fromD(dClass);\n    const name = lClass.addAttribute('name', 'Pointer_ESTRING');\n    name.lowerBound = 1;\n    const states = lClass.addReference('states', state.id);\n    states.upperBound = -1;\n    const transitions = lClass.addReference('transitions', transition.id);\n    transitions.upperBound = -1;\n    return lClass;\n  }\n  static createState(pkg, command) {\n    const dClass = pkg.addClass('State');\n    const lClass = LClass.fromD(dClass);\n    const name = lClass.addAttribute('name', 'Pointer_ESTRING');\n    name.lowerBound = 1;\n    const actions = lClass.addReference('actions', command.id);\n    actions.upperBound = -1;\n    return lClass;\n  }\n  static createTransition(pkg, state, event) {\n    const dClass = pkg.addClass('Transition');\n    const lClass = LClass.fromD(dClass);\n    const source = lClass.addReference('source', state.id);\n    const target = lClass.addReference('target', state.id);\n    const trigger = lClass.addReference('trigger', event.id);\n    return lClass;\n  }\n  static createAbstractEvent(pkg) {\n    const dClass = pkg.addClass('AbstractEvent');\n    const lClass = LClass.fromD(dClass);\n    lClass.abstract = true;\n    const name = lClass.addAttribute('name', 'Pointer_ESTRING');\n    name.lowerBound = 1;\n    const code = lClass.addAttribute('code', 'Pointer_ESTRING');\n    name.lowerBound = 1;\n    return lClass;\n  }\n  static createCommand(pkg, abstractEvent) {\n    const dClass = pkg.addClass('Command');\n    const lClass = LClass.fromD(dClass);\n    lClass.extends = [abstractEvent];\n    return lClass;\n  }\n  static createEvent(pkg, abstractEvent) {\n    const dClass = pkg.addClass('Event');\n    const lClass = LClass.fromD(dClass);\n    lClass.extends = [abstractEvent];\n    return lClass;\n  }\n}","map":{"version":3,"names":["DModel","LClass","LModel","LPackage","SetFieldAction","StateMachine_M2","load","project","elements","create","m2","pkg","abstractEvent","createAbstractEvent","command","createCommand","event","createEvent","state","createState","transition","createTransition","_lModel$node","dModel","new","undefined","lModel","fromD","id","node","dPackage","addChild","lPackage","name","createStateMachine","dClass","addClass","lClass","addAttribute","lowerBound","states","addReference","upperBound","transitions","actions","source","target","trigger","abstract","code","extends"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/examples/StateMachine/M2/index.ts"],"sourcesContent":["import {DModel, LClass, LModel, LPackage, LProject, SetFieldAction} from '../../../joiner';\r\n\r\nexport class StateMachine_M2 {\r\n    static load(project: LProject): [LModel, LPackage, LClass, LClass, LClass,LClass, LClass] {\r\n        const elements = this.create(project);\r\n        const m2 = elements[0];\r\n        const pkg = elements[1];\r\n        const abstractEvent = this.createAbstractEvent(pkg);\r\n        const command = this.createCommand(pkg, abstractEvent);\r\n        const event = this.createEvent(pkg, abstractEvent);\r\n        const state = this.createState(pkg, command);\r\n        const transition = this.createTransition(pkg, state, event);\r\n        // const stateMachine = this.createStateMachine(pkg, state, transition);\r\n        return [\r\n            m2, pkg, state, transition, abstractEvent, command, event\r\n        ];\r\n    }\r\n    private static create(project: LProject): [LModel, LPackage] {\r\n        const dModel = DModel.new('metamodel_1', undefined, true);\r\n        const lModel: LModel = LModel.fromD(dModel);\r\n        SetFieldAction.new(project.id, 'metamodels', lModel.id, '+=', true);\r\n        SetFieldAction.new(project.id, 'graphs', lModel.node?.id, '+=', true);\r\n        // project.metamodels = [...project.metamodels, lModel];\r\n        // project.graphs = [...project.graphs, lModel.node as LGraph];\r\n        const dPackage = lModel.addChild('package');\r\n        const lPackage: LPackage = LPackage.fromD(dPackage);\r\n        lPackage.name = 'default';\r\n        // const tab = TabDataMaker.metamodel(dModel);\r\n        // await DockManager.open('models', tab);\r\n        return [lModel, lPackage];\r\n    }\r\n    private static createStateMachine(pkg: LPackage, state: LClass, transition: LClass): LClass {\r\n        const dClass = pkg.addClass('StateMachine');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        const name = lClass.addAttribute('name', 'Pointer_ESTRING');\r\n        name.lowerBound = 1;\r\n        const states = lClass.addReference('states', state.id);\r\n        states.upperBound = -1;\r\n        const transitions = lClass.addReference('transitions', transition.id);\r\n        transitions.upperBound = -1;\r\n        return lClass;\r\n    }\r\n    private static createState(pkg: LPackage, command: LClass): LClass {\r\n        const dClass = pkg.addClass('State');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        const name = lClass.addAttribute('name', 'Pointer_ESTRING');\r\n        name.lowerBound = 1;\r\n        const actions = lClass.addReference('actions', command.id);\r\n        actions.upperBound = -1;\r\n        return lClass;\r\n    }\r\n    private static createTransition(pkg: LPackage, state: LClass, event: LClass): LClass {\r\n        const dClass = pkg.addClass('Transition');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        const source = lClass.addReference('source', state.id);\r\n        const target = lClass.addReference('target', state.id);\r\n        const trigger = lClass.addReference('trigger', event.id);\r\n        return lClass;\r\n    }\r\n    private static createAbstractEvent(pkg: LPackage): LClass {\r\n        const dClass = pkg.addClass('AbstractEvent');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        lClass.abstract = true;\r\n        const name = lClass.addAttribute('name', 'Pointer_ESTRING');\r\n        name.lowerBound = 1;\r\n        const code = lClass.addAttribute('code', 'Pointer_ESTRING');\r\n        name.lowerBound = 1;\r\n        return lClass;\r\n    }\r\n    private static createCommand(pkg: LPackage, abstractEvent: LClass): LClass {\r\n        const dClass = pkg.addClass('Command');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        lClass.extends = [abstractEvent];\r\n        return lClass;\r\n    }\r\n    private static createEvent(pkg: LPackage, abstractEvent: LClass): LClass {\r\n        const dClass = pkg.addClass('Event');\r\n        const lClass: LClass = LClass.fromD(dClass);\r\n        lClass.extends = [abstractEvent];\r\n        return lClass;\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}