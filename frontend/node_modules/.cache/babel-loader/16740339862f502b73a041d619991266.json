{"ast":null,"code":"import _classCallCheck from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport * as DragManager from \"./DragManager\";\nimport { GestureState } from \"./GestureManager\";\nexport var DragDropDiv = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DragDropDiv, _React$PureComponent);\n  var _super = _createSuper(DragDropDiv);\n  function DragDropDiv() {\n    var _this;\n    _classCallCheck(this, DragDropDiv);\n    _this = _super.apply(this, arguments);\n    _this._getRef = function (r) {\n      if (r === _this.element) {\n        return;\n      }\n      var _this$props = _this.props,\n        getRef = _this$props.getRef,\n        onDragOverT = _this$props.onDragOverT;\n      if (_this.element && onDragOverT) {\n        DragManager.removeHandlers(_this.element);\n      }\n      _this.element = r;\n      if (r) {\n        _this.ownerDocument = r.ownerDocument;\n      }\n      if (getRef) {\n        getRef(r);\n      }\n      if (r && onDragOverT) {\n        DragManager.addHandlers(r, _this.props);\n      }\n    };\n    _this.dragType = null;\n    _this.waitingMove = false;\n    _this.listening = false;\n    _this.gesturing = false;\n    _this.onPointerDown = function (e) {\n      var nativeTarget = e.nativeEvent.target;\n      if (nativeTarget instanceof HTMLInputElement || nativeTarget instanceof HTMLTextAreaElement || nativeTarget.classList.contains('drag-ignore')) {\n        // ignore drag from input element\n        return;\n      }\n      var _this$props2 = _this.props,\n        onDragStartT = _this$props2.onDragStartT,\n        onGestureStartT = _this$props2.onGestureStartT,\n        onGestureMoveT = _this$props2.onGestureMoveT,\n        useRightButtonDragT = _this$props2.useRightButtonDragT;\n      var event = e.nativeEvent;\n      _this.cancel();\n      if (event.type === 'touchstart') {\n        // check single or double fingure touch\n        if (event.touches.length === 1) {\n          if (onDragStartT) {\n            _this.onDragStart(event);\n          }\n        } else if (event.touches.length === 2) {\n          if (onGestureStartT && onGestureMoveT) {\n            _this.onGestureStart(event);\n          }\n        }\n      } else if (onDragStartT) {\n        if (event.button === 2 && !useRightButtonDragT) {\n          return;\n        }\n        _this.onDragStart(event);\n      }\n    };\n    _this.onMouseMove = function (e) {\n      var onDragMoveT = _this.props.onDragMoveT;\n      if (_this.waitingMove) {\n        if (DragManager.isDragging()) {\n          _this.onDragEnd();\n          return;\n        }\n        if (!_this.checkFirstMove(e)) {\n          return;\n        }\n      } else {\n        var state = new DragManager.DragState(e, _assertThisInitialized(_this));\n        state._onMove();\n        if (onDragMoveT) {\n          onDragMoveT(state);\n        }\n      }\n      e.preventDefault();\n    };\n    _this.onTouchMove = function (e) {\n      var onDragMoveT = _this.props.onDragMoveT;\n      if (_this.waitingMove) {\n        if (DragManager.isDragging()) {\n          _this.onDragEnd();\n          return;\n        }\n        if (!_this.checkFirstMove(e)) {\n          return;\n        }\n      } else if (e.touches.length !== 1) {\n        _this.onDragEnd();\n      } else {\n        var state = new DragManager.DragState(e, _assertThisInitialized(_this));\n        state._onMove();\n        if (onDragMoveT) {\n          onDragMoveT(state);\n        }\n      }\n      e.preventDefault();\n    };\n    _this.onDragEnd = function (e) {\n      var onDragEndT = _this.props.onDragEndT;\n      var state = new DragManager.DragState(e, _assertThisInitialized(_this));\n      _this.removeListeners();\n      if (!_this.waitingMove) {\n        // e=null means drag is canceled\n        state._onDragEnd(e == null);\n        if (onDragEndT) {\n          onDragEndT(state);\n        }\n      }\n      _this.cleanupDrag(state);\n    };\n    _this.onGestureMove = function (e) {\n      var _this$props3 = _this.props,\n        onGestureMoveT = _this$props3.onGestureMoveT,\n        gestureSensitivity = _this$props3.gestureSensitivity;\n      var state = new GestureState(e, _assertThisInitialized(_this));\n      if (_this.waitingMove) {\n        if (!(gestureSensitivity > 0)) {\n          gestureSensitivity = 10; // default sensitivity\n        }\n\n        if (state.moved() > gestureSensitivity) {\n          _this.waitingMove = false;\n        } else {\n          return;\n        }\n      }\n      if (onGestureMoveT) {\n        onGestureMoveT(state);\n      }\n    };\n    _this.onGestureEnd = function (e) {\n      var onGestureEndT = _this.props.onGestureEndT;\n      var state = new DragManager.DragState(e, _assertThisInitialized(_this));\n      _this.removeListeners();\n      if (onGestureEndT) {\n        onGestureEndT();\n      }\n    };\n    _this.onKeyDown = function (e) {\n      if (e.key === 'Escape') {\n        _this.cancel();\n      }\n    };\n    return _this;\n  }\n  _createClass(DragDropDiv, [{\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      if (DragManager.isDragging()) {\n        // same pointer event shouldn't trigger 2 drag start\n        return;\n      }\n      var state = new DragManager.DragState(event, this, true);\n      this.baseX = state.pageX;\n      this.baseY = state.pageY;\n      var baseElement = this.element.parentElement;\n      var rect = baseElement.getBoundingClientRect();\n      this.scaleX = baseElement.offsetWidth / Math.round(rect.width);\n      this.scaleY = baseElement.offsetHeight / Math.round(rect.height);\n      this.addDragListeners(event);\n      if (this.props.directDragT) {\n        this.executeFirstMove(state);\n      }\n    }\n  }, {\n    key: \"addDragListeners\",\n    value: function addDragListeners(event) {\n      var onDragStartT = this.props.onDragStartT;\n      if (event.type === 'touchstart') {\n        this.ownerDocument.addEventListener('touchmove', this.onTouchMove);\n        this.ownerDocument.addEventListener('touchend', this.onDragEnd);\n        this.dragType = 'touch';\n      } else {\n        this.ownerDocument.addEventListener('mousemove', this.onMouseMove);\n        this.ownerDocument.addEventListener('mouseup', this.onDragEnd);\n        if (event.button === 2) {\n          this.dragType = 'right';\n        } else {\n          this.dragType = 'left';\n        }\n      }\n      this.waitingMove = true;\n      this.listening = true;\n    }\n    // return true for a valid move\n  }, {\n    key: \"checkFirstMove\",\n    value: function checkFirstMove(e) {\n      var state = new DragManager.DragState(e, this, true);\n      if (!state.moved()) {\n        // not a move\n        return false;\n      }\n      return this.executeFirstMove(state);\n    }\n  }, {\n    key: \"executeFirstMove\",\n    value: function executeFirstMove(state) {\n      var onDragStartT = this.props.onDragStartT;\n      this.waitingMove = false;\n      onDragStartT(state);\n      if (!DragManager.isDragging()) {\n        this.onDragEnd();\n        return false;\n      }\n      state._onMove();\n      this.ownerDocument.addEventListener('keydown', this.onKeyDown);\n      return true;\n    }\n  }, {\n    key: \"addGestureListeners\",\n    value: function addGestureListeners(event) {\n      this.ownerDocument.addEventListener('touchmove', this.onGestureMove);\n      this.ownerDocument.addEventListener('touchend', this.onGestureEnd);\n      this.ownerDocument.addEventListener('keydown', this.onKeyDown);\n      this.gesturing = true;\n      this.waitingMove = true;\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(event) {\n      if (!DragManager.isDragging()) {\n        // same pointer event shouldn't trigger 2 drag start\n        return;\n      }\n      var onGestureStartT = this.props.onGestureStartT;\n      this.baseX = event.touches[0].pageX;\n      this.baseY = event.touches[0].pageY;\n      this.baseX2 = event.touches[1].pageX;\n      this.baseY2 = event.touches[1].pageY;\n      var baseElement = this.element.parentElement;\n      var rect = baseElement.getBoundingClientRect();\n      this.scaleX = baseElement.offsetWidth / Math.round(rect.width);\n      this.scaleY = baseElement.offsetHeight / Math.round(rect.height);\n      this.baseDis = Math.sqrt(Math.pow(this.baseX - this.baseX2, 2) + Math.pow(this.baseY - this.baseY2, 2));\n      this.baseAng = Math.atan2(this.baseY2 - this.baseY, this.baseX2 - this.baseX);\n      var state = new GestureState(event, this, true);\n      if (onGestureStartT(state)) {\n        this.addGestureListeners(event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.listening) {\n        this.onDragEnd();\n      }\n      if (this.gesturing) {\n        this.onGestureEnd();\n      }\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      if (this.gesturing) {\n        this.ownerDocument.removeEventListener('touchmove', this.onGestureMove);\n        this.ownerDocument.removeEventListener('touchend', this.onGestureEnd);\n      } else if (this.listening) {\n        if (this.dragType === 'touch') {\n          this.ownerDocument.removeEventListener('touchmove', this.onTouchMove);\n          this.ownerDocument.removeEventListener('touchend', this.onDragEnd);\n        } else {\n          this.ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n          this.ownerDocument.removeEventListener('mouseup', this.onDragEnd);\n        }\n      }\n      this.ownerDocument.removeEventListener('keydown', this.onKeyDown);\n      this.listening = false;\n      this.gesturing = false;\n    }\n  }, {\n    key: \"cleanupDrag\",\n    value: function cleanupDrag(state) {\n      this.dragType = null;\n      this.waitingMove = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        getRef = _a.getRef,\n        children = _a.children,\n        className = _a.className,\n        directDragT = _a.directDragT,\n        onDragStartT = _a.onDragStartT,\n        onDragMoveT = _a.onDragMoveT,\n        onDragEndT = _a.onDragEndT,\n        onDragOverT = _a.onDragOverT,\n        onDragLeaveT = _a.onDragLeaveT,\n        onDropT = _a.onDropT,\n        onGestureStartT = _a.onGestureStartT,\n        onGestureMoveT = _a.onGestureMoveT,\n        onGestureEndT = _a.onGestureEndT,\n        useRightButtonDragT = _a.useRightButtonDragT,\n        others = __rest(_a, [\"getRef\", \"children\", \"className\", \"directDragT\", \"onDragStartT\", \"onDragMoveT\", \"onDragEndT\", \"onDragOverT\", \"onDragLeaveT\", \"onDropT\", \"onGestureStartT\", \"onGestureMoveT\", \"onGestureEndT\", \"useRightButtonDragT\"]);\n      var onTouchDown = this.onPointerDown;\n      var onMouseDown = this.onPointerDown;\n      if (!onDragStartT) {\n        onMouseDown = null;\n        if (!onGestureStartT) {\n          onTouchDown = null;\n        }\n      }\n      if (onDragStartT || onGestureStartT) {\n        if (className) {\n          className = \"\".concat(className, \" drag-initiator\");\n        } else {\n          className = 'drag-initiator';\n        }\n      }\n      return React.createElement(\"div\", Object.assign({\n        ref: this._getRef,\n        className: className\n      }, others, {\n        onMouseDown: onMouseDown,\n        onTouchStart: onTouchDown\n      }), children);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n        onDragOverT = _this$props4.onDragOverT,\n        onDragEndT = _this$props4.onDragEndT,\n        onDragLeaveT = _this$props4.onDragLeaveT;\n      if (this.element && (prevProps.onDragOverT !== onDragOverT || prevProps.onDragLeaveT !== onDragLeaveT || prevProps.onDragEndT !== onDragEndT)) {\n        if (onDragOverT) {\n          DragManager.addHandlers(this.element, this.props);\n        } else {\n          DragManager.removeHandlers(this.element);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var onDragOverT = this.props.onDragOverT;\n      if (this.element && onDragOverT) {\n        DragManager.removeHandlers(this.element);\n      }\n      this.cancel();\n    }\n  }]);\n  return DragDropDiv;\n}(React.PureComponent);","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","DragManager","GestureState","DragDropDiv","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_getRef","r","element","_this$props","props","getRef","onDragOverT","removeHandlers","ownerDocument","addHandlers","dragType","waitingMove","listening","gesturing","onPointerDown","nativeTarget","nativeEvent","target","HTMLInputElement","HTMLTextAreaElement","classList","contains","_this$props2","onDragStartT","onGestureStartT","onGestureMoveT","useRightButtonDragT","event","cancel","type","touches","onDragStart","onGestureStart","button","onMouseMove","onDragMoveT","isDragging","onDragEnd","checkFirstMove","state","DragState","_assertThisInitialized","_onMove","preventDefault","onTouchMove","onDragEndT","removeListeners","_onDragEnd","cleanupDrag","onGestureMove","_this$props3","gestureSensitivity","moved","onGestureEnd","onGestureEndT","onKeyDown","key","_createClass","value","baseX","pageX","baseY","pageY","baseElement","parentElement","rect","getBoundingClientRect","scaleX","offsetWidth","Math","round","width","scaleY","offsetHeight","height","addDragListeners","directDragT","executeFirstMove","addEventListener","addGestureListeners","baseX2","baseY2","baseDis","sqrt","pow","baseAng","atan2","removeEventListener","render","_a","children","className","onDragLeaveT","onDropT","others","onTouchDown","onMouseDown","concat","createElement","assign","ref","onTouchStart","componentDidUpdate","prevProps","_this$props4","componentWillUnmount","PureComponent"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-dock/es/dragdrop/DragDropDiv.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport * as DragManager from \"./DragManager\";\nimport { GestureState } from \"./GestureManager\";\nexport class DragDropDiv extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this._getRef = (r) => {\n            if (r === this.element) {\n                return;\n            }\n            let { getRef, onDragOverT } = this.props;\n            if (this.element && onDragOverT) {\n                DragManager.removeHandlers(this.element);\n            }\n            this.element = r;\n            if (r) {\n                this.ownerDocument = r.ownerDocument;\n            }\n            if (getRef) {\n                getRef(r);\n            }\n            if (r && onDragOverT) {\n                DragManager.addHandlers(r, this.props);\n            }\n        };\n        this.dragType = null;\n        this.waitingMove = false;\n        this.listening = false;\n        this.gesturing = false;\n        this.onPointerDown = (e) => {\n            let nativeTarget = e.nativeEvent.target;\n            if (nativeTarget instanceof HTMLInputElement || nativeTarget instanceof HTMLTextAreaElement || nativeTarget.classList.contains('drag-ignore')) {\n                // ignore drag from input element\n                return;\n            }\n            let { onDragStartT, onGestureStartT, onGestureMoveT, useRightButtonDragT } = this.props;\n            let event = e.nativeEvent;\n            this.cancel();\n            if (event.type === 'touchstart') {\n                // check single or double fingure touch\n                if (event.touches.length === 1) {\n                    if (onDragStartT) {\n                        this.onDragStart(event);\n                    }\n                }\n                else if (event.touches.length === 2) {\n                    if (onGestureStartT && onGestureMoveT) {\n                        this.onGestureStart(event);\n                    }\n                }\n            }\n            else if (onDragStartT) {\n                if (event.button === 2 && !useRightButtonDragT) {\n                    return;\n                }\n                this.onDragStart(event);\n            }\n        };\n        this.onMouseMove = (e) => {\n            let { onDragMoveT } = this.props;\n            if (this.waitingMove) {\n                if (DragManager.isDragging()) {\n                    this.onDragEnd();\n                    return;\n                }\n                if (!this.checkFirstMove(e)) {\n                    return;\n                }\n            }\n            else {\n                let state = new DragManager.DragState(e, this);\n                state._onMove();\n                if (onDragMoveT) {\n                    onDragMoveT(state);\n                }\n            }\n            e.preventDefault();\n        };\n        this.onTouchMove = (e) => {\n            let { onDragMoveT } = this.props;\n            if (this.waitingMove) {\n                if (DragManager.isDragging()) {\n                    this.onDragEnd();\n                    return;\n                }\n                if (!this.checkFirstMove(e)) {\n                    return;\n                }\n            }\n            else if (e.touches.length !== 1) {\n                this.onDragEnd();\n            }\n            else {\n                let state = new DragManager.DragState(e, this);\n                state._onMove();\n                if (onDragMoveT) {\n                    onDragMoveT(state);\n                }\n            }\n            e.preventDefault();\n        };\n        this.onDragEnd = (e) => {\n            let { onDragEndT } = this.props;\n            let state = new DragManager.DragState(e, this);\n            this.removeListeners();\n            if (!this.waitingMove) {\n                // e=null means drag is canceled\n                state._onDragEnd(e == null);\n                if (onDragEndT) {\n                    onDragEndT(state);\n                }\n            }\n            this.cleanupDrag(state);\n        };\n        this.onGestureMove = (e) => {\n            let { onGestureMoveT, gestureSensitivity } = this.props;\n            let state = new GestureState(e, this);\n            if (this.waitingMove) {\n                if (!(gestureSensitivity > 0)) {\n                    gestureSensitivity = 10; // default sensitivity\n                }\n                if (state.moved() > gestureSensitivity) {\n                    this.waitingMove = false;\n                }\n                else {\n                    return;\n                }\n            }\n            if (onGestureMoveT) {\n                onGestureMoveT(state);\n            }\n        };\n        this.onGestureEnd = (e) => {\n            let { onGestureEndT } = this.props;\n            let state = new DragManager.DragState(e, this);\n            this.removeListeners();\n            if (onGestureEndT) {\n                onGestureEndT();\n            }\n        };\n        this.onKeyDown = (e) => {\n            if (e.key === 'Escape') {\n                this.cancel();\n            }\n        };\n    }\n    onDragStart(event) {\n        if (DragManager.isDragging()) {\n            // same pointer event shouldn't trigger 2 drag start\n            return;\n        }\n        let state = new DragManager.DragState(event, this, true);\n        this.baseX = state.pageX;\n        this.baseY = state.pageY;\n        let baseElement = this.element.parentElement;\n        let rect = baseElement.getBoundingClientRect();\n        this.scaleX = baseElement.offsetWidth / Math.round(rect.width);\n        this.scaleY = baseElement.offsetHeight / Math.round(rect.height);\n        this.addDragListeners(event);\n        if (this.props.directDragT) {\n            this.executeFirstMove(state);\n        }\n    }\n    addDragListeners(event) {\n        let { onDragStartT } = this.props;\n        if (event.type === 'touchstart') {\n            this.ownerDocument.addEventListener('touchmove', this.onTouchMove);\n            this.ownerDocument.addEventListener('touchend', this.onDragEnd);\n            this.dragType = 'touch';\n        }\n        else {\n            this.ownerDocument.addEventListener('mousemove', this.onMouseMove);\n            this.ownerDocument.addEventListener('mouseup', this.onDragEnd);\n            if (event.button === 2) {\n                this.dragType = 'right';\n            }\n            else {\n                this.dragType = 'left';\n            }\n        }\n        this.waitingMove = true;\n        this.listening = true;\n    }\n    // return true for a valid move\n    checkFirstMove(e) {\n        let state = new DragManager.DragState(e, this, true);\n        if (!state.moved()) {\n            // not a move\n            return false;\n        }\n        return this.executeFirstMove(state);\n    }\n    executeFirstMove(state) {\n        let { onDragStartT } = this.props;\n        this.waitingMove = false;\n        onDragStartT(state);\n        if (!DragManager.isDragging()) {\n            this.onDragEnd();\n            return false;\n        }\n        state._onMove();\n        this.ownerDocument.addEventListener('keydown', this.onKeyDown);\n        return true;\n    }\n    addGestureListeners(event) {\n        this.ownerDocument.addEventListener('touchmove', this.onGestureMove);\n        this.ownerDocument.addEventListener('touchend', this.onGestureEnd);\n        this.ownerDocument.addEventListener('keydown', this.onKeyDown);\n        this.gesturing = true;\n        this.waitingMove = true;\n    }\n    onGestureStart(event) {\n        if (!DragManager.isDragging()) {\n            // same pointer event shouldn't trigger 2 drag start\n            return;\n        }\n        let { onGestureStartT } = this.props;\n        this.baseX = event.touches[0].pageX;\n        this.baseY = event.touches[0].pageY;\n        this.baseX2 = event.touches[1].pageX;\n        this.baseY2 = event.touches[1].pageY;\n        let baseElement = this.element.parentElement;\n        let rect = baseElement.getBoundingClientRect();\n        this.scaleX = baseElement.offsetWidth / Math.round(rect.width);\n        this.scaleY = baseElement.offsetHeight / Math.round(rect.height);\n        this.baseDis = Math.sqrt(Math.pow(this.baseX - this.baseX2, 2) + Math.pow(this.baseY - this.baseY2, 2));\n        this.baseAng = Math.atan2(this.baseY2 - this.baseY, this.baseX2 - this.baseX);\n        let state = new GestureState(event, this, true);\n        if (onGestureStartT(state)) {\n            this.addGestureListeners(event);\n            event.preventDefault();\n        }\n    }\n    cancel() {\n        if (this.listening) {\n            this.onDragEnd();\n        }\n        if (this.gesturing) {\n            this.onGestureEnd();\n        }\n    }\n    removeListeners() {\n        if (this.gesturing) {\n            this.ownerDocument.removeEventListener('touchmove', this.onGestureMove);\n            this.ownerDocument.removeEventListener('touchend', this.onGestureEnd);\n        }\n        else if (this.listening) {\n            if (this.dragType === 'touch') {\n                this.ownerDocument.removeEventListener('touchmove', this.onTouchMove);\n                this.ownerDocument.removeEventListener('touchend', this.onDragEnd);\n            }\n            else {\n                this.ownerDocument.removeEventListener('mousemove', this.onMouseMove);\n                this.ownerDocument.removeEventListener('mouseup', this.onDragEnd);\n            }\n        }\n        this.ownerDocument.removeEventListener('keydown', this.onKeyDown);\n        this.listening = false;\n        this.gesturing = false;\n    }\n    cleanupDrag(state) {\n        this.dragType = null;\n        this.waitingMove = false;\n    }\n    render() {\n        let _a = this.props, { getRef, children, className, directDragT, onDragStartT, onDragMoveT, onDragEndT, onDragOverT, onDragLeaveT, onDropT, onGestureStartT, onGestureMoveT, onGestureEndT, useRightButtonDragT } = _a, others = __rest(_a, [\"getRef\", \"children\", \"className\", \"directDragT\", \"onDragStartT\", \"onDragMoveT\", \"onDragEndT\", \"onDragOverT\", \"onDragLeaveT\", \"onDropT\", \"onGestureStartT\", \"onGestureMoveT\", \"onGestureEndT\", \"useRightButtonDragT\"]);\n        let onTouchDown = this.onPointerDown;\n        let onMouseDown = this.onPointerDown;\n        if (!onDragStartT) {\n            onMouseDown = null;\n            if (!onGestureStartT) {\n                onTouchDown = null;\n            }\n        }\n        if (onDragStartT || onGestureStartT) {\n            if (className) {\n                className = `${className} drag-initiator`;\n            }\n            else {\n                className = 'drag-initiator';\n            }\n        }\n        return (React.createElement(\"div\", Object.assign({ ref: this._getRef, className: className }, others, { onMouseDown: onMouseDown, onTouchStart: onTouchDown }), children));\n    }\n    componentDidUpdate(prevProps) {\n        let { onDragOverT, onDragEndT, onDragLeaveT } = this.props;\n        if (this.element\n            && (prevProps.onDragOverT !== onDragOverT\n                || prevProps.onDragLeaveT !== onDragLeaveT\n                || prevProps.onDragEndT !== onDragEndT)) {\n            if (onDragOverT) {\n                DragManager.addHandlers(this.element, this.props);\n            }\n            else {\n                DragManager.removeHandlers(this.element);\n            }\n        }\n    }\n    componentWillUnmount() {\n        let { onDragOverT } = this.props;\n        if (this.element && onDragOverT) {\n            DragManager.removeHandlers(this.element);\n        }\n        this.cancel();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}