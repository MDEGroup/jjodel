"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable:jsx-no-lambda */
const react_1 = __importStar(require("react"));
const lib_1 = __importDefault(require("../lib"));
require("../dist/rc-dock.css");
const svg_1 = require("./svg");
const react_dom_1 = __importDefault(require("react-dom"));
const NewFasterLayout = () => {
    const refDockLayout = react_1.useRef(null);
    const epsDashboard = {
        dockbox: {
            mode: 'vertical',
            children: [
                {
                    id: 'main-box',
                    mode: 'vertical',
                    children: [
                        {
                            mode: 'horizontal',
                            children: [
                                {
                                    id: 'main-panel',
                                    mode: 'horizontal',
                                    children: [
                                        {
                                            id: 'eps-system',
                                            mode: 'horizontal',
                                            children: [
                                                {
                                                    id: 'eps-charts-panel',
                                                    group: 'dashboard-buttons',
                                                    mode: 'horizontal',
                                                    tabs: [
                                                        {
                                                            id: 'eps-solar-panels--tab',
                                                            title: 'Solar Panels',
                                                            titleText: 'Solar Panels',
                                                            // type: 'eps-solar-panels-page' as ComponentType,
                                                            group: 'dashboard-buttons',
                                                            content: (react_1.default.createElement(svg_1.Svg, null)),
                                                        },
                                                        {
                                                            id: 'eps-current-lines-tab',
                                                            title: 'Current Lines',
                                                            titleText: 'Current Lines',
                                                            // type: 'eps-current-lines' as ComponentType,
                                                            group: 'dashboard-buttons',
                                                            content: (react_1.default.createElement(svg_1.Svg, null)),
                                                        },
                                                        {
                                                            id: 'eps-temperature-tab',
                                                            title: 'Temperature',
                                                            titleText: 'Temperature',
                                                            // type: 'eps-temperature' as ComponentType,
                                                            group: 'dashboard-buttons',
                                                            content: (react_1.default.createElement(svg_1.Svg, null)),
                                                        },
                                                        {
                                                            id: 'eps-rbat-tab',
                                                            title: 'Rbat',
                                                            titleText: 'Rbat',
                                                            // type: 'eps-rbat' as ComponentType,
                                                            group: 'dashboard-buttons',
                                                            content: (react_1.default.createElement(svg_1.Svg, null)),
                                                        },
                                                        {
                                                            id: 'eps-output-voltages-tab',
                                                            title: 'Output voltages',
                                                            titleText: 'Output voltages',
                                                            // type: 'output-voltages' as ComponentType,
                                                            group: 'dashboard-buttons',
                                                            content: (react_1.default.createElement(svg_1.Svg, null)),
                                                        },
                                                    ],
                                                },
                                                {
                                                    id: 'eps-control-panel',
                                                    mode: 'vertical',
                                                    children: [
                                                        {
                                                            id: 'eps-helper-panel',
                                                            group: 'dashboard-buttons',
                                                            tabs: [
                                                                {
                                                                    id: 'eps-raw-data-control',
                                                                    title: 'RAW Data',
                                                                    titleText: 'RAW Data',
                                                                    // type: 'raw-data' as ComponentType,
                                                                    group: 'dashboard-buttons',
                                                                    content: (
                                                                    // <RawDataPage />
                                                                    react_1.default.createElement("div", null)),
                                                                },
                                                                {
                                                                    id: 'eps-input-output-control',
                                                                    title: 'IO Control',
                                                                    titleText: 'IO Control',
                                                                    // type: 'eps-input-output' as ComponentType,
                                                                    group: 'dashboard-buttons',
                                                                    content: (
                                                                    // <InputOutputControl />
                                                                    react_1.default.createElement("div", null)),
                                                                },
                                                            ],
                                                        },
                                                        {
                                                            id: 'eps-battery-monitoring-panel',
                                                            group: 'dashboard-buttons',
                                                            tabs: [
                                                                {
                                                                    id: 'eps-battery-monitoring-tab',
                                                                    group: 'dashboard-buttons',
                                                                    title: 'Battery Monitor',
                                                                    titleText: 'Battery Monitor',
                                                                    // type: 'eps-battery-monitoring' as ComponentType,
                                                                    content: (react_1.default.createElement(svg_1.Svg, null)),
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                },
                                            ],
                                        },
                                    ],
                                },
                            ],
                        },
                        // initialConfigurationPanel('dashboards'),
                        {
                            id: 'CONFIGURATION_PANEL',
                            tabs: [
                                {
                                    id: `change`,
                                    title: 'Change',
                                    // type: 'connection-confirugations' as ComponentType,
                                    content: (react_1.default.createElement("div", null,
                                        react_1.default.createElement("button", { onClick: () => setLayout(initialCommandsLayout) }, "Change layout"))),
                                },
                                {
                                    id: `dashboards-LOG`,
                                    title: 'Log',
                                    titleText: 'Log',
                                    // type: 'log' as ComponentType,
                                    content: react_1.default.createElement(svg_1.Svg, null),
                                },
                                {
                                    id: `dashboards-GS_CONFIG`,
                                    title: 'Connection Configurations',
                                    titleText: 'Connection Configurations',
                                    // type: 'connection-confirugations' as ComponentType,
                                    content: react_1.default.createElement(svg_1.Svg, null),
                                },
                            ],
                        },
                    ],
                },
            ],
        },
    };
    const initialCommandsLayout = {
        dockbox: {
            mode: 'vertical',
            children: [
                {
                    id: 'main-box',
                    mode: 'vertical',
                    children: [
                        {
                            mode: 'horizontal',
                            children: [
                                {
                                    id: 'main-panel',
                                    tabs: [],
                                },
                            ],
                        },
                        {
                            id: 'CONFIGURATION_PANEL',
                            tabs: [
                                {
                                    id: `change`,
                                    title: 'Change',
                                    content: (react_1.default.createElement("div", null,
                                        react_1.default.createElement("button", { onClick: () => setLayout(epsDashboard) }, "Change layout"))),
                                },
                                {
                                    id: `dashboards-LOG`,
                                    title: 'Log',
                                    content: react_1.default.createElement(svg_1.Svg, null),
                                },
                                {
                                    id: `dashboards-GS_CONFIG`,
                                    title: 'Connection Configurations',
                                    content: react_1.default.createElement(svg_1.Svg, null),
                                },
                            ],
                        },
                    ],
                },
            ],
        },
    };
    const [layout, setLayout] = react_1.useState(initialCommandsLayout);
    react_1.useEffect(() => {
        // console.log(refDockLayout.current);
    }, [layout]);
    const loadTab = (savedTab) => {
        return {
            id: savedTab.id,
            title: savedTab.title,
            content: savedTab.content,
        };
    };
    const onLayoutChange = (newLayout) => {
        console.log(newLayout);
        setLayout(newLayout);
    };
    const afterPanelLoaded = (_savedPanel, loadedPanel) => {
        if (loadedPanel.id === 'main-panel') {
            loadedPanel.panelLock = {};
        }
    };
    return (react_1.default.createElement(lib_1.default, { ref: refDockLayout, layout: layout, dropMode: "edge", style: {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
        }, loadTab: loadTab, 
        // saveTab={saveTab}
        onLayoutChange: onLayoutChange, afterPanelLoaded: afterPanelLoaded }));
};
react_dom_1.default.render(react_1.default.createElement(NewFasterLayout, null), document.getElementById('app'));
