{"ast":null,"code":"export class GraphElementStatee{constructor(){this.classes=void 0;}/*\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n        this.preRenderFunc = preRenderFunc;\r\n        this.evalContext = evalContext;\r\n        this.template = templatefunc;\r\n    }\r\n    preRenderFunc?: string;\r\n    evalContext: Json;\r\n    template: () => ReactNode;* /\r\n    nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n        this.nodeid = nodeid;\r\n    }*/ // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\n}export class GraphElementReduxStateProps{// userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\n// all applicable views\n// graphID!: string;\n// dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\n// model?: LModel;\n// [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\n//preRenderFunc?: string;\n// evalContext!: Json; moved to transient properties\n//template!: string;\n// usageDeclarations!: DefaultUsageDeclarations;\n// invalidUsageDeclarations?: Error; // moved in stateProps.usageDeclarations.__invalidUsageDeclarations\n// graph!: LGraph;\n// lastSelected!: LModelElement | null;\n// vertex only\nstatic new(){let e=new GraphElementReduxStateProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){this.view=void 0;this.views=void 0;this.node=void 0;this.data=void 0;this.__skipRender=void 0;this.isEdgePending=void 0;this.nodeid=void 0;this.dataid=void 0;this.viewid=void 0;this.viewsid=void 0;this.parentviewid=void 0;}}export class GraphElementDispatchProps{}// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\nexport class BasicReactOwnProps{// orArr<JSX.Element | PrimitiveType>;\n// my add as a fault-tolerant fix for users not used to jsx\nstatic new(){let e=new BasicReactOwnProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){this.children=void 0;this.style=void 0;this.class=void 0;this.className=void 0;this.key=void 0;}}export class GraphElementOwnProps extends BasicReactOwnProps{// return false to prevent deletion\n// Injected\n// Injected\n// injected\n// injected\n// injected\n// obsolete use css // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\nstatic new(){let e=new GraphElementOwnProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){super();this.data=void 0;this.view=void 0;this.views=void 0;this.isGraph=void 0;this.isGraphVertex=void 0;this.isVertex=void 0;this.isEdgePoint=void 0;this.isEdge=void 0;this.isVoid=void 0;this.isField=true;this.onDelete=void 0;this.initialSize=void 0;this.parentnodeid=void 0;this.nodeid=void 0;this.graphid=void 0;this.parentViewId=void 0;this.htmlindex=void 0;this.childStyle=void 0;}}export class EdgeOwnProps extends GraphElementOwnProps{// if missing it is deduced from isReference.\n// package dep\nstatic new(){let e=new EdgeOwnProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){super();this.onclick=void 0;this.onmousedown=void 0;this.start=void 0;this.end=void 0;this.label=void 0;this.labels=void 0;this.anchorStart=void 0;this.anchorEnd=void 0;this.isField=false;this.isEdge=true;this.isReference=void 0;this.isValue=void 0;this.isExtend=void 0;this.isDepencency=void 0;}}export class EdgeStateProps extends GraphElementReduxStateProps{// just alias for node\n//lastSelected!: LModelElement | null;\n// in case start or end are undefined -> do not render the edge\nstatic new(){let e=new EdgeStateProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){super();this.node=void 0;this.edge=void 0;this.isEdgePending=void 0;this.viewpoint=void 0;this.start=void 0;this.end=void 0;this.__skipRender=void 0;}// key: string;\n}// @RuntimeAccessible\nexport class DefaultUsageDeclarations{// all can be deleted in usageDeclaration function except view.\nconstructor(ret,ownProps){this.view=void 0;this.node=void 0;this.data=void 0;}/*this.data = ret.data;\r\n        this.view = ret.view;\r\n        this.node = ret.node;/*/}// @RuntimeAccessible\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations{constructor(){super(...arguments);this.start=void 0;this.end=void 0;}}export class VertexOwnProps extends GraphElementOwnProps{// onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n// onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n// for <decoratedStar /> (defaults true)\n// for <Polygon />, <Star /> and <Cross />\n// for <Star /> and <Cross />\n// for <Trapezoid />\n// initial vertex rotation\nstatic new(){let e=new VertexOwnProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){super();this.isField=false;this.isVertex=true;this.decorated=void 0;this.sides=void 0;this.innerRadius=void 0;this.ratio=void 0;this.rotate=void 0;}}export class VertexStateProps extends GraphElementReduxStateProps{// lastSelected!: LModelElement | null;\n// selected!: Dictionary<Pointer<DUser>, LModelElement|null>;\n//selected!: LGraphElement|null;\nstatic new(){let e=new VertexStateProps();for(let k in e)if(e[k]===undefined)delete e[k];return e;}constructor(){super();this.node=void 0;this.isEdgePending=void 0;this.viewpoint=void 0;}}export let contextFixedKeys={};setContextFixedKeys();function setContextFixedKeys(){// @ts-ignore: here i must use the constructor instead of new to have the undefined properties included.\nlet propmakers=[new EdgeOwnProps(),new EdgeStateProps(),new VertexOwnProps(),new VertexStateProps(),{// \"model\", \"graph\",\n\"constants\":true,\"usageDeclarations\":true,\"component\":true,\"htmlindex\":true,\"state\":true,\"props\":true,\"stateProps\":true,\"ownProps\":true,\"otherViews\":true,'decorators':true// only on final jsx, decorators are injected\n//\"data\":true, \"node\":true, \"parentViewId\":true, \"parentnodeid\":true,// from props:\n//\"view\":true, \"views\":true, \"viewScores\":true,// from props:\n//\"children\":true, \"isGraph\":true, \"isVertex\":true, isEdge:true, isEdgePoint:true, isVoid: true, \"graphid\":true, \"nodeid\":true,// from props:\n}];for(let props of propmakers)for(let k in props)contextFixedKeys[k]=true;delete contextFixedKeys.class;return contextFixedKeys;}","map":{"version":3,"names":["GraphElementStatee","constructor","classes","GraphElementReduxStateProps","new","e","k","undefined","view","views","node","data","__skipRender","isEdgePending","nodeid","dataid","viewid","viewsid","parentviewid","GraphElementDispatchProps","BasicReactOwnProps","children","style","class","className","key","GraphElementOwnProps","isGraph","isGraphVertex","isVertex","isEdgePoint","isEdge","isVoid","isField","onDelete","initialSize","parentnodeid","graphid","parentViewId","htmlindex","childStyle","EdgeOwnProps","onclick","onmousedown","start","end","label","labels","anchorStart","anchorEnd","isReference","isValue","isExtend","isDepencency","EdgeStateProps","edge","viewpoint","DefaultUsageDeclarations","ret","ownProps","EdgeDefaultUsageDeclarations","arguments","VertexOwnProps","decorated","sides","innerRadius","ratio","rotate","VertexStateProps","contextFixedKeys","setContextFixedKeys","propmakers","props"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/graphElement/sharedTypes/sharedTypes.tsx"],"sourcesContent":["import React, {CSSProperties, PureComponent, ReactNode} from \"react\";\r\nimport type {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DModelElement,\r\n    DViewElement,\r\n    Json,\r\n    LGraph,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LViewElement,\r\n    Pointer, PrimitiveType\r\n} from \"../../../joiner\";\r\nimport {Dictionary, LClass, LEdge, LUser, LViewPoint, LVoidVertex, RuntimeAccessible} from \"../../../joiner\";\r\nimport {GObject, InitialVertexSize, orArr} from \"../../../joiner/types\";\r\n\r\nexport class GraphElementStatee {/*\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n        this.preRenderFunc = preRenderFunc;\r\n        this.evalContext = evalContext;\r\n        this.template = templatefunc;\r\n    }\r\n    preRenderFunc?: string;\r\n    evalContext: Json;\r\n    template: () => ReactNode;* /\r\n    nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n        this.nodeid = nodeid;\r\n    }*/\r\n    // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\r\n    classes!: string[];\r\n}\r\n\r\n\r\nexport class GraphElementReduxStateProps {\r\n    // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\r\n    view!: LViewElement;\r\n    views!: LViewElement[]; // all applicable views\r\n    // graphID!: string;\r\n    // dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    // model?: LModel;\r\n    // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\r\n    //preRenderFunc?: string;\r\n    // evalContext!: Json; moved to transient properties\r\n    //template!: string;\r\n    node!: LGraphElement;\r\n    data?: LModelElement;\r\n    __skipRender?: boolean;\r\n    // usageDeclarations!: DefaultUsageDeclarations;\r\n    // invalidUsageDeclarations?: Error; // moved in stateProps.usageDeclarations.__invalidUsageDeclarations\r\n    // graph!: LGraph;\r\n\r\n    // lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };// vertex only\r\n    nodeid!: Pointer<DGraphElement>;\r\n    dataid?: Pointer<DModelElement>;\r\n    viewid!: Pointer<DViewElement>;\r\n    viewsid!: Pointer<DViewElement>[];\r\n    parentviewid?:Pointer<DViewElement>;\r\n\r\n    static new(): GObject<GraphElementReduxStateProps>{\r\n        let e: GObject<GraphElementReduxStateProps> = new GraphElementReduxStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){  }\r\n}\r\n\r\nexport class GraphElementDispatchProps {\r\n}\r\n\r\n// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\r\nexport class BasicReactOwnProps {\r\n    children?: ReactNode; // orArr<JSX.Element | PrimitiveType>;\r\n    style?: CSSProperties;\r\n    class?: string | string[]; // my add as a fault-tolerant fix for users not used to jsx\r\n    className?: string | string[];\r\n    key?: string;\r\n\r\n    static new(): GObject<BasicReactOwnProps>{\r\n        let e: GObject<BasicReactOwnProps> = new BasicReactOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ }\r\n}\r\n\r\nexport class GraphElementOwnProps extends BasicReactOwnProps {\r\n    data?: Pointer<DModelElement, 0, 1, LModelElement> | LModelElement;\r\n    view?: Pointer<DViewElement, 1, 1, LViewElement> | LViewElement;\r\n    views?: LViewElement[] | Pointer<DViewElement>[];\r\n    isGraph?: boolean;\r\n    isGraphVertex?: boolean;\r\n    isVertex?: boolean;\r\n    isEdgePoint?: boolean;\r\n    isEdge?: boolean;\r\n    isVoid?: boolean;\r\n    isField?: boolean = true;\r\n    onDelete?: (node: LGraphElement)=>boolean; // return false to prevent deletion\r\n\r\n    initialSize?: InitialVertexSize;\r\n\r\n    parentnodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    nodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    graphid?: Pointer<DGraph, 1, 1, LGraph>; // injected\r\n    parentViewId?: Pointer<DViewElement, 1, 1, LViewElement>; // injected\r\n    htmlindex?: number; // injected\r\n    childStyle?: CSSProperties; // obsolete use css // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\r\n\r\n    static new(): GObject<GraphElementOwnProps>{\r\n        let e: GObject<GraphElementOwnProps> = new GraphElementOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class EdgeOwnProps extends GraphElementOwnProps {\r\n    onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    start!: LGraphElement[\"id\"];\r\n    end!: LGraphElement[\"id\"];\r\n    label?: DEdge[\"longestLabel\"];\r\n    labels?: DEdge[\"labels\"];\r\n    anchorStart?: string;\r\n    anchorEnd?: string;\r\n    isField?: boolean = false;\r\n    isEdge?: boolean = true;\r\n    isReference?: boolean;\r\n    isValue?: boolean; // if missing it is deduced from isReference.\r\n    isExtend?: boolean;\r\n    isDepencency?: boolean; // package dep\r\n\r\n    static new(): GObject<EdgeOwnProps>{\r\n        let e: GObject<EdgeOwnProps> = new EdgeOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class EdgeStateProps extends GraphElementReduxStateProps {\r\n    node!: LEdge;\r\n    edge!: LEdge; // just alias for node\r\n    //lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    __skipRender?: boolean; // in case start or end are undefined -> do not render the edge\r\n    static new(): GObject<EdgeStateProps>{\r\n        let e: GObject<EdgeStateProps> = new EdgeStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n    // key: string;\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class DefaultUsageDeclarations{\r\n    // all can be deleted in usageDeclaration function except view.\r\n    view?: GraphElementReduxStateProps[\"view\"];\r\n    node?: GraphElementReduxStateProps[\"node\"];\r\n    data: GraphElementOwnProps[\"data\"];\r\n    [key:string]: any;\r\n    constructor(ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        /*this.data = ret.data;\r\n        this.view = ret.view;\r\n        this.node = ret.node;/*/\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations{\r\n    start!: EdgeOwnProps[\"start\"];\r\n    end!: EdgeOwnProps[\"end\"];\r\n}\r\n\r\n\r\n\r\nexport class VertexOwnProps extends GraphElementOwnProps {\r\n    // onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    // onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    isField?: boolean = false;\r\n    isVertex?: boolean = true;\r\n\r\n    decorated?: boolean; // for <decoratedStar /> (defaults true)\r\n    sides?: number // for <Polygon />, <Star /> and <Cross />\r\n    innerRadius?: number // for <Star /> and <Cross />\r\n    ratio?: number // for <Trapezoid />\r\n    rotate?: number // initial vertex rotation\r\n\r\n    static new(): GObject<VertexOwnProps>{\r\n        let e: GObject<VertexOwnProps> = new VertexOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class VertexStateProps extends GraphElementReduxStateProps {\r\n    node!: LVoidVertex;\r\n    // lastSelected!: LModelElement | null;\r\n    // selected!: Dictionary<Pointer<DUser>, LModelElement|null>;\r\n    //selected!: LGraphElement|null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n\r\n    static new(): GObject<VertexStateProps>{\r\n        let e: GObject<VertexStateProps> = new VertexStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\n\r\nexport let contextFixedKeys: Dictionary<string, boolean> = {};\r\nsetContextFixedKeys();\r\n\r\nfunction setContextFixedKeys(){\r\n    // @ts-ignore: here i must use the constructor instead of new to have the undefined properties included.\r\n    let propmakers: GObject[] = [new EdgeOwnProps(), new EdgeStateProps(), new VertexOwnProps(), new VertexStateProps(), {\r\n        // \"model\", \"graph\",\r\n        \"constants\": true, \"usageDeclarations\": true,\r\n        \"component\": true,\r\n        \"htmlindex\": true,\r\n        \"state\": true, \"props\": true, \"stateProps\": true, \"ownProps\": true,\r\n        \"otherViews\": true, 'decorators':true, // only on final jsx, decorators are injected\r\n        //\"data\":true, \"node\":true, \"parentViewId\":true, \"parentnodeid\":true,// from props:\r\n        //\"view\":true, \"views\":true, \"viewScores\":true,// from props:\r\n        //\"children\":true, \"isGraph\":true, \"isVertex\":true, isEdge:true, isEdgePoint:true, isVoid: true, \"graphid\":true, \"nodeid\":true,// from props:\r\n    }];\r\n    for (let props of propmakers) for (let k in props) contextFixedKeys[k] = true;\r\n    delete contextFixedKeys.class;\r\n    return contextFixedKeys;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}