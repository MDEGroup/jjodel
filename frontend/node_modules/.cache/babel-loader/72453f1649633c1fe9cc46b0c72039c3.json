{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import{connect}from\"react-redux\";import\"./toolbar.scss\";import{LGraphElement,LModel,SetFieldAction,DVoidEdge,DEdge,DEdgePoint,Constructors,Log,U,SetRootFieldAction}from\"../../joiner\";import ModellingIcon from\"../forEndUser/ModellingIcon\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";let ti=0;// tabindex counter\nfunction toolbarClick(item_dname,data,myDictValidator,node){switch(item_dname){case DVoidEdge.cname:case DEdge.cname:// no add edges through toolbar for now\nbreak;case DEdgePoint.cname:let ledge=node.edge;let dedge=ledge.__raw;let wedge=ledge;// if (!myDictValidator[item_dname]) return;\nlet longestSeg=undefined;// just because compiler does not know it is always found through the for loop\nlet longestIndex=0;let segms=ledge.segments.segments;// longestIndex = segms.length - 1;// i just put it at end because this edgepoint\nfor(;longestIndex<segms.length;longestIndex++)if(segms[longestIndex].isLongest){longestSeg=segms[longestIndex];break;}// let index = edge.segments.all.findIndex((s: EdgeSegment) => s.isLongest);\nlet newmp={...longestSeg.start.pt.add(longestSeg.end.pt,true).divide(2),w:15,h:15,index:longestIndex};// @ts-ignore\nnewmp.x-=newmp.w/2;newmp.y-=newmp.h/2;newmp.id=Constructors.makeID();let subelements=[...dedge.subElements];let prevNodeid=longestSeg.start.ge.id;let prevnodeindex=subelements.indexOf(prevNodeid);if(prevnodeindex===-1){if(prevNodeid===dedge.start)prevnodeindex=0;// first and last are not subelements\nelse if(prevNodeid===dedge.end)prevnodeindex=subelements.length;else Log.exDevv(\"edgepoint insert position not found\",{subelements,prevNodeid,longestSeg,dedge,ledge});}else prevnodeindex+=1;newmp.index=prevnodeindex;// delete (newmp as any).id;\nlet mp=[...dedge.midPoints];mp.splice(longestIndex,0,newmp);wedge.midPoints=mp;let olddebug=[...subelements];subelements.splice(prevnodeindex,0,newmp.id);console.log(\"injecting ep\",{prevnodeindex,newmp,prevNodeid,longestSeg,old:olddebug,new:subelements,ledge,dedge});break;default:if(!data||!myDictValidator)return;let item=item_dname.substring(1).toLowerCase();let d=data.addChild(item);try{let d2=d();if(myDictValidator[item_dname])select(d2);}catch(e){if(myDictValidator[item_dname])select(d);}break;}}let n_agonSides=10;//this shuld be in react.setState(), but the function handling it is outside a component, so i don't wanna rewrite it.\n// it should be fine, except for the input value being shared on different sidebar components, which might even be better.\nfunction getItems(data,myDictValidator,items,node){const reactNodes=[];// todo: does myDictValidator have any reason to exist? if something is invalid it should not make it on toolbar jsx generated list\nfor(let item_dname of items){if(item_dname[0]==\"_\"){var _data;item_dname=item_dname.substring(2);data=((_data=data)===null||_data===void 0?void 0:_data.father)||data;}let item=item_dname.substring(1).toLowerCase();reactNodes.push(/*#__PURE__*/_jsxs(\"div\",{className:'toolbar-item',tabIndex:ti,style:{cursor:\"pointer\"},onClick:()=>toolbarClick(item_dname,data,myDictValidator,node),children:[/*#__PURE__*/_jsx(ModellingIcon,{name:item}),/*#__PURE__*/_jsx(\"span\",{className:'ms-1 my-auto text-capitalize',children:item})]},item_dname));}return reactNodes;}function select(dl){let d=(dl===null||dl===void 0?void 0:dl.__raw)||dl;//console.log(\"selecting\", {d, dl, selector:\".Graph [data-dataid='\"+d?.id+\"']\", $ : $(\".Graph [data-dataid='\"+d?.id+\"']\")});\nif(d&&d.id)setTimeout(()=>$(\".Graph [data-dataid='\"+(d===null||d===void 0?void 0:d.id)+\"']\").trigger(\"click\"),10);return d;}function selectNode(d){if(d&&d.id)setTimeout(()=>$(\".Graph [data-nodeid='\"+(d===null||d===void 0?void 0:d.id)+\"']\").trigger(\"click\"),10);return d;}function useClickOutside(ref,onClickOutside){useEffect(()=>{function handleClickOutside(event){if(ref.current&&!ref.current.contains(event.target)){onClickOutside();}}// Bind\ndocument.addEventListener(\"mousedown\",handleClickOutside);return()=>{// dispose\ndocument.removeEventListener(\"mousedown\",handleClickOutside);};},[ref,onClickOutside]);}function ToolBarComponent(props,state){const node=props.node;let[pinned,setPinned]=useState(true);let[collapsed,setCollapsed]=useState(true);let[position,setPosition]=useState([20,50]);const menuRef=useRef();useClickOutside(menuRef,()=>{setCollapsed(true);});const minimize=ref=>{ref.current.style.opacity=0;// ref.current.style.visibility = 'hidden';\n// ref.current.style.display = 'none'; \nsetCollapsed(true);};const maximize=ref=>{ref.current.style.opacity=1;setCollapsed(false);};const htmlref=useRef(null);useEffect(()=>{if(!htmlref.current)return;let draggableOptions={cursor:'grabbing',axis:\"y\",opacity:0.0,distance:5,containment:'parent'// helper: 'clone'\n};$(htmlref.current).draggable(draggableOptions);},[htmlref.current]);if(!node)return null;const data=node.model?node.model:LModel.fromPointer(props.model);const isMetamodel=props.isMetamodel;const metamodel=props.metamodel;const downward={};const addChildren=items=>items?getItems(data,downward,[...new Set(items)],node):[];// downward[\"DModel\"] = [\"DPackage\"];\n// downward[\"DModel\"] = [\"DPackage\"];\ndownward[\"DPackage\"]=[\"DPackage\",\"DClass\",\"DEnumerator\"];downward[\"DClass\"]=[\"DAttribute\",\"DReference\",\"DOperation\"];downward[\"DEnumerator\"]=[\"DLiteral\"];downward[\"DOperation\"]=[\"DParameter\",\"DException\"];// nodes\ndownward[\"DEdge\"]=[\"DEdgePoint\"];downward[\"DVoidEdge\"]=[\"DEdgePoint\"];// for (let parentKey in downward) myDictValidator.set(parentKey, addChildren(\"package\"));\nlet upward={};for(let parentKey in downward){let vals=downward[parentKey];if(!vals)continue;for(let child of vals){if(!upward[child])upward[child]=[];upward[child].push(parentKey);upward[child].push(...(downward[parentKey]||[]));}}downward[\"DModel\"]=downward[\"DPackage\"];// exceptions:\nupward[\"DPackage\"]=[\"_pDPackage\"];//, \"DModel\"]; because from a package, i don't want to prompt the user to create a model in toolbar.\nupward[\"DEdgePoint\"]=[\"DEdgePoint\"];//, \"DEdge\", \"DVoidEdge\"]; because from a edgeNode, i don't want to prompt the user to create a edge in toolbar.\n// upward[\"DClass\"] = [\"_pDPackage\", \"DClass\", \"DEnumerator\"];\nlet content;// if (RuntimeAccessibleClass.extends(props.selected?.node?.className, DVoidEdge)) { }\nlet contentarr=[];if(isMetamodel){let siblings=data?addChildren(upward[data.className]):[];if(node)siblings.push(...addChildren(upward[node.className]));let subelements=data?addChildren(downward[data.className]):[];if(siblings.length>0){contentarr.push([/*#__PURE__*/_jsx(\"span\",{className:'toolbar-section-label',children:\"Structure\"}),/*#__PURE__*/_jsx(\"hr\",{className:'my-1'}),siblings]);}if(subelements.length>0){contentarr.push([/*#__PURE__*/_jsx(\"span\",{className:'toolbar-section-label',children:\"Features\"}),/*#__PURE__*/_jsx(\"hr\",{className:'my-1'}),subelements]);}}else{const classes=metamodel===null||metamodel===void 0?void 0:metamodel.classes;const model=LModel.fromPointer(props.model);const lobj=data.className===\"DObject\"?data:undefined;const lfeat=data.className===\"DValue\"?data:undefined;let subleveloptions=[];if(lobj&&(!lobj.instanceof||lobj.partial))subleveloptions.push(/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-item feature\",tabIndex:ti,onClick:()=>{lobj.addValue();},children:\"+Feature\"},\"Feature\"));if(lfeat&&lfeat.values.length<lfeat.upperBound)subleveloptions.push(/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar-item value\",tabIndex:ti,onClick:()=>{SetFieldAction.new(lfeat.id,'value',undefined,'+=',false);},children:[/*#__PURE__*/_jsx(ModellingIcon,{name:'value'}),/*#__PURE__*/_jsx(\"span\",{className:'ms-1 my-auto text-capitalize',children:\"value\"})]},\"Value\"));if(node)subleveloptions.push(...addChildren(downward[node.className]));let rootobjs=(classes===null||classes===void 0?void 0:classes.filter(lClass=>lClass.rootable).map((lClass,index)=>{let dclass=lClass.__raw;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{onMouseEnter:e=>SetRootFieldAction.new('tooltip',lClass.annotations.map(a=>a.source).join(' ')),onMouseLeave:e=>SetRootFieldAction.new('tooltip',''),className:\"toolbar-item LObject\",tabIndex:ti,onClick:()=>select(model.addObject({},lClass)),children:[dclass._state.icon?/*#__PURE__*/_jsx(ModellingIcon,{src:dclass._state.icon}):/*#__PURE__*/_jsx(ModellingIcon,{name:'object'}),/*#__PURE__*/_jsx(\"span\",{className:'ms-1 my-auto text-capitalize',children:U.stringMiddleCut(dclass.name,14)})]},\"LObject_\"+dclass.id)});}))||[];rootobjs.push(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{className:'my-1 toolbar-hr'}),/*#__PURE__*/_jsxs(\"div\",{className:'toolbar-item',tabIndex:ti,onClick:()=>select(model.addObject({},null)),children:[/*#__PURE__*/_jsx(ModellingIcon,{name:'object'}),/*#__PURE__*/_jsx(\"span\",{className:'ms-1 my-auto text-capitalize',children:\"Object\"})]},\"RawObject\")]}));if(rootobjs.length>0){contentarr.push([/*#__PURE__*/_jsx(\"b\",{className:'toolbar-section-label',style:{marginRight:\"1.5em\"/*to avoid overlap with pin*/},children:\"Root level\"}),rootobjs]);}if(subleveloptions.length>0){contentarr.push([/*#__PURE__*/_jsx(\"b\",{className:'toolbar-section-label',children:\"Sublevel\"}),subleveloptions]);}}let shapes=node?addChildren(downward[node.className]):[];if(shapes.length>0){contentarr.push([/*#__PURE__*/_jsx(\"b\",{className:'toolbar-section-label',children:\"Shape\"}),shapes]);}let separator=/*#__PURE__*/_jsx(\"hr\",{className:'my-1'});// @ts-ignore\ncontent=contentarr.separator(separator);// .flat() as any;\n/* backup  */ /* return (\r\n        <div className=\"toolbar-draggable\"\r\n            ref={htmlref}\r\n            style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n            onClick={(e) => {\r\n                console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                    if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n                }, 1)\r\n            }}>\r\n            <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n                <i className={\"content pin bi bi-pin-angle\" + (pinned ? \"-fill\" : '')} onClick={() => setPinned(!pinned)} />\r\n                <div className={\"content inline w-100\"}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>);*/return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-draggable\",ref:htmlref,style:{border:'none',top:'35px',position:\"absolute\",backgroundColor:'red !important'}// refuses to focus without event...\n,onClick:e=>{console.log(\"click focus\",{htmlref});setTimeout(()=>{if(htmlref.current)htmlref.current.children[0].focus();},1);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar hoverable\"+(pinned?\" pinned\":''),tabIndex:0,children:[/*#__PURE__*/_jsx(\"i\",{style:{marginTop:'8px'},className:\"content pin bi bi-x-lg\",onClick:()=>minimize(htmlref)}),/*#__PURE__*/_jsx(\"div\",{className:\"content inline w-100\",children:content})]})}),collapsed?/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-collapsed\",onClick:()=>maximize(htmlref)}):/*#__PURE__*/_jsx(\"div\",{className:\"toolbar-collapsed\",onClick:()=>minimize(htmlref)})]});}//* 23/11 versione giordano\nfunction mapStateToProps(state,ownProps){var _state$_lastSelected;const ret={};const nodeid=(_state$_lastSelected=state._lastSelected)===null||_state$_lastSelected===void 0?void 0:_state$_lastSelected.node;if(nodeid)ret.node=LGraphElement.fromPointer(nodeid);else ret.node=null;if(ownProps.metamodelId){ret.metamodel=LModel.fromPointer(ownProps.metamodelId);}return ret;}/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: LPointerTargetable.from(ret.selectedid.node, state) as LGraphElement,\r\n        view: LPointerTargetable.from(ret.selectedid.view, state) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? LPointerTargetable.from(ret.selectedid.modelElement, state) : undefined\r\n    };\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}*/function mapDispatchToProps(dispatch){const ret={};return ret;}export const ToolBarConnected=connect(mapStateToProps,mapDispatchToProps)(ToolBarComponent);export const ToolBar=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(ToolBarConnected,{...props,children});};export default ToolBar;","map":{"version":3,"names":["React","useEffect","useRef","useState","connect","LGraphElement","LModel","SetFieldAction","DVoidEdge","DEdge","DEdgePoint","Constructors","Log","U","SetRootFieldAction","ModellingIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ti","toolbarClick","item_dname","data","myDictValidator","node","cname","ledge","edge","dedge","__raw","wedge","longestSeg","undefined","longestIndex","segms","segments","length","isLongest","newmp","start","pt","add","end","divide","w","h","index","x","y","id","makeID","subelements","subElements","prevNodeid","ge","prevnodeindex","indexOf","exDevv","mp","midPoints","splice","olddebug","console","log","old","new","item","substring","toLowerCase","d","addChild","d2","select","e","n_agonSides","getItems","items","reactNodes","_data","father","push","className","tabIndex","style","cursor","onClick","children","name","dl","setTimeout","$","trigger","selectNode","useClickOutside","ref","onClickOutside","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ToolBarComponent","props","state","pinned","setPinned","collapsed","setCollapsed","position","setPosition","menuRef","minimize","opacity","maximize","htmlref","draggableOptions","axis","distance","containment","draggable","model","fromPointer","isMetamodel","metamodel","downward","addChildren","Set","upward","parentKey","vals","child","content","contentarr","siblings","classes","lobj","lfeat","subleveloptions","instanceof","partial","addValue","values","upperBound","rootobjs","filter","lClass","rootable","map","dclass","onMouseEnter","annotations","a","source","join","onMouseLeave","addObject","_state","icon","src","stringMiddleCut","marginRight","shapes","separator","border","top","backgroundColor","focus","marginTop","mapStateToProps","ownProps","_state$_lastSelected","ret","nodeid","_lastSelected","metamodelId","mapDispatchToProps","dispatch","ToolBarConnected","ToolBar","arguments"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/toolbar/ToolBar.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode, useEffect, useRef, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./toolbar.scss\";\r\nimport {\r\n    DState,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DNamedElement,\r\n    DObject,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DViewElement,\r\n    LGraphElement,\r\n    LModel,\r\n    LModelElement,\r\n    LObject,\r\n    LValue,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Pointer,\r\n    SetFieldAction,\r\n    RuntimeAccessibleClass,\r\n    DVoidEdge,\r\n    DEdge,\r\n    DEdgePoint,\r\n    EdgeSegment,\r\n    LVoidEdge,\r\n    Constructors,\r\n    WVoidEdge,\r\n    Log,\r\n    LEdgePoint, DUser,\r\n    U, LPointerTargetable, SetRootFieldAction, GObject, EMeasurableEvents, TRANSACTION\r\n} from \"../../joiner\";\r\n\r\nimport {InitialVertexSizeObj} from \"../../joiner/types\";\r\nimport ModellingIcon from \"../forEndUser/ModellingIcon\";\r\n\r\ninterface ThisState {}\r\n\r\nlet ti = 0; // tabindex counter\r\n\r\nfunction toolbarClick(item_dname: string, data: LModelElement|undefined, myDictValidator: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]>, node?:LGraphElement) {\r\n    switch(item_dname){\r\n        case DVoidEdge.cname:\r\n        case DEdge.cname:\r\n            // no add edges through toolbar for now\r\n            break;\r\n        case DEdgePoint.cname:\r\n            let ledge: LVoidEdge = (node as LEdgePoint | LVoidEdge).edge;\r\n            let dedge: DVoidEdge = ledge.__raw;\r\n            let wedge: WVoidEdge = ledge as any;\r\n            // if (!myDictValidator[item_dname]) return;\r\n            let longestSeg: EdgeSegment = undefined as any; // just because compiler does not know it is always found through the for loop\r\n            let longestIndex: number = 0;\r\n            let segms = ledge.segments.segments;\r\n            // longestIndex = segms.length - 1;// i just put it at end because this edgepoint\r\n            for (; longestIndex < segms.length; longestIndex++) if (segms[longestIndex].isLongest) { longestSeg = segms[longestIndex]; break;}\r\n            // let index = edge.segments.all.findIndex((s: EdgeSegment) => s.isLongest);\r\n            let newmp: InitialVertexSizeObj = {...(longestSeg.start.pt.add(longestSeg.end.pt, true).divide(2)), w: 15, h: 15, index:longestIndex};\r\n            // @ts-ignore\r\n            newmp.x -= newmp.w/2; newmp.y -= newmp.h/2;\r\n\r\n            newmp.id = Constructors.makeID();\r\n            let subelements = [...dedge.subElements];\r\n            let prevNodeid = longestSeg.start.ge.id;\r\n            let prevnodeindex = subelements.indexOf(prevNodeid);\r\n            if (prevnodeindex === -1) {\r\n                if (prevNodeid === dedge.start) prevnodeindex = 0; // first and last are not subelements\r\n                else if (prevNodeid === dedge.end) prevnodeindex = subelements.length;\r\n                else Log.exDevv(\"edgepoint insert position not found\", {subelements, prevNodeid, longestSeg, dedge, ledge});\r\n            } else prevnodeindex += 1;\r\n            newmp.index = prevnodeindex;\r\n            // delete (newmp as any).id;\r\n            let mp = [...dedge.midPoints];\r\n            mp.splice(longestIndex, 0, newmp);\r\n            wedge.midPoints = mp;\r\n            let olddebug = [...subelements];\r\n            subelements.splice(prevnodeindex, 0, newmp.id as string);\r\n            console.log(\"injecting ep\", {prevnodeindex, newmp, prevNodeid, longestSeg, old: olddebug, new: subelements, ledge, dedge});\r\n            break;\r\n        default:\r\n            if (!data || !myDictValidator) return;\r\n            let item = item_dname.substring(1).toLowerCase();\r\n            let d = data.addChild(item);\r\n            try {\r\n                let d2 = (d as any)();\r\n                if (myDictValidator[item_dname]) select(d2);\r\n            } catch(e) {\r\n                if (myDictValidator[item_dname]) select(d);\r\n            }\r\n            break;\r\n    }\r\n}\r\nlet n_agonSides = 10; //this shuld be in react.setState(), but the function handling it is outside a component, so i don't wanna rewrite it.\r\n// it should be fine, except for the input value being shared on different sidebar components, which might even be better.\r\nfunction getItems(data: LModelElement|undefined, myDictValidator: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]>, items: DocString<\"D-ClassNames\">[], node?:LGraphElement): ReactNode[] {\r\n    const reactNodes: ReactNode[] = [];\r\n    // todo: does myDictValidator have any reason to exist? if something is invalid it should not make it on toolbar jsx generated list\r\n    for (let item_dname of items) {\r\n        if (item_dname[0]==\"_\") {\r\n            item_dname = item_dname.substring(2);\r\n            data = data?.father || data;\r\n        }\r\n        let item = item_dname.substring(1).toLowerCase();\r\n        reactNodes.push(<div className={'toolbar-item'} tabIndex={ti} style={{cursor:\"pointer\"}} key={item_dname} onClick={()=>toolbarClick(item_dname, data, myDictValidator, node)}>\r\n            <ModellingIcon name={item} />\r\n            <span className={'ms-1 my-auto text-capitalize'}>{item}</span>\r\n            {/*\r\n            <i className=\"bi bi-arrow-right-short hoverable\">\r\n                <ul className={\"content\"}>\r\n                    <li className={\"hoverable\"}>\r\n                        <span className={'ms-1 my-auto text-capitalize'}>Polygon</span>\r\n                        <i className=\"bi bi-arrow-right-short hoverable\">\r\n                            <ul className={\"content\"}>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Triangle</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Pentagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Hexagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>Octagon</span>\r\n                                <span className={'ms-1 my-auto text-capitalize'}>\r\n                                    <input className={\"autosize-input\"} type={\"number\"} min={3} step={1}\r\n                                           value={n_agonSides} onClick{(evt) => { evt.stopPropagation()}}\r\n                                        onChange={(evt) => {\r\n                                            n_agonSides = +evt.target.value || 10;\r\n                                            if (n_agonSides<3) n_agonSides = 10;\r\n                                        }}\r\n                                    />-agon</span>\r\n                            </ul>\r\n                        </i>\r\n                    </li>\r\n                </ul>\r\n            </i>\r\n            <i className=\"bi bi-arrow-right-short hoverable\">\r\n                <ul className={\"content\"}>\r\n                    <li className={\"hoverable\"}>\r\n                        <span className={'ms-1 my-auto text-capitalize'}>Polygon</span>\r\n                    </li>\r\n                </ul>\r\n            </i>\r\n                */\r\n            }\r\n\r\n        </div>);\r\n    }\r\n    return reactNodes;\r\n}\r\nfunction select(dl: DModelElement | LModelElement): DModelElement {\r\n    let d: DModelElement = (dl as LModelElement)?.__raw || dl as DModelElement;\r\n    //console.log(\"selecting\", {d, dl, selector:\".Graph [data-dataid='\"+d?.id+\"']\", $ : $(\".Graph [data-dataid='\"+d?.id+\"']\")});\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-dataid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\n\r\nfunction selectNode(d: DGraphElement|{id: string}): any {\r\n    if (d && d.id) setTimeout(()=>$(\".Graph [data-nodeid='\"+d?.id+\"']\").trigger(\"click\"), 10);\r\n    return d; }\r\n\r\nfunction useClickOutside(ref: any, onClickOutside: any) {\r\n    useEffect(() => {\r\n        \r\n        function handleClickOutside(event: Event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                onClickOutside();\r\n            }\r\n        }\r\n\r\n        // Bind\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n        // dispose\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref, onClickOutside]);\r\n}\r\n\r\nfunction ToolBarComponent(props: AllProps, state: ThisState) {\r\n    \r\n    const node = props.node;\r\n    let [pinned, setPinned] = useState(true);\r\n    let [collapsed, setCollapsed] = useState(true);\r\n    let [position, setPosition] = useState([20,50]); \r\n\r\n    const menuRef = useRef();\r\n\r\n    useClickOutside(menuRef, () => {\r\n        setCollapsed(true);\r\n    });\r\n\r\n    const minimize = (ref: any) => {\r\n        ref.current.style.opacity = 0;\r\n\r\n        // ref.current.style.visibility = 'hidden';\r\n        // ref.current.style.display = 'none'; \r\n        setCollapsed(true);\r\n    }\r\n    const maximize = (ref: any) => {\r\n        ref.current.style.opacity = 1;\r\n        setCollapsed(false);\r\n    }\r\n\r\n    const htmlref: React.MutableRefObject<null | HTMLDivElement>= useRef(null);\r\n    useEffect(() => {\r\n        if (!htmlref.current) return;\r\n        let draggableOptions = {\r\n            cursor: 'grabbing',\r\n            axis: \"y\",\r\n            opacity: 0.0,\r\n            distance: 5,\r\n            containment: 'parent',\r\n            // helper: 'clone'\r\n        };\r\n        ($(htmlref.current) as GObject<'JQuery + ui plugin'>).draggable(draggableOptions);\r\n    }, [htmlref.current]);\r\n\r\n    if (!node) return null;\r\n    const data: LModelElement|LModel = (node.model) ? node.model : LModel.fromPointer(props.model);\r\n\r\n    const isMetamodel: boolean = props.isMetamodel;\r\n    const metamodel: LModel|undefined = props.metamodel;\r\n    const downward: Dictionary<DocString<\"DClassName\">, DocString<\"hisChildren\">[]> = {}\r\n    const addChildren = (items: string[]) => items ? getItems(data, downward, [...new Set(items)], node) : [];\r\n\r\n    // downward[\"DModel\"] = [\"DPackage\"];\r\n    // downward[\"DModel\"] = [\"DPackage\"];\r\n\r\n    downward[\"DPackage\"] = [\"DPackage\", \"DClass\", \"DEnumerator\"];\r\n    downward[\"DClass\"] = [\"DAttribute\", \"DReference\", \"DOperation\"];\r\n    downward[\"DEnumerator\"] = [\"DLiteral\"];\r\n    downward[\"DOperation\"] = [\"DParameter\", \"DException\"];\r\n\r\n\r\n    // nodes\r\n    downward[\"DEdge\"] = [\"DEdgePoint\"]\r\n    downward[\"DVoidEdge\"] = [\"DEdgePoint\"]\r\n\r\n    // for (let parentKey in downward) myDictValidator.set(parentKey, addChildren(\"package\"));\r\n\r\n    let upward: Dictionary<DocString<\"DClassName (model)\">, DocString<\"hisDParents\">[]> = {};\r\n    for (let parentKey in downward){\r\n        let vals = downward[parentKey];\r\n        if(!vals) continue;\r\n        for (let child of vals) {\r\n            if (!upward[child]) upward[child] = [];\r\n            upward[child].push(parentKey)\r\n            upward[child].push(...(downward[parentKey]||[]));\r\n        }\r\n    }\r\n    downward[\"DModel\"] = downward[\"DPackage\"];\r\n\r\n    // exceptions:\r\n    upward[\"DPackage\"] = [\"_pDPackage\"]; //, \"DModel\"]; because from a package, i don't want to prompt the user to create a model in toolbar.\r\n    upward[\"DEdgePoint\"] = [\"DEdgePoint\"]; //, \"DEdge\", \"DVoidEdge\"]; because from a edgeNode, i don't want to prompt the user to create a edge in toolbar.\r\n    // upward[\"DClass\"] = [\"_pDPackage\", \"DClass\", \"DEnumerator\"];\r\n\r\n    let content: ReactNode;\r\n    // if (RuntimeAccessibleClass.extends(props.selected?.node?.className, DVoidEdge)) { }\r\n    let contentarr: ReactNode[][] = [];\r\n    if (isMetamodel) {\r\n        let siblings = data ? addChildren(upward[data.className]) : [];\r\n        if (node) siblings.push(...addChildren(upward[node.className]));\r\n        let subelements = data ? addChildren(downward[data.className]) : [];\r\n\r\n\r\n        if (siblings.length > 0)    { contentarr.push([<span className={'toolbar-section-label'}>Structure</span>, <hr className={'my-1'} />, siblings]); }\r\n        if (subelements.length > 0) { contentarr.push([<span className={'toolbar-section-label'}>Features</span>, <hr className={'my-1'} />, subelements]); }\r\n\r\n    }\r\n    else {\r\n        const classes = metamodel?.classes;\r\n        const model: LModel = LModel.fromPointer(props.model);\r\n        const lobj: LObject | undefined = data.className === \"DObject\" ? data as LObject : undefined;\r\n        const lfeat: LValue | undefined = data.className === \"DValue\" ? data as LValue : undefined;\r\n\r\n        let subleveloptions = [];\r\n        if (lobj && (!lobj.instanceof || lobj.partial)) subleveloptions.push(\r\n            <div key={\"Feature\"} className={\"toolbar-item feature\"} tabIndex={ti} onClick={() => { lobj.addValue(); }}>+Feature</div>\r\n        );\r\n        if (lfeat && lfeat.values.length < lfeat.upperBound) subleveloptions.push(\r\n            <div key={\"Value\"} className={\"toolbar-item value\"} tabIndex={ti} onClick={() => {SetFieldAction.new(lfeat.id, 'value' as any, undefined, '+=', false); }}>\r\n                <ModellingIcon name={'value'} />\r\n                <span className={'ms-1 my-auto text-capitalize'}>value</span>\r\n            </div>\r\n        );\r\n        if (node) subleveloptions.push(...addChildren(downward[node.className]));\r\n        let rootobjs = classes?.filter((lClass) => lClass.rootable).map((lClass, index) => {\r\n            let dclass = lClass.__raw;\r\n            return <><div\r\n                onMouseEnter={e => SetRootFieldAction.new('tooltip', lClass.annotations.map(a => a.source).join(' '))}\r\n                onMouseLeave={e => SetRootFieldAction.new('tooltip', '')}\r\n                key={\"LObject_\"+dclass.id} className={\"toolbar-item LObject\"} tabIndex={ti} onClick={()=>select(model.addObject({}, lClass)) }>\r\n                {dclass._state.icon ? <ModellingIcon src={dclass._state.icon}/> : <ModellingIcon name={'object'} />}\r\n                <span className={'ms-1 my-auto text-capitalize'}>{U.stringMiddleCut(dclass.name, 14)}</span>\r\n            </div></>\r\n        }) || [];\r\n\r\n        rootobjs.push(<><hr className={'my-1 toolbar-hr'}/><div key={\"RawObject\"} className={'toolbar-item'} tabIndex={ti} onClick={()=>select(model.addObject({}, null))}>\r\n            \r\n            <ModellingIcon name={'object'} />\r\n            \r\n            <span className={'ms-1 my-auto text-capitalize'}>Object</span>\r\n        </div></>);\r\n\r\n\r\n        if (rootobjs.length > 0) {\r\n            contentarr.push([<b className={'toolbar-section-label'} style={{marginRight:\"1.5em\"/*to avoid overlap with pin*/}}>Root level</b>, rootobjs]);\r\n        }\r\n        if (subleveloptions.length > 0) {\r\n            contentarr.push([<b className={'toolbar-section-label'}>Sublevel</b>, subleveloptions]);\r\n        }\r\n    }\r\n\r\n\r\n    let shapes = node ? addChildren(downward[node.className]) : [];\r\n    if (shapes.length > 0) {\r\n        contentarr.push([<b className={'toolbar-section-label'}>Shape</b>, shapes]);\r\n    }\r\n\r\n    let separator = <hr className={'my-1'} /> as any;\r\n    // @ts-ignore\r\n    content = contentarr.separator(separator);// .flat() as any;\r\n\r\n\r\n    /* backup  */\r\n\r\n    /* return (\r\n        <div className=\"toolbar-draggable\"\r\n            ref={htmlref}\r\n            style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n            onClick={(e) => {\r\n                console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                    if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n                }, 1)\r\n            }}>\r\n            <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n                <i className={\"content pin bi bi-pin-angle\" + (pinned ? \"-fill\" : '')} onClick={() => setPinned(!pinned)} />\r\n                <div className={\"content inline w-100\"}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>);*/ \r\n\r\n    return (<>\r\n    \r\n        <div className=\"toolbar-draggable\"\r\n            ref={htmlref}\r\n            style={{ border: 'none', top: '35px', position: \"absolute\", backgroundColor: 'red !important' }} // refuses to focus without event...\r\n            onClick={(e) => {\r\n                console.log(\"click focus\", { htmlref }); setTimeout(() => {\r\n                    if (htmlref.current) (htmlref.current as any).children[0].focus();\r\n                }, 1)\r\n            }}>\r\n            <div className={\"toolbar hoverable\" + (pinned ? \" pinned\" : '')} tabIndex={0}>\r\n                <i style={{marginTop: '8px'}} className={\"content pin bi bi-x-lg\"} onClick={() => minimize(htmlref)} />\r\n                <div className={\"content inline w-100\"}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        {collapsed ? \r\n            <div className=\"toolbar-collapsed\" onClick={() => maximize(htmlref)}></div>\r\n            :\r\n            <div className=\"toolbar-collapsed\" onClick={() => minimize(htmlref)}></div>\r\n        }\r\n    </>);\r\n}\r\n\r\ninterface OwnProps {\r\n    model: Pointer<DModel, 1, 1, LModel>;\r\n    isMetamodel: boolean;\r\n    metamodelId?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n}\r\n\r\ninterface StateProps {\r\n    node: LGraphElement|null;\r\n    metamodel?: LModel;\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n//* 23/11 versione giordano\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const nodeid = state._lastSelected?.node;\r\n    if (nodeid) ret.node = LGraphElement.fromPointer(nodeid);\r\n    else ret.node = null;\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    ret.selectedid = state._lastSelected;\r\n    ret.selected = ret.selectedid && {\r\n        node: LPointerTargetable.from(ret.selectedid.node, state) as LGraphElement,\r\n        view: LPointerTargetable.from(ret.selectedid.view, state) as LViewElement,\r\n        modelElement: ret.selectedid.modelElement ? LPointerTargetable.from(ret.selectedid.modelElement, state) : undefined\r\n    };\r\n    if (ownProps.metamodelId) { ret.metamodel = LModel.fromPointer(ownProps.metamodelId); }\r\n    return ret;\r\n}*/\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const ToolBarConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ToolBarComponent);\r\n\r\nexport const ToolBar = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ToolBarConnected {...{...props, children}} />;\r\n}\r\nexport default ToolBar;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}