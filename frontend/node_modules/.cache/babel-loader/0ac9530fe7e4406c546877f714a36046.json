{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\defaultNode\\\\DefaultNode.tsx\",\n  _dec,\n  _class,\n  _this = this;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DV, GraphElementComponent, GraphElementDispatchProps, GraphElementOwnProps, GraphElementReduxStateProps, GraphElementStatee, Log, RuntimeAccessibleClass, SetRootFieldAction, windoww, Field, Graph, GraphVertex, Vertex, VoidVertex, RuntimeAccessible } from \"../../joiner\";\nimport { GraphElements } from \"../../joiner/components\";\n// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst superclass = RuntimeAccessibleClass.classes.GraphElementComponent;\n\n// private\nclass DefaultNodeStatee extends GraphElementStatee {}\n\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\n\n// Giordano: add ignore for webpack\nexport let DefaultNodeComponent = (_dec = RuntimeAccessible('DefaultNodeComponent'), _dec(_class = class DefaultNodeComponent extends superclass {\n  static mapStateToProps(state, ownProps) {\n    let ret = {}; // NB: cannot use a constructor, must be pojo\n    GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\n    // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\n    try {\n      GraphElementComponent.mapViewStuff(state, ret, ownProps);\n      ret.skiparenderforloading = false;\n    } catch (e) {\n      ret.skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\n      /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/\n      Log.eDev(!ret.data, \"can't find model data:\", {\n        state,\n        ret,\n        ownpropsdata: ownProps.data,\n        ownProps\n      });\n      Log.eDevv(\"cannot map state to props:\", {\n        e,\n        state,\n        ret,\n        ownpropsdata: ownProps.data,\n        ownProps\n      });\n    }\n    return ret;\n  }\n  constructor(props, context) {\n    super(props, context);\n  }\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // i want to avoid double check on this and Vertex or graph.\n    // actually should not use this and avoid double mapstatetoprops execution too\n    return true;\n  }\n  render() {\n    var _this$props$data, _this$props$view, _this$props$views, _this$props$node;\n    if (this.props.skiparenderforloading) {\n      console.log(\"realoading render: \", {\n        thiss: this,\n        data: this.props.data\n      });\n      windoww.bugged = this;\n      console.log(\"realoading render: \", {\n        thiss: this,\n        data: this.props.data\n      });\n      SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 88\n      }, this);\n    }\n    const view = this.props.view;\n    const modelElement = this.props.data;\n    if (!view) {\n      Log.exx({\n        props: this.props,\n        thiss: this\n      });\n    }\n    // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\n\n    let componentMap = windoww.components;\n    let dmodelMap = RuntimeAccessibleClass.classes;\n    let serializableProps = {\n      ...this.props,\n      data: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.id,\n      view: (_this$props$view = this.props.view) === null || _this$props$view === void 0 ? void 0 : _this$props$view.id,\n      views: (_this$props$views = this.props.views) === null || _this$props$views === void 0 ? void 0 : _this$props$views.map(v => v.id)\n    };\n    // console.log('dnode render', {props: {...this.props}, serializableProps});\n    let componentfunction = null;\n    if (view.forceNodeType) {\n      componentfunction = GraphElements[view.forceNodeType];\n      Log.exDev(!componentfunction, 'unrecognized View.forceNodeType:' + view.forceNodeType, {\n        view,\n        modelElement,\n        nt: view.forceNodeType,\n        GraphElements\n      });\n      // console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\n      return componentfunction(serializableProps, this.props.children);\n    }\n    if (modelElement === null || modelElement === void 0 ? void 0 : modelElement.className) switch (modelElement.className) {\n      case \"DModel\":\n        componentfunction = Graph;\n        break;\n      case \"DPackage\":\n        componentfunction = GraphVertex;\n        break;\n      case \"DClassifier\":\n      case \"DEnumerator\":\n      case \"DObject\":\n      case \"DClass\":\n        componentfunction = Vertex;\n        break;\n      case \"DAnnotation\":\n      case \"DAttribute\":\n      case \"DOperation\":\n      case \"DParameter\":\n      case \"DReference\":\n      case \"DEnumLiteral\":\n      case \"DValue\":\n      case \"DModelElement\":\n        componentfunction = Field;\n        break;\n      default:\n        Log.exDevv('invalid model class, add a case in the switch', {\n          modelElement,\n          view,\n          dmodelMap,\n          componentMap\n        });\n      // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\n      // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\n      // return dmodel.defaultComponent(serializableProps, this.props.children);\n    } else componentfunction = VoidVertex; // model-less, VoidVertex\n\n    if (componentfunction) return componentfunction(serializableProps, this.props.children);\n    // errore: questoon passa gli id correttamente al sottoelemento vertex o field\n    return DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\", '', 'DefaultNode', modelElement === null || modelElement === void 0 ? void 0 : modelElement.__raw, (_this$props$node = this.props.node) === null || _this$props$node === void 0 ? void 0 : _this$props$node.__raw, view === null || view === void 0 ? void 0 : view.__raw);\n  }\n}) || _class);\n\n// private\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\nclass DefaultNodeReduxStateProps extends GraphElementReduxStateProps {}\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\nconst DefaultNodeConnected = connect(DefaultNodeComponent.mapStateToProps, DefaultNodeComponent.mapDispatchToProps)(DefaultNodeComponent);\n// export const Vertex = VertexConnected;\n\nexport const DefaultNode = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(DefaultNodeConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, _this);\n};\n_c = DefaultNode;\nDefaultNodeComponent.cname = \"DefaultNodeComponent\";\nDefaultNodeConnected.cname = \"DefaultNodeConnected\";\nDefaultNode.cname = \"DefaultNode\";\nvar _c;\n$RefreshReg$(_c, \"DefaultNode\");","map":{"version":3,"names":["React","connect","DV","GraphElementComponent","GraphElementDispatchProps","GraphElementOwnProps","GraphElementReduxStateProps","GraphElementStatee","Log","RuntimeAccessibleClass","SetRootFieldAction","windoww","Field","Graph","GraphVertex","Vertex","VoidVertex","RuntimeAccessible","GraphElements","jsxDEV","_jsxDEV","superclass","classes","DefaultNodeStatee","DefaultNodeComponent","_dec","_class","mapStateToProps","state","ownProps","ret","mapLModelStuff","mapViewStuff","skiparenderforloading","e","eDev","data","ownpropsdata","eDevv","constructor","props","context","shouldComponentUpdate","nextProps","nextState","nextContext","render","_this$props$data","_this$props$view","_this$props$views","_this$props$node","console","log","thiss","bugged","new","Date","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","view","modelElement","exx","componentMap","components","dmodelMap","serializableProps","id","views","map","v","componentfunction","forceNodeType","exDev","nt","className","exDevv","errorView","__raw","node","DefaultNodeOwnProps","DefaultNodeReduxStateProps","DefaultNodeDispatchProps","DefaultNodeConnected","mapDispatchToProps","DefaultNode","arguments","length","undefined","_this","_c","cname","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/defaultNode/DefaultNode.tsx"],"sourcesContent":["import React, {ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DClassifier,\r\n    DEnumerator,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DPackage, DV,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    DState,\r\n    LModelElement,\r\n    Log,\r\n    LViewElement,\r\n    RuntimeAccessibleClass, SetRootFieldAction,\r\n    windoww,\r\n    Field, Graph, GraphVertex, Vertex, VoidVertex, RuntimeAccessible,\r\n    Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle\r\n} from \"../../joiner\";\r\nimport { GraphElements } from \"../../joiner/components\";\r\n// import {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\r\n\r\nconst superclass: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\n\r\n// private\r\nclass DefaultNodeStatee extends GraphElementStatee { }\r\n\r\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\r\n\r\n\r\n// Giordano: add ignore for webpack\r\n@RuntimeAccessible('DefaultNodeComponent')\r\n//@ts-ignore\r\nexport class DefaultNodeComponent<AllProps extends AllPropss = AllPropss, NodeState = DefaultNodeStatee> extends superclass<AllProps, NodeState>{\r\n\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps): GraphElementReduxStateProps {\r\n        let ret: GraphElementReduxStateProps = {} as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\r\n        // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\r\n        try{\r\n            GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n            (ret as any).skiparenderforloading = false;\r\n        } catch(e) {\r\n            (ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\r\n            /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp*/\r\n            Log.eDev(!ret.data, \"can't find model data:\", {state, ret, ownpropsdata:ownProps.data, ownProps});\r\n            Log.eDevv(\"cannot map state to props:\", {e, state, ret, ownpropsdata:ownProps.data, ownProps});\r\n        }\r\n        return ret; }\r\n\r\n    constructor(props: AllProps, context: any) { super(props, context); }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<NodeState>, nextContext: any): boolean {\r\n        // i want to avoid double check on this and Vertex or graph.\r\n        // actually should not use this and avoid double mapstatetoprops execution too\r\n        return true;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        if ((this.props as any).skiparenderforloading) {\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            windoww.bugged = this;\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime()); return <div>loading...</div>;}\r\n        const view: LViewElement = this.props.view;\r\n        const modelElement: LModelElement | undefined = this.props.data;\r\n        if (!view) { Log.exx({props: this.props, thiss:this}); }\r\n        // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\r\n\r\n        let componentMap: Dictionary<string, (props: GObject, children?: (string | React.Component)[]) => ReactElement> = windoww.components;\r\n        let dmodelMap: Dictionary<string, typeof DModelElement> = RuntimeAccessibleClass.classes as any;\r\n\r\n        let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\r\n        // console.log('dnode render', {props: {...this.props}, serializableProps});\r\n        let componentfunction: typeof Graph = null as any;\r\n        if (view.forceNodeType) {\r\n            componentfunction = GraphElements[view.forceNodeType] as any;\r\n            Log.exDev(!componentfunction, 'unrecognized View.forceNodeType:' + view.forceNodeType, {view, modelElement, nt: view.forceNodeType, GraphElements, });\r\n            // console.log(\"force node type\", {requested:view.forceNodeType, G:  windoww.GraphComponent.name, GE: windoww.GraphElementComponent.name, GV: windoww.GraphVertexComponent.name, V: windoww.VertexComponent.name, F:windoww.FieldComponent.name})\r\n            return componentfunction(serializableProps, this.props.children); }\r\n\r\n        if (modelElement?.className) switch(modelElement.className) {\r\n            case \"DModel\": componentfunction = Graph; break;\r\n            case \"DPackage\": componentfunction = GraphVertex; break;\r\n            case \"DClassifier\":\r\n            case \"DEnumerator\":\r\n            case \"DObject\":\r\n            case \"DClass\": componentfunction = Vertex; break;\r\n            case \"DAnnotation\":\r\n            case \"DAttribute\":\r\n            case \"DOperation\":\r\n            case \"DParameter\":\r\n            case \"DReference\":\r\n            case \"DEnumLiteral\":\r\n            case \"DValue\":\r\n            case \"DModelElement\": componentfunction = Field; break;\r\n            default:\r\n                Log.exDevv('invalid model class, add a case in the switch', {modelElement, view, dmodelMap, componentMap});\r\n                // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\r\n                // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\r\n                // return dmodel.defaultComponent(serializableProps, this.props.children);\r\n        } else componentfunction = VoidVertex; // model-less, VoidVertex\r\n\r\n        if (componentfunction) return componentfunction(serializableProps, this.props.children);\r\n        // errore: questoon passa gli id correttamente al sottoelemento vertex o field\r\n        return DV.errorView(\"DefaultNode is missing both view and model, please state node type explicitly: Graph, GraphVertex, Vertex or Field\",\r\n            '', 'DefaultNode', modelElement?.__raw, this.props.node?.__raw, view?.__raw);\r\n    }\r\n\r\n}\r\n\r\n// private\r\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\r\nclass DefaultNodeReduxStateProps  extends GraphElementReduxStateProps {}\r\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\r\ntype AllPropss = DefaultNodeOwnProps & DefaultNodeReduxStateProps & DefaultNodeDispatchProps;\r\n\r\n\r\nconst DefaultNodeConnected = connect<DefaultNodeReduxStateProps, DefaultNodeDispatchProps, DefaultNodeOwnProps, DState>(\r\n    DefaultNodeComponent.mapStateToProps,\r\n    DefaultNodeComponent.mapDispatchToProps\r\n)(DefaultNodeComponent as any);\r\n// export const Vertex = VertexConnected;\r\n\r\n\r\nexport const DefaultNode = (props: DefaultNodeOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <DefaultNodeConnected {...{...props, children}} />; }\r\n\r\n\r\nDefaultNodeComponent.cname = \"DefaultNodeComponent\";\r\nDefaultNodeConnected.cname = \"DefaultNodeConnected\";\r\nDefaultNode.cname = \"DefaultNode\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}