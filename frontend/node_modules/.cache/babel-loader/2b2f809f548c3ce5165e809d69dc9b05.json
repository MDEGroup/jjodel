{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\jsxEditor\\\\JsxEditor.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\nimport { LViewElement, Defaults } from \"../../../joiner\";\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\n\n// import monacoTypes2 from '!raw-loader!../../../static/monacotypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JsxEditorComponent(props) {\n  _s();\n  const monaco = useMonaco();\n  const view = props.view;\n  const dview = view.__raw;\n  const readOnly = props.readonly !== undefined ? props.readonly : !props.debugmode && Defaults.check(dview.id);\n  const [jsx, setJsx] = useStateIfMounted(dview.jsxString || '');\n  const [show, setShow] = useStateIfMounted(true);\n  const [expand, setExpand] = useStateIfMounted(false);\n  const change = value => {\n    // save in local state for frequent changes.\n    if (value !== undefined) setJsx(value);\n  };\n  const blur = evt => {\n    // confirm in redux state for final state\n    view.jsxString = jsx;\n  };\n  useEffect(() => {\n    if (!monaco) return;\n    monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.Latest,\n      allowNonTsExtensions: true,\n      moduleResolution: monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n      module: monaco.languages.typescript.ModuleKind.CommonJS,\n      noEmit: true,\n      esModuleInterop: true,\n      jsx: monaco.languages.typescript.JsxEmit.React,\n      reactNamespace: \"React\",\n      allowJs: true,\n      typeRoots: [\"node_modules/@types\"] //, 'src/static/'], // doubt those can be accesed at runtime but trying\n    });\n    monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);\n    monaco.languages.typescript.typescriptDefaults.addExtraLib(\"declare var data: 'datatype';\");\n    /*\r\n    // doubt those files can be accesed at runtime but trying\r\n    monaco.languages.typescript.javascriptDefaults.addExtraLib('declare var data: LModelElement; declare var node: LGraphElement;', 'src/static/monacotypes.d.ts');\r\n      monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n        '<<react-definition-file>>',\r\n        `file:///node_modules/@react/types/index.d.ts`\r\n    );*/\n  }, [monaco]);\n\n  //const lines = (Math.round(dview.jsxString.split(/\\r|\\r\\n|\\n/).length*1.8) < 5 ? 5 : Math.round(dview.jsxString.split(/\\r|\\r\\n|\\n/).length*1.8));\n\n  let lines;\n  if (expand) {\n    lines = 1;\n    for (let i = 0; i < dview.jsxString.length; i++) if (dview.jsxString[i] === '\\n') lines++;\n    lines += 1; // \"margin\"\n  } else {\n    lines = 5;\n  }\n  if (lines < 5) lines = 5;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'cursor-pointer d-flex',\n      onClick: e => setShow(!show),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'my-auto',\n        tabIndex: -1,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: 'bi bi-chevron-' + (show ? 'down' : 'right')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'editor-label',\n        children: \"JSX Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'mt-1',\n      children: [jsx.match(/{\\s*\\(.+\\?.+\\:.+\\)\\s*}/gm) && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-warning',\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), \"Please remove the round parenthesis, concatenate it with an empty string as in { (a ? b : c) + '' } or replace the ternary operator as in (a && b || c).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 55\n      }, this), jsx.indexOf('<>') >= 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-warning',\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), \"JSX.Fragment \", '<>', \" is valid JSX but is not supported by our compiler. Please replace it with an array [] instead.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 42\n      }, this), jsx.indexOf('?.') >= 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-warning',\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), \"Optional chaining \", '.?', \" is valid JS but is not supported by our compiler. Please replace it with && instead. Eg: from (a?.b) to (a && a.b).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 42\n      }, this), jsx.indexOf('??') >= 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: 'text-warning',\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), \"Nullish coalescing \", '??', \" is valid JS but is not supported by our compiler. Please replace it with explicit null and undefined checks, or a ||.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, this), \"lines:\", lines, show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'monaco-editor-wrapper',\n      style: {\n        padding: '5px',\n        minHeight: '20px',\n        transition: 'height 0.3s',\n        height: `${expand ? 'calc(' + (lines - 1) + ' * 16px)' : 5 * 16 + 'px'}`,\n        resize: 'vertical',\n        overflow: 'hidden'\n      },\n      onFocus: () => setExpand(true),\n      onBlur: e => {\n        setExpand(false);\n        blur(e);\n      },\n      tabIndex: -1,\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        className: 'mx-1',\n        onChange: change,\n        language: \"typescript\",\n        options: {\n          fontSize: 12,\n          scrollbar: {\n            vertical: 'hidden',\n            horizontalScrollbarSize: 5\n          },\n          minimap: {\n            enabled: false\n          },\n          readOnly: readOnly\n        },\n        defaultLanguage: 'typescript',\n        value: dview.jsxString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n}\n_s(JsxEditorComponent, \"jaWFx9+K+uaI0cMzUfBa4i+AWIw=\", false, function () {\n  return [useMonaco, useStateIfMounted, useStateIfMounted, useStateIfMounted];\n});\n_c = JsxEditorComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.debugmode = state.debug;\n  ret.view = LViewElement.fromPointer(ownProps.viewid);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const JsxEditorConnected = connect(mapStateToProps, mapDispatchToProps)(JsxEditorComponent);\nexport const JsxEditor = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(JsxEditorConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = JsxEditor;\nJsxEditorComponent.cname = \"JsxEditorComponent\";\nJsxEditorConnected.cname = \"JsxEditorConnected\";\nJsxEditor.cname = \"JsxEditor\";\nexport default JsxEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"JsxEditorComponent\");\n$RefreshReg$(_c2, \"JsxEditor\");","map":{"version":3,"names":["React","useEffect","connect","useStateIfMounted","LViewElement","Defaults","Editor","useMonaco","jsxDEV","_jsxDEV","Fragment","_Fragment","JsxEditorComponent","props","_s","monaco","view","dview","__raw","readOnly","readonly","undefined","debugmode","check","id","jsx","setJsx","jsxString","show","setShow","expand","setExpand","change","value","blur","evt","languages","typescript","typescriptDefaults","setCompilerOptions","target","ScriptTarget","Latest","allowNonTsExtensions","moduleResolution","ModuleResolutionKind","NodeJs","module","ModuleKind","CommonJS","noEmit","esModuleInterop","JsxEmit","reactNamespace","allowJs","typeRoots","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","javascriptDefaults","setEagerModelSync","addExtraLib","lines","i","length","children","className","onClick","e","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","match","indexOf","style","padding","minHeight","transition","height","resize","overflow","onFocus","onBlur","onChange","language","options","fontSize","scrollbar","vertical","horizontalScrollbarSize","minimap","enabled","defaultLanguage","_c","mapStateToProps","state","ownProps","ret","debug","fromPointer","viewid","mapDispatchToProps","dispatch","JsxEditorConnected","JsxEditor","arguments","_this","_c2","cname","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/jsxEditor/JsxEditor.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport type {FakeStateProps} from \"../../../joiner/types\";\r\nimport {DState, DViewElement, LViewElement, Pointer, Defaults} from \"../../../joiner\";\r\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\r\n\r\n// import monacoTypes2 from '!raw-loader!../../../static/monacotypes';\r\nimport monacoTypes from '../../../static/monacotypes';\r\nimport { CommandBar, Btn } from \"../../commandbar/CommandBar\";\r\nimport { uniqueId } from \"lodash\";\r\n\r\nfunction JsxEditorComponent(props: AllProps) {\r\n    const monaco = useMonaco();\r\n    const view = props.view;\r\n    const dview = view.__raw;\r\n    const readOnly = props.readonly !== undefined ? props.readonly : !props.debugmode && Defaults.check(dview.id);\r\n    const [jsx, setJsx] = useStateIfMounted(dview.jsxString || '');\r\n    const [show, setShow] = useStateIfMounted(true);\r\n\r\n    const [expand, setExpand] = useStateIfMounted(false);\r\n\r\n    const change = (value: string|undefined) => { // save in local state for frequent changes.\r\n        if (value !== undefined) setJsx(value);\r\n    }\r\n\r\n\r\n    const blur = (evt?: React.FocusEvent) => { // confirm in redux state for final state\r\n        view.jsxString = jsx;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!monaco) return;\r\n        monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\r\n            target: monaco.languages.typescript.ScriptTarget.Latest,\r\n            allowNonTsExtensions: true,\r\n            moduleResolution: monaco.languages.typescript.ModuleResolutionKind.NodeJs,\r\n            module: monaco.languages.typescript.ModuleKind.CommonJS,\r\n            noEmit: true,\r\n            esModuleInterop: true,\r\n            jsx: monaco.languages.typescript.JsxEmit.React,\r\n            reactNamespace: \"React\",\r\n            allowJs: true,\r\n            typeRoots: [\"node_modules/@types\"]//, 'src/static/'], // doubt those can be accesed at runtime but trying\r\n        });\r\n\r\n        monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({ noSemanticValidation: false, noSyntaxValidation: false });\r\n        monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);\r\n\r\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\"declare var data: 'datatype';\");\r\n        /*\r\n        // doubt those files can be accesed at runtime but trying\r\n        monaco.languages.typescript.javascriptDefaults.addExtraLib('declare var data: LModelElement; declare var node: LGraphElement;', 'src/static/monacotypes.d.ts');\r\n\r\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(\r\n            '<<react-definition-file>>',\r\n            `file:///node_modules/@react/types/index.d.ts`\r\n        );*/\r\n\r\n\r\n\r\n    }, [monaco]);\r\n\r\n    //const lines = (Math.round(dview.jsxString.split(/\\r|\\r\\n|\\n/).length*1.8) < 5 ? 5 : Math.round(dview.jsxString.split(/\\r|\\r\\n|\\n/).length*1.8));\r\n\r\n    let lines: number;\r\n    if (expand) {\r\n        lines = 1;\r\n        for (let i = 0; i < dview.jsxString.length; i++) if (dview.jsxString[i] === '\\n') lines++;\r\n        lines += 1; // \"margin\"\r\n    } else {\r\n        lines = 5;\r\n    }\r\n    if (lines < 5) lines = 5;\r\n    return(<>\r\n        <div className={'cursor-pointer d-flex'} onClick={e => setShow(!show)}>\r\n            <span className={'my-auto'} tabIndex={-1} >\r\n                <i className={'bi bi-chevron-' + (show ? 'down' : 'right')} />\r\n                {/*show ? <i className={'bi bi-eye-fill'} /> : <i className={'bi bi-eye-slash-fill'} /> */}\r\n            </span>\r\n            <label className={'editor-label'}>\r\n                JSX Editor\r\n            </label>\r\n\r\n            {/* show && <CommandBar style={{paddingTop: '10px'}}>\r\n                {expand ?\r\n                    <Btn icon={'shrink'} action={(e) => {setExpand(false); setShow(true)}} tip={'Minimize editor'}/>\r\n                    :\r\n                    <Btn icon={'expand'} action={(e) => {setExpand(true); setShow(true)}} tip={'Enlarge editor'}/>\r\n                }\r\n            </CommandBar>*/}\r\n        </div>\r\n        {show && <div className={'mt-1'}>\r\n            {jsx.match(/{\\s*\\(.+\\?.+\\:.+\\)\\s*}/gm) && <label>\r\n                <b className={'text-warning'}>Warning:</b>\r\n                Please remove the round parenthesis, concatenate it with an empty string as in &#123; (a ? b : c) + '' &#125;\r\n                or replace the ternary operator as in (a && b || c).\r\n            </label>}\r\n            {(jsx).indexOf('<>') >= 0 && <label>\r\n                <b className={'text-warning'}>Warning:</b>\r\n                JSX.Fragment {'<>'} is valid JSX but is not supported by our compiler.\r\n                Please replace it with an array [] instead.\r\n            </label>}\r\n            {(jsx).indexOf('?.') >= 0 && <label>\r\n                <b className={'text-warning'}>Warning:</b>\r\n                Optional chaining {'.?'} is valid JS but is not supported by our compiler.\r\n                Please replace it with && instead. Eg: from (a?.b) to (a && a.b).\r\n            </label>}\r\n            {(jsx).indexOf('??') >= 0 && <label>\r\n                <b className={'text-warning'}>Warning:</b>\r\n                Nullish coalescing {'??'} is valid JS but is not supported by our compiler.\r\n                Please replace it with explicit null and undefined checks, or a ||.\r\n            </label>}\r\n        </div>}\r\n        lines:{lines}\r\n        {show && <div className={'monaco-editor-wrapper'}\r\n                    style={{padding: '5px', minHeight: '20px', transition: 'height 0.3s', height:`${expand ? 'calc('+(lines-1)+' * 16px)' : (5*16)+'px'}`, resize: 'vertical', overflow:'hidden'}}\r\n                    onFocus={() => setExpand(true)}\r\n                    onBlur={(e) => {setExpand(false);blur(e)}}\r\n                    tabIndex={-1} >\r\n            <Editor className={'mx-1'} onChange={change} language={\"typescript\"}\r\n                    options={{fontSize: 12, scrollbar: {vertical: 'hidden', horizontalScrollbarSize: 5}, minimap: {enabled: false}, readOnly: readOnly}}\r\n                    defaultLanguage={'typescript'} value={dview.jsxString} />\r\n        </div>}\r\n    </>);\r\n}\r\ninterface OwnProps {\r\n    viewid: Pointer<DViewElement, 1, 1, LViewElement>;\r\n    readonly?: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n    debugmode: boolean;\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.debugmode = state.debug;\r\n    ret.view = LViewElement.fromPointer(ownProps.viewid);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const JsxEditorConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(JsxEditorComponent);\r\n\r\nexport const JsxEditor = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <JsxEditorConnected {...{...props, children}} />;\r\n}\r\n\r\nJsxEditorComponent.cname = \"JsxEditorComponent\";\r\nJsxEditorConnected.cname = \"JsxEditorConnected\";\r\nJsxEditor.cname = \"JsxEditor\";\r\nexport default JsxEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}