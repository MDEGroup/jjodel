{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var _dec,_class,_class2;import{LPointerTargetable,RuntimeAccessible}from\"../joiner\";var windoww=window;export var Debug=(_dec=RuntimeAccessible('Debug'),_dec(_class=(_class2=/*#__PURE__*/function(){function Debug(){_classCallCheck(this,Debug);}_createClass(Debug,null,[{key:\"getComponentMap\",value:// performance ligher mode for potato pc, huge models or complex simulations / measurables\n// manually activated: counts how many times each node is rendered in a component.\nfunction getComponentMap(){var nodes=Object.values(windoww.GraphElementComponent.all).map(function(a){return a.props.node;}).filter(function(a){return!!a;});var nodeids=_toConsumableArray(new Set(nodes.map(function(a){return a.id;}).filter(function(a){return!!a;})));var allids={};var _iterator=_createForOfIteratorHelper(nodeids),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var o=_step.value;allids[o]=0;}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(nodes),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var n=_step2.value;allids[n===null||n===void 0?void 0:n.id]++;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}allids.nodes=nodeids;allids.components=Object.values(windoww.GraphElementComponent.all);return allids;}},{key:\"timeoutTasks\",value:function timeoutTasks(){}},{key:\"largeTimeoutTasks\",value:function largeTimeoutTasks(){var _windoww$s$model;windoww.model=windoww.LPointerTargetable.wrap((_windoww$s$model=windoww.s().model)===null||_windoww$s$model===void 0?void 0:_windoww$s$model[0]);}},{key:\"remakeEdges\",value:function remakeEdges(){// warning: might break undo/redo for direct state editing\nvar eids=windoww.LPointerTargetable.wrapAll(windoww.LState.get().edges).map(function(e){return e.id;});var epids=windoww.LPointerTargetable.wrapAll(windoww.LState.get().edgepoints).map(function(e){return e.id;});var ss=windoww.store.getState();ss.edges=[];ss.edgepoints=[];var _iterator3=_createForOfIteratorHelper(eids),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var e=_step3.value;delete ss.idlookup[e];}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var _iterator4=_createForOfIteratorHelper(epids),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _e=_step4.value;delete ss.idlookup[_e];}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}windoww.SetRootFieldAction.new(\"clonedCounter\",ss.clonedCounter+1,'',false);}},{key:\"setLightMode\",value:function setLightMode(b){// i don't want to use react or actions here because they cause a re-render and are heavy. this is a performance emergency mode.\nif(this.lightMode===b)return;this.lightMode=b;if(!Debug.lightModeInput){Debug.lightModeInput=$(\"#lightmode\")[0];if(!Debug.lightModeInput)return;}Debug.lightModeInput.checked=b;}},{key:\"refresh\",value:function refresh(){for(var key in windoww.GraphElementComponent.all){windoww.GraphElementComponent.all[key].forceUpdate();}console.log(windoww.GraphElementComponent.all);}// 16s 50 classi vuote\n},{key:\"benchmarkCreateElement\",value:function benchmarkCreateElement(){var times=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;var disableConsole=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var state=windoww.s();var checkDelayMax=300;var checkDelayMin=50;var diff=checkDelayMax-checkDelayMin;var callbacks={checkCompletionFunction:checkCompletionFunction,checkDelayMin:checkDelayMin,additionalDelayMax:diff,times:times,disableConsole:disableConsole};callbacks.startTime=new Date();if(disableConsole)windoww.Log.disableConsole();var lmodel=LPointerTargetable.wrap(state.idlookup[state.models[0]]);for(var i=0;i<times;i++){lmodel.addChild(\"Class\");}function checkCompletionFunction(){return $(\".DClass\").length;}Debug.timeMeasurer(callbacks);return callbacks;}// 4s 10 istanze con 5 attributi\n},{key:\"benchmarkCreateInstance\",value:function benchmarkCreateInstance(){var metaclassName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"Concept 1\";var times=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;var disableConsole=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var checkDelayMax=300;var checkDelayMin=50;var diff=checkDelayMax-checkDelayMin;var callbacks={checkCompletionFunction:checkCompletionFunction,checkDelayMin:checkDelayMin,additionalDelayMax:diff,times:times,disableConsole:disableConsole};callbacks.startTime=new Date();if(disableConsole)windoww.Log.disableConsole();var state=windoww.s();var lmodel=LPointerTargetable.wrap(state.idlookup[state.models[1]]);var lclass=LPointerTargetable.wrap(state.classs.map(function(cid){return state.idlookup[cid];}).filter(function(c){return c.name===metaclassName;})[0]);for(var i=0;i<times;i++){lmodel.addObject(lclass===null||lclass===void 0?void 0:lclass.id);}function checkCompletionFunction(){return $(\"[data-modelname=\\\"DObject\\\"]\").length;}Debug.timeMeasurer(callbacks);return callbacks;}},{key:\"timeMeasurer\",value:function timeMeasurer(callbacks0){var callbacks=callbacks0;if(!callbacks)callbacks={};// if (!callbacks.startTime) callbacks.startTime = new Date();\nif(!callbacks.maxStuckTime)callbacks.maxStuckTime=10000;if(!callbacks.checkDelayMin)callbacks.checkDelayMin=300;if(!callbacks.additionalDelayMax)callbacks.additionalDelayMax=2000;if(!callbacks.onStuck)callbacks.onStuck=function(time,start,end,$complete){console.log(\"Benchmarked operation stuck at same completion% for: \"+callbacks.maxStuckTime/1000+\" s. \\n\"+\"After \"+time/100+\"s total time passed and \"+$complete*100+\"% of the task was completed. \\nBenchmark aborted.\");};if(!callbacks.onFinish)callbacks.onFinish=function(time,start,end){console.log(\"Benchmarked operation completed after: \"+time/1000+\" s.\");};windoww.Log.exDev(!callbacks.times,\".times is a mandatory option\");windoww.Log.exDev(!callbacks.checkCompletionFunction,\".checkCompletionFunction is a mandatory option\");windoww.Log.exDev(!callbacks.checkCompletionFunction,\".startTime is a mandatory option. set it **before** doing the main task, then call the benchmark.\");callbacks.completionHistory=[];if(callbacks.disableConsole)windoww.Log.disableConsole();Debug.timeMeasurer_inner(callbacks);return callbacks;}},{key:\"timeMeasurer_inner\",value:function timeMeasurer_inner(callbacks){var completedTimes=callbacks.checkCompletionFunction();callbacks.completionHistory.push(completedTimes);if(completedTimes===callbacks.times){callbacks.endTime=new Date();callbacks.totTime=callbacks.endTime.getTime()-callbacks.startTime.getTime();if(callbacks.disableConsole)windoww.Log.enableConsole();callbacks.onFinish(callbacks.totTime,callbacks.startTime,callbacks.endTime);callbacks.endStatus=\"FINISH\";return;}var $complete=completedTimes/callbacks.times;if(callbacks.completedTimes!==completedTimes){callbacks.stuckSince=new Date().getTime();callbacks.completedTimes=completedTimes;}else if(callbacks.stuckSince>callbacks.maxStuckTime){callbacks.endTime=new Date();var _$complete=completedTimes/callbacks.times;callbacks.totTime=callbacks.endTime.getTime()-callbacks.startTime.getTime();if(callbacks.disableConsole)windoww.Log.enableConsole();callbacks.onStuck(callbacks.totTime,callbacks.startTime,callbacks.endTime,_$complete);callbacks.endStatus=\"STUCK\";return;}var delay=callbacks.checkDelayMin;if($complete!==0)delay+=callbacks.additionalDelayMax*(1-$complete);setTimeout(function(){return Debug.timeMeasurer_inner(callbacks);},delay);}}]);return Debug;}(),_class2.lightMode=false,_class2.lightModeInput=void 0,_class2))||_class);setTimeout(Debug.timeoutTasks,500);setTimeout(Debug.largeTimeoutTasks,5000);windoww.Debug=Debug;","map":{"version":3,"names":["LPointerTargetable","RuntimeAccessible","windoww","window","Debug","_dec","_class","_class2","_classCallCheck","_createClass","key","value","getComponentMap","nodes","Object","values","GraphElementComponent","all","map","a","props","node","filter","nodeids","_toConsumableArray","Set","id","allids","_iterator","_createForOfIteratorHelper","_step","s","n","done","o","err","e","f","_iterator2","_step2","components","timeoutTasks","largeTimeoutTasks","_windoww$s$model","model","wrap","remakeEdges","eids","wrapAll","LState","get","edges","epids","edgepoints","ss","store","getState","_iterator3","_step3","idlookup","_iterator4","_step4","SetRootFieldAction","new","clonedCounter","setLightMode","b","lightMode","lightModeInput","$","checked","refresh","forceUpdate","console","log","benchmarkCreateElement","times","arguments","length","undefined","disableConsole","state","checkDelayMax","checkDelayMin","diff","callbacks","checkCompletionFunction","additionalDelayMax","startTime","Date","Log","lmodel","models","i","addChild","timeMeasurer","benchmarkCreateInstance","metaclassName","lclass","classs","cid","c","name","addObject","callbacks0","maxStuckTime","onStuck","time","start","end","$complete","onFinish","exDev","completionHistory","timeMeasurer_inner","completedTimes","push","endTime","totTime","getTime","enableConsole","endStatus","stuckSince","delay","setTimeout"],"sources":["C:/d/Programming/web/jodel-mde/src/debugtools/debug.tsx"],"sourcesContent":["import type {DClass, DModel, GObject, LClass, LModel} from \"../joiner\";\r\nimport {LPointerTargetable, RuntimeAccessible, SetRootFieldAction} from \"../joiner\";\r\nlet windoww = window as any;\r\n\r\n@RuntimeAccessible('Debug')\r\nexport class Debug {\r\n    public static lightMode: boolean = false; // performance ligher mode for potato pc, huge models or complex simulations / measurables\r\n    private static lightModeInput: HTMLInputElement;\r\n\r\n    // manually activated: counts how many times each node is rendered in a component.\r\n    static getComponentMap(){\r\n        let nodes = Object.values(windoww.GraphElementComponent.all).map((a:any)=>a.props.node).filter(a=>!!a);\r\n        let nodeids = [...new Set(nodes.map(a=>a.id).filter(a=>!!a))];\r\n        let allids: GObject = {};\r\n        for (let o of nodeids) allids[o] = 0;\r\n        for (let n of nodes) allids[n?.id]++;\r\n        allids.nodes = nodeids;\r\n        allids.components = Object.values(windoww.GraphElementComponent.all);\r\n        return allids; }\r\n\r\n    static timeoutTasks(){}\r\n    static largeTimeoutTasks(){\r\n        windoww.model = windoww.LPointerTargetable.wrap(windoww.s().model?.[0]);\r\n    }\r\n\r\n    static remakeEdges(): void{\r\n        // warning: might break undo/redo for direct state editing\r\n        let eids = windoww.LPointerTargetable.wrapAll(windoww.LState.get().edges).map((e: any)=>e.id)\r\n        let epids = windoww.LPointerTargetable.wrapAll(windoww.LState.get().edgepoints).map((e: any)=>e.id)\r\n        let ss = windoww.store.getState();\r\n        ss.edges = [];\r\n        ss.edgepoints = [];\r\n        for (let e of eids) delete ss.idlookup[e];\r\n        for (let e of epids) delete ss.idlookup[e];\r\n        windoww.SetRootFieldAction.new(\"clonedCounter\" , ss.clonedCounter + 1, '', false);\r\n    }\r\n\r\n    static setLightMode(b: boolean): void {\r\n        // i don't want to use react or actions here because they cause a re-render and are heavy. this is a performance emergency mode.\r\n        if (this.lightMode === b) return;\r\n        this.lightMode = b;\r\n        if (!Debug.lightModeInput) {\r\n            Debug.lightModeInput = ($(\"#lightmode\") as any as HTMLInputElement[])[0];\r\n            if (!Debug.lightModeInput) return;\r\n        }\r\n        Debug.lightModeInput.checked = b;\r\n    }\r\n    public static refresh(): void {\r\n        for (let key in windoww.GraphElementComponent.all) {\r\n            windoww.GraphElementComponent.all[key].forceUpdate();\r\n        }\r\n        console.log(windoww.GraphElementComponent.all);\r\n    }\r\n\r\n    // 16s 50 classi vuote\r\n    static benchmarkCreateElement(times: number = 100, disableConsole: boolean = true): BenchmarkOptions{\r\n        let state = windoww.s();\r\n\r\n        let checkDelayMax = 300;\r\n        let checkDelayMin = 50;\r\n        let diff = checkDelayMax - checkDelayMin;\r\n        let callbacks: any = {checkCompletionFunction, checkDelayMin, additionalDelayMax: diff, times, disableConsole};\r\n        callbacks.startTime = new Date();\r\n        if(disableConsole) windoww.Log.disableConsole();\r\n        let lmodel = (LPointerTargetable.wrap(state.idlookup[ state.models[0] ]) as LModel);\r\n        for (let i = 0; i < times; i++){\r\n            lmodel.addChild(\"Class\");\r\n        }\r\n        function checkCompletionFunction() { return $(\".DClass\").length; }\r\n\r\n        Debug.timeMeasurer(callbacks);\r\n        return callbacks;\r\n    }\r\n    // 4s 10 istanze con 5 attributi\r\n    static benchmarkCreateInstance(metaclassName: string=\"Concept 1\", times: number = 100, disableConsole: boolean = true): BenchmarkOptions{\r\n        let checkDelayMax = 300;\r\n        let checkDelayMin = 50;\r\n        let diff = checkDelayMax - checkDelayMin;\r\n        let callbacks: any = {checkCompletionFunction, checkDelayMin, additionalDelayMax: diff, times, disableConsole};\r\n        callbacks.startTime = new Date();\r\n        if(disableConsole) windoww.Log.disableConsole();\r\n\r\n        let state = windoww.s();\r\n        let lmodel = (LPointerTargetable.wrap(state.idlookup[ state.models[1] ]) as LModel);\r\n        let lclass = LPointerTargetable.wrap(state.classs.map((cid: string)=>state.idlookup[cid]).filter((c:DClass) => c.name === metaclassName)[0]) as LClass;\r\n        for (let i = 0; i < times; i++) {\r\n            lmodel.addObject(lclass?.id);\r\n        }\r\n        function checkCompletionFunction() { return $(\"[data-modelname=\\\"DObject\\\"]\").length; }\r\n\r\n        Debug.timeMeasurer(callbacks);\r\n        return callbacks;\r\n    }\r\n\r\n\r\n    static timeMeasurer(callbacks0:Partial<BenchmarkOptions> | undefined): BenchmarkOptions {\r\n        let callbacks: BenchmarkOptions = callbacks0 as any;\r\n        if (!callbacks) callbacks = {} as any;\r\n        // if (!callbacks.startTime) callbacks.startTime = new Date();\r\n        if (!callbacks.maxStuckTime) callbacks.maxStuckTime = 10000;\r\n        if (!callbacks.checkDelayMin) callbacks.checkDelayMin = 300;\r\n        if (!callbacks.additionalDelayMax) callbacks.additionalDelayMax = 2000;\r\n        if (!callbacks.onStuck) callbacks.onStuck = (time:number, start: Date, end:Date, $complete: number) => {\r\n            console.log(\"Benchmarked operation stuck at same completion% for: \" + callbacks.maxStuckTime/1000+\" s. \\n\" +\r\n                \"After \" + time/100 + \"s total time passed and \" + $complete*100 + \"% of the task was completed. \\nBenchmark aborted.\"); }\r\n        if (!callbacks.onFinish) callbacks.onFinish = (time:number, start: Date, end:Date) => {\r\n            console.log(\"Benchmarked operation completed after: \" + time/1000 + \" s.\"); }\r\n\r\n        windoww.Log.exDev(!callbacks.times, \".times is a mandatory option\");\r\n        windoww.Log.exDev(!callbacks.checkCompletionFunction, \".checkCompletionFunction is a mandatory option\");\r\n        windoww.Log.exDev(!callbacks.checkCompletionFunction, \".startTime is a mandatory option. set it **before** doing the main task, then call the benchmark.\");\r\n        (callbacks as any).completionHistory = [];\r\n\r\n        if(callbacks.disableConsole) windoww.Log.disableConsole();\r\n        Debug.timeMeasurer_inner(callbacks);\r\n        return callbacks;\r\n    }\r\n\r\n    private static timeMeasurer_inner(callbacks:BenchmarkOptions): void {\r\n        let completedTimes = callbacks.checkCompletionFunction();\r\n        (callbacks as any).completionHistory.push(completedTimes);\r\n        if (completedTimes === callbacks.times) {\r\n            callbacks.endTime = new Date();\r\n            callbacks.totTime = callbacks.endTime.getTime() - callbacks.startTime.getTime();\r\n            if(callbacks.disableConsole) windoww.Log.enableConsole();\r\n            callbacks.onFinish(callbacks.totTime, callbacks.startTime, callbacks.endTime);\r\n            callbacks.endStatus = \"FINISH\";\r\n            return;\r\n        }\r\n        let $complete = completedTimes / callbacks.times;\r\n        if (callbacks.completedTimes !== completedTimes) {\r\n            callbacks.stuckSince = new Date().getTime();\r\n            callbacks.completedTimes = completedTimes;\r\n        } else\r\n        if (callbacks.stuckSince > callbacks.maxStuckTime) {\r\n            callbacks.endTime = new Date();\r\n            let $complete = completedTimes / callbacks.times;\r\n            callbacks.totTime = callbacks.endTime.getTime() - callbacks.startTime.getTime();\r\n            if(callbacks.disableConsole) windoww.Log.enableConsole();\r\n            callbacks.onStuck(callbacks.totTime, callbacks.startTime, callbacks.endTime, $complete);\r\n            callbacks.endStatus = \"STUCK\";\r\n            return;\r\n        }\r\n        let delay = callbacks.checkDelayMin;\r\n        if ($complete !== 0) delay += callbacks.additionalDelayMax * (1-$complete);\r\n        setTimeout(()=>Debug.timeMeasurer_inner(callbacks), delay );\r\n\r\n    }\r\n}\r\ntype BenchmarkOptions = {\r\n    onFinish:(time:number, start: Date, end:Date)=>void,\r\n    onStuck:(time:number, start: Date, end:Date, $complete: number)=>void,\r\n    disableConsole: boolean, endStatus: string,\r\n    // completionFunction returns how many steps are completed.\r\n    // times how many steps need to be completed to mark the test as finished.\r\n    checkCompletionFunction: () => number, times: number, completedTimes: number,\r\n    // those are automatically set\r\n    startTime:Date, endTime:Date, stuckSince: number, totTime: number,\r\n    // check how often completion or abortion is checked\r\n    checkDelayMin: number, additionalDelayMax: number, maxStuckTime:number\r\n};\r\n\r\nsetTimeout(Debug.timeoutTasks, 500);\r\nsetTimeout(Debug.largeTimeoutTasks, 5000);\r\nwindoww.Debug = Debug;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}