{"ast":null,"code":"import _slicedToArray from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport debounce from 'lodash/debounce';\nimport { isSafari, popupSupported, popupWindowBorder } from './BrowserPopupWindow';\nvar onNewWindowResize = debounce(function () {\n  // add/remove element on main document, force it to dispatch resize observer event on the popup window\n  var div = document.createElement('div');\n  document.body.append(div);\n  div.remove();\n  // TODO update resize event\n}, 200);\n/**\n * The NewWindow class object.\n * @public\n */\nvar NewWindow = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(NewWindow, _React$PureComponent);\n  var _super = _createSuper(NewWindow);\n  /**\n   * The NewWindow function constructor.\n   * @param {Object} props\n   */\n  function NewWindow(props) {\n    var _this;\n    _classCallCheck(this, NewWindow);\n    _this = _super.call(this, props);\n    _this.released = false;\n    _this.container = document.createElement('div');\n    _this.state = {\n      mounted: false\n    };\n    _this.onMainWindowUnload = function () {\n      if (_this.window) {\n        _this.window.close();\n      }\n    };\n    /**\n     * Release the new window and anything that was bound to it.\n     */\n    _this.release = function (event) {\n      // This method can be called once.\n      if (_this.released) {\n        return;\n      }\n      _this.released = true;\n      if (_this.windowCheckerInterval) {\n        clearInterval(_this.windowCheckerInterval);\n        _this.windowCheckerInterval = null;\n      }\n      window.removeEventListener('beforeunload', _this.onMainWindowUnload);\n      _this.window.removeEventListener('beforeunload', _this.release);\n      if (event) {\n        // Call any function bound to the `onUnload` prop.\n        var onClose = _this.props.onClose;\n        if (typeof onClose === 'function') {\n          onClose();\n        }\n      }\n    };\n    return _this;\n  }\n  /**\n   * Render the NewWindow component.\n   */\n  _createClass(NewWindow, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.mounted) return null;\n      return ReactDOM.createPortal(this.props.children, this.container);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.openChild();\n      this.setState({\n        mounted: true\n      });\n    }\n    /**\n     * Create the new window when NewWindow component mount.\n     */\n  }, {\n    key: \"openChild\",\n    value: function openChild() {\n      var _this2 = this;\n      var _this$props = this.props,\n        url = _this$props.url,\n        title = _this$props.title,\n        name = _this$props.name,\n        width = _this$props.width,\n        height = _this$props.height,\n        initPopupInnerRect = _this$props.initPopupInnerRect,\n        initPopupOuterRect = _this$props.initPopupOuterRect,\n        onBlock = _this$props.onBlock,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose;\n      var features = {\n        width: width,\n        height: height\n      };\n      if (initPopupOuterRect) {\n        features = initPopupOuterRect();\n        var _popupWindowBorder = _slicedToArray(popupWindowBorder, 3),\n          topBorder = _popupWindowBorder[0],\n          sideBorder = _popupWindowBorder[1],\n          bottomBorder = _popupWindowBorder[2];\n        if (!isSafari) {\n          features.width -= sideBorder * 2;\n          features.height -= topBorder + bottomBorder;\n        }\n      } else if (initPopupInnerRect) {\n        features = initPopupInnerRect();\n        var _popupWindowBorder2 = _slicedToArray(popupWindowBorder, 2),\n          _topBorder = _popupWindowBorder2[0],\n          _sideBorder = _popupWindowBorder2[1];\n        features.left -= _sideBorder;\n        features.top -= _topBorder;\n        if (isSafari) {\n          features.height += _topBorder;\n        }\n      } else {\n        features.left = window.top.outerWidth / 2 + window.top.screenX - width / 2;\n        features.top = window.top.outerHeight / 2 + window.top.screenY - height / 2;\n      }\n      // Open a new window.\n      this.window = window.open(url, name, toWindowFeatures(features));\n      // Check if the new window was successfully opened.\n      if (this.window) {\n        window.addEventListener('beforeunload', this.onMainWindowUnload);\n        this.window.addEventListener('resize', onNewWindowResize);\n        this.window.document.title = title || document.title;\n        this.window.document.body.appendChild(this.container);\n        // If specified, copy styles from parent window's document.\n        if (this.props.copyStyles) {\n          setTimeout(function () {\n            return copyStyles(document, _this2.window.document);\n          }, 0);\n        }\n        if (typeof onOpen === 'function') {\n          onOpen(this.window);\n        }\n        if (url && onClose) {\n          this.windowCheckerInterval = setInterval(function () {\n            if (!_this2.window || _this2.window.closed) {\n              _this2.release(true);\n            }\n          }, 50);\n        }\n        // Release anything bound to this component before the new window unload.\n        this.window.addEventListener('beforeunload', this.release);\n      } else {\n        // Handle error on opening of new window.\n        if (typeof onBlock === 'function') {\n          onBlock();\n        } else {\n          console.warn('A new window could not be opened. Maybe it was blocked.');\n        }\n      }\n    }\n    /**\n     * Close the opened window (if any) when NewWindow will unmount.\n     */\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.window) {\n        this.release();\n        this.window.close();\n      }\n    }\n  }]);\n  return NewWindow;\n}(React.PureComponent);\nNewWindow.supported = popupSupported;\n/**\n * NewWindow default props.\n */\nNewWindow.defaultProps = {\n  url: '',\n  name: '',\n  width: 640,\n  height: 480,\n  copyStyles: true\n};\n/**\n * Utility functions.\n * @private\n */\n/**\n * Copy styles from a source document to a target.\n * @param {Object} source\n * @param {Object} target\n * @private\n */\nfunction copyStyles(source, target) {\n  Array.from(source.styleSheets).forEach(function (styleSheet) {\n    // For <style> elements\n    var rules;\n    if (styleSheet.href) {\n      // for <link> elements loading CSS from a URL\n      var newLinkEl = source.createElement('link');\n      newLinkEl.rel = 'stylesheet';\n      newLinkEl.href = styleSheet.href;\n      target.head.appendChild(newLinkEl);\n    } else {\n      try {\n        rules = styleSheet.cssRules;\n      } catch (err) {\n        // can't access crossdomain rules\n      }\n      if (rules) {\n        var newStyleEl = source.createElement('style');\n        // Write the text of each rule into the body of the style element\n        Array.from(styleSheet.cssRules).forEach(function (cssRule) {\n          var cssText = cssRule.cssText,\n            type = cssRule.type;\n          var returnText = cssText;\n          // Check if the cssRule type is CSSImportRule (3) or CSSFontFaceRule (5) to handle local imports on a about:blank page\n          // '/custom.css' turns to 'http://my-site.com/custom.css'\n          if ([3, 5].includes(type)) {\n            returnText = cssText.split('url(').map(function (line) {\n              if (line[1] === '/') {\n                return \"\".concat(line.slice(0, 1)).concat(window.location.origin).concat(line.slice(1));\n              }\n              return line;\n            }).join('url(');\n          }\n          newStyleEl.appendChild(source.createTextNode(returnText));\n        });\n        target.head.appendChild(newStyleEl);\n      }\n    }\n  });\n}\n/**\n * Convert features props to window features format (name=value,other=value).\n * @param {Object} obj\n * @return {String}\n * @private\n */\nfunction toWindowFeatures(obj) {\n  return Object.keys(obj).reduce(function (features, name) {\n    var value = obj[name];\n    if (typeof value === 'boolean') {\n      features.push(\"\".concat(name, \"=\").concat(value ? 'yes' : 'no'));\n    } else {\n      features.push(\"\".concat(name, \"=\").concat(value));\n    }\n    return features;\n  }, []).join(',');\n}\n/**\n * Component export.\n * @private\n */\nexport default NewWindow;","map":{"version":3,"names":["React","ReactDOM","debounce","isSafari","popupSupported","popupWindowBorder","onNewWindowResize","div","document","createElement","body","append","remove","NewWindow","_React$PureComponent","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","released","container","state","mounted","onMainWindowUnload","window","close","release","event","windowCheckerInterval","clearInterval","removeEventListener","onClose","_createClass","key","value","render","createPortal","children","componentDidMount","openChild","setState","_this2","_this$props","url","title","name","width","height","initPopupInnerRect","initPopupOuterRect","onBlock","onOpen","features","_popupWindowBorder","_slicedToArray","topBorder","sideBorder","bottomBorder","_popupWindowBorder2","left","top","outerWidth","screenX","outerHeight","screenY","open","toWindowFeatures","addEventListener","appendChild","copyStyles","setTimeout","setInterval","closed","console","warn","componentWillUnmount","PureComponent","supported","defaultProps","source","target","Array","from","styleSheets","forEach","styleSheet","rules","href","newLinkEl","rel","head","cssRules","err","newStyleEl","cssRule","cssText","type","returnText","includes","split","map","line","concat","slice","location","origin","join","createTextNode","obj","Object","keys","reduce","push"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-new-window/es/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport debounce from 'lodash/debounce';\nimport { isSafari, popupSupported, popupWindowBorder } from './BrowserPopupWindow';\nconst onNewWindowResize = debounce(() => {\n    // add/remove element on main document, force it to dispatch resize observer event on the popup window\n    let div = document.createElement('div');\n    document.body.append(div);\n    div.remove();\n    // TODO update resize event\n}, 200);\n/**\n * The NewWindow class object.\n * @public\n */\nclass NewWindow extends React.PureComponent {\n    /**\n     * The NewWindow function constructor.\n     * @param {Object} props\n     */\n    constructor(props) {\n        super(props);\n        this.released = false;\n        this.container = document.createElement('div');\n        this.state = { mounted: false };\n        this.onMainWindowUnload = () => {\n            if (this.window) {\n                this.window.close();\n            }\n        };\n        /**\n         * Release the new window and anything that was bound to it.\n         */\n        this.release = (event) => {\n            // This method can be called once.\n            if (this.released) {\n                return;\n            }\n            this.released = true;\n            if (this.windowCheckerInterval) {\n                clearInterval(this.windowCheckerInterval);\n                this.windowCheckerInterval = null;\n            }\n            window.removeEventListener('beforeunload', this.onMainWindowUnload);\n            this.window.removeEventListener('beforeunload', this.release);\n            if (event) {\n                // Call any function bound to the `onUnload` prop.\n                const { onClose } = this.props;\n                if (typeof onClose === 'function') {\n                    onClose();\n                }\n            }\n        };\n    }\n    /**\n     * Render the NewWindow component.\n     */\n    render() {\n        if (!this.state.mounted)\n            return null;\n        return ReactDOM.createPortal(this.props.children, this.container);\n    }\n    componentDidMount() {\n        this.openChild();\n        this.setState({ mounted: true });\n    }\n    /**\n     * Create the new window when NewWindow component mount.\n     */\n    openChild() {\n        const { url, title, name, width, height, initPopupInnerRect, initPopupOuterRect, onBlock, onOpen, onClose, } = this.props;\n        let features = { width, height };\n        if (initPopupOuterRect) {\n            features = initPopupOuterRect();\n            const [topBorder, sideBorder, bottomBorder] = popupWindowBorder;\n            if (!isSafari) {\n                features.width -= sideBorder * 2;\n                features.height -= topBorder + bottomBorder;\n            }\n        }\n        else if (initPopupInnerRect) {\n            features = initPopupInnerRect();\n            const [topBorder, sideBorder] = popupWindowBorder;\n            features.left -= sideBorder;\n            features.top -= topBorder;\n            if (isSafari) {\n                features.height += topBorder;\n            }\n        }\n        else {\n            features.left = window.top.outerWidth / 2 + window.top.screenX - width / 2;\n            features.top = window.top.outerHeight / 2 + window.top.screenY - height / 2;\n        }\n        // Open a new window.\n        this.window = window.open(url, name, toWindowFeatures(features));\n        // Check if the new window was successfully opened.\n        if (this.window) {\n            window.addEventListener('beforeunload', this.onMainWindowUnload);\n            this.window.addEventListener('resize', onNewWindowResize);\n            this.window.document.title = title || document.title;\n            this.window.document.body.appendChild(this.container);\n            // If specified, copy styles from parent window's document.\n            if (this.props.copyStyles) {\n                setTimeout(() => copyStyles(document, this.window.document), 0);\n            }\n            if (typeof onOpen === 'function') {\n                onOpen(this.window);\n            }\n            if (url && onClose) {\n                this.windowCheckerInterval = setInterval(() => {\n                    if (!this.window || this.window.closed) {\n                        this.release(true);\n                    }\n                }, 50);\n            }\n            // Release anything bound to this component before the new window unload.\n            this.window.addEventListener('beforeunload', this.release);\n        }\n        else {\n            // Handle error on opening of new window.\n            if (typeof onBlock === 'function') {\n                onBlock();\n            }\n            else {\n                console.warn('A new window could not be opened. Maybe it was blocked.');\n            }\n        }\n    }\n    /**\n     * Close the opened window (if any) when NewWindow will unmount.\n     */\n    componentWillUnmount() {\n        if (this.window) {\n            this.release();\n            this.window.close();\n        }\n    }\n}\nNewWindow.supported = popupSupported;\n/**\n * NewWindow default props.\n */\nNewWindow.defaultProps = {\n    url: '',\n    name: '',\n    width: 640,\n    height: 480,\n    copyStyles: true,\n};\n/**\n * Utility functions.\n * @private\n */\n/**\n * Copy styles from a source document to a target.\n * @param {Object} source\n * @param {Object} target\n * @private\n */\nfunction copyStyles(source, target) {\n    Array.from(source.styleSheets).forEach(styleSheet => {\n        // For <style> elements\n        let rules;\n        if (styleSheet.href) {\n            // for <link> elements loading CSS from a URL\n            const newLinkEl = source.createElement('link');\n            newLinkEl.rel = 'stylesheet';\n            newLinkEl.href = styleSheet.href;\n            target.head.appendChild(newLinkEl);\n        }\n        else {\n            try {\n                rules = styleSheet.cssRules;\n            }\n            catch (err) {\n                // can't access crossdomain rules\n            }\n            if (rules) {\n                const newStyleEl = source.createElement('style');\n                // Write the text of each rule into the body of the style element\n                Array.from(styleSheet.cssRules).forEach(cssRule => {\n                    const { cssText, type } = cssRule;\n                    let returnText = cssText;\n                    // Check if the cssRule type is CSSImportRule (3) or CSSFontFaceRule (5) to handle local imports on a about:blank page\n                    // '/custom.css' turns to 'http://my-site.com/custom.css'\n                    if ([3, 5].includes(type)) {\n                        returnText = cssText\n                            .split('url(')\n                            .map(line => {\n                            if (line[1] === '/') {\n                                return `${line.slice(0, 1)}${window.location.origin}${line.slice(1)}`;\n                            }\n                            return line;\n                        })\n                            .join('url(');\n                    }\n                    newStyleEl.appendChild(source.createTextNode(returnText));\n                });\n                target.head.appendChild(newStyleEl);\n            }\n        }\n    });\n}\n/**\n * Convert features props to window features format (name=value,other=value).\n * @param {Object} obj\n * @return {String}\n * @private\n */\nfunction toWindowFeatures(obj) {\n    return Object.keys(obj)\n        .reduce((features, name) => {\n        const value = obj[name];\n        if (typeof value === 'boolean') {\n            features.push(`${name}=${value ? 'yes' : 'no'}`);\n        }\n        else {\n            features.push(`${name}=${value}`);\n        }\n        return features;\n    }, [])\n        .join(',');\n}\n/**\n * Component export.\n * @private\n */\nexport default NewWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}