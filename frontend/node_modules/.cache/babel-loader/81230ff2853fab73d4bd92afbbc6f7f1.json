{"ast":null,"code":"export class GraphElementStatee {\n  constructor() {\n    this.classes = void 0;\n  }\n  /*\r\n  constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n  this.preRenderFunc = preRenderFunc;\r\n  this.evalContext = evalContext;\r\n  this.template = templatefunc;\r\n  }\r\n  preRenderFunc?: string;\r\n  evalContext: Json;\r\n  template: () => ReactNode;* /\r\n  nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n  constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n  this.nodeid = nodeid;\r\n  }*/\n  // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\n}\nexport class GraphElementReduxStateProps {\n  // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\n\n  // all applicable views\n  // graphID!: string;\n  // dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\n  // model?: LModel;\n  // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\n  //preRenderFunc?: string;\n  // evalContext!: Json; moved to transient properties\n  //template!: string;\n\n  // usageDeclarations!: DefaultUsageDeclarations;\n  // invalidUsageDeclarations?: Error; // moved in stateProps.usageDeclarations.__invalidUsageDeclarations\n  // graph!: LGraph;\n\n  // lastSelected!: LModelElement | null;\n  // vertex only\n\n  static new() {\n    let e = new GraphElementReduxStateProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    this.view = void 0;\n    this.views = void 0;\n    this.node = void 0;\n    this.data = void 0;\n    this.isEdgePending = void 0;\n    this.nodeid = void 0;\n    this.dataid = void 0;\n    this.viewid = void 0;\n    this.viewsid = void 0;\n    this.parentviewid = void 0;\n  }\n}\nexport class GraphElementDispatchProps {}\n\n// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\nexport class BasicReactOwnProps {\n  // orArr<JSX.Element | PrimitiveType>;\n\n  // my add as a fault-tolerant fix for users not used to jsx\n\n  static new() {\n    let e = new BasicReactOwnProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    this.children = void 0;\n    this.style = void 0;\n    this.class = void 0;\n    this.className = void 0;\n    this.key = void 0;\n  }\n}\nexport class GraphElementOwnProps extends BasicReactOwnProps {\n  // Injected\n  // Injected\n  // injected\n  // injected\n  // injected\n  // obsolete use css // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\n\n  static new() {\n    let e = new GraphElementOwnProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    super();\n    this.data = void 0;\n    this.view = void 0;\n    this.views = void 0;\n    this.isGraph = void 0;\n    this.isGraphVertex = void 0;\n    this.isVertex = void 0;\n    this.isEdgePoint = void 0;\n    this.isEdge = void 0;\n    this.isVoid = void 0;\n    this.isField = true;\n    this.initialSize = void 0;\n    this.parentnodeid = void 0;\n    this.nodeid = void 0;\n    this.graphid = void 0;\n    this.parentViewId = void 0;\n    this.htmlindex = void 0;\n    this.childStyle = void 0;\n  }\n}\nexport class EdgeOwnProps extends GraphElementOwnProps {\n  // package dep\n\n  static new() {\n    let e = new EdgeOwnProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    super();\n    this.onclick = void 0;\n    this.onmousedown = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.label = void 0;\n    this.labels = void 0;\n    this.anchorStart = void 0;\n    this.anchorEnd = void 0;\n    this.isField = false;\n    this.isEdge = true;\n    this.isReference = void 0;\n    this.isExtend = void 0;\n    this.isDepencendy = void 0;\n  }\n}\nexport class EdgeStateProps extends GraphElementReduxStateProps {\n  // just alias for node\n  //lastSelected!: LModelElement | null;\n\n  static new() {\n    let e = new EdgeStateProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    super();\n    this.node = void 0;\n    this.edge = void 0;\n    this.isEdgePending = void 0;\n    this.viewpoint = void 0;\n    this.start = void 0;\n    this.end = void 0;\n  }\n  // key: string;\n}\n\n// @RuntimeAccessible\nexport class DefaultUsageDeclarations {\n  // all can be deleted in usageDeclaration function except view.\n\n  constructor(ret, ownProps) {\n    this.view = void 0;\n    this.node = void 0;\n    this.data = void 0;\n  } /*this.data = ret.data;\r\n    this.view = ret.view;\r\n    this.node = ret.node;/*/\n}\n\n// @RuntimeAccessible\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations {\n  constructor() {\n    super(...arguments);\n    this.start = void 0;\n    this.end = void 0;\n  }\n}\nexport class VertexOwnProps extends GraphElementOwnProps {\n  // onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  // onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n\n  // for <decoratedStar /> (defaults true)\n  // for <Polygon />, <Star /> and <Cross />\n  // for <Star /> and <Cross />\n  // for <Trapezoid />\n  // initial vertex rotation\n\n  static new() {\n    let e = new VertexOwnProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    super();\n    this.isField = false;\n    this.isVertex = true;\n    this.decorated = void 0;\n    this.sides = void 0;\n    this.innerRadius = void 0;\n    this.ratio = void 0;\n    this.rotate = void 0;\n  }\n}\nexport class VertexStateProps extends GraphElementReduxStateProps {\n  // lastSelected!: LModelElement | null;\n  // selected!: Dictionary<Pointer<DUser>, LModelElement|null>;\n  //selected!: LGraphElement|null;\n\n  static new() {\n    let e = new VertexStateProps();\n    for (let k in e) if (e[k] === undefined) delete e[k];\n    return e;\n  }\n  constructor() {\n    super();\n    this.node = void 0;\n    this.isEdgePending = void 0;\n    this.viewpoint = void 0;\n  }\n}\nexport let contextFixedKeys = {};\nsetContextFixedKeys();\nfunction setContextFixedKeys() {\n  // @ts-ignore: here i must use the constructor instead of new to have the undefined properties included.\n  let propmakers = [new EdgeOwnProps(), new EdgeStateProps(), new VertexOwnProps(), new VertexStateProps(), {\n    // \"model\", \"graph\",\n    \"constants\": true,\n    \"usageDeclarations\": true,\n    \"component\": true,\n    \"htmlindex\": true,\n    \"state\": true,\n    \"props\": true,\n    \"stateProps\": true,\n    \"ownProps\": true,\n    \"otherViews\": true,\n    'decorators': true // only on final jsx, decorators are injected\n    //\"data\":true, \"node\":true, \"parentViewId\":true, \"parentnodeid\":true,// from props:\n    //\"view\":true, \"views\":true, \"viewScores\":true,// from props:\n    //\"children\":true, \"isGraph\":true, \"isVertex\":true, isEdge:true, isEdgePoint:true, isVoid: true, \"graphid\":true, \"nodeid\":true,// from props:\n  }];\n  for (let props of propmakers) for (let k in props) contextFixedKeys[k] = true;\n  delete contextFixedKeys.class;\n  return contextFixedKeys;\n}","map":{"version":3,"names":["GraphElementStatee","constructor","classes","GraphElementReduxStateProps","new","e","k","undefined","view","views","node","data","isEdgePending","nodeid","dataid","viewid","viewsid","parentviewid","GraphElementDispatchProps","BasicReactOwnProps","children","style","class","className","key","GraphElementOwnProps","isGraph","isGraphVertex","isVertex","isEdgePoint","isEdge","isVoid","isField","initialSize","parentnodeid","graphid","parentViewId","htmlindex","childStyle","EdgeOwnProps","onclick","onmousedown","start","end","label","labels","anchorStart","anchorEnd","isReference","isExtend","isDepencendy","EdgeStateProps","edge","viewpoint","DefaultUsageDeclarations","ret","ownProps","EdgeDefaultUsageDeclarations","arguments","VertexOwnProps","decorated","sides","innerRadius","ratio","rotate","VertexStateProps","contextFixedKeys","setContextFixedKeys","propmakers","props"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/graphElement/sharedTypes/sharedTypes.tsx"],"sourcesContent":["import React, {CSSProperties, PureComponent, ReactNode} from \"react\";\r\nimport type {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DModelElement,\r\n    DViewElement,\r\n    Json,\r\n    LGraph,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LViewElement,\r\n    Pointer, PrimitiveType\r\n} from \"../../../joiner\";\r\nimport {Dictionary, LClass, LEdge, LUser, LViewPoint, LVoidVertex, RuntimeAccessible} from \"../../../joiner\";\r\nimport {GObject, InitialVertexSize, orArr} from \"../../../joiner/types\";\r\n\r\nexport class GraphElementStatee {/*\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n        this.preRenderFunc = preRenderFunc;\r\n        this.evalContext = evalContext;\r\n        this.template = templatefunc;\r\n    }\r\n    preRenderFunc?: string;\r\n    evalContext: Json;\r\n    template: () => ReactNode;* /\r\n    nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n        this.nodeid = nodeid;\r\n    }*/\r\n    // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\r\n    classes!: string[];\r\n}\r\n\r\n\r\nexport class GraphElementReduxStateProps {\r\n    // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\r\n    view!: LViewElement;\r\n    views!: LViewElement[]; // all applicable views\r\n    // graphID!: string;\r\n    // dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    // model?: LModel;\r\n    // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\r\n    //preRenderFunc?: string;\r\n    // evalContext!: Json; moved to transient properties\r\n    //template!: string;\r\n    node!: LGraphElement;\r\n    data?: LModelElement;\r\n    // usageDeclarations!: DefaultUsageDeclarations;\r\n    // invalidUsageDeclarations?: Error; // moved in stateProps.usageDeclarations.__invalidUsageDeclarations\r\n    // graph!: LGraph;\r\n\r\n    // lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };// vertex only\r\n    nodeid!: Pointer<DGraphElement>;\r\n    dataid?: Pointer<DModelElement>;\r\n    viewid!: Pointer<DViewElement>;\r\n    viewsid!: Pointer<DViewElement>[];\r\n    parentviewid?:Pointer<DViewElement>;\r\n\r\n    static new(): GObject<GraphElementReduxStateProps>{\r\n        let e: GObject<GraphElementReduxStateProps> = new GraphElementReduxStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){  }\r\n}\r\n\r\nexport class GraphElementDispatchProps {\r\n}\r\n\r\n// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\r\nexport class BasicReactOwnProps {\r\n    children?: ReactNode; // orArr<JSX.Element | PrimitiveType>;\r\n    style?: CSSProperties;\r\n    class?: string | string[]; // my add as a fault-tolerant fix for users not used to jsx\r\n    className?: string | string[];\r\n    key?: string;\r\n\r\n    static new(): GObject<BasicReactOwnProps>{\r\n        let e: GObject<BasicReactOwnProps> = new BasicReactOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ }\r\n}\r\n\r\nexport class GraphElementOwnProps extends BasicReactOwnProps {\r\n    data?: Pointer<DModelElement, 0, 1, LModelElement> | LModelElement;\r\n    view?: Pointer<DViewElement, 1, 1, LViewElement> | LViewElement;\r\n    views?: LViewElement[] | Pointer<DViewElement>[];\r\n    isGraph?: boolean;\r\n    isGraphVertex?: boolean;\r\n    isVertex?: boolean;\r\n    isEdgePoint?: boolean;\r\n    isEdge?: boolean;\r\n    isVoid?: boolean;\r\n    isField?: boolean = true;\r\n\r\n    initialSize?: InitialVertexSize;\r\n\r\n    parentnodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    nodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    graphid?: Pointer<DGraph, 1, 1, LGraph>; // injected\r\n    parentViewId?: Pointer<DViewElement, 1, 1, LViewElement>; // injected\r\n    htmlindex?: number; // injected\r\n    childStyle?: CSSProperties; // obsolete use css // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\r\n\r\n    static new(): GObject<GraphElementOwnProps>{\r\n        let e: GObject<GraphElementOwnProps> = new GraphElementOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class EdgeOwnProps extends GraphElementOwnProps {\r\n    onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    start!: LGraphElement[\"id\"];\r\n    end!: LGraphElement[\"id\"];\r\n    label?: DEdge[\"longestLabel\"];\r\n    labels?: DEdge[\"labels\"];\r\n    anchorStart?: string;\r\n    anchorEnd?: string;\r\n    isField?: boolean = false;\r\n    isEdge?: boolean = true;\r\n    isReference?: boolean;\r\n    isExtend?: boolean;\r\n    isDepencendy?: boolean; // package dep\r\n\r\n    static new(): GObject<EdgeOwnProps>{\r\n        let e: GObject<EdgeOwnProps> = new EdgeOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class EdgeStateProps extends GraphElementReduxStateProps {\r\n    node!: LEdge;\r\n    edge!: LEdge; // just alias for node\r\n    //lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    static new(): GObject<EdgeStateProps>{\r\n        let e: GObject<EdgeStateProps> = new EdgeStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n    // key: string;\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class DefaultUsageDeclarations{\r\n    // all can be deleted in usageDeclaration function except view.\r\n    view?: GraphElementReduxStateProps[\"view\"];\r\n    node?: GraphElementReduxStateProps[\"node\"];\r\n    data: GraphElementOwnProps[\"data\"];\r\n    [key:string]: any;\r\n    constructor(ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        /*this.data = ret.data;\r\n        this.view = ret.view;\r\n        this.node = ret.node;/*/\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations{\r\n    start!: EdgeOwnProps[\"start\"];\r\n    end!: EdgeOwnProps[\"end\"];\r\n}\r\n\r\n\r\n\r\nexport class VertexOwnProps extends GraphElementOwnProps {\r\n    // onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    // onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    isField?: boolean = false;\r\n    isVertex?: boolean = true;\r\n\r\n    decorated?: boolean; // for <decoratedStar /> (defaults true)\r\n    sides?: number // for <Polygon />, <Star /> and <Cross />\r\n    innerRadius?: number // for <Star /> and <Cross />\r\n    ratio?: number // for <Trapezoid />\r\n    rotate?: number // initial vertex rotation\r\n\r\n    static new(): GObject<VertexOwnProps>{\r\n        let e: GObject<VertexOwnProps> = new VertexOwnProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\nexport class VertexStateProps extends GraphElementReduxStateProps {\r\n    node!: LVoidVertex;\r\n    // lastSelected!: LModelElement | null;\r\n    // selected!: Dictionary<Pointer<DUser>, LModelElement|null>;\r\n    //selected!: LGraphElement|null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n\r\n    static new(): GObject<VertexStateProps>{\r\n        let e: GObject<VertexStateProps> = new VertexStateProps();\r\n        for (let k in e) if (e[k] === undefined) delete e[k];\r\n        return e;\r\n    }\r\n    protected constructor(){ super(); }\r\n}\r\n\r\n\r\nexport let contextFixedKeys: Dictionary<string, boolean> = {};\r\nsetContextFixedKeys();\r\n\r\nfunction setContextFixedKeys(){\r\n    // @ts-ignore: here i must use the constructor instead of new to have the undefined properties included.\r\n    let propmakers: GObject[] = [new EdgeOwnProps(), new EdgeStateProps(), new VertexOwnProps(), new VertexStateProps(), {\r\n        // \"model\", \"graph\",\r\n        \"constants\": true, \"usageDeclarations\": true,\r\n        \"component\": true,\r\n        \"htmlindex\": true,\r\n        \"state\": true, \"props\": true, \"stateProps\": true, \"ownProps\": true,\r\n        \"otherViews\": true, 'decorators':true, // only on final jsx, decorators are injected\r\n        //\"data\":true, \"node\":true, \"parentViewId\":true, \"parentnodeid\":true,// from props:\r\n        //\"view\":true, \"views\":true, \"viewScores\":true,// from props:\r\n        //\"children\":true, \"isGraph\":true, \"isVertex\":true, isEdge:true, isEdgePoint:true, isVoid: true, \"graphid\":true, \"nodeid\":true,// from props:\r\n    }];\r\n    for (let props of propmakers) for (let k in props) contextFixedKeys[k] = true;\r\n    delete contextFixedKeys.class;\r\n    return contextFixedKeys;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}