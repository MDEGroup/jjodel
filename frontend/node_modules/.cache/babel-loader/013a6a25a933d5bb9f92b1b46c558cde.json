{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\editors\\\\views\\\\data\\\\PermissionViewTab.tsx\";\nimport { Input, LPointerTargetable } from \"../../../../joiner\";\nimport { connect } from \"react-redux\";\nimport './permissions.scss';\nimport { JsEditor } from \"../../languages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PermissionViewTabComponent(props) {\n  let groups = {\n    'Metamodelers': {},\n    'Modelers': {},\n    'Language designer': {},\n    'Concrete Syntax designer': {}\n  };\n  let groupsarr = Object.keys(groups);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'permission-tab',\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'group-permission',\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'single-permission',\n        children: /*#__PURE__*/_jsxDEV(JsEditor, {\n          title: 'Replace Structure Editor',\n          initialExpand: () => false,\n          data: props.view,\n          field: 'example1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'single-permission',\n        children: /*#__PURE__*/_jsxDEV(JsEditor, {\n          title: 'Replace Node Editor',\n          initialExpand: () => false,\n          data: props.view,\n          field: 'example2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), groupsarr.map(group => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'group-permission',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [group, \" can:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: 'single-permission',\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: 'checkbox3',\n          data: props.view,\n          field: 'example1' + group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Edit View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n_c = PermissionViewTabComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const PermissionViewTab = connect(mapStateToProps, mapDispatchToProps)(PermissionViewTabComponent);\nPermissionViewTab.cname = 'PermissionViewTab';\nPermissionViewTabComponent.cname = 'PermissionViewTabComponent';\nvar _c;\n$RefreshReg$(_c, \"PermissionViewTabComponent\");","map":{"version":3,"names":["Input","LPointerTargetable","connect","JsEditor","jsxDEV","_jsxDEV","PermissionViewTabComponent","props","groups","groupsarr","Object","keys","className","children","title","initialExpand","data","view","field","fileName","_jsxFileName","lineNumber","columnNumber","map","group","type","_c","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","PermissionViewTab","cname","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/editors/views/data/PermissionViewTab.tsx"],"sourcesContent":["import {DState, DViewElement, Input, LPointerTargetable, LViewElement, Overlap, Pointer} from \"../../../../joiner\";\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {Dispatch} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport './permissions.scss';\r\nimport {JsEditor} from \"../../languages\";\r\n\r\n\r\nexport function PermissionViewTabComponent(props: AllProps): JSX.Element{\r\n    let groups={'Metamodelers':{}, 'Modelers':{}, 'Language designer':{}, 'Concrete Syntax designer':{}};\r\n    let groupsarr = Object.keys(groups);\r\n\r\n    return <section className={'permission-tab'}>\r\n        <section className={'group-permission'}>\r\n            <label className={'single-permission'}>\r\n                <JsEditor title={'Replace Structure Editor'} initialExpand={()=>false} data={props.view} field={'example1'}/>\r\n            </label>\r\n            <label className={'single-permission'}>\r\n                <JsEditor title={'Replace Node Editor'} initialExpand={()=>false}  data={props.view} field={'example2'}/>\r\n            </label>\r\n        </section>\r\n        {groupsarr.map(group => <section className={'group-permission'}>\r\n            <h2>{group} can:</h2>\r\n            <label className={'single-permission'}>\r\n                <Input type={'checkbox3'} data={props.view} field={'example1' + group}/>\r\n                <span>Edit View</span>\r\n            </label>\r\n            {/*\r\n            readmode should alwasy be on. write mode i can take it from model permissions, and allow it if query string does not contain =\r\n            or if it does not match a user regexp\r\n            <label className={'single-permission'}>\r\n                <Input type={'checkbox'} data={props.view} field={'example'}/>\r\n                <span>Use Console</span>\r\n            </label>*/}\r\n        </section>)}\r\n    </section>;\r\n}\r\n\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {\r\n}\r\n\r\ntype AllProps = Overlap<Overlap<OwnProps, StateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps { const ret: DispatchProps = {}; return ret; }\r\n\r\nexport const PermissionViewTab = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PermissionViewTabComponent);\r\n\r\n(PermissionViewTab as any).cname = 'PermissionViewTab';\r\nPermissionViewTabComponent.cname = 'PermissionViewTabComponent';\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}