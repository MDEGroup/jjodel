{"ast":null,"code":"import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{PureComponent}from'react';import{connect}from'react-redux';import'./GenericInput.scss';import{Log,TextArea,Select,ShortAttribETypes,Input,U}from'../../joiner';import{LPointerTargetable,RuntimeAccessibleClass}from'../../joiner';import{SizeInput}from'./SizeInput';import JavascriptEditor from\"../rightbar/jsEditor/JavascriptEditor\";// private\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GenericInputComponent=/*#__PURE__*/function(_PureComponent){_inherits(GenericInputComponent,_PureComponent);var _super=_createSuper(GenericInputComponent);function GenericInputComponent(props,context){_classCallCheck(this,GenericInputComponent);return _super.call(this,props,context);}_createClass(GenericInputComponent,[{key:\"render\",value:function render(){var d=this.props.data.__raw||this.props.data;var l=LPointerTargetable.wrap(this.props.data);var field=this.props.field;var info;if(!this.props.info){var DConstructor=RuntimeAccessibleClass.get(d.className);var singleton=DConstructor.singleton;info=singleton['__info_of__'+this.props.field];}else info=this.props.info;if(!info){Log.eDevv(\"<GenericInput/> could not find info of \"+this.props.field,{props:this.props});return/*#__PURE__*/_jsx(_Fragment,{});}var type;var enumOptions={};// 'Options' entry is a fallback for items without an optgroup\nvar enumOptionsJSX;if(info.enum){type='EEnum';var prevoptgroup='Options';var group;var option;for(var key in info.enum){var val=info.enum[key];if(key.indexOf('(')===0){var end=key.indexOf(')');group=key.substring(1,end).trim();option=key.substring(end+1).trim();prevoptgroup=group;}else{option=key;group=prevoptgroup;}if(!enumOptions[group])enumOptions[group]={};enumOptions[group][option]=val;}var unsorted=enumOptions.Options;delete enumOptions.Options;enumOptionsJSX=/*#__PURE__*/_jsxs(_Fragment,{children:[//data-selected={l[field] === unsorted[optkey]}\nunsorted&&Object.keys(unsorted).map(function(optKey){return/*#__PURE__*/_jsx(\"option\",{value:unsorted[optKey],children:optKey});}),Object.keys(enumOptions).map(function(grpKey){return/*#__PURE__*/_jsx(\"optgroup\",{label:grpKey,children:Object.keys(enumOptions[grpKey]).map(function(optKey){return/*#__PURE__*/_jsx(\"option\",{value:enumOptions[grpKey][optKey],children:optKey});})});})]});}else{if(typeof info.type==='string'){if(info.type.indexOf('Function')===0)type='Function';else type=info.type;}else{if(!info.type){Log.exDevv('missing __info_of__ type for '+d.className+'.'+this.props.field,{d:d,info:info,props:this.props});return/*#__PURE__*/_jsx(_Fragment,{});}var infoType=info.type;type=infoType.cname||infoType.className||infoType.name;Log.exDev(!type,'missing type:',{type:type,info:info});}}/*if (type.indexOf('|') !== -1) {\r\n            type = 'EEnum';\r\n            let options = type.split('|');\r\n            if (!enumOptions.Option) enumOptions.Option = {};\r\n            for (let o in options){\r\n                o = o.trim();\r\n                enumOptions.Option[o] = o;\r\n            }\r\n        }*/ // const otherProps: {[inputattribute:HTMLInputTypeAttribute]: any} = {...this.props};\nvar otherProps=_objectSpread({},this.props);function setMinMax(max){if(info.min!==undefined)otherProps.min=info.min;else otherProps.min=info.positive===true?0:-max/2;// assume false if non specified\nif(info.max!==undefined)otherProps.max=info.max;else otherProps.max=info.positive===false?max/2-1:max-1;// assume true if non specified\n}var label=info.label||this.props.field;if(typeof label===\"string\")label=U.uppercaseFirstLetter(info.label||this.props.field);if(type.toLowerCase().indexOf(\"function(\")>=0||type.indexOf(\"()=>\")>=0)type=\"Function\";switch(type.toLowerCase()){default:Log.e('invalid type in GenericInput',{type:type,props:this.props,info:info,d:d});return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},otherProps),{},{className:'danger',style:{color:'red',border:'1px solid red'},children:[\"Invalid GInput type: '\",type,\"'\"]}));case'point':case'graphpoint':case'size':case'graphSsize':return/*#__PURE__*/_jsx(SizeInput,_objectSpread(_objectSpread({},otherProps),{},{data:l,field:this.props.field,label:label}));case'text':return/*#__PURE__*/_jsx(TextArea,_objectSpread(_objectSpread({inputClassName:'input my-auto ms-auto '},otherProps),{},{className:(this.props.rootClassName||'')+' '+(this.props.className||''),data:this.props.data,field:this.props.field,jsxLabel:label,tooltip:this.props.tooltip}));case'function':return/*#__PURE__*/_jsx(JavascriptEditor,_objectSpread({className:(this.props.rootClassName||'')+' '+(this.props.className||''),placeHolder:this.props.placeholder,jsxLabel:this.props.label,data:this.props.data,field:this.props.field,tooltip:this.props.tooltip,hide:this.props.hide,style:this.props.style,title:this.props.title,getter:this.props.getter,setter:this.props.setter,readonly:this.props.readOnly,height:this.props.height},otherProps/*not working? i had to list them all*/),this.props.key);case'eenum':return/*#__PURE__*/_jsx(Select,_objectSpread(_objectSpread({inputClassName:'my-auto ms-auto select'},otherProps),{},{className:this.props.rootClassName,data:this.props.data,field:this.props.field,options:enumOptionsJSX,jsxLabel:label,tooltip:this.props.tooltip}));// <input> natives\ncase'radio':// problem: this would need to return a <form> and multiple inputs generated by a single element.\n// it should be easy but unlikely it will be needed so i won't do it for now.\nLog.eDevv('radio input type is unsupported');break;case'datetime':type='datetime-local';break;case'color':break;case'email':break;case'image':break;// ?\ncase'password':break;case'range':break;case'month':break;case'week':break;case'datetime-local':break;case'time':break;case'url':break;// ecore\ncase ShortAttribETypes.EChar.toLowerCase():type='text';if(undefined===otherProps.minLength)otherProps.minLength=1;otherProps.maxLength=1;// otherProps.pattern = '^.{1}$';\nbreak;case\"string\":case ShortAttribETypes.EString.toLowerCase():type='text';break;case ShortAttribETypes.EBoolean.toLowerCase():type='checkbox';break;case ShortAttribETypes.EByte.toLowerCase():type='number';setMinMax(Math.pow(2,8));break;case ShortAttribETypes.EShort.toLowerCase():type='number';setMinMax(Math.pow(2,16));break;case ShortAttribETypes.EInt.toLowerCase():type='number';setMinMax(Math.pow(2,32));break;case ShortAttribETypes.ELong.toLowerCase():type='number';setMinMax(Math.pow(2,64));break;case ShortAttribETypes.EFloat.toLowerCase():case ShortAttribETypes.EDouble.toLowerCase():type='number';if(!otherProps.step)otherProps.step=info.step||0.1;if(!otherProps.pattern)otherProps.pattern=info.pattern||'^[0-9]+\\.[0-9]{'+info.digits+'}$';break;case ShortAttribETypes.EDate.toLowerCase():type='datetime-local';break;}// delete otherProps.field; delete otherProps.data; delete otherProps.infoof;\nreturn/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({inputClassName:'my-auto ms-auto input'},otherProps),{},{className:this.props.rootClassName,data:this.props.data,field:this.props.field,jsxLabel:label,tooltip:this.props.tooltip,type:type}));}}]);return GenericInputComponent;}(PureComponent);// private\n// {[inputattribute:HTMLInputAttribute]: any};\n// private\n// private\n// private\n////// mapper func\nfunction mapStateToProps(state,ownProps){var ret={};/// to fill\nreturn ret;}function mapDispatchToProps(dispatch){var ret={};/// to fill\nreturn ret;}export var GenericInput=connect(mapStateToProps,mapDispatchToProps)(GenericInputComponent);/*\r\n\r\nSupported __info_of__.type values:\r\n\r\n\r\n- ShortAttribETypes     =   ecore type names\r\n- text                  =   for textarea\r\n- Function              =   for textarea\r\n- richtext              =   for monaco editor\r\n- native <input> types\r\n- DPointerTargetable    = will make a select out of available elements of that kind\r\n- GraphPoint            = will make a mini interactive square where you can select a point, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n- GraphSize             = will make a mini interactive square where you can select a rectangle, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n\r\n\r\n- typescript enumerators, with optgroups defined as following\r\n        (optgroup1) option1\r\n        option2 // assumed still in optgroup1\r\n        option3 // assumed still in optgroup1\r\n        (optgroup2) option4\r\n        if first option(s) are without optgroup, they are grouped in optgroup 'Options'\r\n\r\nNOT SUPPORT\r\n- 'EEnum' string, it is only used internally. pass it the whole enum.\r\nnative <input> not supported\r\n- radio\r\n- tel\r\n- search\r\n- reset\r\n- hidden\r\n- image\r\n- button\r\n- submit\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n* */","map":{"version":3,"names":["React","PureComponent","connect","Log","TextArea","Select","ShortAttribETypes","Input","U","LPointerTargetable","RuntimeAccessibleClass","SizeInput","JavascriptEditor","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","GenericInputComponent","_PureComponent","_inherits","_super","_createSuper","props","context","_classCallCheck","call","_createClass","key","value","render","d","data","__raw","l","wrap","field","info","DConstructor","get","className","singleton","eDevv","type","enumOptions","enumOptionsJSX","enum","prevoptgroup","group","option","val","indexOf","end","substring","trim","unsorted","Options","children","Object","keys","map","optKey","grpKey","label","exDevv","infoType","cname","name","exDev","otherProps","_objectSpread","setMinMax","max","min","undefined","positive","uppercaseFirstLetter","toLowerCase","e","style","color","border","inputClassName","rootClassName","jsxLabel","tooltip","placeHolder","placeholder","hide","title","getter","setter","readonly","readOnly","height","options","EChar","minLength","maxLength","EString","EBoolean","EByte","Math","pow","EShort","EInt","ELong","EFloat","EDouble","step","pattern","digits","EDate","mapStateToProps","state","ownProps","ret","mapDispatchToProps","dispatch","GenericInput"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/GenericInput.tsx"],"sourcesContent":["import React, {Dispatch, InputHTMLAttributes, PureComponent, ReactNode} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './GenericInput.scss';\r\nimport {\r\n    Pointer,\r\n    Info,\r\n    GObject,\r\n    DocString,\r\n    Dictionary,\r\n    Log,\r\n    TextArea,\r\n    Select,\r\n    ShortAttribETypes,\r\n    Input, LViewElement, DViewElement, U\r\n} from '../../joiner';\r\nimport {DState, DPointerTargetable, LPointerTargetable, RuntimeAccessibleClass} from '../../joiner';\r\nimport {SizeInput} from './SizeInput';\r\nimport JsEditor from \"../rightbar/jsEditor/JsEditor\";\r\nimport JavascriptEditor from \"../rightbar/jsEditor/JavascriptEditor\";\r\n\r\n// private\r\ninterface ThisState {\r\n}\r\ntype Dic<K extends string|number, V> = Dictionary<K, V>;\r\ntype String<T> = DocString<T>;\r\nclass GenericInputComponent extends PureComponent<AllProps, ThisState/*undefined*/>{\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        let d: DViewElement = ((this.props.data as LPointerTargetable).__raw || this.props.data) as any;\r\n        let l: LViewElement = LPointerTargetable.wrap(this.props.data) as LViewElement;\r\n        let field: keyof LViewElement = this.props.field as any;\r\n        let info: GObject<Info>;\r\n        if (!this.props.info){\r\n            let DConstructor: typeof DPointerTargetable = RuntimeAccessibleClass.get(d.className);\r\n            let singleton: GObject<LPointerTargetable> = DConstructor.singleton;\r\n            info = singleton['__info_of__' + this.props.field] ;\r\n        } else info = this.props.info;\r\n        if (!info) {\r\n            Log.eDevv(\"<GenericInput/> could not find info of \" + this.props.field, {props:this.props});\r\n            return <></>;\r\n        }\r\n\r\n        let type: string;\r\n        let enumOptions: Dic<String<'optgroup'>, Dic<String<'options'>, String<'values'>>> = {}; // 'Options' entry is a fallback for items without an optgroup\r\n        let enumOptionsJSX: JSX.Element | undefined;\r\n        if (info.enum) {\r\n            type = 'EEnum';\r\n            let prevoptgroup: string = 'Options';\r\n            let group: string;\r\n            let option: string;\r\n            for (let key in info.enum) {\r\n                let val: string = info.enum[key];\r\n                if (key.indexOf('(') === 0) {\r\n                    let end = key.indexOf(')');\r\n                    group = key.substring(1, end).trim();\r\n                    option = key.substring(end + 1).trim();\r\n                    prevoptgroup = group;\r\n                } else {\r\n                    option = key;\r\n                    group = prevoptgroup;\r\n                }\r\n                if (!enumOptions[group]) enumOptions[group] = {};\r\n                enumOptions[group][option] = val;\r\n            }\r\n            let unsorted = enumOptions.Options;\r\n            delete enumOptions.Options;\r\n            enumOptionsJSX = <>\r\n                {\r\n                    //data-selected={l[field] === unsorted[optkey]}\r\n                    unsorted && Object.keys(unsorted).map((optKey: string) => <option value={unsorted[optKey]}>{optKey}</option>)\r\n                }\r\n                {Object.keys(enumOptions).map((grpKey: string) => <optgroup label={grpKey}>{\r\n                Object.keys(enumOptions[grpKey]).map( (optKey: string) => <option value={enumOptions[grpKey][optKey]}>{optKey}</option>)\r\n            }</optgroup>)}</>;\r\n        }\r\n        else {\r\n            if (typeof info.type === 'string') {\r\n                if (info.type.indexOf('Function') === 0) type = 'Function';\r\n                else type = info.type;\r\n            }\r\n            else {\r\n                if (!info.type) { Log.exDevv('missing __info_of__ type for ' + d.className + '.' + this.props.field, {d, info, props: this.props}); return <></>}\r\n                let infoType: GObject = info.type;\r\n                type = infoType.cname || infoType.className || infoType.name;\r\n                Log.exDev(!type, 'missing type:', {type, info});\r\n            }\r\n        }\r\n\r\n        /*if (type.indexOf('|') !== -1) {\r\n            type = 'EEnum';\r\n            let options = type.split('|');\r\n            if (!enumOptions.Option) enumOptions.Option = {};\r\n            for (let o in options){\r\n                o = o.trim();\r\n                enumOptions.Option[o] = o;\r\n            }\r\n        }*/\r\n\r\n        // const otherProps: {[inputattribute:HTMLInputTypeAttribute]: any} = {...this.props};\r\n        const otherProps: InputHTMLAttributes<Event> = {...this.props} as any;\r\n        function setMinMax(max: number): void {\r\n            if (info.min !== undefined) otherProps.min = info.min;\r\n            else otherProps.min = info.positive === true ? 0 : -max / 2; // assume false if non specified\r\n\r\n            if (info.max !== undefined) otherProps.max = info.max;\r\n            else otherProps.max = info.positive === false ? max/2 - 1 : max-1; // assume true if non specified\r\n        }\r\n        let label: ReactNode = info.label || this.props.field;\r\n        if (typeof label === \"string\") label = U.uppercaseFirstLetter(info.label || this.props.field);\r\n\r\n        if (type.toLowerCase().indexOf(\"function(\") >=0 || type.indexOf(\"()=>\") >=0) type = \"Function\";\r\n        switch (type.toLowerCase()) {\r\n            default:\r\n                Log.e('invalid type in GenericInput', {type, props:this.props, info, d});\r\n                return <div {...otherProps as any} className={'danger'} style={{color: 'red', border: '1px solid red'}}>Invalid GInput type: '{type}'</div>;\r\n            case 'point': case 'graphpoint': case 'size': case 'graphSsize':\r\n                return <SizeInput {...otherProps} data={l} field={this.props.field} label={label} />;\r\n            case 'text':\r\n                return <TextArea inputClassName={'input my-auto ms-auto '} {...otherProps} className={(this.props.rootClassName||'')+' '+(this.props.className||'')}\r\n                                 data={this.props.data} field={this.props.field}\r\n                                 jsxLabel={label} tooltip={this.props.tooltip} />;\r\n            case 'function':\r\n                return <JavascriptEditor className={(this.props.rootClassName||'')+' '+(this.props.className||'')} placeHolder={this.props.placeholder}\r\n                                         jsxLabel={this.props.label}\r\n                                         data={this.props.data} field={this.props.field} tooltip={this.props.tooltip}\r\n                                         hide={this.props.hide} style={this.props.style} title={this.props.title}\r\n                                         getter={this.props.getter} setter={this.props.setter} key={this.props.key}\r\n                                         readonly={this.props.readOnly}\r\n                                         height={this.props.height}\r\n                                         {...otherProps as any /*not working? i had to list them all*/}  />;\r\n            case 'eenum':\r\n                return <Select inputClassName={'my-auto ms-auto select'} {...otherProps} className={this.props.rootClassName}\r\n                               data={this.props.data} field={this.props.field} options={enumOptionsJSX}\r\n                               jsxLabel={label} tooltip={this.props.tooltip} />;\r\n                // <input> natives\r\n            case 'radio':\r\n                // problem: this would need to return a <form> and multiple inputs generated by a single element.\r\n                // it should be easy but unlikely it will be needed so i won't do it for now.\r\n                Log.eDevv('radio input type is unsupported'); break;\r\n            case 'datetime': type = 'datetime-local'; break;\r\n            case 'color': break;\r\n            case 'email': break;\r\n            case 'image': break; // ?\r\n            case 'password': break;\r\n            case 'range': break;\r\n            case 'month': break;\r\n            case 'week': break;\r\n            case 'datetime-local': break;\r\n            case 'time': break;\r\n            case 'url': break;\r\n            // ecore\r\n            case ShortAttribETypes.EChar.toLowerCase():\r\n                type = 'text';\r\n                if (undefined === otherProps.minLength) otherProps.minLength = 1;\r\n                otherProps.maxLength = 1;\r\n                // otherProps.pattern = '^.{1}$';\r\n                break;\r\n            case \"string\":\r\n            case ShortAttribETypes.EString.toLowerCase(): type = 'text'; break;\r\n            case ShortAttribETypes.EBoolean.toLowerCase(): type = 'checkbox'; break;\r\n            case ShortAttribETypes.EByte.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**8);\r\n                break;\r\n            case ShortAttribETypes.EShort.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**16);\r\n                break;\r\n            case ShortAttribETypes.EInt.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**32);\r\n                break;\r\n            case ShortAttribETypes.ELong.toLowerCase():\r\n                type = 'number';\r\n                setMinMax(2**64);\r\n                break;\r\n            case ShortAttribETypes.EFloat.toLowerCase():\r\n            case ShortAttribETypes.EDouble.toLowerCase():\r\n                type = 'number';\r\n                if (!otherProps.step) otherProps.step = info.step || 0.1;\r\n                if (!otherProps.pattern) otherProps.pattern = info.pattern || '^[0-9]+\\.[0-9]{' + info.digits + '}$';\r\n                break;\r\n            case ShortAttribETypes.EDate.toLowerCase(): type = 'datetime-local'; break;\r\n        }\r\n        // delete otherProps.field; delete otherProps.data; delete otherProps.infoof;\r\n        return <Input inputClassName={'my-auto ms-auto input'} {...otherProps} className={this.props.rootClassName}\r\n                      data={this.props.data} field={this.props.field}\r\n                      jsxLabel={label} tooltip={this.props.tooltip} type={type as any}/>;\r\n    }\r\n}\r\n\r\n// private\r\ninterface _OwnProps {\r\n    // propsRequestedFromJSX_AsAttributes: string;\r\n    data: DPointerTargetable | LPointerTargetable;\r\n    field: string;\r\n    key?: string;\r\n    label?: ReactNode;\r\n    title?: ReactNode;\r\n    info?: Info | undefined;\r\n    tooltip?: boolean|string;\r\n\r\n    className?: string;\r\n    rootClassName?: string;\r\n    inputClassName?: string;\r\n    rootStyle?: GObject;// this goes to root\r\n    style?: GObject; // this goes at the root of <Input> or <Select> element(s)\r\n    inputStyle?: GObject; // this goes to the actual native <input> or <select> element(s)\r\n    hide?: undefined | boolean; // for autohiding Javascript editor\r\n    getter?: <T extends LPointerTargetable>(data: T, field: DocString<\"keyof T\">) => string;\r\n    setter?: <T extends LPointerTargetable>(value: string|boolean, data: T, field: DocString<\"keyof T\">) => void;\r\n\r\n    /*\r\n    they might be useful, but can just add them in without declaring all of them. i pass them like <input ...otherprops>\r\n    multiple?: boolean;  // multi value for select! works on file, email (just changes default validation pattern), and maybe others\r\n    size?: ??\r\n    accept?: string // only for type = 'file'\r\n    capture?: string // only for type = 'file'\r\n    autocomplete?: string; // only for <input> types\r\n    disabled?: boolean;\r\n    height?: string; // for 'image'\r\n    list?: string; // datalist\r\n    maxLength?: string; // chars\r\n    */\r\n    // many more skipped mostly for forms\r\n\r\n}\r\ntype OwnProps = _OwnProps & InputHTMLAttributes<Event>; // {[inputattribute:HTMLInputAttribute]: any};\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\n\r\nexport const GenericInput = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GenericInputComponent);\r\n\r\n\r\n/*\r\n\r\nSupported __info_of__.type values:\r\n\r\n\r\n- ShortAttribETypes     =   ecore type names\r\n- text                  =   for textarea\r\n- Function              =   for textarea\r\n- richtext              =   for monaco editor\r\n- native <input> types\r\n- DPointerTargetable    = will make a select out of available elements of that kind\r\n- GraphPoint            = will make a mini interactive square where you can select a point, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n- GraphSize             = will make a mini interactive square where you can select a rectangle, output is in % [0, 1].\r\n                          NEED A SETTER AND GETTER to get from % to coords and the other way\r\n\r\n\r\n- typescript enumerators, with optgroups defined as following\r\n        (optgroup1) option1\r\n        option2 // assumed still in optgroup1\r\n        option3 // assumed still in optgroup1\r\n        (optgroup2) option4\r\n        if first option(s) are without optgroup, they are grouped in optgroup 'Options'\r\n\r\nNOT SUPPORT\r\n- 'EEnum' string, it is only used internally. pass it the whole enum.\r\nnative <input> not supported\r\n- radio\r\n- tel\r\n- search\r\n- reset\r\n- hidden\r\n- image\r\n- button\r\n- submit\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n* */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}