{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\edge\\\\Edge.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Xarrow from \"react-xarrows\";\nimport { SetRootFieldAction } from \"../../redux/action/action\";\nimport { useEffectOnce } from \"usehooks-ts\";\nimport { useStateIfMounted } from \"use-state-if-mounted\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crypto = require(\"crypto\");\nfunction EdgeComponent(props, state) {\n  _s();\n  var _source, _source2;\n  const sourceNode = props.source;\n  let source = sourceNode.model;\n  const targetNode = props.target;\n  let target = targetNode.model;\n  const show = props.showAnchor;\n  const size = props.size;\n  const color = props.color;\n  const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\n  const firstOptions = {\n    start: sourceNode.id,\n    end: middleAnchor,\n    path: \"grid\",\n    color: color,\n    strokeWidth: size,\n    showHead: false,\n    zIndex: 100\n  };\n  const lastOptions = {\n    start: middleAnchor,\n    end: targetNode.id,\n    path: \"grid\",\n    color: color,\n    strokeWidth: size,\n    zIndex: 100\n  };\n  if (((_source = source) === null || _source === void 0 ? void 0 : _source.className) == \"DReference\") {\n    source = source;\n    firstOptions.start = source.father.nodes[0].id;\n    lastOptions.showHead = false;\n    if (source.containment) {\n      firstOptions.showTail = true;\n      firstOptions.tailSize = 15;\n      firstOptions.tailShape = {\n        svgElem: /*#__PURE__*/_jsxDEV(\"rect\", {\n          style: {\n            rotate: \"45deg\",\n            fill: \"white\",\n            strokeWidth: \"0.1\",\n            stroke: color\n          },\n          width: \".5pt\",\n          height: \".5pt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 48\n        }, this),\n        offsetForward: 1\n      };\n    }\n  }\n  if (((_source2 = source) === null || _source2 === void 0 ? void 0 : _source2.className) == \"DClass\") {\n    source = source;\n    lastOptions.showHead = true;\n    lastOptions.headSize = 15;\n    lastOptions.headColor = 'white';\n    lastOptions.headShape = {\n      svgElem: /*#__PURE__*/_jsxDEV(\"svg\", {\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeWidth: 0.1,\n          stroke: color,\n          d: \"M 0 0 L 1 0.5 L 0 1 L 0 0 z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }, this)\n    };\n  }\n  useEffectOnce(() => {\n    setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\n  });\n  useEffect(() => {\n    const middleware = $('[id=\"' + middleAnchor + '\"]');\n    if (middleware) {\n      middleware.draggable({\n        cursor: \"grabbing\",\n        containment: \"window\",\n        drag: function (event, obj) {\n          SetRootFieldAction.new(\"dragging\", {});\n        }\n      });\n    }\n  });\n  const click = event => {\n    if (source) {\n      SetRootFieldAction.new('_lastSelected', {\n        node: sourceNode.id,\n        view: undefined,\n        modelElement: source.id\n      });\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  const contextMenu = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: click,\n    onContextMenu: contextMenu,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderColor: color\n      },\n      id: middleAnchor,\n      className: \"middle-anchor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Xarrow, {\n      ...firstOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Xarrow, {\n      ...lastOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n}\n_s(EdgeComponent, \"8f4uXJ3zca7a3kRlTpG/GGqG7Og=\", false, function () {\n  return [useStateIfMounted, useEffectOnce];\n});\n_c = EdgeComponent;\nfunction mapStateToProps(state, ownProps) {\n  const edgeSettings = state._edgeSettings;\n  const showAnchor = false; //edgeSettings.showAnchor;\n  const size = edgeSettings.strokeWidth;\n  const color = edgeSettings.color;\n  const ret = {\n    showAnchor,\n    size,\n    color\n  };\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const EdgeConnected = connect(mapStateToProps, mapDispatchToProps)(EdgeComponent);\nexport const Edge = function (props) {\n  let childrens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(EdgeConnected, {\n    ...props,\n    childrens\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = Edge;\nexport default Edge;\nvar _c, _c2;\n$RefreshReg$(_c, \"EdgeComponent\");\n$RefreshReg$(_c2, \"Edge\");","map":{"version":3,"names":["React","useEffect","connect","Xarrow","SetRootFieldAction","useEffectOnce","useStateIfMounted","$","jsxDEV","_jsxDEV","crypto","require","EdgeComponent","props","state","_s","_source","_source2","sourceNode","source","model","targetNode","target","show","showAnchor","size","color","middleAnchor","setMiddleAnchor","firstOptions","start","id","end","path","strokeWidth","showHead","zIndex","lastOptions","className","father","nodes","containment","showTail","tailSize","tailShape","svgElem","style","rotate","fill","stroke","width","height","fileName","_jsxFileName","lineNumber","columnNumber","offsetForward","headSize","headColor","headShape","children","d","randomBytes","toString","middleware","draggable","cursor","drag","event","obj","new","click","node","view","undefined","modelElement","preventDefault","stopPropagation","contextMenu","onClick","onContextMenu","borderColor","_c","mapStateToProps","ownProps","edgeSettings","_edgeSettings","ret","mapDispatchToProps","dispatch","EdgeConnected","Edge","childrens","arguments","length","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/edge/Edge.tsx"],"sourcesContent":["import {IStore} from \"../../redux/store\";\r\nimport React, {Dispatch, ReactElement, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {LGraphElement} from \"../../model/dataStructure\";\r\nimport Xarrow, {xarrowPropsType, Xwrapper} from \"react-xarrows\";\r\nimport {SetRootFieldAction} from \"../../redux/action/action\";\r\nimport {GObject, LClass, LReference, Selectors} from \"../../joiner\";\r\nimport {useEffectOnce} from \"usehooks-ts\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport $ from \"jquery\";\r\n\r\nconst crypto = require(\"crypto\");\r\ninterface ThisState {}\r\nfunction EdgeComponent(props: AllProps, state: ThisState) {\r\n    const sourceNode = props.source;\r\n    let source: LClass|LReference|undefined = sourceNode.model as any;\r\n    const targetNode = props.target;\r\n    let target: LClass|LReference|undefined = targetNode.model as any;\r\n\r\n    const show = props.showAnchor;\r\n    const size = props.size;\r\n    const color = props.color;\r\n\r\n    const [middleAnchor, setMiddleAnchor] = useStateIfMounted('');\r\n\r\n    const firstOptions: xarrowPropsType = {\r\n        start: sourceNode.id, end: middleAnchor,\r\n        path: \"grid\", color: color, strokeWidth: size,\r\n        showHead: false, zIndex: 100\r\n    };\r\n    const lastOptions: xarrowPropsType = {\r\n        start: middleAnchor, end: targetNode.id,\r\n        path: \"grid\", color: color, strokeWidth: size, zIndex: 100\r\n    };\r\n\r\n    if(source?.className == \"DReference\") {\r\n        source = source as LReference;\r\n        firstOptions.start = source.father.nodes[0].id;\r\n        lastOptions.showHead = false;\r\n        if(source.containment) {\r\n            firstOptions.showTail = true;\r\n            firstOptions.tailSize = 15;\r\n            firstOptions.tailShape = {svgElem: <rect style={{\r\n                    rotate: \"45deg\", fill: \"white\", strokeWidth: \"0.1\", stroke: color,\r\n                }} width=\".5pt\" height=\".5pt\" />, offsetForward: 1};\r\n        }\r\n    }\r\n    if(source?.className == \"DClass\") {\r\n        source = source as LClass;\r\n        lastOptions.showHead = true;\r\n        lastOptions.headSize = 15;\r\n        lastOptions.headColor = 'white';\r\n        lastOptions.headShape = {svgElem:<svg><path strokeWidth={0.1} stroke={color} d=\"M 0 0 L 1 0.5 L 0 1 L 0 0 z\"/></svg>};\r\n    }\r\n\r\n    useEffectOnce(() => {\r\n        setMiddleAnchor(crypto.randomBytes(20).toString('hex'));\r\n    })\r\n\r\n    useEffect(() => {\r\n        const middleware: GObject = $('[id=\"' + middleAnchor + '\"]');\r\n        if(middleware) {\r\n            middleware.draggable({\r\n                cursor: \"grabbing\",\r\n                containment: \"window\",\r\n                drag: function (event: GObject, obj: GObject) {\r\n                    SetRootFieldAction.new(\"dragging\", {})\r\n                }\r\n            });\r\n        }\r\n    })\r\n\r\n    const click = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        if(source) {\r\n            SetRootFieldAction.new('_lastSelected', {\r\n                node: sourceNode.id,\r\n                view: undefined,\r\n                modelElement: source.id\r\n            });\r\n        }\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const contextMenu = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return(<div onClick={click} onContextMenu={contextMenu}>\r\n        <div style={{borderColor: color}} id={middleAnchor} className={\"middle-anchor\"}></div>\r\n        <Xarrow {...firstOptions} />\r\n        <Xarrow {...lastOptions} />\r\n    </div>);\r\n}\r\ninterface OwnProps { source: LGraphElement; target: LGraphElement; }\r\ninterface StateProps { showAnchor: boolean, size: number, color: string }\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: IStore, ownProps: OwnProps): StateProps {\r\n    const edgeSettings = state._edgeSettings;\r\n    const showAnchor = false //edgeSettings.showAnchor;\r\n    const size = edgeSettings.strokeWidth;\r\n    const color = edgeSettings.color;\r\n    const ret: StateProps = { showAnchor, size, color };\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const EdgeConnected = connect<StateProps, DispatchProps, OwnProps, IStore>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EdgeComponent);\r\n\r\nexport const Edge = (props: OwnProps, childrens: (string | React.Component)[] = []): ReactElement => {\r\n    return <EdgeConnected {...{...props, childrens}} />;\r\n}\r\nexport default Edge;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}