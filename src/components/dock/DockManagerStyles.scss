.pinnable-dock-root{
    display: flex;
    flex-flow: column;
    flex-grow:1;

    //.dock:hover{overflow: visible;}

    .pinnable-strip{
        --pinnable-strip-h: calc(0px + 31px);
        --pinnable-strip-w: calc(0px + 31px);
        --content-border: 1px solid #108ee9;
        --navbar-h: 32px;
        --footer-h: 28px;
        position: relative;
        background-color: whitesmoke;
        &.empty{
            display: none;
        }
        .view-editor-header+.dock-layout{
            position: relative !important;// rc-dock sets pos:absolute in direct style
            min-height: 75vh;
            min-width: 550px;
        }
        .view-list-elem{
            // min-width: 550px; if you want the whole view editor to match single view size
        }

        .dock-tab {
            height: calc(10px + var(--pinnable-strip-h)); // it will be overflow hidden but i don't want to have a "hole" in pointer-events:hover when i move to content.
        }
        .dock-tabpane{
            display: none;// original jus had visibility hidden which makes inactive tab take space for pinned tabs:hover
            &.dock-tabpane-active{
                display: block;
            }
        }
    .pinnable-strip .dock-content{
        position: absolute;
        left: 100%;
        border: 2px solid red;
    }


        &.dock-drop-indicator.empty{
            display: flex;
            position: absolute;
            background-color: transparent;
            pointer-events: none;
            z-index: 999;
            // because with pos:absolute it is not affected by flex and it collapses to left
            &.pinnable-strip-r{
                right:0;
            }
            &.pinnable-strip-b{
                bottom:0;
            }
        }
        &.dock-drop-indicator::after{
            content: '';
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            background: #88c7f4 !important;
            z-index: 400;
            position: absolute;
            box-sizing: border-box;
            pointer-events: none;
            border: solid 1px #fff;
            opacity: 0.5;
            box-shadow: 0 0 4px #ddd;
            transition: all 0.1s ease-out;
            // display: none;
        }
        .dock-layout{
            width: 100%;
            height: 100%;
            overflow: visible;
        }
    }
    transform-style: preserve-3d;
    //.dock-nav-list:hover{ background: red; }
    .pinnable-strip{

        transform-style: preserve-3d;

        &>.dock-layout{
            transform-style: preserve-3d;
            &>.dock-box {
                transform-style: preserve-3d;
                &>.dock-panel{
                    transform-style: preserve-3d;
                    &>.dock {
                        transform-style: preserve-3d;
                        overflow: visible;
                        &>.dock-content-holder{
                           // transform: translateZ(1px) scaleY or x(0); put in strip-t and strip-l cases separetely
                        }
                    }
                }
            }
        }
    }
}

.pinnable-strip{

    .dock-bar.drag-initiator{
        // disable whole panel dragging in strip.
        pointer-events: none;
    }
    .dock-nav-list>.dock-tab{
        //pointer-events: all; // re-enable events removed for panel in the single tabs

        // drag cannot start from subelements (content injected with portals)
        // otherwise since the tab header content is portal-ed, it bubbles the event to the source docklayout,
        // so i need to trigger it from the "static" empty tab header container
        >*{pointer-events: none;}
    }
    .active-on-mouseenter{ pointer-events: all; }


    .dock-tab:hover .pin-button{
        display: inline;
        margin-left: .5em;
        pointer-events: all;
    }
    .dock-content-holder{
        .ui-resizable-handle {
            // background: red;
            min-width: 20px;
            min-height: 20px;
        }

        opacity: 0;
        background: whitesmoke;
        border: 1px solid var(--content-border);
        transition: all .3s ease-in;
        // transition-delay: 0.5s;

        position: absolute;
        z-index: 999;
        min-height: 150px; // max-content does not work for height, because it is the "inline" content size, and inline only grows horizontally. max-content;
        min-width: max-content; // max(max-content, 50px);
        --safetymargin: 0px;
        pointer-events: all;
        max-width: calc(100vw - 0 * var(--pinnable-strip-w) - var(--safetymargin));
        max-height: calc(100vh - var(--footer-h) - var(--navbar-h) - 0 * var(--pinnable-strip-h) - var(--safetymargin));

        overflow: auto;
        //outline: 2px solid red;
        direction:rtl; // puts scrollbar left
        >*{
            direction:ltr;
        }

    }
    .dock-content-holder{
        .dock-content{
            display:block;
            // overflow: hidden; // jqui resizable sicons make it overflow
        }
        .ui-resizable-n{
            top: 0;
        }
        .ui-resizable-s{
            bottom: 0;
        }
        .ui-resizable-e{
            right: 0;
        }
        .ui-resizable-w{
            left: 0;
        }
        .ui-resizable-sw{
            left: 0;
            bottom:0;
        }
        .ui-resizable-se{
            right: 0;
            bottom:0;
        }
        .ui-resizable-nw{
            left: 0;
            top:0;
        }
        .ui-resizable-ne{
            right: 0;
            top:0;
        }
    }
}
.dock-tab > div {
    padding: 4px 14px;
    outline-color: #108ee9;
}
.pinnable-strip{
    .dock-tab > div {
        padding: 0px;
    }
    .dock-tab-btn, .drag-initiator, .drag-initiator>div{
        height: 100%;
        width: 100%;
    }
}
.active-on-mouseenter{
    padding: 4px 14px;
    height: 100%; width: 100%;
}
.pin-button{
    display: none;
}
.dock-tab:has(.moved-content){
    display: none;
}

.dock-tab{
    margin-top: 0;
    margin-bottom: 0;
}
.pinnable-strip{
    .dock-tab{
        margin-top: 0;
        margin-bottom: 0;
    }
}

.dock-tab-close-btn:hover,
.dock-tab-close-btn:focus {
    transform: scale(1.1);
}
.dock-tab:hover .dock-tab-close-btn,
.dock-tab-close-btn:focus {
    opacity: 1;
}
.tablist{
    height: 100%; // if it's auto i cannot set h-100 on subelements
}
.dock-nav-operations{
    float: right;
    height: 100%;
    .dock-nav-more{
        margin: auto;
    }
}
.dock-extra-content {
    /*display: flex;
    height: 30px;*//*
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0.5rem;*/
    float: right;
    height: 100%;
    margin-right: 0.5rem;
    width: auto;
    display: flex;
    .dock-panel-max-btn{
        position: unset; // overrides default style
        margin: auto;
        width: 1.25ric;
        &:hover{
            transform: scale(1.1);
        }
    }
}

.dock-tab-close-btn{
    background-image: none;
    top: 0;
    bottom: 0;
    height: auto;
    padding: 0;
    // background: red;
    display: flex;
    width: 28px;
    color: var(--terziary);
    &:hover{ color: red; }
    &::before{
        margin: auto;
        content: "\f62a"; // "\f623" x in a circle
        font-size: 1.5rem;

        font-family: bootstrap-icons !important;
        font-style: normal;
        font-weight: normal !important;
        font-variant: normal;
        text-transform: none;
    }
}
.pinnable-strip-t, .pinnable-strip-b{
    width: 100%;
    height: var(--pinnable-strip-h);
    .dock-content-holder {
        // override inline-style set by my js to make dynamic panel size float near the tab, now they occupy all the height/width
        left: 0 !important;
        transform: translateZ(1px) scaleY(0);
        width: 100vw;
        height: 33vh;
        // width: calc(100vw - var(--pinnable-strip-w));
    }
    .dock-content .dock-tabpane{
        overflow-y: auto;
    }
    &:has(
        .dock-nav-list:hover, .dock-nav-list:focus-within, .dock-nav-list:focus, .dock-nav-list:active,
        .dock-content-holder:hover, .dock-content-holder:focus-within, .dock-content-holder:focus, .dock-content-holder:active
    ){
        transform-style: preserve-3d;
        .dock-content-holder{
            transform: translateZ(1px) scaleY(1) !important;
            transition: transform .3s ease-out;
            opacity: 1;
        }
    }
}
.pinnable-strip-t{
    .dock-content-holder{
        transform-origin: top;
        border-top: none;
        top: calc(var(--pinnable-strip-h) - 3px);
    }
}
.pinnable-strip-b{
    .dock-content-holder{
        transform-origin: bottom;
        border-bottom: none;
        bottom: calc(var(--pinnable-strip-h) - 3px);
    }
}

.pinnable-strip-l, .pinnable-strip-r{
    width: var(--pinnable-strip-w);
    height: 100%;
    .dock-content-holder {
        // override inline-style set by my js to make dynamic panel size float near the tab, now they occupy all the height/width
        top: 0 !important; //calc( -1 * var(--pinnable-strip-h)) !important;
        transform: translateZ(1px) scaleX(0);
        // height: 100vh;
        width: 33vw;
        height: 100vh;
    }
    .dock-content .dock-tabpane{
        overflow-x: auto;
    }
    &:has(
        .dock-nav-list:hover, .dock-nav-list:focus-within, .dock-nav-list:focus, .dock-nav-list:active,
        .dock-content-holder:hover, .dock-content-holder:focus-within, .dock-content-holder:focus, .dock-content-holder:active
    ){
        transform-style: preserve-3d;
        .dock-content-holder{
            transform: translateZ(1px) scaleX(1) !important;
            transition: transform .3s ease-out;
            opacity: 1;
        }
    }
    .dock-nav{
        transform: translateX(23px) rotate(90deg);
        // transform: translateX(calc(var(--pinnable-strip-h) - 2px)) rotate(90deg);
        //transform: translateX(29px) rotate(90deg);
        transform-origin: top left;
        width: calc(100vh - var(--footer-h) - var(--navbar-h) - 0 * var(--pinnable-strip-h)) !important;
        height: var(--pinnable-strip-h) !important;

    }
}
.pinnable-strip-l{
    .dock-content-holder{
        transform-origin: left;
        border-left: none;
        left: calc(var(--pinnable-strip-w) - 2px);
    }

    .dock-nav-wrap{
        transform: translate(-0px, 2px) scaleY(-1);
        .active-on-mouseenter{
            transform: scaleX(-1);
        }
    }
}
.pinnable-strip-r{
    .dock-content-holder{
        border-right: none;
        right: calc(var(--pinnable-strip-w) - 2px);
    }
}
.pinnable-dock-middle-strip{
    // height: calc(100% - var(--pinnable-strip-h) * 2);
    flex-grow: 1;
    display: flex;
    position: relative;
    transform-style: preserve-3d;
}
.dock-layout.dock-drop-indicator{
    /*background: #88c7f4 !important;
    z-index: 400;
    position: absolute;
    box-sizing: border-box;
    pointer-events: none;
    border: solid 1px #fff;
    opacity: 0.5;
    box-shadow: 0 0 4px #ddd;
    display: none;
    transition: all 0.1s ease-out;*/
}

div.dock-drop-layer{
    --drop-button-size: 32px;
    .dock-drop-square.dock-drop-top-anchor,
    .dock-drop-square.dock-drop-left-anchor,
    .dock-drop-square.dock-drop-right-anchor,
    .dock-drop-square.dock-drop-bottom-anchor{
        &:hover{background: #88c7f4;  color: white;}
        //&::before{content:'📌'}
        >.dock-drop-square-box{
            display: flex;
            >.bi{
                color: inherit;
                margin:auto;
            }
        }
    }
    .dock-drop-square.dock-drop-top-anchor{
        top: calc(50% - var(--drop-button-size) * 3);
    }
    .dock-drop-square.dock-drop-left-anchor{
        left: calc(50% - var(--drop-button-size) * 3);
    }
    .dock-drop-square.dock-drop-right-anchor{
        left: calc(50% + var(--drop-button-size) * 2);
    }
    .dock-drop-square.dock-drop-bottom-anchor{
        top: calc(50% + var(--drop-button-size) * 2);
    }
}


.pinnable-dock-root.gray-style{
    --hover-color: black;
    --font-color: rgba(0,0, 0, 0.85);
    --panel-content-color: rgba(0,0, 0, 0.85);
    --inactive-tab-font-color: #767676;
    --underline-color: #B2B2B2;
    --bg-color: #D9D9D9;

    --bs-primary-rgb: var(--font-color); // for project summary left tab
    .active-on-mouseenter{ // only for pinned tabs, additional pad
        padding: 0px 1px;
    }
    .pinnable-strip{
        --content-border: #767676;
    }
    .dock-content-holder{
        background: var(--bg-color);
    }
    .dock-nav-list{
        background: var(--bg-color);
        .dock-tab{
            background: var(--bg-color);
            color: var(--inactive-tab-font-color); //rgba(0, 0, 0, 0.85);
            border-bottom: 1px solid var(--underline-color); //#ddd;

            &.dock-tab-active{
                color: var(--hover-color);
            }
        }
        .dock-tab > div {
            padding: 4px 8px;
        }
        .dock-ink-bar{
            background-color: var(--hover-color); //#108ee9
        }
    }

    .dock-top .dock-bar{
        background: var(--bg-color);
        border-bottom: none; //1px solid #f3f3f3
    }
    .dock-panel{
        background: var(--bg-color);
    }
    .dock-content .dock-tabpane{
        background-color: var(--bg-color); // whitesmoke;
        overflow:hidden;
    }
}
.not-strip{
    flex-grow: 1;
    display: flex;
    &>.dock-layout{
        .dock-panel{
            display:none;
            &:has(.not-pinned){
                display: block;
            }
            // undo for nested docks
            .dock-layout{
                .dock-panel{
                    display:block;
                }
            }
        }
    }

}


/// default styles for graph
.GraphContainer {/*
    *:has(>select, >input){
        display: flex;
        select, input{
            flex-grow: 1;
            flex-basis: 50px;
            min-width: 50px;
        }
    }*/
    /*
    select, input{
        min-width: 50px;
        width: 33%
    }*/
}
