{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class,_class2,_dec2,_class3,_class4,_dec3,_class5,_class6,_dec4,_class7,_class8;import{BEGIN,Constructors,CoordinateMode,Debug,Defaults,DPointerTargetable,DViewPoint,EdgeBendingMode,EdgeGapMode,EGraphElements,EModelElements,END,GraphPoint,GraphSize,Log,LPointerTargetable,LUser,LViewPoint,MyProxyHandler,Pointers,RuntimeAccessible,RuntimeAccessibleClass,SetFieldAction,SetRootFieldAction,ShortAttribETypes,store,TRANSACTION,U,windoww}from\"../../joiner\";import{DUser,transientProperties}from\"../../joiner/classes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var units={'Local-font relative':{'cap':'cap - (Cap height) the nominal height of capital letters of the element\\'s font.','ch':'ch - Average character advance of a narrow glyph in the element\\'s font, as represented by the \"0\" (ZERO, U+0030) glyph.','em':'em - Font size of the element\\'s font.','ex':'ex - x-height of the element\\'s font.','ic':'ic - Average character advance of a full-width glyph in the element\\'s font, as represented by the \"水\" (CJK water ideograph, U+6C34) glyph.','lh':'lh - Line height of the element.'},'Root-font relative':{'rcap':'rcap - Cap height (the nominal height of capital letters) of the root element\\'s font.','rch':'rch - Average character advance of a narrow glyph in the root element\\'s font, as represented by the \"0\" (ZERO, U+0030) glyph.','rem':'rem - Font size of the root element\\'s font.','rex':'rex - x-height of the root element\\'s font.','ric':'ric - Average character advance of a full-width glyph in the root element\\'s font, as represented by the \"水\" (CJK water ideograph, U+6C34) glyph.','rlh':'rlh - Line height of the root element.'},'Relative':{'dvh':'dvh - 1% of the dynamic viewport\\'s height.','dvw':'dvw - 1% of the dynamic viewport\\'s width.','lvh':'lvh - 1% of the large viewport\\'s height.','lvw':'lvw - 1% of the large viewport\\'s width.','svh':'svh - 1% of the small viewport\\'s height.','svw':'svw - 1% of the small viewport\\'s width.','vb':'vb - 1% of viewport\\'s size in the root element\\'s block axis.','vh':'vh - 1% of viewport\\'s height.','vi':'vi - 1% of viewport\\'s size in the root element\\'s inline axis.','vmax':'vmax - 1% of viewport\\'s larger dimension.','vmin':'vmin - 1% of viewport\\'s smaller dimension.','vw':'vw - 1% of viewport\\'s width.','fr':'fr - (Flex) Represents a flexible length within a grid container','%':'% - Percentage'},'Container @Query relative':{'cqb':'cqb - 1% of a query container\\'s block size','cqh':'cqh - 1% of a query container\\'s height','cqi':'cqi - 1% of a query container\\'s inline size','cqmax':'cqmax - The larger value of cqi or cqb','cqmin':'cqmin - The smaller value of cqi or cqb','cqw':'cqw - 1% of a query container\\'s width'},'Absolute lengths':{'cm':'cm - (Centimeters) 1cm = 96px/2.54','in':'in - (Inches) 1in = 2.54cm = 96px','mm':'mm - (Millimeters) 1mm = 1/10th of 1cm','pc':'pc - (Picas) 1pc = 1/6th of 1in','pt':'pt - (Points) 1pt = 1/72th of 1in','px':'px - (Pixels) 1px = 1/96th of 1in','Q':'Q - (Quarter-millimeters) 1Q = 1/40th of 1cm'},'Angles':{'deg':'deg - (Degrees) There are 360 degrees in a full circle.','grad':'grad - (Gradians) There are 400 gradians in a full circle.','rad':'rad - (Radians) There are 2π radians in a full circle.','turn':'turn - (Turns) There is 1 turn in a full circle.'},'Time':{'ms':'ms - Milliseconds','s':'s - (Seconds) There are 1,000 milliseconds in a second.'},'Frequency':{'Hz':'Hz - (Hertz) Represents the number of occurrences per second.','kHz':'kHz - (KiloHertz) A kiloHertz is 1000 Hertz.'},'Resolution':{'dpcm':'dpcm - Dots per centimeter.','dpi':'dpi - Dots per inch.','dppx':'dppx - Dots per px unit.'}};// array of rgba: red, green, blue, alpha\n// array of rgba: red, green, blue, alpha\nexport var DViewElement=(_dec=RuntimeAccessible('DViewElement'),_dec(_class=(_class2=/*#__PURE__*/function(_DPointerTargetable){_inherits(DViewElement,_DPointerTargetable);var _super=_createSuper(DViewElement);function DViewElement(){var _this;_classCallCheck(this,DViewElement);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.id=void 0;_this.isValidation=void 0;_this.name=void 0;_this.isExclusiveView=void 0;_this.constants=void 0;_this.preRenderFunc=void 0;_this.jsxString=void 0;_this.usageDeclarations=void 0;_this.forceNodeType=void 0;_this.appliableToClasses=void 0;_this.appliableTo=void 0;_this.subViews=void 0;_this.oclCondition=void 0;_this.jsCondition=void 0;_this.oclUpdateCondition=void 0;_this.OCL_NEEDS_RECALCULATION=void 0;_this.OCL_UPDATE_NEEDS_RECALCULATION=void 0;_this.explicitApplicationPriority=void 0;_this.defaultVSize=void 0;_this.adaptHeight=void 0;_this.adaptWidth=void 0;_this.draggable=void 0;_this.resizable=void 0;_this.viewpoint=void 0;_this.onDataUpdate=void 0;_this.onDragStart=void 0;_this.onDragEnd=void 0;_this.whileDragging=void 0;_this.onResizeStart=void 0;_this.onResizeEnd=void 0;_this.whileResizing=void 0;_this.onRotationStart=void 0;_this.onRotationEnd=void 0;_this.whileRotating=void 0;_this.events=void 0;_this.bendingMode=void 0;_this.edgeGapMode=void 0;_this.storeSize=void 0;_this.size=void 0;_this.lazySizeUpdate=void 0;_this.edgeStartOffset=void 0;_this.edgeEndOffset=void 0;_this.edgeStartOffset_isPercentage=void 0;_this.edgeEndOffset_isPercentage=void 0;_this.edgeStartStopAtBoundaries=void 0;_this.edgeEndStopAtBoundaries=void 0;_this.edgePointCoordMode=void 0;_this.edgeHeadSize=void 0;_this.edgeTailSize=void 0;_this.palette=void 0;_this.css=void 0;_this.cssIsGlobal=void 0;_this.compiled_css=void 0;_this.css_MUST_RECOMPILE=void 0;return _this;}// static singleton: LViewElement;\n// static logic: typeof LViewDViewElementElement;\n// static structure: typeof DViewElement;\n// inherited redefine\n// public __raw!: DViewElement;\n// own properties\n// only for root views (ex viewpoints) to group views semantically.\n// processate 1 sola volta all'applicazione della vista o all'editing del campo\n// _parsedConstants?: GObject; // should be protected but LView is not subclass\n// evaluate tutte le volte che l'elemento viene aggiornato (il model o la view cambia).\n// l'html template\n// used in DefaultNode\n// scalezoomx: boolean = false; // whether to resize the element normally using width-height or resize it using zoom-scale css\n// scalezoomy: boolean = false;\n// not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\n// facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\n// __transient: DViewTransientProperties;\n// class names: DModel, DPackage, DAttribute...\n// ocl selector\n// js selector\n//oclUpdateCondition_PARSED!: undefined | ((view: LViewElement)=>boolean); moved in transient\n// if only the oclCondition needs to be reapplied to all model elements\n// if both ocl needsto be reapplied and the oclUpdateCondition -> transient.view[v.id].oclUpdateCondition_PARSED needs to be remade\n// priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\n// | 'fit-content' | '-webkit-fill-available';\n/*width!: number;\r\n    height!: number;*/ //display!: 'block'|'contents'|'flex'|string;\n//constraints!: GObject<\"obsolete, used in Vertex. they are triggered by events (view.onDragStart....) and can bound the size of the vertex\">[];\n//useSizeFrom!: EuseSizeFrom;\n// if true updates it once when the vertex is released. if false updates vertex position every X millisecond while dragging.\n/* private */ /* private */_createClass(DViewElement,null,[{key:\"new\",value:function _new(name,jsxString,defaultVSize){var usageDeclarations=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';var constants=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';var preRenderFunc=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'';var appliableToClasses=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];var oclCondition=arguments.length>7&&arguments[7]!==undefined?arguments[7]:'';var priority=arguments.length>8?arguments[8]:undefined;var persist=arguments.length>9&&arguments[9]!==undefined?arguments[9]:true;var isDefaultView=arguments.length>10&&arguments[10]!==undefined?arguments[10]:false;var vp=arguments.length>11?arguments[11]:undefined;var id=isDefaultView?'Pointer_View'+name:undefined;return new Constructors(new DViewElement('dwc'),undefined,persist,undefined,id).DPointerTargetable().DViewElement(name,jsxString,vp,defaultVSize,usageDeclarations,constants,preRenderFunc,appliableToClasses,oclCondition,priority).end();}},{key:\"new2\",value:function new2(name,jsxString,callback){var persist=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var vp=arguments.length>4?arguments[4]:undefined;var id=arguments.length>5?arguments[5]:undefined;// let id = isDefaultView ? 'Pointer_View' + name : undefined;\nreturn new Constructors(new DViewElement('dwc'),undefined,persist,undefined,id).DPointerTargetable().DViewElement(name,jsxString,vp).end(callback);}},{key:\"newDefault\",value:function newDefault(forData){var jsx=\"<div className={'root'}>\\n    <div className={'header'}>\\n        <Input\\n            placeholder={\\\"?\\\"}\\n            autosize={\\\"true\\\"}\\n            hidden={true}\\n            data={data}\\n            field={\\\"name\\\"}\\n        />\\n    </div>\\n    <div className={'body'}>To add information here,<br/> edit the view<br/><i>\\\"{view.name}\\\"</i></div>\\n</div>\";var palettes={\"border-color-\":{type:\"color\",value:[{r:187,g:187,b:187,a:1}]},\"background-\":{type:\"color\",value:[{r:238,g:242,b:243,a:1}]},\"color-\":{type:\"color\",value:[{r:3,g:54,b:86,a:1}]}};var css=\".root {\\n    border: 1px solid var(--border-color-1);\\n    border-radius: 4px;\\n    background-color: var(--background-1);\\n    \\n    font-family: Verdana, sans-serif;\\n    color: var(--color-1);\\n    font-size: 11px;\\n}\\n \\n.root div.header {\\n    text-align: center;\\n    border-bottom: 1px solid var(--border-color-1);\\n    padding: 0px;\\n    margin: 0px;\\n}\\n \\n.root div.header {\\n    font-size: 5px;\\n}\\n \\n.root div.header input:empty {\\n    margin-left: 0px;\\n}\\n.root div.body {\\n    text-align: center;\\n    font-weight: normal;  \\n    height: auto;\\n    padding: 5px;\\n}\\n \";var query='';if(forData)switch(forData.className){case'DClass':query=\"context DObject inv: self.instanceof.id = '\".concat(forData.id,\"'\");break;case'DAttribute':case'DReference':query=\"context DValue inv: self.instanceof.id = '\".concat(forData.id,\"'\");break;default:query=\"context \".concat(forData.className,\" inv: self.id = '\").concat(forData.id,\"'\");break;}var user=LUser.fromPointer(DUser.current);// const project = user?.project; if(!project) return this;\nvar name;if(forData===null||forData===void 0?void 0:forData.name){name=forData.name+'View';}else{var _user$project;var vp=(user===null||user===void 0?void 0:(_user$project=user.project)===null||_user$project===void 0?void 0:_user$project.activeViewpoint)||LPointerTargetable.fromPointer(Defaults.viewpoints[0]);var names=vp.subViews.map(function(v){return v&&v.name;});name=U.increaseEndingNumber('view_'+0,false,false,function(newName){return names.indexOf(newName)>=0;});}return DViewElement.new2(name,jsx,function(d){d.css=css;d.palette=palettes;d.css_MUST_RECOMPILE=true;d.oclCondition=query;},true);}}]);return DViewElement;}(DPointerTargetable),_class2.subclasses=[],_class2._extends=[],_class2.MeasurableKeys=['onDataUpdate','onDragStart','onDragEnd','whileDragging','onResizeStart','onResizeEnd','whileResizing','onRotationStart','onRotationEnd','whileRotating'],_class2.RecompileKeys=['onDataUpdate','onDragStart','onDragEnd','whileDragging','onResizeStart','onResizeEnd','whileResizing','onRotationStart','onRotationEnd','whileRotating','constants','usageDeclarations','jsxString','preconditions','jsCondition','ocl','events'],_class2))||_class);export var LViewElement=(_dec2=RuntimeAccessible('LViewElement'),_dec2(_class3=(_class4=/*#__PURE__*/function(_LPointerTargetable){_inherits(LViewElement,_LPointerTargetable);var _super2=_createSuper(LViewElement);function LViewElement(){var _this2;_classCallCheck(this,LViewElement);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this2=_super2.call.apply(_super2,[this].concat(args));_this2.__raw=void 0;_this2.id=void 0;_this2.r=void 0;_this2.isValidation=void 0;_this2.name=void 0;_this2.__info_of__name={isGlobal:true,type:ShortAttribETypes.EString,txt:/*#__PURE__*/_jsx(\"div\",{children:\"Name of the view\"})};_this2.isOverlay=void 0;_this2.__info_of__isOverlay={isGlobal:true,type:ShortAttribETypes.EBoolean,txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"If not exclusive, the view is meant to add a functional outline of tools to a primary View, or css.\",/*#__PURE__*/_jsx(\"br\",{}),\"A non-exclusive view cannot be applied alone and needs an exclusive view to render the main graphical content.\"]})};_this2.explicitApplicationPriority=void 0;_this2.__info_of__explicitApplicationPriority={isGlobal:true,type:ShortAttribETypes.EByte,label:\"explicit priority\",txt:'Application priority of view. If multiple views match an element, the highest priority will render the main jsx.'};_this2.isExclusiveView=void 0;_this2.__info_of__isExclusiveView={isGlobal:true,type:ShortAttribETypes.EBoolean,txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"If not exclusive, the view is meant to add a functional outline of tools to a primary View, or css.\",/*#__PURE__*/_jsx(\"br\",{}),\"A non-exclusive view cannot be applied alone and needs an exclusive view to render the main graphical content.\"]})};_this2.constants=void 0;_this2.__info_of__constants={todo:true,isGlobal:true,type:\"Function():Object\",label:\"constants declaration\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Data used in the visual representation, meant to be static values evaluated only once when the view is first applied.\",/*#__PURE__*/_jsx(\"br\",{}),\"Check default value view for an example.\",/*#__PURE__*/_jsx(\"br\",{})]})};_this2.preRenderFunc=void 0;_this2.__info_of__preRenderFunc={isGlobal:true,obsolete:true,type:\"Function():Object\",label:\"pre-render function\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Data used in the visual representation, meant to be dynamic values evaluated every time the visual representation is updated.\",/*#__PURE__*/_jsx(\"br\",{}),\"Replaced by usageDeclarations.\"]})};_this2.jsxString=void 0;_this2.__info_of__jsxString={isGlobal:true,type:\"text\",label:\"JSX template\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"The main ingredient, a \",/*#__PURE__*/_jsx(\"a\",{href:\"https://react.dev/learn/writing-markup-with-jsx\",children:\"JSX template\"}),\" that will be visualized in the graph.\"]})};_this2.usageDeclarations=void 0;_this2.__info_of__usageDeclarations={todo:false,isGlobal:true,type:\"Function():Object\",label:\"usage declarations\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Subset of the global or elements's data state that is graphically used.\",/*#__PURE__*/_jsx(\"br\",{}),\"If specified the element will only update when one of those has changed.\",/*#__PURE__*/_jsx(\"br\",{}),\"Can optimize performance and ensure the node is updated even when navigating remote properties that\",/*#__PURE__*/_jsx(\"br\",{}),\"    don\\\\'t belong to this element, like visualizing the name of an object pointed by a reference.\",/*#__PURE__*/_jsx(\"br\",{}),\"Context: it has the usual variables present in a JSX template (data, view, node...)\",/*#__PURE__*/_jsx(\"br\",{}),\"    plus a special variable \\\"ret\\\" where dependencies are registered.\",/*#__PURE__*/_jsx(\"br\",{}),\"Usage Example: see the default view for value.\"]})};_this2.oclUpdateCondition=void 0;_this2.__info_of__oclUpdateCondition={readType:'(view: LViewElement)=>boolean',writeType:'function string',txt:\"[Optionally] Declare variables that are used in OCL condition, so that OCL will be re-checked only when those values have changed.\"};_this2.css_MUST_RECOMPILE=void 0;_this2.cssIsGlobal=void 0;_this2.__info_of__cssIsGlobal={type:ShortAttribETypes.EBoolean,txt:\"Use with caution!\\nIf true, custom css can affect even elements not matched with this view, or outside the graph.\"};_this2.css=void 0;_this2.__info_of__css={type:\"css string\",txt:\"Inject custom css that cannot be inserted inline like :hover or css variables.\\nSupport LESS syntax.\"};_this2.compiled_css=void 0;_this2.__info_of__compiled_css={hidden:true,txt:'css + palettes compiled from less in css'};_this2.palette=void 0;_this2.__info_of__palette={type:\"Dictionary<prefix, colors[]>\",txt:\"Specify a set of colors, numbers or text variables to be used in the graphical syntax through css variables.\"};_this2.forceNodeType=void 0;_this2.__info_of__forceNodeType={isGlobal:true,type:\"EGraphElements\",enum:EGraphElements,label:\"force node type\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Forces this element to be rendered with your component of choice instead of automatic selection when generated by a <DefaultNode> tag.\"})};_this2.zoom=void 0;_this2.__info_of__zoom={todo:true,isNode:true,type:GraphPoint.cname,txt:/*#__PURE__*/_jsx(\"div\",{children:\"Zooms in or out the element using css scale.\"})};_this2.appliableToClasses=void 0;_this2.__info_of__appliableToClasses={isGlobal:true,type:\"EModelElements | EGraphElements\",enum:_objectSpread(_objectSpread(_objectSpread({},EModelElements),EGraphElements),{},{cname:\"EModelElements | EGraphElements\"}),label:\"applicable to\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Do a low priority match with elements of this type.\",/*#__PURE__*/_jsx(\"br\",{}),\"This is just a shortcut with a lower priority than a OCL match.\",/*#__PURE__*/_jsx(\"br\",{}),\"The same result can be obtained through OCL.\"]})};_this2.appliableTo=void 0;_this2.subViews=void 0;_this2.__info_of__subViews={isGlobal:true,hidden:true,type:\"DViewElement[]\",label:\"sub-views\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Views that are suggested to render elements contained in the current one with a higher match priority.\",/*#__PURE__*/_jsx(\"br\",{}),\"Like a package view giving priority to a specific Class or Enum view to render his contained Classifiers in a common theme.\",/*#__PURE__*/_jsx(\"br\",{}),\"If you wish to see the subview weight attached to the collection, access view.__raw.subviews instead.\"]})};_this2.setSubViewScore=void 0;_this2.__info_of__setSubViewScore={isGlobal:true,hidden:true,type:\"function(ViewElement, numeric_score): void\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Adds, updates or unsets (if boost = null) a subview with his score.\"})};_this2.allSubViews=void 0;_this2.__info_of__allSubViews={type:\"ViewElement[]\",txt:\"recursively get this.subViews.\"};_this2.defaultVSize=void 0;_this2.__info_of__defaultVSize={isNode:true,type:\"GraphSize\",label:\"default size\",txt:'starting size of the node'};_this2.adaptWidth=void 0;_this2.__info_of__adaptWidth={isNode:true,type:ShortAttribETypes.EBoolean,label:\"adapt width\",txt:'Whether the element should expand his width to accomodate his own contents.'};_this2.adaptHeight=void 0;_this2.__info_of__adaptHeight={isNode:true,type:ShortAttribETypes.EBoolean,label:\"adapt height\",txt:'Whether the element should expand his height to accomodate his own contents.'};_this2.draggable=void 0;_this2.__info_of__draggable={isNode:true,type:ShortAttribETypes.EBoolean,txt:'if the element can be dragged'};_this2.resizable=void 0;_this2.__info_of__resizable={isNode:true,type:ShortAttribETypes.EBoolean,txt:'if the element can be resized'};_this2.oclCondition=void 0;_this2.__info_of__oclCondition={isGlobal:true,hidden:true,label:\"OCL apply condition\",type:\"text\",// TODO: what's the difference with this.query?\ntxt:'OCL Query selector to determine which nodes or model elements should apply this view'};_this2.jsCondition=void 0;_this2.__info_of__jsCondition={isGlobal:true,hidden:true,label:\"js apply condition\",type:\"text\",txt:'js Query selector to determine which nodes or model elements should apply this view'};_this2.viewpoint=void 0;_this2.__info_of__viewpoint={hidden:true,type:LViewPoint.cname,txt:/*#__PURE__*/_jsx(\"div\",{children:\"The collection of views containing this one, useful to activate multiple views at once.\"})};_this2.display=void 0;_this2.__info_of__display={obsolete:true,isNode:true,type:ShortAttribETypes.EString,txt:'complete css injection instead'};_this2.onDragStart=void 0;_this2.__info_of__onDragStart={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node begins being dragged.'};_this2.onDragEnd=void 0;_this2.__info_of__onDragEnd={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node finishes being dragged.'};_this2.whileDragging=void 0;_this2.__info_of__whileDragging={isNode:true,type:\"Function():void\",txt:'Custom event activated multiple times when mouse is moved while a node is being dragged.'};_this2.onResizeStart=void 0;_this2.__info_of__onResizeStart={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node begins being resized.'};_this2.onResizeEnd=void 0;_this2.__info_of__onResizeEnd={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node finishes being resized.'};_this2.whileResizing=void 0;_this2.__info_of__whileResizing={isNode:true,type:\"Function():void\",txt:'Custom event activated multiple times when mouse is moved while a node is being resized.'};_this2.onRotationStart=void 0;_this2.__info_of__onRotationStart={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node begins being rotated.'};_this2.onRotationEnd=void 0;_this2.__info_of__onRotationEnd={isNode:true,type:\"Function():void\",txt:'Custom event activated when a node finishes being rotated.'};_this2.whileRotating=void 0;_this2.__info_of__whileRotating={isNode:true,type:\"Function():void\",txt:'Custom event activated multiple times when mouse is moved while a node is being rotated.'};_this2.onDataUpdate=void 0;_this2.__info_of__onDataUpdate={isNode:true,type:\"Function():void\",txt:'Custom event activated every time a property of his model, node or view is changed while the element is visibly rendered in a graph.\\n<br>Caution! this might cause loops.'};_this2.events=void 0;_this2.event=void 0;_this2.__info_of__events={todo:true,isGlobal:true,type:\"Dictionary<name, function>\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Custom events callable through JSX user interaction\",/*#__PURE__*/_jsx(\"br\",{}),\"eg: <div onClick={()=>view.eventname()} />\"]})};_this2.__info_of__event={todo:true,isGlobal:true,type:\"Dictionary<name, function>\",txt:'Alias for this.events'};_this2.constraints=void 0;_this2.__info_of__constraints={todo:true,isNode:true,type:\"Function():void\",txt:'not supported yet'};_this2.bendingMode=void 0;_this2.__info_of__bendingMode={isEdge:true,enum:EdgeBendingMode,type:'\"L\" | \"Q\" | \"C\" | \"T\" | \"S\" | \"A\" | \"QT\" | \"CS\"',label:\"path mode\",txt:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:\"How Svg path should use the EdgePoints to bend his shape\"})})};_this2.edgeGapMode=void 0;_this2.__info_of__edgeGapMode={isEdge:true,enum:EdgeGapMode,type:'\"gap\" | \"average\" | \"autoFill\" | \"lineFill\" | \"arcFill\"',label:\"gap mode\",txt:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[\"How the segment should treat the EdgePoint interruptions.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\\"gap\\\" leaves an empty space to not overlap the EdgePoint,\",/*#__PURE__*/_jsx(\"br\",{}),\"\\\"linefill\\\" makes the edge stop at the EdgePoint borders, but then connects the gap with a line.\"]})})};_this2.storeSize=void 0;_this2.__info_of__storeSize={isNode:true,type:ShortAttribETypes.EBoolean,label:\"bind sizes to view\",txt:\"Active: the node position depends from the view currently displayed.Inactive: it depends from the graph.\"};_this2.lazySizeUpdate=void 0;_this2.__info_of__lazySizeUpdate={isNode:true,type:ShortAttribETypes.EBoolean,txt:/*#__PURE__*/_jsx(\"div\",{children:\"If true updates the node position only when the drag action is finished. (best performance)\"})};_this2.edgeStartOffset=void 0;_this2.__info_of__edgeStartOffset={isEdge:true,type:GraphPoint.cname,label:\"start offset\",txt:\"Location where outgoing edges should start their path, relative to top-upper corner of the element.\"};_this2.edgeEndOffset=void 0;_this2.__info_of__edgeEndOffset={isEdge:true,type:GraphPoint.cname,label:\"end offset\",txt:'Same as this.edgeStartOffset'};_this2.edgeStartOffset_isPercentage=void 0;_this2.__info_of__edgeStartOffset_isPercentage={isEdge:true,type:ShortAttribETypes.EBoolean,label:\"start offset is a %\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Whether edgeStartOffset is an absolute value or a percentage.\",/*#__PURE__*/_jsx(\"br\",{}),\"(eg: 50% of element width, vs 50 pixels flat).\"]})};_this2.edgeEndOffset_isPercentage=void 0;_this2.__info_of__edgeEndOffset_isPercentage={isEdge:true,type:ShortAttribETypes.EBoolean,label:\"end offset is a %\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Whether edgeStartOffset is an absolute value or a percentage.\",/*#__PURE__*/_jsx(\"br\",{}),\"(eg: 50% of element width, vs 50 pixels flat).\"]})};_this2.edgeStartStopAtBoundaries=void 0;_this2.__info_of__edgeStartStopAtBoundaries={isEdge:true,type:ShortAttribETypes.EBoolean,label:\"start cannot cross boundaries\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Whether outgoing edges should cross the node boundaries overlapping the node\\\\'s html or stop at them.\",/*#__PURE__*/_jsx(\"br\",{}),\"Edge arrows might enter the node if this is on.\"]})};_this2.edgeEndStopAtBoundaries=void 0;_this2.__info_of__edgeEndStopAtBoundaries={isEdge:true,type:ShortAttribETypes.EBoolean,label:\"end cannot cross boundaries\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Whether incoming edges should cross the node boundaries overlapping the node\\\\'s html or stop at them.\",/*#__PURE__*/_jsx(\"br\",{}),\"Edge arrows might enter the node if this is on.\"]})};_this2.edgePointCoordMode=void 0;_this2.__info_of__edgePointCoordMode={isEdgePoint:true,type:\"CoordinateMode\",enum:CoordinateMode,label:\"coordinate mode\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Store coordinates as absolute coordinates or relative to start/end nodes.\"})};_this2.edgeHeadSize=void 0;_this2.__info_of__edgeHeadSize={isEdge:true,type:GraphPoint.cname,label:\"head decorator size\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Size of the edge head decorator if present.\"})};_this2.edgeTailSize=void 0;_this2.__info_of__edgeTailSize={isEdge:true,type:GraphPoint.cname,label:\"tail decorator size\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Size of the tail head decorator if present.\"})};_this2.size=void 0;_this2.__info_of__size={isNode:true,hidden:true,type:ShortAttribETypes.EInt,txt:/*#__PURE__*/_jsx(\"div\",{children:\"Do not use directly, contains all the sizes stored in this view. use getSize, updateSize instead.\"})};_this2.__info_of__updateSize={isNode:true,hidden:true,type:\"Function(Pointer<GraphElement | ModelElement>, GraphSize) => GraphSize\",txt:/*#__PURE__*/_jsxs(\"div\",{children:[\"Updates the size stored in this view for target element.\",/*#__PURE__*/_jsx(\"br\",{}),\"@returns: the delta of the change between old value and new value.\"]})};_this2.__info_of__getSize={isNode:true,hidden:true,type:\"Function(Pointer<GraphElement | ModelElement>) => GraphSize\",txt:/*#__PURE__*/_jsx(\"div\",{children:\"Gets the size stored in this view for target element.\"})};return _this2;}// MixOnlyFuncs(DViewElement, LPointerTargetable)\n// static singleton: LViewElement;\n// static logic: typeof LViewElement;\n// static structure: typeof DViewElement;\n// inherited redefine\n// own properties\n// only for root views (ex viewpoints) to group views semantically.\n_createClass(LViewElement,[{key:\"get_isOverlay\",value:function get_isOverlay(c){return this.get_isExclusiveView(c);}},{key:\"set_isOverlay\",value:function set_isOverlay(val,c){return this.set_isExclusiveView(val,c);}// priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\n},{key:\"get_explicitApplicationPriority\",value:function get_explicitApplicationPriority(c){var _c$data$jsCondition,_c$data$oclCondition;if(c.data.explicitApplicationPriority!==undefined)return c.data.explicitApplicationPriority;else return(((_c$data$jsCondition=c.data.jsCondition)===null||_c$data$jsCondition===void 0?void 0:_c$data$jsCondition.length)||1)+(((_c$data$oclCondition=c.data.oclCondition)===null||_c$data$oclCondition===void 0?void 0:_c$data$oclCondition.length)||1);}},{key:\"set_explicitApplicationPriority\",value:function set_explicitApplicationPriority(val,c){SetFieldAction.new(c.data,\"explicitApplicationPriority\",val,'',false);return true;}},{key:\"get_isExclusiveView\",value:function get_isExclusiveView(c){return c.data.isExclusiveView;}},{key:\"set_isExclusiveView\",value:function set_isExclusiveView(val,c){if(Defaults.check(c.data.id))return true;// cannot delete or \"demote\" to decorations the main views, to make sure there is always at least 1 appliable view.\nreturn SetFieldAction.new(c.data,\"isExclusiveView\",!!val,'',false);}// Example 1: <code>{'{color:\"red\", background: \"gray\"}'}</code><br/>\n// Example 2: <code>{'function(){\\n    let fib = [1,1]; for (let i = 2; i < 100) { fib[i] = fib[i-2]+fib[i-1]; }\\n    return fib; }'}</code><br/>\n// evalutate tutte le volte che l'elemento viene aggiornato (il model o la view cambia)\n},{key:\"_defaultGetter\",value:function _defaultGetter(c,k){return this.__defaultGetter(c,k);}},{key:\"_defaultSetter\",value:function _defaultSetter(v,c,k){return this.__defaultSetter(v,c,k);}},{key:\"get_jsxString\",value:function get_jsxString(context){return context.data.jsxString;}},{key:\"set_jsxString\",value:function set_jsxString(val,context){TRANSACTION(function(){// const jsx = DSL.parser(val);\nSetFieldAction.new(context.data,'jsxString',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_jsxString',context.data.id,'+=',false);});return true;}},{key:\"get_usageDeclarations\",value:function get_usageDeclarations(c){return c.data.usageDeclarations||\"(ret)=>{ // scope contains: data, node, view, constants, state\\n\"+\"// ** preparations and default behaviour here ** //\\n\"+\"ret.data = data\\n\"+\"ret.node = node\\n\"+\"ret.view = view\\n\"+\"// data, node, view are dependencies by default. delete them above if you want to remove them.\\n\"+// if you want your node re-rendered every time, add a dependency to ret.state = state; or ret.update = Math.random();\n\"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\"+\"// ** declarations here ** //\\n\"+\"}\";}},{key:\"set_usageDeclarations\",value:function set_usageDeclarations(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'usageDeclarations',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_usageDeclarations',context.data.id,'+=',false);});return true;}// format should be array of (usedPaths: string[]) starting with \"data.\" AUTOMATICALLY inefered from the ocl editor.\n},{key:\"get_oclUpdateCondition\",value:function get_oclUpdateCondition(c){return transientProperties.view[c.data.id].oclUpdateCondition_PARSED;}},{key:\"set_oclUpdateCondition\",value:function set_oclUpdateCondition(val,c){TRANSACTION(function(){SetFieldAction.new(c.data,\"oclUpdateCondition\",val||'','',false);// not recalculated right now because the change needs to be sent to collaborative editor users\n// it is pointer, but i don't want to set pointedby's, it is very short lived.\nSetRootFieldAction.new(\"OCL_UPDATE_NEEDS_RECALCULATION\",c.data.id,'+=',false);});return true;}/* moved it as setrootfield action and as array. check it after every reducer. update im same style the color palette too?\r\n    OCL_NEEDS_RECALCULATION!: boolean;\r\n    __info_of__OCL_NEEDS_RECALCULATION: Info = {hidden: true, type: ShortAttribETypes.EBoolean,\r\n        txt: \"if only the oclCondition needs to be reapplied to all model elements\"}\r\n    get_OCL_NEEDS_RECALCULATION(c: Context): this[\"OCL_NEEDS_RECALCULATION\"] { return c.data.OCL_NEEDS_RECALCULATION; }\r\n    set_OCL_NEEDS_RECALCULATION(val: this[\"OCL_NEEDS_RECALCULATION\"], c: Context): boolean { return this.cannotSet('OCL_NEEDS_RECALCULATION'); }\r\n\r\n    OCL_UPDATE_NEEDS_RECALCULATION!: boolean;\r\n    __info_of__OCL_UPDATE_NEEDS_RECALCULATION: Info = {hidden: true, type: ShortAttribETypes.EBoolean,\r\n        txt: \"if both ocl needsto be reapplied and the oclUpdateCondition -> transient.view[v.id].oclUpdateCondition_PARSED needs to be remade\"}\r\n    get_OCL_UPDATE_NEEDS_RECALCULATION(c: Context): this[\"OCL_UPDATE_NEEDS_RECALCULATION\"] { return c.data.OCL_UPDATE_NEEDS_RECALCULATION; }\r\n    set_OCL_UPDATE_NEEDS_RECALCULATION(val: this[\"OCL_UPDATE_NEEDS_RECALCULATION\"], c: Context): boolean { return this.cannotSet('OCL_UPDATE_NEEDS_RECALCULATION'); }*/},{key:\"get_cssIsGlobal\",value:function get_cssIsGlobal(c){return c.data.cssIsGlobal;}},{key:\"set_cssIsGlobal\",value:function set_cssIsGlobal(val,c){TRANSACTION(function(){SetFieldAction.new(c.data,\"cssIsGlobal\",!!val,'',false);// compile only when accessed, to prevent color inputs to do a mess of compilations\nSetFieldAction.new(c.data,\"css_MUST_RECOMPILE\",true,'',false);});return true;}},{key:\"get_css\",value:function get_css(c){return c.data.css;}},{key:\"set_css\",value:function set_css(val,c){TRANSACTION(function(){SetFieldAction.new(c.data,\"css\",val,'',false);// compile only when accessed, to prevent color inputs to do a mess of compilations\nSetFieldAction.new(c.data,\"css_MUST_RECOMPILE\",true,'',false);});return true;}},{key:\"get_compiled_css\",value:function get_compiled_css(c){if(!c.data.css_MUST_RECOMPILE)return c.data.compiled_css;// return c.proxyObject.r.__raw.compiled_css;\nvar s='';var allowLESS=false;var shortPaletteName;var cc=c;function rgbastring(c){Log.exDev(!c,\"invalid color:\",{id:cc.data.id,c:c,shortPaletteName:shortPaletteName,p:cc.data.palette});return\"rgba(\"+c.r+\",\"+c.g+\",\"+c.b+\",\"+c.a+\")\";}//let palettes = U.paletteSplit(c.data.palette);\nfor(var paletteName in c.data.palette){var palette0=c.data.palette[paletteName];if(palette0.type===\"color\"){var palette=palette0;var colors=palette.value;if(!colors.length)continue;if(['-','_'].includes(paletteName[paletteName.length-1]))shortPaletteName=paletteName.substring(0,paletteName.length-1);else shortPaletteName=paletteName;var rgba=rgbastring(colors[0]);// set prefixed name without number\nif(allowLESS)s+=\"\\t@\"+shortPaletteName+\": \"+rgba+';\\n';s+=\"\\t--\"+shortPaletteName+\": \"+rgba+';\\n';// set prefixed-0 name\nif(allowLESS)s+=\"\\t@\"+paletteName+'0: '+rgba+';\\n';s+=\"\\t--\"+paletteName+'0: '+rgba+';\\n';// set prefixed-1 to prefixed-...n names\nfor(var i=0;i<colors.length;i++){rgba=rgbastring(colors[i]);if(allowLESS)s+=\"\\t@\"+paletteName+(i+1)+\": \"+rgba+';\\n';s+=\"\\t--\"+paletteName+(i+1)+\": \"+rgba+';\\n';}}else if(palette0.type==='path'){var _palette=palette0;var val=U.replaceAll(_palette.value,'view.','');val=U.replaceAll(val,'this.','');val=U.replaceAll(val,'x',_palette.x);val=U.replaceAll(val,'y',_palette.y);val=U.replaceAll(val,'+',' +');val=U.replaceAll(val,'-',' -');// important: cannot add space post-dash or it's harder to distinguish unary and binary -\nval=U.replaceAll(val,'/',' / ');val=U.replaceAll(val,'*',' * ');var valarr=val.split(/[,\\s]/);// [] not allowed\nvalarr=valarr.map(function(val){if(!isNaN(+val))return val;var patharr=val.split('.');var curr=c.data;var _iterator=_createForOfIteratorHelper(patharr),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var pathseg=_step.value;curr=curr[pathseg];Log.e(!curr&&(val.length>1||patharr.length>1),\"invalid variable path in css path control\",{token:val,view:c.data.name});if(!curr)break;}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(typeof curr===\"object\"||typeof curr===\"undefined\"&&(val.length>1||patharr.length>1))Log.ee(\"invalid variable path in css path control\",{token:val,view:c.data.name});else val=curr||val;return val;}).filter(function(p){return!!p;});for(var _i=0;_i<valarr.length;_i++){var _val=valarr[_i];switch(_val){// i avoid subtracting L 1 -1 with spaces. it's unary if doesn't have a postfix space.\ndefault:continue;case'*':valarr[_i]=+valarr[_i-1]*+valarr[_i+1];valarr[_i-1]=valarr[_i+1]='';break;case'/':valarr[_i]=+valarr[_i-1]/+valarr[_i+1];valarr[_i-1]=valarr[_i+1]='';break;case'+':valarr[_i]=+valarr[_i-1]+ +valarr[_i+1];valarr[_i-1]=valarr[_i+1]='';break;case'-':valarr[_i]=+valarr[_i-1]-+valarr[_i+1];valarr[_i-1]=valarr[_i+1]='';break;}}val=valarr.filter(function(p){return!!p;}).join(' ');val=\"'\"+val+\"'\";if(allowLESS)s+=\"\\t@\"+paletteName+\": \"+val+';\\n';s+=\"\\t--\"+paletteName+': '+val+';\\n';}else{// number or text\nvar _palette2=palette0;var _val2=_palette2.value+(_palette2.unit||'');if(!_val2)_val2=\"''\";if(allowLESS)s+=\"\\t@\"+paletteName+\": \"+_val2+';\\n';s+=\"\\t--\"+paletteName+': '+_val2+';\\n';}}s+='\\n\\t'+U.replaceAll(c.data.css,'\\n','\\n\\t');var localViewSelector='.'+c.data.id;// '[data-viewid=\"'+c.data.id+'\"]';\ns=(!c.data.cssIsGlobal?localViewSelector:'body')+' {\\n'+s+'\\n}';// not an error, i'm updating directly d-view that is usually wrong, this is to prevent multiple nodes with same view to trigger compile and redux actions\n// count as if it's a derived attribute not really part of the store.\nc.data.css_MUST_RECOMPILE=false;return c.data.compiled_css=s;}},{key:\"set_compiled_css\",value:function set_compiled_css(val,c){Log.exx(\"Do not use setter for this, set it directly in d-object, along with compiled_css.\"+\"\\nOtherwise multiple nodes of the same view will start compiling together.\\n\");return false;}},{key:\"get_palette\",value:function get_palette(c){return c.data.palette;}},{key:\"set_palette\",value:function set_palette(val,c){TRANSACTION(function(){SetFieldAction.new(c.data,\"palette\",val,'',false);SetFieldAction.new(c.data,\"css_MUST_RECOMPILE\",true,'',false);});return true;}/*\r\n    scalezoomx!: boolean; // whether to resize the element normally using width-height or resize it using zoom-scale css\r\n    __info_of__scalezoomx: Info = {isNode: true, isEdge: false, isEdgePoint: false, txt:<div></div>}\r\n\r\n    scalezoomy!: boolean;\r\n    __info_of__scalezoomy: Info = {isNode: true, isEdge: false, isEdgePoint: false, txt:<div></div>}*/ // not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\n// facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\n// __transient: DViewTransientProperties;\n// class names: DModel, DPackage, DAttribute...\n},{key:\"get_SubViews\",value:function get_SubViews(c){delete c.data.subViews.clonedCounter;return Object.keys(c.data.subViews).map(function(vid){return LPointerTargetable.fromPointer(vid);});}},{key:\"set_SubViews\",value:function set_SubViews(val,c){var subviewsmap;if(Array.isArray(val)){var ptrsArr=Pointers.fromArr(val);subviewsmap=U.objectFromArrayValues(ptrsArr,1.5);}else subviewsmap=val||{};SetFieldAction.new(c.data,\"subViews\",subviewsmap,'',true);return true;}},{key:\"get_setSubViewScore\",value:// adds, updates or unsets (if boost = null) a subview with his score.\nfunction get_setSubViewScore(c){return function(subview){var boost=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1.5;var subviews=_objectSpread({},c.data.subViews);var ptr=Pointers.from(subview);if(boost!==null){// set mode\nif(subviews[ptr]===boost)return;subviews[ptr]=boost;}else{// set mode\nif(subviews[ptr]===undefined)return;delete subviews[ptr];}SetFieldAction.new(c.data,'subViews',subviews,'',true);};}},{key:\"get_allSubViews\",value:function get_allSubViews(c){delete c.data.subViews.clonedCounter;var arr=Object.keys(c.data.subViews);var nextarr=[];var idmap={};var s=store.getState();var dview;while(arr.length){var _iterator2=_createForOfIteratorHelper(arr),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var vid=_step2.value;if(idmap[vid])continue;dview=DPointerTargetable.fromPointer(vid,s);if(!dview)continue;idmap[vid]=dview;U.arrayMergeInPlace(nextarr,Object.keys(dview.subViews));}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}arr=nextarr;nextarr=[];}return LPointerTargetable.fromD(Object.values(idmap));}},{key:\"set_allSubViews\",value:function set_allSubViews(val,c){return this.wrongAccessMessage(\"cannot call set_allSubViews, it is a derived attribute\");}// ocl selector\n},{key:\"get_oclCondition\",value:function get_oclCondition(context){return context.data.oclCondition;}},{key:\"set_oclCondition\",value:function set_oclCondition(val,context){val=(val||'').trim();if(val===context.data.oclCondition)return true;TRANSACTION(function(){SetFieldAction.new(context.data,'oclCondition',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_ocl',context.data.id,'+=',false);// it is pointer, but for transient stuff there is no need to set pointedby's\n});return true;}// js selector\n},{key:\"get_jsCondition\",value:function get_jsCondition(context){return context.data.jsCondition;}},{key:\"set_jsCondition\",value:function set_jsCondition(val,context){val=(val||'').trim();if(val===context.data.jsCondition)return true;TRANSACTION(function(){SetFieldAction.new(context.data,'jsCondition',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_jsCondition',context.data.id,'+=',false);});return true;}// todo: how about allowing a view to be part in multiple vp's? so this reference would be an array or removed, and you navigate only from vp to v.\n},{key:\"get_onDragStart\",value:function get_onDragStart(context){return context.data.onDragStart;}},{key:\"set_onDragStart\",value:function set_onDragStart(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onDragStart',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onDragStart',context.data.id,'+=',false);});return true;}},{key:\"get_onDragEnd\",value:function get_onDragEnd(context){return context.data.onDragEnd;}},{key:\"set_onDragEnd\",value:function set_onDragEnd(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onDragEnd',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onDragEnd',context.data.id,'+=',false);});return true;}},{key:\"get_whileDragging\",value:function get_whileDragging(context){return context.data.whileDragging;}},{key:\"set_whileDragging\",value:function set_whileDragging(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'whileDragging',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_whileDragging',context.data.id,'+=',false);});return true;}},{key:\"get_onResizeStart\",value:function get_onResizeStart(context){return context.data.onResizeStart;}},{key:\"set_onResizeStart\",value:function set_onResizeStart(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onResizeStart',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onResizeStart',context.data.id,'+=',false);});return true;}},{key:\"get_onResizeEnd\",value:function get_onResizeEnd(context){return context.data.onResizeEnd;}},{key:\"set_onResizeEnd\",value:function set_onResizeEnd(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onResizeEnd',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onResizeEnd',context.data.id,'+=',false);});return true;}},{key:\"get_whileResizing\",value:function get_whileResizing(context){return context.data.whileResizing;}},{key:\"set_whileResizing\",value:function set_whileResizing(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'whileResizing',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_whileResizing',context.data.id,'+=',false);});return true;}},{key:\"get_onRotationStart\",value:function get_onRotationStart(context){return context.data.onRotationStart;}},{key:\"set_onRotationStart\",value:function set_onRotationStart(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onRotationStart',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onRotationStart',context.data.id,'+=',false);});return true;}},{key:\"get_onRotationEnd\",value:function get_onRotationEnd(context){return context.data.onRotationEnd;}},{key:\"set_onRotationEnd\",value:function set_onRotationEnd(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onRotationEnd',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onRotationEnd',context.data.id,'+=',false);});return true;}},{key:\"get_whileRotating\",value:function get_whileRotating(context){return context.data.whileRotating;}},{key:\"set_whileRotating\",value:function set_whileRotating(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'whileRotating',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_whileRotating',context.data.id,'+=',false);});return true;}},{key:\"get_onDataUpdate\",value:function get_onDataUpdate(context){return context.data.onDataUpdate;}},{key:\"set_onDataUpdate\",value:function set_onDataUpdate(val,context){TRANSACTION(function(){SetFieldAction.new(context.data,'onDataUpdate',val,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_onDataUpdate',context.data.id,'+=',false);});return true;}},{key:\"get_event\",value:function get_event(c){return this.get_events(c);}},{key:\"get_events\",value:function get_events(c){Log.exx(\"use node.events instead\",U.getStackTrace());return{};// return transientProperties.view[c.data.id]?.events || {};\n}},{key:\"set_events\",value:function set_events(val,context){var addUD=true;TRANSACTION(function(){SetFieldAction.new(context.data,'events',val,'+=',false);SetRootFieldAction.new('VIEWS_RECOMPILE_events',{vid:context.data.id,keys:Object.keys(val)},'+=',false);var udstr=context.data.usageDeclarations;if(!addUD||!udstr)return;var delta=U.objectDelta(context.data.events,val,false);for(var key in delta){var v=val[key];var autogenstr='ret.'+key+' = node.events.'+key+'; // @autogenerated, do not edit\\n';if(!v)udstr=udstr.split(autogenstr).join('');else{if(!context.data.events[key]){// insert\nvar findstr='// ** declarations here ** //\\n';var insertat=udstr.indexOf(findstr);if(insertat===-1)continue;// malformed ud, will skip\ninsertat+=findstr.length;udstr=udstr.substring(0,insertat)+autogenstr+udstr.substring(insertat);}else{// just updated func body, no name changed, no need to update UD.\n}}}if(udstr===context.data.usageDeclarations)return;SetFieldAction.new(context.data,'usageDeclarations',udstr,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_usageDeclarations',context.data.id,'+=',false);});return true;}/*\r\n    bindVertexSizeToView!: boolean;\r\n    __info_of__bindVertexSizeToView: Info = {isNode:true, type:ShortAttribETypes.EBoolean, label:\"bind sizes to view\",\r\n        txt: <div>Store the vertex size inside the view instead of inside the vertex.\r\n            <br/>This causes the vertex to have different positions according to the view currently appied to it.</div>}*/},{key:\"set_edgePointCoordMode\",value:function set_edgePointCoordMode(val,c){TRANSACTION(function(){setTimeout(function(){// needs to be done after coordinatemode change is applied\nvar s=store.getState();for(var nid in transientProperties.node){var _tn$mainView;var tn=transientProperties.node[nid];if(!tn||((_tn$mainView=tn.mainView)===null||_tn$mainView===void 0?void 0:_tn$mainView.id)!==c.data.id)continue;var lnode=LPointerTargetable.fromPointer(nid,s);var triggerCoordinateModeChange=lnode;triggerCoordinateModeChange.size=lnode.size;}},100);SetFieldAction.new(c.data,'edgePointCoordMode',val,'',false);});return true;}// use getSize, updateSize;\n},{key:\"get_constants\",value:// public _parsedConstants!: GObject;\n// public get__parsedConstants(c: Context): this['_parsedConstants'] { return c.data._parsedConstants || {}; }\nfunction get_constants(c){return c.data.constants;}},{key:\"set_constants\",value:function set_constants(value,c){if(value===c.data.constants)return true;TRANSACTION(function(){SetFieldAction.new(c.data.id,'constants',value,'',false);SetRootFieldAction.new('VIEWS_RECOMPILE_constants',c.data.id,'+=',false);SetFieldAction.new(c.data.id,\"css_MUST_RECOMPILE\",true,'',false);});return true;}},{key:\"get_preRenderFunc\",value:function get_preRenderFunc(c){return c.data.preRenderFunc;}},{key:\"set_preRenderFunc\",value:function set_preRenderFunc(value,c){var _value=value?value:'() => {}';return SetFieldAction.new(c.data.id,'preRenderFunc',_value,'',false);}},{key:\"get_edgeHeadSize\",value:function get_edgeHeadSize(c){return new GraphPoint(c.data.edgeHeadSize.x,c.data.edgeHeadSize.y);}},{key:\"get_edgeTailSize\",value:function get_edgeTailSize(c){return new GraphPoint(c.data.edgeTailSize.x,c.data.edgeTailSize.y);}},{key:\"set_edgeHeadSize\",value:function set_edgeHeadSize(v,c){var s=c.data.edgeHeadSize||new GraphPoint(0,0);if(!(\"x\"in v))v.x=s.x;if(!(\"y\"in v))v.y=s.y;TRANSACTION(function(){SetFieldAction.new(c.data.id,\"css_MUST_RECOMPILE\",true,'',false);SetFieldAction.new(c.data.id,\"edgeHeadSize\",v,'',false);});return true;}},{key:\"set_edgeTailSize\",value:function set_edgeTailSize(v,c){var s=c.data.edgeTailSize||new GraphPoint(0,0);if(!(\"x\"in v))v.x=s.x;if(!(\"y\"in v))v.y=s.y;TRANSACTION(function(){SetFieldAction.new(c.data.id,\"css_MUST_RECOMPILE\",true,'',false);SetFieldAction.new(c.data.id,\"edgeTailSize\",v,'',false);});return true;}},{key:\"get_viewpoint\",value:function get_viewpoint(context){return LViewPoint.fromPointer(context.data.viewpoint);}// public set_subViews(v: Pointer<DViewPoint>[], context: Context): boolean { return this.cannotSet('subViews, call set_viewpoint on the sub-elements instead.'); }\n// WARNING!! if there are mass vp assignments, preserveOrder=true will cause a vp to \"lose\" subviews and keep only the last assigned.\n},{key:\"set_viewpoint\",value:function set_viewpoint(v,context,manualDview){var preserveOrder=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var ret=false;var vpid=v&&Pointers.from(v);var data=manualDview||context.data;var id=data.id;var oldvpid=data.viewpoint;if(vpid===oldvpid)return true;TRANSACTION(function(){ret=SetFieldAction.new(id,\"viewpoint\",vpid,'',true);if(oldvpid){var subViews=_objectSpread({},DPointerTargetable.fromPointer(oldvpid).subViews);delete subViews[id];SetFieldAction.new(oldvpid,\"subViews\",subViews,'',true);}if(vpid){var name=data.name;var copyPos=name.indexOf(\"Copy\");var oldSubViews=DPointerTargetable.fromPointer(vpid).subViews;var insertBefore='';var _subViews={};if(copyPos){var copiedFromName=copyPos?name.substring(0,copyPos).trim():'';if(copiedFromName in oldSubViews)insertBefore=copiedFromName;else{for(var key in oldSubViews){if(key.indexOf(copiedFromName)===0){insertBefore=key;break;}}}}// WARNING!! if there are mass vp assignments, this will cause a vp to \"lose\" subviews and keep only the last assigned.\nif(preserveOrder&&insertBefore){_subViews={};for(var _key3 in oldSubViews){_subViews[_key3]=oldSubViews[_key3];// just to reinsert subviews **in order** so Object.keys() fits the new subview near the cloned one.\nif(_key3===insertBefore)_subViews[id]=_subViews[insertBefore];}}else{_subViews=_objectSpread({},oldSubViews);_subViews[id]=1.5;}_subViews[id]=insertBefore?_subViews[insertBefore]:1.5;SetFieldAction.new(vpid,\"subViews\",_subViews,'+=',true);}});return ret;}},{key:\"get_subViews\",value:function get_subViews(context,key){var subViewsPointers=context.data.subViews;var subViews=[];for(var pointer in subViewsPointers){var item=MyProxyHandler.wrap(pointer);if(item!==undefined)subViews.push(item);}return subViews;}// returns the delta of change\n},{key:\"updateSize\",value:function updateSize(id,size){return this.wrongAccessMessage(\"updateSize\");}},{key:\"get_updateSize\",value:function get_updateSize(context){return function(id,size0){var size=size0;var vp=context.proxyObject.viewpoint;if(!context.data.storeSize){if(vp===null||vp===void 0?void 0:vp.storeSize)return vp.updateSize(id,size);return false;}var vsize=context.data.size[id]||(vp===null||vp===void 0?void 0:vp.__raw.size[id]);var newSize=new GraphSize();if(size.currentCoordType===vsize.currentCoordType){// if samecoord system mix them.\nnewSize.x=(size===null||size===void 0?void 0:size.x)!==undefined?size.x:vsize.x;newSize.y=(size===null||size===void 0?void 0:size.y)!==undefined?size.y:vsize.y;}else if(size.x!==undefined&&size.y!==undefined){// if different coord system pick all of size\nnewSize.x=size.x;newSize.y=size.y;newSize.currentCoordType=size.currentCoordType||CoordinateMode.absolute;}else if(vsize.x!==undefined&&vsize.y!==undefined){// or all of vsize if size was invalid\nnewSize.x=vsize.x;newSize.y=vsize.y;newSize.currentCoordType=vsize.currentCoordType||CoordinateMode.absolute;}var defaultsize=context.data.defaultVSize||(vp===null||vp===void 0?void 0:vp.__raw.defaultVSize);if(newSize.x===undefined||newSize.y===undefined){// only if pos is invalid, i take defaultvsize and force to use coord absolute.\nnewSize=new GraphSize().clone(defaultsize);newSize.currentCoordType=CoordinateMode.absolute;}// w and h are always absolute so they can be mixed to whathever coordinate mode indipendently from the rest.\nnewSize.w=(size===null||size===void 0?void 0:size.w)!==undefined?size.w:vsize.w;newSize.h=(size===null||size===void 0?void 0:size.h)!==undefined?size.h:vsize.h;if(newSize.h===undefined)newSize.h=defaultsize.h||10;if(newSize.w===undefined)newSize.w=defaultsize.w||10;if(!newSize.equals(vsize))SetFieldAction.new(context.data.id,\"size.\"+id,newSize);return true;};}},{key:\"get_defaultVSize\",value:function get_defaultVSize(context){return context.data.defaultVSize;}},{key:\"getSize\",value:function getSize(id){return this.wrongAccessMessage(\"getSize\");}},{key:\"get_getSize\",value:function get_getSize(context){function impl_getSize(id){if(typeof id===\"object\")id=id.id;var view=context.data;var ret;if(view.storeSize){ret=view.size[id];if(ret)return ret;}var vp=context.proxyObject.viewpoint;if(vp&&view.id!==vp.id&&vp.storeSize){ret=vp.size[id];if(ret)return ret;}return undefined;}return impl_getSize;}},{key:\"set_generic_entry\",value:function set_generic_entry(context,key,val){console.log('set_generic_entry',{context:context,key:key,val:val});SetFieldAction.new(context.data,key,val);return true;}},{key:\"get_children\",value:function get_children(context){return[];}},{key:\"get_lazySizeUpdate\",value:function get_lazySizeUpdate(context){return Debug.lightMode||context.data.lazySizeUpdate;}},{key:\"set_lazySizeUpdate\",value:function set_lazySizeUpdate(val,context){return Debug.lightMode||this.set_generic_entry(context,'lazySizeUpdate',val);}},{key:\"get_bendingMode\",value:function get_bendingMode(context){return context.data.bendingMode;}},{key:\"set_bendingMode\",value:function set_bendingMode(val,context){return this.set_generic_entry(context,'bendingMode',val);}},{key:\"set_appliableTo\",value:function set_appliableTo(val,c){// appliableTo >= forcenodetype\nif(!val)val='Any';var forceNodeType=c.data.forceNodeType;if(forceNodeType!==val)switch(val){// case \"Any\": break;\ndefault:forceNodeType=val;}console.log(\"set_appliableTo\",{forceNodeType:forceNodeType,val:val});BEGIN();if(forceNodeType!==c.data.forceNodeType)SetFieldAction.new(c.data,\"forceNodeType\",forceNodeType,'',false);SetFieldAction.new(c.data,\"appliableTo\",val,'',false);END();return true;}},{key:\"set_forceNodeType\",value:function set_forceNodeType(val,c){if(!val)val='Any';/*let appliableTo: string = c.data.appliableTo as string;\r\n        if (appliableTo !== val) switch (appliableTo){\r\n            case undefined: case 'Any': break;\r\n            //case 'GraphVertex': if ((appliableTo as any) !== 'Graph' && (appliableTo as any) !== 'Vertex') appliableTo = val; break;\r\n            default: appliableTo = val; break;\r\n        }*/BEGIN();// if (appliableTo !== c.data.appliableTo) SetFieldAction.new(c.data, \"appliableTo\", appliableTo, '', false);\nSetFieldAction.new(c.data,\"forceNodeType\",val,'',false);END();return true;}},{key:\"get_appliableToClasses\",value:function get_appliableToClasses(context){return context.data.appliableToClasses||[];}},{key:\"set_appliableToClasses\",value:function set_appliableToClasses(val,context){var _context$data$appliab,_this3=this;if(!val)val=[];else if(!Array.isArray(val))val=[val];val.sort();var hasChanged;if(val.length===((_context$data$appliab=context.data.appliableToClasses)===null||_context$data$appliab===void 0?void 0:_context$data$appliab.length)){hasChanged=false;for(var i=0;i<val.length;i++){if(val[i]!==context.data.appliableToClasses[i]){hasChanged=true;break;}}}else hasChanged=true;if(!hasChanged)return true;TRANSACTION(function(){_this3.set_generic_entry(context,\"appliableToClasses\",val);SetRootFieldAction.new('VIEWS_RECOMPILE_preconditions',context.data.id,'+=',false);});return true;}},{key:\"set_defaultVSize\",value:function set_defaultVSize(val,c){var _val$x,_val$y,_val$w,_val$h;if(!val||typeof val!==\"object\")return true;var x=(_val$x=val.x)!==null&&_val$x!==void 0?_val$x:+val.x;var y=(_val$y=val.y)!==null&&_val$y!==void 0?_val$y:+val.y;var w=(_val$w=val.w)!==null&&_val$w!==void 0?_val$w:+val.w;var h=(_val$h=val.h)!==null&&_val$h!==void 0?_val$h:+val.h;if(isNaN(x))x=c.data.defaultVSize.x;if(isNaN(y))y=c.data.defaultVSize.y;if(isNaN(w))w=c.data.defaultVSize.w;if(isNaN(h))h=c.data.defaultVSize.h;if(x===c.data.defaultVSize.x&&y===c.data.defaultVSize.y&&w===c.data.defaultVSize.w&&h===c.data.defaultVSize.h)return true;SetFieldAction.new(c.data,'defaultVSize',{x:x,y:y,w:w,h:h},'',false);return true;}},{key:\"duplicate\",value:function duplicate(){var deep=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var new_vp=arguments.length>1?arguments[1]:undefined;return this.wrongAccessMessage(this.constructor.cname+\"duplicate()\");}},{key:\"get_duplicate\",value:function get_duplicate(c){var _this4=this;return function(){var deep=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var new_vp0=arguments.length>1?arguments[1]:undefined;console.log(\"DViewelement.duplicate\",{cn:c.data.className,n:c.data.name,deep:deep,new_vp0:new_vp0});var lview=undefined;var state=store.getState();TRANSACTION(function(){var pvid=c.data.viewpoint;var dclone=c.data.className==='DViewPoint'?DViewPoint.new2(\"\".concat(c.data.name,\" Copy\"),'',undefined,true):DViewElement.new2(\"\".concat(c.data.name,\" Copy\"),'',undefined,true,'skip');lview=LPointerTargetable.fromD(dclone);var new_vp=new_vp0||{pvid:pvid};// || {pvid,  score: (DPointerTargetable.from(pvid, state) as DViewElement).subViews[c.data.id]}\nfor(var key in c.data){switch(key){case'subViews':// duplicate childrens only if deep\nif(!deep)break;// let subviews: Dictionary<Pointer, number> = {}\nfor(var oldvid in c.data.subViews){var oldScore=c.data.subViews[oldvid];LPointerTargetable.fromPointer(oldvid,state).duplicate(deep,{pvid:dclone.id/*, score:oldScore*/});// then everything is set inside case 'viewpoint' of subviews cloning\n}//lview.subViews = subviews as any;\nbreak;case'father':case'viewpoint':// update parent view\n/*\r\n                            let subviews: Dictionary<Pointer, number> = {};\r\n                            subviews[dclone.id] = new_vp.score;\r\n                            SetFieldAction.new(new_vp.pvid, 'subViews', subviews, '+=', true);\r\n                            SetFieldAction.new(dclone.id, 'viewpoint', new_vp.pvid, '+=', true);*/ // insert in-place right after the cloned view, with old score.\n_this4.set_viewpoint(new_vp.pvid,undefined,dclone,!deep);// SetFieldAction.new(dclone.id, 'father', new_vp.vpid, '+=', true);\nbreak;case'':case'id':case'name':case'className':case'pointedBy':case'_storePath':case'_subMaps':case'clonedCounter':break;case'css_MUST_RECOMPILE':break;case'isValidation':console.log(\"duplicate \"+c.data.name+\" set isvalidation\",{data:c.data,iv:c.data.isValidation});lview[key]=c.data[key];break;default:try{lview[key]=c.data[key];}catch(e){//    Log.ee('Error on duplicate view:', e);\n}}}// insert in viewpoint.subview\n//let defaultViews: Dictionary<Pointer, boolean> = Defaults.defaultViewsMap;\nvar vp=c.proxyObject.viewpoint;// let oldViews: Pointer<DViewElement>[] = Object.keys(vp.__raw.subViews);\n// if (Defaults.viewpoints.indexOf(vpid)) oldViews = oldViews.filter( vid => !defaultViews[vid]);\n// let i: number = oldViews.indexOf(c.data.id);\n/*\r\n                if (i === -1) oldViews.push(dclone.id);\r\n                else oldViews.splice(i+1, 0, dclone.id); // insert in-place right after the cloned view\r\n                vp.subViews = oldViews as any;*/ // SetRootFieldAction.new('stackViews', dview.id, '+=', true);\nvar isVP=c.data.className==='DViewPoint';if(isVP)SetRootFieldAction.new(\"viewpoints\",c.data.id,'+=',true);else SetRootFieldAction.new(\"viewelements\",c.data.id,'+=',true);var _iterator3=_createForOfIteratorHelper(DViewElement.RecompileKeys),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _key4=_step3.value;SetRootFieldAction.new(\"VIEWS_RECOMPILE_\".concat(_key4),c.data.id,'+=',false);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}});return lview;};}}],[{key:\"parseConstants\",value:function parseConstants(funcCode){if(!funcCode)return{};var parsedConstants={};var context={__param:parsedConstants};context.__proto__=windoww.defaultContext;try{var parsedFunc=U.parseFunctionWithContextAndScope(funcCode,context,context,['ret']);parsedFunc(context,parsedConstants);// U.evalInContextAndScopeNew( \"(\"+funcCode+\")(this.__param)\", context, true, false, false);\n}catch(e){Log.w(\"Attempted to save an invalid view.constant setup. Cause:\\n\"+e.message.split(\"\\n\")[0],e);return undefined;}return parsedConstants;}}]);return LViewElement;}(LPointerTargetable),_class4.subclasses=[],_class4._extends=[],_class4))||_class3);RuntimeAccessibleClass.set_extend(DPointerTargetable,DViewElement);RuntimeAccessibleClass.set_extend(LPointerTargetable,LViewElement);export var DViewTransientProperties=(_dec3=RuntimeAccessible('DViewTransientProperties'),_dec3(_class5=(_class6=/*#__PURE__*/function(_RuntimeAccessibleCla){_inherits(DViewTransientProperties,_RuntimeAccessibleCla);var _super3=_createSuper(DViewTransientProperties);function DViewTransientProperties(){var _this5;_classCallCheck(this,DViewTransientProperties);for(var _len3=arguments.length,args=new Array(_len3),_key5=0;_key5<_len3;_key5++){args[_key5]=arguments[_key5];}_this5=_super3.call.apply(_super3,[this].concat(args));_this5._isDViewTransientProperties=void 0;return _this5;}// isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\n// private: DViewPrivateTransientProperties;\nreturn DViewTransientProperties;}(RuntimeAccessibleClass),_class6.logic=void 0,_class6))||_class5);RuntimeAccessibleClass.set_extend(RuntimeAccessibleClass,DViewTransientProperties);export var LViewTransientProperties=(_dec4=RuntimeAccessible('LViewTransientProperties'),_dec4(_class7=(_class8=/*#__PURE__*/function(_LPointerTargetable2){_inherits(LViewTransientProperties,_LPointerTargetable2);var _super4=_createSuper(LViewTransientProperties);function LViewTransientProperties(){var _this6;_classCallCheck(this,LViewTransientProperties);for(var _len4=arguments.length,args=new Array(_len4),_key6=0;_key6<_len4;_key6++){args[_key6]=arguments[_key6];}_this6=_super4.call.apply(_super4,[this].concat(args));_this6._isLViewTransientProperties=void 0;return _this6;}// isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\n// private!: LViewPrivateTransientProperties;\n/*\r\n        get_private(context: LogicContext<DViewTransientProperties>): LViewPrivateTransientProperties {\r\n            return LViewTransientProperties.wrap(context.data.private, context.proxy.baseObjInLookup, context.proxy.additionalPath + '.private'); }*/ /*\r\n        get_isSelected(logicContext: LogicContext<TargetableProxyHandler<DViewTransientProperties>, DViewTransientProperties>): Proxyfied<Dictionary> {\r\n            // @ts-ignore for $ at end of getpath\r\n            console.log('GET_ISSELECTED handler func');\r\n            return TargetableProxyHandler.getMap(logicContext.data.isSelected, logicContext, logicContext.proxy.additionalPath + '.' + (getPath as this).isSelected.$);\r\n        }*/return LViewTransientProperties;}(LPointerTargetable),_class8.structure=void 0,_class8.singleton=void 0,_class8))||_class7);RuntimeAccessibleClass.set_extend(DPointerTargetable,DViewTransientProperties);RuntimeAccessibleClass.set_extend(LPointerTargetable,LViewTransientProperties);/*\r\n\r\n@RuntimeAccessible\r\nexport class DViewPrivateTransientProperties extends DPointerTargetable{\r\n    static logic: typeof LViewPrivateTransientProperties;\r\n\r\n    public size: GraphSize\r\n    constructor(size?: GraphSize) {\r\n        super();\r\n        this.size = size || defaultVSize;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LViewPrivateTransientProperties extends DViewPrivateTransientProperties{\r\n    static structure: typeof DViewPrivateTransientProperties;\r\n    static singleton: LViewPrivateTransientProperties;\r\n\r\n}*/ // shapeless component, receive jsx from redux\n// can access any of the redux state, but will usually access 1-2 var among many,\n// how can i dynamically mapStateToProps to map only the required ones?","map":{"version":3,"names":["BEGIN","Constructors","CoordinateMode","Debug","Defaults","DPointerTargetable","DViewPoint","EdgeBendingMode","EdgeGapMode","EGraphElements","EModelElements","END","GraphPoint","GraphSize","Log","LPointerTargetable","LUser","LViewPoint","MyProxyHandler","Pointers","RuntimeAccessible","RuntimeAccessibleClass","SetFieldAction","SetRootFieldAction","ShortAttribETypes","store","TRANSACTION","U","windoww","DUser","transientProperties","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","units","DViewElement","_dec","_class","_class2","_DPointerTargetable","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","id","isValidation","name","isExclusiveView","constants","preRenderFunc","jsxString","usageDeclarations","forceNodeType","appliableToClasses","appliableTo","subViews","oclCondition","jsCondition","oclUpdateCondition","OCL_NEEDS_RECALCULATION","OCL_UPDATE_NEEDS_RECALCULATION","explicitApplicationPriority","defaultVSize","adaptHeight","adaptWidth","draggable","resizable","viewpoint","onDataUpdate","onDragStart","onDragEnd","whileDragging","onResizeStart","onResizeEnd","whileResizing","onRotationStart","onRotationEnd","whileRotating","events","bendingMode","edgeGapMode","storeSize","size","lazySizeUpdate","edgeStartOffset","edgeEndOffset","edgeStartOffset_isPercentage","edgeEndOffset_isPercentage","edgeStartStopAtBoundaries","edgeEndStopAtBoundaries","edgePointCoordMode","edgeHeadSize","edgeTailSize","palette","css","cssIsGlobal","compiled_css","css_MUST_RECOMPILE","_createClass","key","value","_new","undefined","priority","persist","isDefaultView","vp","end","new2","callback","newDefault","forData","palettes","type","r","g","b","a","query","className","user","fromPointer","current","_user$project","project","activeViewpoint","viewpoints","names","map","v","increaseEndingNumber","newName","indexOf","d","subclasses","_extends","MeasurableKeys","RecompileKeys","LViewElement","_dec2","_class3","_class4","_LPointerTargetable","_super2","_this2","_len2","_key2","__raw","__info_of__name","isGlobal","EString","txt","children","isOverlay","__info_of__isOverlay","EBoolean","__info_of__explicitApplicationPriority","EByte","label","__info_of__isExclusiveView","__info_of__constants","todo","__info_of__preRenderFunc","obsolete","__info_of__jsxString","href","__info_of__usageDeclarations","__info_of__oclUpdateCondition","readType","writeType","__info_of__cssIsGlobal","__info_of__css","__info_of__compiled_css","hidden","__info_of__palette","__info_of__forceNodeType","enum","zoom","__info_of__zoom","isNode","cname","__info_of__appliableToClasses","_objectSpread","__info_of__subViews","setSubViewScore","__info_of__setSubViewScore","allSubViews","__info_of__allSubViews","__info_of__defaultVSize","__info_of__adaptWidth","__info_of__adaptHeight","__info_of__draggable","__info_of__resizable","__info_of__oclCondition","__info_of__jsCondition","__info_of__viewpoint","display","__info_of__display","__info_of__onDragStart","__info_of__onDragEnd","__info_of__whileDragging","__info_of__onResizeStart","__info_of__onResizeEnd","__info_of__whileResizing","__info_of__onRotationStart","__info_of__onRotationEnd","__info_of__whileRotating","__info_of__onDataUpdate","event","__info_of__events","__info_of__event","constraints","__info_of__constraints","__info_of__bendingMode","isEdge","__info_of__edgeGapMode","__info_of__storeSize","__info_of__lazySizeUpdate","__info_of__edgeStartOffset","__info_of__edgeEndOffset","__info_of__edgeStartOffset_isPercentage","__info_of__edgeEndOffset_isPercentage","__info_of__edgeStartStopAtBoundaries","__info_of__edgeEndStopAtBoundaries","__info_of__edgePointCoordMode","isEdgePoint","__info_of__edgeHeadSize","__info_of__edgeTailSize","__info_of__size","EInt","__info_of__updateSize","__info_of__getSize","get_isOverlay","c","get_isExclusiveView","set_isOverlay","val","set_isExclusiveView","get_explicitApplicationPriority","_c$data$jsCondition","_c$data$oclCondition","data","set_explicitApplicationPriority","new","check","_defaultGetter","k","__defaultGetter","_defaultSetter","__defaultSetter","get_jsxString","context","set_jsxString","get_usageDeclarations","set_usageDeclarations","get_oclUpdateCondition","view","oclUpdateCondition_PARSED","set_oclUpdateCondition","get_cssIsGlobal","set_cssIsGlobal","get_css","set_css","get_compiled_css","s","allowLESS","shortPaletteName","cc","rgbastring","exDev","p","paletteName","palette0","colors","includes","substring","rgba","i","replaceAll","x","y","valarr","split","isNaN","patharr","curr","_iterator","_createForOfIteratorHelper","_step","n","done","pathseg","e","token","err","f","ee","filter","join","unit","localViewSelector","set_compiled_css","exx","get_palette","set_palette","get_SubViews","clonedCounter","Object","keys","vid","set_SubViews","subviewsmap","isArray","ptrsArr","fromArr","objectFromArrayValues","get_setSubViewScore","subview","boost","subviews","ptr","from","get_allSubViews","arr","nextarr","idmap","getState","dview","_iterator2","_step2","arrayMergeInPlace","fromD","values","set_allSubViews","wrongAccessMessage","get_oclCondition","set_oclCondition","trim","get_jsCondition","set_jsCondition","get_onDragStart","set_onDragStart","get_onDragEnd","set_onDragEnd","get_whileDragging","set_whileDragging","get_onResizeStart","set_onResizeStart","get_onResizeEnd","set_onResizeEnd","get_whileResizing","set_whileResizing","get_onRotationStart","set_onRotationStart","get_onRotationEnd","set_onRotationEnd","get_whileRotating","set_whileRotating","get_onDataUpdate","set_onDataUpdate","get_event","get_events","getStackTrace","set_events","addUD","udstr","delta","objectDelta","autogenstr","findstr","insertat","set_edgePointCoordMode","setTimeout","nid","node","_tn$mainView","tn","mainView","lnode","triggerCoordinateModeChange","get_constants","set_constants","get_preRenderFunc","set_preRenderFunc","_value","get_edgeHeadSize","get_edgeTailSize","set_edgeHeadSize","set_edgeTailSize","get_viewpoint","set_viewpoint","manualDview","preserveOrder","ret","vpid","oldvpid","copyPos","oldSubViews","insertBefore","copiedFromName","get_subViews","subViewsPointers","pointer","item","wrap","push","updateSize","get_updateSize","size0","proxyObject","vsize","newSize","currentCoordType","absolute","defaultsize","clone","w","h","equals","get_defaultVSize","getSize","get_getSize","impl_getSize","set_generic_entry","console","log","get_children","get_lazySizeUpdate","lightMode","set_lazySizeUpdate","get_bendingMode","set_bendingMode","set_appliableTo","set_forceNodeType","get_appliableToClasses","set_appliableToClasses","_context$data$appliab","_this3","sort","hasChanged","set_defaultVSize","_val$x","_val$y","_val$w","_val$h","duplicate","deep","new_vp","constructor","get_duplicate","_this4","new_vp0","cn","lview","state","pvid","dclone","oldvid","oldScore","iv","isVP","_iterator3","_step3","parseConstants","funcCode","parsedConstants","__param","__proto__","defaultContext","parsedFunc","parseFunctionWithContextAndScope","message","set_extend","DViewTransientProperties","_dec3","_class5","_class6","_RuntimeAccessibleCla","_super3","_this5","_len3","_key5","_isDViewTransientProperties","logic","LViewTransientProperties","_dec4","_class7","_class8","_LPointerTargetable2","_super4","_this6","_len4","_key6","_isLViewTransientProperties","structure","singleton"],"sources":["C:/d/Programming/web/jodel-mde/src/view/viewElement/view.tsx"],"sourcesContent":["import {\r\n    BEGIN,\r\n    Constructors,\r\n    CoordinateMode,\r\n    Debug, DEdgePoint,\r\n    Defaults,\r\n    DGraphElement,\r\n    Dictionary,\r\n    DModelElement,\r\n    DNamedElement,\r\n    DocString,\r\n    DPointerTargetable,\r\n    DState,\r\n    DViewPoint,\r\n    EdgeBendingMode,\r\n    EdgeGapMode,\r\n    EGraphElements,\r\n    EModelElements,\r\n    END,\r\n    getWParams,\r\n    GObject,\r\n    GraphPoint,\r\n    GraphSize,\r\n    Info, LEdgePoint, LModelElement,\r\n    Log,\r\n    LogicContext,\r\n    LPointerTargetable, LUser,\r\n    LViewPoint,\r\n    MyProxyHandler,\r\n    Pointer,\r\n    Pointers,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction, SetRootFieldAction,\r\n    ShortAttribETypes,\r\n    store,\r\n    TRANSACTION,\r\n    U, ViewEClassMatch,\r\n    windoww\r\n} from \"../../joiner\";\r\nimport {DUser, EPSize, Pack1, transientProperties } from \"../../joiner/classes\";\r\nimport subViewsData from \"../../components/rightbar/viewsEditor/data/SubViewsData\";\r\nimport DSL from \"../../DSL/DSL\";\r\n\r\nlet units = {'Local-font relative':{\r\n        'cap':     'cap - (Cap height) the nominal height of capital letters of the element\\'s font.',\r\n        'ch':      'ch - Average character advance of a narrow glyph in the element\\'s font, as represented by the \"0\" (ZERO, U+0030) glyph.',\r\n        'em':      'em - Font size of the element\\'s font.',\r\n        'ex':      'ex - x-height of the element\\'s font.',\r\n        'ic':      'ic - Average character advance of a full-width glyph in the element\\'s font, as represented by the \"水\" (CJK water ideograph, U+6C34) glyph.',\r\n        'lh':      'lh - Line height of the element.',\r\n    },\r\n\r\n    'Root-font relative':{\r\n        'rcap':    'rcap - Cap height (the nominal height of capital letters) of the root element\\'s font.',\r\n        'rch':     'rch - Average character advance of a narrow glyph in the root element\\'s font, as represented by the \"0\" (ZERO, U+0030) glyph.',\r\n        'rem':     'rem - Font size of the root element\\'s font.',\r\n        'rex':     'rex - x-height of the root element\\'s font.',\r\n        'ric':     'ric - Average character advance of a full-width glyph in the root element\\'s font, as represented by the \"水\" (CJK water ideograph, U+6C34) glyph.',\r\n        'rlh':     'rlh - Line height of the root element.',\r\n    },\r\n\r\n    'Relative':{\r\n        'dvh':      'dvh - 1% of the dynamic viewport\\'s height.',\r\n        'dvw':      'dvw - 1% of the dynamic viewport\\'s width.',\r\n        'lvh':      'lvh - 1% of the large viewport\\'s height.',\r\n        'lvw':      'lvw - 1% of the large viewport\\'s width.',\r\n        'svh':      'svh - 1% of the small viewport\\'s height.',\r\n        'svw':      'svw - 1% of the small viewport\\'s width.',\r\n        'vb':       'vb - 1% of viewport\\'s size in the root element\\'s block axis.',\r\n        'vh':       'vh - 1% of viewport\\'s height.',\r\n        'vi':       'vi - 1% of viewport\\'s size in the root element\\'s inline axis.',\r\n        'vmax':     'vmax - 1% of viewport\\'s larger dimension.',\r\n        'vmin':     'vmin - 1% of viewport\\'s smaller dimension.',\r\n        'vw':       'vw - 1% of viewport\\'s width.',\r\n        'fr':       'fr - (Flex) Represents a flexible length within a grid container',\r\n        '%':        '% - Percentage',\r\n    },\r\n\r\n    'Container @Query relative':{\r\n        'cqb':      'cqb - 1% of a query container\\'s block size',\r\n        'cqh':      'cqh - 1% of a query container\\'s height',\r\n        'cqi':      'cqi - 1% of a query container\\'s inline size',\r\n        'cqmax':    'cqmax - The larger value of cqi or cqb',\r\n        'cqmin':    'cqmin - The smaller value of cqi or cqb',\r\n        'cqw':      'cqw - 1% of a query container\\'s width',\r\n    },\r\n\r\n    'Absolute lengths':{\r\n        'cm':      'cm - (Centimeters) 1cm = 96px/2.54',\r\n        'in':      'in - (Inches) 1in = 2.54cm = 96px',\r\n        'mm':      'mm - (Millimeters) 1mm = 1/10th of 1cm',\r\n        'pc':      'pc - (Picas) 1pc = 1/6th of 1in',\r\n        'pt':      'pt - (Points) 1pt = 1/72th of 1in',\r\n        'px':      'px - (Pixels) 1px = 1/96th of 1in',\r\n        'Q':       'Q - (Quarter-millimeters) 1Q = 1/40th of 1cm',\r\n    },\r\n\r\n    'Angles':{\r\n        'deg':      'deg - (Degrees) There are 360 degrees in a full circle.',\r\n        'grad':     'grad - (Gradians) There are 400 gradians in a full circle.',\r\n        'rad':      'rad - (Radians) There are 2π radians in a full circle.',\r\n        'turn':     'turn - (Turns) There is 1 turn in a full circle.',\r\n    },\r\n\r\n    'Time':{\r\n        'ms':     'ms - Milliseconds',\r\n        's':      's - (Seconds) There are 1,000 milliseconds in a second.',\r\n    },\r\n\r\n    'Frequency':{\r\n        'Hz':      'Hz - (Hertz) Represents the number of occurrences per second.',\r\n        'kHz':     'kHz - (KiloHertz) A kiloHertz is 1000 Hertz.',\r\n    },\r\n\r\n    'Resolution':{\r\n        'dpcm':     'dpcm - Dots per centimeter.',\r\n        'dpi':      'dpi - Dots per inch.',\r\n        'dppx':     'dppx - Dots per px unit.',\r\n    },};\r\n\r\nexport type CSS_AbsoluteUnit = 'px' | 'cm' | 'mm' | 'pt' | 'pc' | 'in' | '';\r\nexport type CSS_RelativeDomUnit = '%' | 'fr' | 'vw' | 'vh' | 'vmin' | 'vmax';\r\nexport type CSS_RelativeFontUnit =  'em' | 'rem' | 'ex' | 'ch';\r\nexport type CSSUnit = CSS_AbsoluteUnit | CSS_RelativeFontUnit | CSS_RelativeDomUnit;\r\n\r\nexport type StringControl = {type:'text', value: string};\r\nexport type NumberControl = {type:'number', value: number, unit: CSSUnit};\r\nexport type PaletteControl = {type:'color', value: tinycolor.ColorFormats.RGBA[]}; // array of rgba: red, green, blue, alpha\r\nexport type PathControl = {type:'path', value: string, x: string, y: string, options: {k: string, v:string}[]}; // array of rgba: red, green, blue, alpha\r\nexport type PaletteType = Dictionary<string, PaletteControl | NumberControl | StringControl | PathControl>;\r\n\r\n\r\n@RuntimeAccessible('DViewElement')\r\nexport class DViewElement extends DPointerTargetable {\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LViewElement;\r\n    // static logic: typeof LViewDViewElementElement;\r\n    // static structure: typeof DViewElement;\r\n    public static MeasurableKeys: string[] = ['onDataUpdate', 'onDragStart', 'onDragEnd', 'whileDragging', 'onResizeStart',\r\n        'onResizeEnd', 'whileResizing', 'onRotationStart', 'onRotationEnd', 'whileRotating'];\r\n    public static RecompileKeys: string[] = ['onDataUpdate', 'onDragStart', 'onDragEnd', 'whileDragging', 'onResizeStart',\r\n        'onResizeEnd', 'whileResizing', 'onRotationStart', 'onRotationEnd', 'whileRotating',\r\n        'constants', 'usageDeclarations', 'jsxString', 'preconditions', 'jsCondition', 'ocl', 'events'];\r\n\r\n    // inherited redefine\r\n    // public __raw!: DViewElement;\r\n    id!: Pointer<DViewElement, 1, 1, LViewElement>;\r\n\r\n\r\n    // own properties\r\n    isValidation!: boolean; // only for root views (ex viewpoints) to group views semantically.\r\n    name!: string;\r\n    isExclusiveView!: boolean;\r\n\r\n    // processate 1 sola volta all'applicazione della vista o all'editing del campo\r\n    constants?: string;\r\n    // _parsedConstants?: GObject; // should be protected but LView is not subclass\r\n\r\n    // evaluate tutte le volte che l'elemento viene aggiornato (il model o la view cambia).\r\n    preRenderFunc!: string;\r\n\r\n    jsxString!: string; // l'html template\r\n    usageDeclarations?: string;\r\n\r\n    forceNodeType?: DocString<'component name (Vertex, Field, GraphVertex, Graph)'>; // used in DefaultNode\r\n    // scalezoomx: boolean = false; // whether to resize the element normally using width-height or resize it using zoom-scale css\r\n    // scalezoomy: boolean = false;\r\n    // not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\r\n    // facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\r\n    // __transient: DViewTransientProperties;\r\n    appliableToClasses!: string[]; // class names: DModel, DPackage, DAttribute...\r\n    appliableTo!: 'Any'|'Graph'|'GraphVertex'|'Vertex'|'Edge'|'EdgePoint'|'Field';\r\n    subViews!: Dictionary<Pointer<DViewElement>, number/* priority boost */>;\r\n    oclCondition!: string; // ocl selector\r\n    jsCondition!: string; // js selector\r\n    oclUpdateCondition!: DocString<(view: LViewElement)=>boolean>;\r\n    //oclUpdateCondition_PARSED!: undefined | ((view: LViewElement)=>boolean); moved in transient\r\n    OCL_NEEDS_RECALCULATION!: boolean; // if only the oclCondition needs to be reapplied to all model elements\r\n    OCL_UPDATE_NEEDS_RECALCULATION!: boolean; // if both ocl needsto be reapplied and the oclUpdateCondition -> transient.view[v.id].oclUpdateCondition_PARSED needs to be remade\r\n    explicitApplicationPriority!: number; // priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\r\n    defaultVSize!: GraphSize;\r\n    adaptHeight!: boolean;// | 'fit-content' | '-webkit-fill-available';\r\n    adaptWidth!: boolean;\r\n    /*width!: number;\r\n    height!: number;*/\r\n    draggable!: boolean;\r\n    resizable!: boolean;\r\n    viewpoint!: Pointer<DViewPoint>;\r\n    //display!: 'block'|'contents'|'flex'|string;\r\n    //constraints!: GObject<\"obsolete, used in Vertex. they are triggered by events (view.onDragStart....) and can bound the size of the vertex\">[];\r\n    onDataUpdate!: string;\r\n    onDragStart!: string;\r\n    onDragEnd!: string;\r\n    whileDragging!: string;\r\n    onResizeStart!: string;\r\n    onResizeEnd!: string;\r\n    whileResizing!: string;\r\n    onRotationStart!: string;\r\n    onRotationEnd!: string;\r\n    whileRotating!: string;\r\n    events!: Dictionary<DocString<\"functionName\">, DocString<\"functionBody\">>;\r\n    bendingMode!: EdgeBendingMode;\r\n    edgeGapMode!: EdgeGapMode;\r\n    //useSizeFrom!: EuseSizeFrom;\r\n    storeSize!: boolean;\r\n    size!: Dictionary<Pointer<DModelElement> | Pointer<DGraphElement>, GraphSize>;\r\n    lazySizeUpdate!: boolean; // if true updates it once when the vertex is released. if false updates vertex position every X millisecond while dragging.\r\n    edgeStartOffset!: GraphPoint;\r\n    edgeEndOffset!: GraphPoint;\r\n    edgeStartOffset_isPercentage!: boolean;\r\n    edgeEndOffset_isPercentage!: boolean;\r\n    edgeStartStopAtBoundaries!: boolean;\r\n    edgeEndStopAtBoundaries!: boolean;\r\n    edgePointCoordMode!: CoordinateMode;\r\n    edgeHeadSize!: GraphPoint;\r\n    edgeTailSize!: GraphPoint;\r\n    palette!: Readonly<PaletteType>;\r\n    css!: string;\r\n    cssIsGlobal!: boolean;\r\n    /* private */ compiled_css!: string;\r\n    /* private */ css_MUST_RECOMPILE!: boolean;\r\n\r\n    public static new(name: string, jsxString: string, defaultVSize?: GraphSize, usageDeclarations: string = '', constants: string = '',\r\n                      preRenderFunc: string = '', appliableToClasses: string[] = [], oclCondition: string = '',\r\n                      priority?: number, persist: boolean = true, isDefaultView: boolean = false, vp?: Pointer<DViewPoint> | 'skip'): DViewElement {\r\n        let id = isDefaultView ? 'Pointer_View' + name : undefined;\r\n        return new Constructors(new DViewElement('dwc'), undefined, persist, undefined, id).DPointerTargetable().DViewElement(name, jsxString, vp, defaultVSize, usageDeclarations, constants,\r\n            preRenderFunc, appliableToClasses, oclCondition, priority).end();\r\n\r\n    }\r\n    public static new2(name: string, jsxString: string, callback?: (d:DViewElement)=>void, persist: boolean = true, vp?: Pointer<DViewPoint> | 'skip', id?: string): DViewElement {\r\n        // let id = isDefaultView ? 'Pointer_View' + name : undefined;\r\n        return new Constructors(new DViewElement('dwc'), undefined, persist, undefined, id)\r\n            .DPointerTargetable().DViewElement(name, jsxString, vp).end(callback);\r\n    }\r\n\r\n    static newDefault(forData?: DNamedElement): DViewElement{\r\n        const jsx = `<div className={'root'}>\r\n    <div className={'header'}>\r\n        <Input\r\n            placeholder={\"?\"}\r\n            autosize={\"true\"}\r\n            hidden={true}\r\n            data={data}\r\n            field={\"name\"}\r\n        />\r\n    </div>\r\n    <div className={'body'}>To add information here,<br/> edit the view<br/><i>\"{view.name}\"</i></div>\r\n</div>`;\r\n        const palettes: PaletteType = {\r\n            \"border-color-\": {type:\"color\", value: [{r:187, g:187, b:187, a:1}]},\r\n            \"background-\": {type:\"color\", value: [{r:238, g:242, b:243, a:1}]},\r\n            \"color-\": {type:\"color\", value: [{r:3, g:54, b:86, a:1}]},\r\n        }\r\n            const css = `.root {\r\n    border: 1px solid var(--border-color-1);\r\n    border-radius: 4px;\r\n    background-color: var(--background-1);\r\n    \r\n    font-family: Verdana, sans-serif;\r\n    color: var(--color-1);\r\n    font-size: 11px;\r\n}\r\n \r\n.root div.header {\r\n    text-align: center;\r\n    border-bottom: 1px solid var(--border-color-1);\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\n \r\n.root div.header {\r\n    font-size: 5px;\r\n}\r\n \r\n.root div.header input:empty {\r\n    margin-left: 0px;\r\n}\r\n.root div.body {\r\n    text-align: center;\r\n    font-weight: normal;  \r\n    height: auto;\r\n    padding: 5px;\r\n}\r\n `;\r\n        let query = '';\r\n        if (forData) switch(forData.className) {\r\n            case 'DClass':\r\n                query = `context DObject inv: self.instanceof.id = '${forData.id}'`;\r\n                break;\r\n            case 'DAttribute':\r\n            case 'DReference':\r\n                query = `context DValue inv: self.instanceof.id = '${forData.id}'`;\r\n                break;\r\n            default:\r\n                query = `context ${forData.className} inv: self.id = '${forData.id}'`;\r\n                break;\r\n        }\r\n        const user = LUser.fromPointer(DUser.current);\r\n        // const project = user?.project; if(!project) return this;\r\n        let name: string;\r\n        if (forData?.name) {\r\n            name = forData.name + 'View';\r\n        } else {\r\n            const vp: LViewPoint = user?.project?.activeViewpoint || LPointerTargetable.fromPointer(Defaults.viewpoints[0]);\r\n            let names: string[] = vp.subViews.map(v => v && v.name);\r\n            name = U.increaseEndingNumber( 'view_' + 0, false, false, newName => names.indexOf(newName) >= 0);\r\n        }\r\n        return DViewElement.new2(name, jsx, (d)=>{\r\n            d.css = css;\r\n            d.palette = palettes;\r\n            d.css_MUST_RECOMPILE = true;\r\n            d.oclCondition = query;\r\n        }, true);\r\n    }\r\n}\r\n\r\n@RuntimeAccessible('LViewElement')\r\nexport class LViewElement<Context extends LogicContext<DViewElement, LViewElement> = any, D extends DViewElement = any>\r\n    extends LPointerTargetable { // MixOnlyFuncs(DViewElement, LPointerTargetable)\r\n\r\n    static subclasses: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    static _extends: (typeof RuntimeAccessibleClass | string)[] = [];\r\n    // static singleton: LViewElement;\r\n    // static logic: typeof LViewElement;\r\n    // static structure: typeof DViewElement;\r\n\r\n    // inherited redefine\r\n    public __raw!: DViewElement;\r\n    id!: Pointer<DViewElement, 1, 1, LViewElement>;\r\n    public r!: this;\r\n\r\n\r\n\r\n    // own properties\r\n    isValidation!: boolean; // only for root views (ex viewpoints) to group views semantically.\r\n    name!: string;\r\n    __info_of__name: Info = {isGlobal: true, type: ShortAttribETypes.EString, txt:<div>Name of the view</div>}\r\n    isOverlay!:boolean;\r\n    __info_of__isOverlay: Info = {isGlobal:true, type: ShortAttribETypes.EBoolean, txt:<div>If not exclusive, the view is meant to add a functional outline of tools to a primary View, or css.\r\n            <br/>A non-exclusive view cannot be applied alone and needs an exclusive view to render the main graphical content.</div>};\r\n    get_isOverlay(c: Context): this[\"isOverlay\"] { return this.get_isExclusiveView(c); }\r\n    set_isOverlay(val: this[\"isOverlay\"], c: Context): boolean { return this.set_isExclusiveView(val, c); }\r\n\r\n\r\n\r\n    explicitApplicationPriority!: number; // priority of the view, if a node have multiple applicable views, the view with highest priority is applied.\r\n    __info_of__explicitApplicationPriority: Info = {isGlobal: true, type: ShortAttribETypes.EByte, label:\"explicit priority\",\r\n        txt: 'Application priority of view. If multiple views match an element, the highest priority will render the main jsx.' }\r\n    get_explicitApplicationPriority(c: Context): this[\"explicitApplicationPriority\"] {\r\n        if (c.data.explicitApplicationPriority !== undefined) return c.data.explicitApplicationPriority;\r\n        else return (c.data.jsCondition?.length || 1) + (c.data.oclCondition?.length || 1); }\r\n    set_explicitApplicationPriority(val: this[\"explicitApplicationPriority\"] | undefined, c: Context): boolean {\r\n        SetFieldAction.new(c.data, \"explicitApplicationPriority\", val as number, '', false);\r\n        return true;\r\n    }\r\n\r\n    isExclusiveView!: boolean;\r\n    __info_of__isExclusiveView: Info = {isGlobal:true, type: ShortAttribETypes.EBoolean, txt:<div>If not exclusive, the view is meant to add a functional outline of tools to a primary View, or css.\r\n    <br/>A non-exclusive view cannot be applied alone and needs an exclusive view to render the main graphical content.</div>};\r\n    get_isExclusiveView(c: Context): this[\"isExclusiveView\"] { return c.data.isExclusiveView; }\r\n    set_isExclusiveView(val: this[\"isExclusiveView\"], c: Context): boolean {\r\n        if (Defaults.check(c.data.id)) return true; // cannot delete or \"demote\" to decorations the main views, to make sure there is always at least 1 appliable view.\r\n        return SetFieldAction.new(c.data, \"isExclusiveView\", !!val, '', false);\r\n    }\r\n\r\n    constants?: string;\r\n    __info_of__constants: Info = {todo:true, isGlobal: true, type: \"Function():Object\", label:\"constants declaration\",\r\n        txt:<div>Data used in the visual representation, meant to be static values evaluated only once when the view is first applied.<br/>\r\n        Check default value view for an example.<br/>\r\n    </div>};\r\n    // Example 1: <code>{'{color:\"red\", background: \"gray\"}'}</code><br/>\r\n    // Example 2: <code>{'function(){\\n    let fib = [1,1]; for (let i = 2; i < 100) { fib[i] = fib[i-2]+fib[i-1]; }\\n    return fib; }'}</code><br/>\r\n\r\n    preRenderFunc?: string; // evalutate tutte le volte che l'elemento viene aggiornato (il model o la view cambia)\r\n    __info_of__preRenderFunc: Info = {isGlobal: true, obsolete: true, type: \"Function():Object\", label:\"pre-render function\",\r\n        txt:<div>Data used in the visual representation, meant to be dynamic values evaluated every time the visual representation is updated.<br/>Replaced by usageDeclarations.</div>}\r\n\r\n    protected _defaultGetter(c: Context, k: keyof Context[\"data\"]): any { return this.__defaultGetter(c, k); }\r\n\r\n    protected _defaultSetter(v: any, c: Context, k: keyof Context[\"data\"]): any { return this.__defaultSetter(v, c, k); }\r\n\r\n    jsxString!: string;\r\n    __info_of__jsxString: Info = {isGlobal: true, type: \"text\", label:\"JSX template\",\r\n        txt:<div>The main ingredient, a <a href={\"https://react.dev/learn/writing-markup-with-jsx\"}>JSX template</a> that will be visualized in the graph.</div>}\r\n    protected get_jsxString(context: Context): this['jsxString'] {\r\n        return context.data.jsxString;\r\n    }\r\n    protected set_jsxString(val: this['jsxString'], context: Context): boolean {\r\n        TRANSACTION(() => {\r\n            // const jsx = DSL.parser(val);\r\n            SetFieldAction.new(context.data, 'jsxString', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_jsxString', context.data.id, '+=', false);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    usageDeclarations?: string;\r\n    __info_of__usageDeclarations: Info = {todo: false, isGlobal: true, type: \"Function():Object\", label:\"usage declarations\",\r\n        txt: <div>Subset of the global or elements's data state that is graphically used.\r\n            <br/>If specified the element will only update when one of those has changed.\r\n            <br/>Can optimize performance and ensure the node is updated even when navigating remote properties that\r\n            <br/>    don\\'t belong to this element, like visualizing the name of an object pointed by a reference.\r\n            <br/>Context: it has the usual variables present in a JSX template (data, view, node...)\r\n            <br/>    plus a special variable \"ret\" where dependencies are registered.{/*and a \"state\" variable containing the entire application state.*/}\r\n            <br/>Usage Example: see the default view for value.\r\n    </div>}\r\n    protected get_usageDeclarations(c: Context): this[\"usageDeclarations\"]{\r\n        return c.data.usageDeclarations || \"(ret)=>{ // scope contains: data, node, view, constants, state\\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"ret.data = data\\n\" +\r\n            \"ret.node = node\\n\" +\r\n            \"ret.view = view\\n\" +\r\n            \"// data, node, view are dependencies by default. delete them above if you want to remove them.\\n\" +\r\n            // if you want your node re-rendered every time, add a dependency to ret.state = state; or ret.update = Math.random();\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"}\";\r\n    }\r\n    protected set_usageDeclarations(val: this['usageDeclarations'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'usageDeclarations', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_usageDeclarations', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    // format should be array of (usedPaths: string[]) starting with \"data.\" AUTOMATICALLY inefered from the ocl editor.\r\n    oclUpdateCondition!: (oldData: LModelElement, newData:LModelElement) => boolean;\r\n    __info_of__oclUpdateCondition: Info = {readType: '(view: LViewElement)=>boolean', writeType: 'function string',\r\n        txt: \"[Optionally] Declare variables that are used in OCL condition, so that OCL will be re-checked only when those values have changed.\"}\r\n    get_oclUpdateCondition(c: Context): this[\"oclUpdateCondition\"] { return transientProperties.view[c.data.id].oclUpdateCondition_PARSED; }\r\n    set_oclUpdateCondition(val: DocString<\"function\">, c: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data, \"oclUpdateCondition\", val || '', '', false);\r\n            // not recalculated right now because the change needs to be sent to collaborative editor users\r\n            // it is pointer, but i don't want to set pointedby's, it is very short lived.\r\n            SetRootFieldAction.new(\"OCL_UPDATE_NEEDS_RECALCULATION\", c.data.id, '+=', false);\r\n        });\r\n        return true;\r\n    }\r\n/* moved it as setrootfield action and as array. check it after every reducer. update im same style the color palette too?\r\n    OCL_NEEDS_RECALCULATION!: boolean;\r\n    __info_of__OCL_NEEDS_RECALCULATION: Info = {hidden: true, type: ShortAttribETypes.EBoolean,\r\n        txt: \"if only the oclCondition needs to be reapplied to all model elements\"}\r\n    get_OCL_NEEDS_RECALCULATION(c: Context): this[\"OCL_NEEDS_RECALCULATION\"] { return c.data.OCL_NEEDS_RECALCULATION; }\r\n    set_OCL_NEEDS_RECALCULATION(val: this[\"OCL_NEEDS_RECALCULATION\"], c: Context): boolean { return this.cannotSet('OCL_NEEDS_RECALCULATION'); }\r\n\r\n    OCL_UPDATE_NEEDS_RECALCULATION!: boolean;\r\n    __info_of__OCL_UPDATE_NEEDS_RECALCULATION: Info = {hidden: true, type: ShortAttribETypes.EBoolean,\r\n        txt: \"if both ocl needsto be reapplied and the oclUpdateCondition -> transient.view[v.id].oclUpdateCondition_PARSED needs to be remade\"}\r\n    get_OCL_UPDATE_NEEDS_RECALCULATION(c: Context): this[\"OCL_UPDATE_NEEDS_RECALCULATION\"] { return c.data.OCL_UPDATE_NEEDS_RECALCULATION; }\r\n    set_OCL_UPDATE_NEEDS_RECALCULATION(val: this[\"OCL_UPDATE_NEEDS_RECALCULATION\"], c: Context): boolean { return this.cannotSet('OCL_UPDATE_NEEDS_RECALCULATION'); }*/\r\n\r\n    private css_MUST_RECOMPILE!: boolean;\r\n    public cssIsGlobal!: boolean;\r\n    __info_of__cssIsGlobal: Info = {type: ShortAttribETypes.EBoolean, txt: \"Use with caution!\\nIf true, custom css can affect even elements not matched with this view, or outside the graph.\"}\r\n    get_cssIsGlobal(c: Context): this[\"cssIsGlobal\"] { return c.data.cssIsGlobal; }\r\n    set_cssIsGlobal(val: this[\"cssIsGlobal\"], c: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data, \"cssIsGlobal\", !!val, '', false);\r\n            // compile only when accessed, to prevent color inputs to do a mess of compilations\r\n            SetFieldAction.new(c.data, \"css_MUST_RECOMPILE\", true, '', false);\r\n        });\r\n        return true;\r\n    }\r\n    public css!: string;\r\n    __info_of__css: Info = {type: \"css string\", txt: \"Inject custom css that cannot be inserted inline like :hover or css variables.\\nSupport LESS syntax.\"}\r\n    get_css(c: Context): this[\"css\"] { return c.data.css; }\r\n    set_css(val:this[\"css\"], c: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data, \"css\", val, '', false);\r\n            // compile only when accessed, to prevent color inputs to do a mess of compilations\r\n            SetFieldAction.new(c.data, \"css_MUST_RECOMPILE\", true, '', false);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    compiled_css!: string;\r\n    __info_of__compiled_css: Info = { hidden: true, txt:'css + palettes compiled from less in css'};\r\n    get_compiled_css(c: Context): this[\"compiled_css\"] {\r\n        if (!c.data.css_MUST_RECOMPILE) return c.data.compiled_css; // return c.proxyObject.r.__raw.compiled_css;\r\n        let s = '';\r\n        const allowLESS = false;\r\n        let shortPaletteName: string;\r\n        let cc = c;\r\n        function rgbastring(c: tinycolor.ColorFormats.RGBA): string{\r\n            Log.exDev(!c, \"invalid color:\", {id: cc.data.id, c, shortPaletteName, p:cc.data.palette});\r\n            return \"rgba(\"+c.r+\",\"+c.g+\",\"+c.b+\",\"+c.a+\")\";\r\n        }\r\n        //let palettes = U.paletteSplit(c.data.palette);\r\n        for (let paletteName in c.data.palette) {\r\n            let palette0 = c.data.palette[paletteName] as any;\r\n            if (palette0.type === \"color\") {\r\n                let palette = palette0 as PaletteControl;\r\n                let colors = palette.value;\r\n                if (!colors.length) continue;\r\n                if (['-', '_'].includes(paletteName[paletteName.length-1])) shortPaletteName = paletteName.substring(0, paletteName.length - 1);\r\n                else shortPaletteName = paletteName;\r\n                let rgba = rgbastring(colors[0]);\r\n                // set prefixed name without number\r\n                if (allowLESS) s += \"\\t@\" + shortPaletteName + \": \" + rgba + ';\\n';\r\n                s += \"\\t--\" + shortPaletteName + \": \" + rgba + ';\\n';\r\n                // set prefixed-0 name\r\n                if (allowLESS) s += \"\\t@\" + paletteName + '0: ' + rgba + ';\\n';\r\n                s += \"\\t--\" + paletteName + '0: ' + rgba + ';\\n';\r\n                // set prefixed-1 to prefixed-...n names\r\n                for (let i = 0 ; i < colors.length; i++) {\r\n                    rgba = rgbastring(colors[i]);\r\n                    if (allowLESS) s += \"\\t@\" + paletteName + (i+1) + \": \" + rgba + ';\\n';\r\n                    s += \"\\t--\" + paletteName + (i+1) + \": \" + rgba + ';\\n';\r\n                }\r\n            } else if (palette0.type === 'path'){\r\n                let palette: PathControl = palette0;\r\n                let val = U.replaceAll(palette.value, 'view.', '');\r\n                val = U.replaceAll(val, 'this.', '');\r\n                val = U.replaceAll(val, 'x', palette.x);\r\n                val = U.replaceAll(val, 'y', palette.y);\r\n                val = U.replaceAll(val, '+', ' +');\r\n                val = U.replaceAll(val, '-', ' -'); // important: cannot add space post-dash or it's harder to distinguish unary and binary -\r\n                val = U.replaceAll(val, '/', ' / ');\r\n                val = U.replaceAll(val, '*', ' * ');\r\n                let valarr: (string | number)[] = val.split(/[,\\s]/);\r\n                // [] not allowed\r\n                valarr = (valarr as string[]).map(val => {\r\n                    if (!isNaN(+val)) return val;\r\n                    let patharr: string[] = val.split('.');\r\n                    let curr: GObject = c.data;\r\n                    for (let pathseg of patharr) {\r\n                        curr = curr[pathseg];\r\n                        Log.e(!curr && (val.length > 1 || patharr.length > 1), \"invalid variable path in css path control\", {token:val, view:c.data.name});\r\n                        if (!curr) break;\r\n                    }\r\n                    if (typeof curr === \"object\" || (typeof curr === \"undefined\" && (val.length > 1 || patharr.length > 1)))\r\n                        Log.ee( \"invalid variable path in css path control\", {token:val, view:c.data.name});\r\n                    else val = curr || val;\r\n                    return val;\r\n                }).filter(p=>!!p);\r\n\r\n                for (let i = 0 ; i < valarr.length; i++) {\r\n                    let val = valarr[i];\r\n                    switch (val) { // i avoid subtracting L 1 -1 with spaces. it's unary if doesn't have a postfix space.\r\n                        default: continue;\r\n                        case '*': valarr[i] = +valarr[i-1] * +valarr[i+1]; valarr[i-1] = valarr[i+1] = ''; break;\r\n                        case '/': valarr[i] = +valarr[i-1] / +valarr[i+1]; valarr[i-1] = valarr[i+1] = ''; break;\r\n                        case '+': valarr[i] = +valarr[i-1] + +valarr[i+1]; valarr[i-1] = valarr[i+1] = ''; break;\r\n                        case '-': valarr[i] = +valarr[i-1] - +valarr[i+1]; valarr[i-1] = valarr[i+1] = ''; break;\r\n                    }\r\n                }\r\n                val = valarr.filter(p=>!!p).join(' ');\r\n                val = \"'\"+val+\"'\";\r\n                if (allowLESS) s += \"\\t@\" + paletteName + \": \" + val + ';\\n';\r\n                s += \"\\t--\" + paletteName + ': ' + val + ';\\n';\r\n            }\r\n            else {\r\n                // number or text\r\n                let palette: NumberControl | StringControl = palette0;\r\n                let val = palette.value + ((palette as NumberControl).unit || '');\r\n                if (!val) val = \"''\";\r\n                if (allowLESS) s += \"\\t@\" + paletteName + \": \" + val + ';\\n';\r\n                s += \"\\t--\" + paletteName + ': ' + val + ';\\n';\r\n            }\r\n        }\r\n        s += '\\n\\t' + U.replaceAll(c.data.css, '\\n', '\\n\\t');\r\n        const localViewSelector = '.'+c.data.id; // '[data-viewid=\"'+c.data.id+'\"]';\r\n        s = (!c.data.cssIsGlobal ? localViewSelector : 'body') +' {\\n' + s + '\\n}';\r\n        // not an error, i'm updating directly d-view that is usually wrong, this is to prevent multiple nodes with same view to trigger compile and redux actions\r\n        // count as if it's a derived attribute not really part of the store.\r\n        c.data.css_MUST_RECOMPILE = false;\r\n        return c.data.compiled_css = s;\r\n    }\r\n    set_compiled_css(val: this[\"compiled_css\"], c: Context): boolean {\r\n        Log.exx(\"Do not use setter for this, set it directly in d-object, along with compiled_css.\" +\r\n        \"\\nOtherwise multiple nodes of the same view will start compiling together.\\n\" as any);\r\n        return false;\r\n    }\r\n\r\n    public palette!: PaletteType;\r\n    __info_of__palette: Info = {type: \"Dictionary<prefix, colors[]>\", txt:\"Specify a set of colors, numbers or text variables to be used in the graphical syntax through css variables.\"}\r\n    get_palette(c: Context): this[\"palette\"] { return c.data.palette; }\r\n    set_palette(val:this[\"palette\"], c: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data, \"palette\", val, '', false);\r\n            SetFieldAction.new(c.data, \"css_MUST_RECOMPILE\", true, '', false);\r\n        });\r\n    return true; }\r\n\r\n    forceNodeType?: DocString<'component name'>;\r\n    __info_of__forceNodeType: Info = {isGlobal:true, type: \"EGraphElements\", enum: EGraphElements, label:\"force node type\",\r\n        txt:<div>Forces this element to be rendered with your component of choice instead of automatic selection when generated by a &lt;DefaultNode&gt; tag.</div>}\r\n\r\n    zoom!: GraphPoint;\r\n    __info_of__zoom: Info = {todo: true, isNode: true, type: GraphPoint.cname, txt:<div>Zooms in or out the element using css scale.</div>}\r\n    /*\r\n    scalezoomx!: boolean; // whether to resize the element normally using width-height or resize it using zoom-scale css\r\n    __info_of__scalezoomx: Info = {isNode: true, isEdge: false, isEdgePoint: false, txt:<div></div>}\r\n\r\n    scalezoomy!: boolean;\r\n    __info_of__scalezoomy: Info = {isNode: true, isEdge: false, isEdgePoint: false, txt:<div></div>}*/\r\n\r\n    // not persistent, some not shared. deve essere diverso da utente ad utente perchè dipende dal pan e zoom nel grafo dell'utente attuale.\r\n    // facendo pan su grafo html sposti gli elementi, per simulare uno spostamento del grafo e farlo sembrare illimitato.\r\n    // __transient: DViewTransientProperties;\r\n\r\n    appliableToClasses!: string[]; // class names: DModel, DPackage, DAttribute...\r\n    __info_of__appliableToClasses: Info = {isGlobal: true, type: \"EModelElements | EGraphElements\",\r\n        enum: {...EModelElements, ...EGraphElements, cname:\"EModelElements | EGraphElements\"}, label:\"applicable to\",\r\n        txt: <div>Do a low priority match with elements of this type.\r\n            <br/>This is just a shortcut with a lower priority than a OCL match.\r\n            <br/>The same result can be obtained through OCL.</div>}\r\n\r\n    appliableTo!: 'Any'|'Graph'|'GraphVertex'|'Vertex'|'Edge'|'EdgePoint'|'Field';\r\n\r\n    subViews!: LViewElement[];\r\n    __info_of__subViews: Info = {isGlobal: true, hidden: true, type: \"DViewElement[]\", label:\"sub-views\",\r\n        txt:<div>Views that are suggested to render elements contained in the current one with a higher match priority.\r\n            <br/>Like a package view giving priority to a specific Class or Enum view to render his contained Classifiers in a common theme.\r\n            <br/>If you wish to see the subview weight attached to the collection, access view.__raw.subviews instead.</div>}\r\n    get_SubViews(c: Context): this[\"subViews\"] {\r\n        delete c.data.subViews.clonedCounter;\r\n        return Object.keys(c.data.subViews).map( vid => LPointerTargetable.fromPointer(vid) as LViewElement);\r\n    }\r\n    set_SubViews(val: this[\"subViews\"] | GObject, c: Context): boolean {\r\n        let subviewsmap: GObject;\r\n        if (Array.isArray(val)) {\r\n            let ptrsArr = Pointers.fromArr(val);\r\n            subviewsmap = U.objectFromArrayValues(ptrsArr, 1.5);\r\n        } else subviewsmap = val || {};\r\n        SetFieldAction.new(c.data, \"subViews\", subviewsmap, '', true);\r\n        return true; }\r\n\r\n\r\n    setSubViewScore!: (subview: Pack1<LViewElement>, boost?: number | null) => void;\r\n    __info_of__setSubViewScore: Info = {isGlobal: true, hidden: true, type: \"function(ViewElement, numeric_score): void\", txt:<div>Adds, updates or unsets (if boost = null) a subview with his score.</div>}\r\n\r\n    // adds, updates or unsets (if boost = null) a subview with his score.\r\n    get_setSubViewScore(c: Context): ((subview: Pack1<LViewElement>, boost?: number | null) => void) {\r\n        return (subview: Pack1<LViewElement>, boost: number| null = 1.5 ) => {\r\n            let subviews = {...c.data.subViews};\r\n            let ptr = Pointers.from(subview) as Pointer<DViewElement>;\r\n            if (boost !== null) { // set mode\r\n                if (subviews[ptr] === boost) return;\r\n                subviews[ptr] = boost;\r\n            } else {// set mode\r\n                if (subviews[ptr] === undefined) return;\r\n                delete subviews[ptr];\r\n            }\r\n            SetFieldAction.new(c.data, 'subViews',  subviews, '', true);\r\n        };\r\n    }\r\n\r\n\r\n    allSubViews!: LViewElement[];\r\n    __info_of__allSubViews: Info = {type: \"ViewElement[]\", txt: \"recursively get this.subViews.\"}\r\n    get_allSubViews(c: Context): this[\"allSubViews\"] {\r\n        delete c.data.subViews.clonedCounter;\r\n        let arr: Pointer<DViewElement>[] = Object.keys(c.data.subViews);\r\n        let nextarr: Pointer<DViewElement>[] = [];\r\n        let idmap: Dictionary<Pointer, DViewElement> = {};\r\n        let s: DState = store.getState();\r\n        let dview: DViewElement;\r\n        while (arr.length) {\r\n            for (let vid of arr) {\r\n                if (idmap[vid]) continue;\r\n                dview = DPointerTargetable.fromPointer(vid, s);\r\n                if (!dview) continue;\r\n                idmap[vid] = dview;\r\n                U.arrayMergeInPlace(nextarr, Object.keys(dview.subViews));\r\n            }\r\n            arr = nextarr;\r\n            nextarr = [];\r\n        }\r\n        return LPointerTargetable.fromD(Object.values(idmap));\r\n    }\r\n    set_allSubViews(val: this[\"allSubViews\"], c: Context): boolean { return this.wrongAccessMessage(\"cannot call set_allSubViews, it is a derived attribute\"); }\r\n\r\n\r\n    defaultVSize!: GraphSize;\r\n    __info_of__defaultVSize: Info = {isNode:true, type: \"GraphSize\", label:\"default size\", txt: 'starting size of the node'}\r\n\r\n\r\n    adaptWidth!: boolean;\r\n    __info_of__adaptWidth: Info = {isNode:true, type: ShortAttribETypes.EBoolean, label:\"adapt width\",\r\n        txt: 'Whether the element should expand his width to accomodate his own contents.'}\r\n\r\n    adaptHeight!: boolean;\r\n    __info_of__adaptHeight: Info = {isNode:true, type: ShortAttribETypes.EBoolean, label:\"adapt height\",\r\n        txt: 'Whether the element should expand his height to accomodate his own contents.'}\r\n\r\n    draggable!: boolean;\r\n    __info_of__draggable: Info = {isNode: true, type: ShortAttribETypes.EBoolean, txt: 'if the element can be dragged'}\r\n\r\n    resizable!: boolean;\r\n    __info_of__resizable: Info = {isNode: true, type: ShortAttribETypes.EBoolean, txt: 'if the element can be resized'}\r\n\r\n    oclCondition!: string; // ocl selector\r\n    __info_of__oclCondition: Info = {isGlobal: true, hidden:true, label:\"OCL apply condition\", type: \"text\", // TODO: what's the difference with this.query?\r\n        txt: 'OCL Query selector to determine which nodes or model elements should apply this view'}\r\n    protected get_oclCondition(context: Context): this['oclCondition'] {\r\n        return context.data.oclCondition;\r\n    }\r\n    set_oclCondition(val: string, context: Context): boolean {\r\n        val = (val || '').trim();\r\n        if (val === context.data.oclCondition) return true;\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'oclCondition', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_ocl', context.data.id, '+=', false); // it is pointer, but for transient stuff there is no need to set pointedby's\r\n        })\r\n        return true;\r\n    }\r\n\r\n    jsCondition!: string; // js selector\r\n    __info_of__jsCondition: Info = {isGlobal: true, hidden:true, label:\"js apply condition\", type: \"text\",\r\n        txt: 'js Query selector to determine which nodes or model elements should apply this view'}\r\n    protected get_jsCondition(context: Context): this['jsCondition'] {\r\n        return context.data.jsCondition;\r\n    }\r\n    set_jsCondition(val: string, context: Context): boolean {\r\n        val = (val || '').trim();\r\n        if (val === context.data.jsCondition) return true;\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'jsCondition', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_jsCondition', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    // todo: how about allowing a view to be part in multiple vp's? so this reference would be an array or removed, and you navigate only from vp to v.\r\n    viewpoint!: LViewPoint;\r\n    __info_of__viewpoint: Info = {hidden: true, type: LViewPoint.cname, txt: <div>The collection of views containing this one, useful to activate multiple views at once.</div>}\r\n\r\n    display!: 'block'|'contents';\r\n    __info_of__display: Info = {obsolete: true, isNode: true, type: ShortAttribETypes.EString,\r\n        txt: 'complete css injection instead'}\r\n\r\n    onDragStart!: string;\r\n    __info_of__onDragStart: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated when a node begins being dragged.'}\r\n    protected get_onDragStart(context: Context): this['onDragStart'] {\r\n        return context.data.onDragStart;\r\n    }\r\n    protected set_onDragStart(val: this['onDragStart'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onDragStart', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onDragStart', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onDragEnd!: string;\r\n    __info_of__onDragEnd: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated when a node finishes being dragged.'}\r\n    protected get_onDragEnd(context: Context): this['onDragEnd'] {\r\n        return context.data.onDragEnd;\r\n    }\r\n    protected set_onDragEnd(val: this['onDragEnd'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onDragEnd', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onDragEnd', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    whileDragging!: string;\r\n    __info_of__whileDragging: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated multiple times when mouse is moved while a node is being dragged.'}\r\n    protected get_whileDragging(context: Context): this['whileDragging'] {\r\n        return context.data.whileDragging;\r\n    }\r\n    protected set_whileDragging(val: this['whileDragging'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'whileDragging', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_whileDragging', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onResizeStart!: string;\r\n    __info_of__onResizeStart: Info = {isNode: true, type: \"Function():void\",\r\n    txt: 'Custom event activated when a node begins being resized.'}\r\n    protected get_onResizeStart(context: Context): this['onResizeStart'] {\r\n        return context.data.onResizeStart;\r\n    }\r\n    protected set_onResizeStart(val: this['onResizeStart'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onResizeStart', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onResizeStart', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onResizeEnd!: string;\r\n    __info_of__onResizeEnd: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated when a node finishes being resized.'}\r\n    protected get_onResizeEnd(context: Context): this['onResizeEnd'] {\r\n        return context.data.onResizeEnd;\r\n    }\r\n    protected set_onResizeEnd(val: this['onResizeEnd'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onResizeEnd', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onResizeEnd', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    whileResizing!: string;\r\n    __info_of__whileResizing: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated multiple times when mouse is moved while a node is being resized.'}\r\n    protected get_whileResizing(context: Context): this['whileResizing'] {\r\n        return context.data.whileResizing;\r\n    }\r\n    protected set_whileResizing(val: this['whileResizing'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'whileResizing', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_whileResizing', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onRotationStart!: string;\r\n    __info_of__onRotationStart: Info = {isNode: true, type: \"Function():void\",\r\n    txt: 'Custom event activated when a node begins being rotated.'}\r\n    protected get_onRotationStart(context: Context): this['onRotationStart'] {\r\n        return context.data.onRotationStart;\r\n    }\r\n    protected set_onRotationStart(val: this['onRotationStart'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onRotationStart', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onRotationStart', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onRotationEnd!: string;\r\n    __info_of__onRotationEnd: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated when a node finishes being rotated.'}\r\n    protected get_onRotationEnd(context: Context): this['onRotationEnd'] {\r\n        return context.data.onRotationEnd;\r\n    }\r\n    protected set_onRotationEnd(val: this['onRotationEnd'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n        SetFieldAction.new(context.data, 'onRotationEnd', val, '', false);\r\n        SetRootFieldAction.new('VIEWS_RECOMPILE_onRotationEnd', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    whileRotating!: string;\r\n    __info_of__whileRotating: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated multiple times when mouse is moved while a node is being rotated.'}\r\n    protected get_whileRotating(context: Context): this['whileRotating'] {\r\n        return context.data.whileRotating;\r\n    }\r\n    protected set_whileRotating(val: this['whileRotating'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'whileRotating', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_whileRotating', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    onDataUpdate!: string;\r\n    __info_of__onDataUpdate: Info = {isNode: true, type: \"Function():void\",\r\n        txt: 'Custom event activated every time a property of his model, node or view is changed while the element is visibly rendered in a graph.\\n<br>Caution! this might cause loops.'}\r\n    protected get_onDataUpdate(context: Context): this['onDataUpdate'] {\r\n        return context.data.onDataUpdate;\r\n    }\r\n    protected set_onDataUpdate(val: this['onDataUpdate'], context: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(context.data, 'onDataUpdate', val, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_onDataUpdate', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    events!: Dictionary<DocString<\"functionName\">, ((...a:any)=>any)>;\r\n    event!:  Dictionary<DocString<\"functionName\">, ((...a:any)=>any)>;\r\n    __info_of__events: Info = {todo: true, isGlobal: true, type: \"Dictionary<name, function>\",\r\n        txt: <div>Custom events callable through JSX user interaction<br/>eg: &lt;div onClick=&#123;()=&gt;view.eventname()&#125; /&gt;</div>}\r\n    __info_of__event: Info = {todo: true, isGlobal: true, type: \"Dictionary<name, function>\", txt: 'Alias for this.events'}\r\n    protected get_event(c: Context): this['events'] { return this.get_events(c); }\r\n    protected get_events(c: Context): this['events'] {\r\n        Log.exx(\"use node.events instead\", U.getStackTrace());\r\n        return {};\r\n        // return transientProperties.view[c.data.id]?.events || {};\r\n    }\r\n    protected set_events(val: DViewElement[\"events\"], context: Context): boolean {\r\n        const addUD = true;\r\n        TRANSACTION(()=> {\r\n            SetFieldAction.new(context.data, 'events', val, '+=', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_events', {\r\n                vid: context.data.id,\r\n                keys: Object.keys(val)\r\n            }, '+=', false);\r\n            let udstr = context.data.usageDeclarations;\r\n            if (!addUD || !udstr) return;\r\n            let delta = U.objectDelta(context.data.events, val, false);\r\n            for (let key in delta) {\r\n                let v = val[key];\r\n                let autogenstr = 'ret.' + key + ' = node.events.'+key+'; // @autogenerated, do not edit\\n';\r\n                if (!v) udstr = udstr.split(autogenstr).join('');\r\n                else {\r\n                    if (!context.data.events[key]) { // insert\r\n                        let findstr = '// ** declarations here ** //\\n';\r\n                        let insertat = udstr.indexOf(findstr);\r\n                        if (insertat === -1) continue; // malformed ud, will skip\r\n                        insertat += findstr.length;\r\n                        udstr = udstr.substring(0, insertat) + autogenstr + udstr.substring(insertat);\r\n                    } else {\r\n                        // just updated func body, no name changed, no need to update UD.\r\n                    }\r\n                }\r\n            }\r\n            if (udstr === context.data.usageDeclarations) return;\r\n            SetFieldAction.new(context.data, 'usageDeclarations', udstr, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_usageDeclarations', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    constraints!: GObject<\"todo, used in Vertex. they are triggered by events (view.onDragStart....) and can bound the size of the vertex\">[];\r\n    __info_of__constraints: Info = {todo: true, isNode: true, type: \"Function():void\",\r\n        txt: 'not supported yet'}\r\n\r\n\r\n    bendingMode!: EdgeBendingMode;\r\n    __info_of__bendingMode: Info = {isEdge: true, enum: EdgeBendingMode, type: '\"L\" | \"Q\" | \"C\" | \"T\" | \"S\" | \"A\" | \"QT\" | \"CS\"',\r\n        label:\"path mode\",\r\n        txt: <><div>How Svg path should use the EdgePoints to bend his shape{/*<a href={\"https://css-tricks.com/svg-path-syntax-illustrated-guide/\"}>to bend his shape</a>*/}</div></>}\r\n\r\n    edgeGapMode!: EdgeGapMode;\r\n    __info_of__edgeGapMode: Info = {isEdge: true, enum: EdgeGapMode, type: '\"gap\" | \"average\" | \"autoFill\" | \"lineFill\" | \"arcFill\"',\r\n        label:\"gap mode\",\r\n        txt: <><div>How the segment should treat the EdgePoint interruptions.<br/>\"gap\" leaves an empty space to not overlap the EdgePoint,\r\n            <br/>\"linefill\" makes the edge stop at the EdgePoint borders, but then connects the gap with a line.</div></>}\r\n\r\n    /*\r\n    bindVertexSizeToView!: boolean;\r\n    __info_of__bindVertexSizeToView: Info = {isNode:true, type:ShortAttribETypes.EBoolean, label:\"bind sizes to view\",\r\n        txt: <div>Store the vertex size inside the view instead of inside the vertex.\r\n            <br/>This causes the vertex to have different positions according to the view currently appied to it.</div>}*/\r\n    storeSize!: boolean;\r\n    __info_of__storeSize: Info = {isNode: true, type: ShortAttribETypes.EBoolean, label:\"bind sizes to view\",\r\n        txt: \"Active: the node position depends from the view currently displayed.Inactive: it depends from the graph.\"}\r\n\r\n    lazySizeUpdate!: boolean;\r\n    __info_of__lazySizeUpdate: Info = {isNode: true, type: ShortAttribETypes.EBoolean, txt: <div>If true updates the node position only when the drag action is finished. (best performance)</div>}\r\n\r\n    edgeStartOffset!: GraphPoint;\r\n    __info_of__edgeStartOffset: Info = {isEdge: true, type: GraphPoint.cname, label:\"start offset\",\r\n        txt: \"Location where outgoing edges should start their path, relative to top-upper corner of the element.\"}\r\n\r\n    edgeEndOffset!: GraphPoint;\r\n    __info_of__edgeEndOffset: Info = {isEdge: true,  type: GraphPoint.cname, label:\"end offset\",\r\n        txt: 'Same as this.edgeStartOffset'}\r\n\r\n\r\n    edgeStartOffset_isPercentage!: boolean;\r\n    __info_of__edgeStartOffset_isPercentage: Info = {isEdge: true, type:ShortAttribETypes.EBoolean, label:\"start offset is a %\",\r\n        txt: <div>Whether edgeStartOffset is an absolute value or a percentage.<br/>(eg: 50% of element width, vs 50 pixels flat).</div>}\r\n\r\n    edgeEndOffset_isPercentage!: boolean;\r\n    __info_of__edgeEndOffset_isPercentage: Info = {isEdge: true, type:ShortAttribETypes.EBoolean, label:\"end offset is a %\",\r\n        txt: <div>Whether edgeStartOffset is an absolute value or a percentage.<br/>(eg: 50% of element width, vs 50 pixels flat).</div>}\r\n\r\n\r\n    edgeStartStopAtBoundaries!: boolean;\r\n    __info_of__edgeStartStopAtBoundaries: Info = {isEdge: true, type:ShortAttribETypes.EBoolean, label:\"start cannot cross boundaries\",\r\n        txt: <div>Whether outgoing edges should cross the node boundaries overlapping the node\\'s html or stop at them.<br/>Edge arrows might enter the node if this is on.</div>}\r\n\r\n    edgeEndStopAtBoundaries!: boolean;\r\n    __info_of__edgeEndStopAtBoundaries: Info = {isEdge: true, type: ShortAttribETypes.EBoolean, label:\"end cannot cross boundaries\",\r\n        txt: <div>Whether incoming edges should cross the node boundaries overlapping the node\\'s html or stop at them.<br/>Edge arrows might enter the node if this is on.</div>}\r\n\r\n\r\n    edgePointCoordMode!: CoordinateMode;\r\n    __info_of__edgePointCoordMode: Info = {isEdgePoint: true, type: \"CoordinateMode\", enum: CoordinateMode, label:\"coordinate mode\",\r\n        txt:<div>Store coordinates as absolute coordinates or relative to start/end nodes.</div>}\r\n    set_edgePointCoordMode(val: CoordinateMode, c: Context): boolean {\r\n        TRANSACTION(()=>{\r\n            setTimeout(()=>{ // needs to be done after coordinatemode change is applied\r\n                let s: DState = store.getState();\r\n                for (let nid in transientProperties.node) {\r\n                    let tn = transientProperties.node[nid];\r\n                    if (!tn || tn.mainView?.id !== c.data.id) continue;\r\n                    let lnode: LEdgePoint = LPointerTargetable.fromPointer(nid, s);\r\n                    let triggerCoordinateModeChange = lnode as any;\r\n                    triggerCoordinateModeChange.size = lnode.size;\r\n                }\r\n            }, 100);\r\n            SetFieldAction.new(c.data, 'edgePointCoordMode', val, '', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    edgeHeadSize!: GraphPoint;\r\n    __info_of__edgeHeadSize: Info = {isEdge: true, type:GraphPoint.cname, label:\"head decorator size\", txt:<div>Size of the edge head decorator if present.</div>}\r\n\r\n    edgeTailSize!: GraphPoint;\r\n    __info_of__edgeTailSize: Info = {isEdge: true, type:GraphPoint.cname, label:\"tail decorator size\", txt:<div>Size of the tail head decorator if present.</div>}\r\n\r\n    protected size!: Dictionary<Pointer<DModelElement> | Pointer<DGraphElement>, GraphSize>; // use getSize, updateSize;\r\n    __info_of__size: Info = {isNode: true, hidden:true, type: ShortAttribETypes.EInt,\r\n        txt:<div>Do not use directly, contains all the sizes stored in this view. use getSize, updateSize instead.</div>}\r\n\r\n\r\n    __info_of__updateSize: Info = {isNode:true, hidden:true, type:\"Function(Pointer<GraphElement | ModelElement>, GraphSize) => GraphSize\",\r\n        txt:<div>Updates the size stored in this view for target element.<br/>@returns: the delta of the change between old value and new value.</div>}\r\n    __info_of__getSize: Info = {isNode:true, hidden:true, type:\"Function(Pointer<GraphElement | ModelElement>) => GraphSize\",\r\n        txt:<div>Gets the size stored in this view for target element.</div>}\r\n\r\n    // public _parsedConstants!: GObject;\r\n    // public get__parsedConstants(c: Context): this['_parsedConstants'] { return c.data._parsedConstants || {}; }\r\n\r\n    public get_constants(c: Context): this['constants'] {\r\n        return c.data.constants;\r\n    }\r\n\r\n\r\n    public static parseConstants(funcCode?: string): GObject | undefined {\r\n        if (!funcCode) return {};\r\n        let parsedConstants: GObject = {};\r\n        let context: GObject = {__param: parsedConstants};\r\n        context.__proto__ = windoww.defaultContext;\r\n        try{\r\n            let parsedFunc = U.parseFunctionWithContextAndScope(funcCode, context, context, ['ret']);\r\n            parsedFunc(context, parsedConstants);\r\n            // U.evalInContextAndScopeNew( \"(\"+funcCode+\")(this.__param)\", context, true, false, false);\r\n        } catch (e: any) {\r\n            Log.w(\"Attempted to save an invalid view.constant setup. Cause:\\n\" + e.message.split(\"\\n\")[0], e)\r\n            return undefined;\r\n        }\r\n        return parsedConstants;\r\n    }\r\n\r\n    public set_constants(value: this['constants'], c: Context): boolean {\r\n        if (value === c.data.constants) return true;\r\n        TRANSACTION(()=> {\r\n            SetFieldAction.new(c.data.id, 'constants', value, '', false);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_constants', c.data.id, '+=', false);\r\n            SetFieldAction.new(c.data.id, \"css_MUST_RECOMPILE\", true, '', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    public get_preRenderFunc(c: Context): this['preRenderFunc'] {\r\n        return c.data.preRenderFunc;\r\n    }\r\n    public set_preRenderFunc(value: this['preRenderFunc'], c: Context): boolean {\r\n        const _value = value ? value : '() => {}';\r\n        return SetFieldAction.new(c.data.id, 'preRenderFunc', _value, '', false);\r\n    }\r\n\r\n    public get_edgeHeadSize(c: Context): this[\"edgeHeadSize\"] { return new GraphPoint(c.data.edgeHeadSize.x, c.data.edgeHeadSize.y); }\r\n    public get_edgeTailSize(c: Context): this[\"edgeTailSize\"] { return new GraphPoint(c.data.edgeTailSize.x, c.data.edgeTailSize.y); }\r\n    public set_edgeHeadSize(v: Partial<this[\"edgeHeadSize\"]>, c: Context): boolean {\r\n        let s = c.data.edgeHeadSize || new GraphPoint(0, 0);\r\n        if (!(\"x\" in v)) v.x = s.x;\r\n        if (!(\"y\" in v)) v.y = s.y;\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data.id, \"css_MUST_RECOMPILE\", true, '', false);\r\n            SetFieldAction.new(c.data.id, \"edgeHeadSize\", v as GraphPoint, '', false);\r\n        });\r\n        return true; }\r\n    public set_edgeTailSize(v: Partial<this[\"edgeTailSize\"]>, c: Context): boolean {\r\n        let s = c.data.edgeTailSize || new GraphPoint(0, 0);\r\n        if (!(\"x\" in v)) v.x = s.x;\r\n        if (!(\"y\" in v)) v.y = s.y;\r\n        TRANSACTION(()=>{\r\n            SetFieldAction.new(c.data.id, \"css_MUST_RECOMPILE\", true, '', false);\r\n            SetFieldAction.new(c.data.id, \"edgeTailSize\", v as GraphPoint, '', false);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    public get_viewpoint(context: Context): this[\"viewpoint\"] {\r\n        return (LViewPoint.fromPointer(context.data.viewpoint as Pointer<DViewPoint>));\r\n    }\r\n    // public set_subViews(v: Pointer<DViewPoint>[], context: Context): boolean { return this.cannotSet('subViews, call set_viewpoint on the sub-elements instead.'); }\r\n\r\n    // WARNING!! if there are mass vp assignments, preserveOrder=true will cause a vp to \"lose\" subviews and keep only the last assigned.\r\n    public set_viewpoint(v: Pointer<DViewPoint>, context: Context, manualDview?: DViewElement, preserveOrder: boolean = false): boolean {\r\n        let ret = false;\r\n        let vpid: Pointer<DViewPoint> = v && Pointers.from(v);\r\n        const data =  (manualDview || context.data);\r\n        let id = data.id;\r\n        let oldvpid: Pointer<DViewPoint> = data.viewpoint;\r\n        if (vpid === oldvpid) return true;\r\n\r\n        TRANSACTION(()=>{\r\n            ret = SetFieldAction.new(id, \"viewpoint\", vpid, '', true);\r\n            if (oldvpid) {\r\n                let subViews = {...DPointerTargetable.fromPointer(oldvpid).subViews};\r\n                delete subViews[id];\r\n                SetFieldAction.new(oldvpid, \"subViews\", subViews, '', true);\r\n            }\r\n            if (vpid) {\r\n                let name = data.name;\r\n                let copyPos = name.indexOf(\"Copy\");\r\n                let oldSubViews = DPointerTargetable.fromPointer(vpid).subViews;\r\n                let insertBefore: string = '';\r\n                let subViews: GObject = {};\r\n                if (copyPos) {\r\n                    let copiedFromName: string = copyPos ? name.substring(0, copyPos).trim() : '';\r\n                    if (copiedFromName in oldSubViews) insertBefore = copiedFromName;\r\n                    else {\r\n                        for (let key in oldSubViews) if (key.indexOf(copiedFromName) === 0) { insertBefore = key; break; }\r\n                    }\r\n                }\r\n\r\n\r\n                // WARNING!! if there are mass vp assignments, this will cause a vp to \"lose\" subviews and keep only the last assigned.\r\n                if (preserveOrder && insertBefore) {\r\n                    subViews = {};\r\n                    for (let key in oldSubViews) {\r\n                        subViews[key] = oldSubViews[key];\r\n                        // just to reinsert subviews **in order** so Object.keys() fits the new subview near the cloned one.\r\n                        if (key === insertBefore) subViews[id] = subViews[insertBefore];\r\n                    }\r\n                } else { subViews = {...oldSubViews}; subViews[id] = 1.5; }\r\n                subViews[id] = insertBefore ? subViews[insertBefore] : 1.5;\r\n                SetFieldAction.new(vpid, \"subViews\", subViews, '+=', true);\r\n            }\r\n        })\r\n        return ret;\r\n    }\r\n\r\n\r\n    public get_subViews(context: Context, key: string): LViewElement[]{\r\n        let subViewsPointers = context.data.subViews;\r\n        let subViews: LViewElement[] = [];\r\n        for (let pointer in subViewsPointers) {\r\n            let item: LViewElement = MyProxyHandler.wrap(pointer);\r\n            if (item !== undefined) subViews.push(item);\r\n        }\r\n        return subViews;\r\n    }\r\n\r\n    // returns the delta of change\r\n    public updateSize(id: Pointer<DModelElement> | Pointer<DGraphElement>, size: Partial<GraphSize>): boolean { return this.wrongAccessMessage(\"updateSize\"); }\r\n    public get_updateSize(context: Context): this[\"updateSize\"] {\r\n        return (id: Pointer<DModelElement> | Pointer<DGraphElement>, size0: Partial<GraphSize>) => {\r\n            let size: EPSize = size0 as any;\r\n            let vp = context.proxyObject.viewpoint;\r\n            if (!context.data.storeSize) {\r\n                if (vp?.storeSize) return vp.updateSize(id, size);\r\n                return false;\r\n            }\r\n            let vsize: EPSize = (context.data.size[id] || vp?.__raw.size[id]) as EPSize;\r\n            let newSize: EPSize = new GraphSize() as EPSize;\r\n            if (size.currentCoordType === vsize.currentCoordType) { // if samecoord system mix them.\r\n                newSize.x = size?.x !== undefined ? size.x : vsize.x;\r\n                newSize.y = size?.y !== undefined ? size.y : vsize.y;\r\n            } else if (size.x !== undefined && size.y !== undefined) { // if different coord system pick all of size\r\n                newSize.x = size.x;\r\n                newSize.y = size.y;\r\n                newSize.currentCoordType = size.currentCoordType || CoordinateMode.absolute;\r\n            } else if (vsize.x !== undefined && vsize.y !== undefined) { // or all of vsize if size was invalid\r\n                newSize.x = vsize.x;\r\n                newSize.y = vsize.y;\r\n                newSize.currentCoordType = vsize.currentCoordType || CoordinateMode.absolute;\r\n            }\r\n            let defaultsize = context.data.defaultVSize || vp?.__raw.defaultVSize;\r\n            if (newSize.x === undefined || newSize.y === undefined) { // only if pos is invalid, i take defaultvsize and force to use coord absolute.\r\n                newSize = new GraphSize().clone(defaultsize) as EPSize;\r\n                newSize.currentCoordType = CoordinateMode.absolute;\r\n            }\r\n            // w and h are always absolute so they can be mixed to whathever coordinate mode indipendently from the rest.\r\n            newSize.w = size?.w !== undefined ? size.w : vsize.w;\r\n            newSize.h = size?.h !== undefined ? size.h : vsize.h;\r\n            if (newSize.h === undefined) newSize.h = defaultsize.h || 10;\r\n            if (newSize.w === undefined) newSize.w = defaultsize.w || 10;\r\n\r\n            if (!newSize.equals(vsize)) SetFieldAction.new(context.data.id, \"size.\" + id as any, newSize);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public get_defaultVSize(context: Context): this[\"defaultVSize\"]{ return context.data.defaultVSize; }\r\n    public getSize(id: Pointer<DModelElement> | Pointer<DGraphElement>): GraphSize | undefined{ return this.wrongAccessMessage(\"getSize\"); }\r\n    public get_getSize(context: Context): ((...a:Parameters<this[\"getSize\"]>)=>ReturnType<LViewElement[\"getSize\"]>) {\r\n        function impl_getSize(id: Pointer<DModelElement> | Pointer<DGraphElement>): ReturnType<LViewElement[\"getSize\"]> {\r\n            if (typeof id === \"object\") id = (id as any).id;\r\n            let view = context.data;\r\n            let ret: GraphSize;\r\n            if (view.storeSize){\r\n                ret = view.size[id];\r\n                if(ret) return ret; }\r\n            let vp = context.proxyObject.viewpoint;\r\n            if (vp && view.id !== vp.id && vp.storeSize){\r\n                ret = vp.size[id];\r\n                if (ret) return ret; }\r\n            return undefined;\r\n        }\r\n\r\n        return impl_getSize; }\r\n\r\n    set_generic_entry(context: Context, key: keyof DViewElement, val: any): boolean {\r\n        console.log('set_generic_entry', {context, key, val});\r\n        SetFieldAction.new(context.data, key, val);\r\n        return true;\r\n    }\r\n\r\n    get_children(context: Context): never[] { return []; }\r\n\r\n\r\n    get_lazySizeUpdate(context: Context): D[\"lazySizeUpdate\"] { return Debug.lightMode || context.data.lazySizeUpdate; }\r\n    set_lazySizeUpdate(val: D[\"lazySizeUpdate\"], context: Context): boolean {\r\n        return Debug.lightMode || this.set_generic_entry(context, 'lazySizeUpdate', val);\r\n    }\r\n\r\n    get_bendingMode(context: Context): D[\"bendingMode\"] { return context.data.bendingMode; }\r\n    set_bendingMode(val: D[\"bendingMode\"], context: Context): boolean {\r\n        return this.set_generic_entry(context, 'bendingMode', val);\r\n    }\r\n\r\n    set_appliableTo(val: this[\"appliableTo\"], c: Context): boolean { // appliableTo >= forcenodetype\r\n        if (!val) val = 'Any';\r\n        let forceNodeType: string = c.data.forceNodeType as string;\r\n        if (forceNodeType !== val) switch(val) {\r\n            // case \"Any\": break;\r\n            default: forceNodeType = val;\r\n        }\r\n\r\n        console.log(\"set_appliableTo\", {forceNodeType, val});\r\n        BEGIN()\r\n        if (forceNodeType !== c.data.forceNodeType) SetFieldAction.new(c.data, \"forceNodeType\", forceNodeType, '', false);\r\n        SetFieldAction.new(c.data, \"appliableTo\", val, '', false);\r\n        END();\r\n        return true;\r\n    }\r\n    set_forceNodeType(val: this[\"forceNodeType\"], c: Context): boolean {\r\n        if (!val) val = 'Any';\r\n        /*let appliableTo: string = c.data.appliableTo as string;\r\n        if (appliableTo !== val) switch (appliableTo){\r\n            case undefined: case 'Any': break;\r\n            //case 'GraphVertex': if ((appliableTo as any) !== 'Graph' && (appliableTo as any) !== 'Vertex') appliableTo = val; break;\r\n            default: appliableTo = val; break;\r\n        }*/\r\n        BEGIN()\r\n        // if (appliableTo !== c.data.appliableTo) SetFieldAction.new(c.data, \"appliableTo\", appliableTo, '', false);\r\n        SetFieldAction.new(c.data, \"forceNodeType\", val, '', false);\r\n        END();\r\n        return true;\r\n    }\r\n    get_appliableToClasses(context: Context): this[\"appliableToClasses\"] { return context.data.appliableToClasses || []; }\r\n    set_appliableToClasses(val: this[\"appliableToClasses\"], context: Context): boolean {\r\n        if (!val) val = [];\r\n        else if (!Array.isArray(val)) val = [val];\r\n        val.sort();\r\n        let hasChanged: boolean;\r\n        if (val.length === context.data.appliableToClasses?.length) {\r\n            hasChanged = false;\r\n            for (let i = 0; i < val.length; i++) if (val[i] !== context.data.appliableToClasses[i]) { hasChanged = true; break; }\r\n        } else hasChanged = true;\r\n\r\n        if (!hasChanged) return true;\r\n        TRANSACTION(()=>{\r\n            this.set_generic_entry(context, \"appliableToClasses\", val);\r\n            SetRootFieldAction.new('VIEWS_RECOMPILE_preconditions', context.data.id, '+=', false);\r\n        })\r\n        return true;\r\n    }\r\n\r\n    set_defaultVSize(val: GraphSize, c: Context): boolean{\r\n        if (!val || typeof val !== \"object\") return true;\r\n        let x = val.x ?? +val.x;\r\n        let y = val.y ?? +val.y;\r\n        let w = val.w ?? +val.w;\r\n        let h = val.h ?? +val.h;\r\n        if (isNaN(x)) x = c.data.defaultVSize.x;\r\n        if (isNaN(y)) y = c.data.defaultVSize.y;\r\n        if (isNaN(w)) w = c.data.defaultVSize.w;\r\n        if (isNaN(h)) h = c.data.defaultVSize.h;\r\n        if (x === c.data.defaultVSize.x && y === c.data.defaultVSize.y && w === c.data.defaultVSize.w && h === c.data.defaultVSize.h) return true;\r\n        SetFieldAction.new(c.data, 'defaultVSize', {x, y, w, h} as any, '', false);\r\n        return true\r\n    }\r\n\r\n\r\n    public duplicate(deep: boolean = true, new_vp?: DuplicateVPChange): this {\r\n        return this.wrongAccessMessage( (this.constructor as typeof RuntimeAccessibleClass).cname + \"duplicate()\"); }\r\n    protected get_duplicate(c: Context): ((deep?: boolean, new_vp?: DuplicateVPChange) => LViewElement) {\r\n        return (deep: boolean = false, new_vp0?: DuplicateVPChange) => {\r\n            console.log(\"DViewelement.duplicate\", {cn: c.data.className, n:c.data.name, deep, new_vp0});\r\n            let lview: LViewElement = undefined as any;\r\n            let state: DState = store.getState();\r\n            TRANSACTION( () => {\r\n                let pvid: Pointer<DViewPoint> = c.data.viewpoint as Pointer<DViewPoint>;\r\n                const dclone: DViewElement = c.data.className === 'DViewPoint' ?\r\n                    DViewPoint.new2(`${c.data.name} Copy`, '', undefined, true) :\r\n                    DViewElement.new2(`${c.data.name} Copy`, '', undefined, true, 'skip');\r\n                lview = LPointerTargetable.fromD(dclone);\r\n                const new_vp: DuplicateVPChange = new_vp0 || {pvid};\r\n                // || {pvid,  score: (DPointerTargetable.from(pvid, state) as DViewElement).subViews[c.data.id]}\r\n\r\n                for (let key in c.data) {\r\n                    switch(key) {\r\n                        case 'subViews':\r\n                            // duplicate childrens only if deep\r\n                            if (!deep) break;\r\n                            // let subviews: Dictionary<Pointer, number> = {}\r\n                            for (const oldvid in c.data.subViews) {\r\n                                const oldScore = c.data.subViews[oldvid];\r\n                                (LPointerTargetable.fromPointer(oldvid, state) as LViewElement).duplicate(deep, {pvid:dclone.id/*, score:oldScore*/});\r\n                                // then everything is set inside case 'viewpoint' of subviews cloning\r\n                            }\r\n                            //lview.subViews = subviews as any;\r\n                            break;\r\n                        case 'father':\r\n                        case 'viewpoint':\r\n                            // update parent view\r\n                            /*\r\n                            let subviews: Dictionary<Pointer, number> = {};\r\n                            subviews[dclone.id] = new_vp.score;\r\n                            SetFieldAction.new(new_vp.pvid, 'subViews', subviews, '+=', true);\r\n                            SetFieldAction.new(dclone.id, 'viewpoint', new_vp.pvid, '+=', true);*/\r\n                            // insert in-place right after the cloned view, with old score.\r\n                            this.set_viewpoint(new_vp.pvid, undefined as any, dclone, !deep);\r\n                            // SetFieldAction.new(dclone.id, 'father', new_vp.vpid, '+=', true);\r\n                            break;\r\n                        case '':\r\n                        case 'id':\r\n                        case 'name':\r\n                        case 'className':\r\n                        case 'pointedBy':\r\n                        case '_storePath':\r\n                        case '_subMaps':\r\n                        case 'clonedCounter': break;\r\n                        case 'css_MUST_RECOMPILE': break;\r\n\r\n                        case 'isValidation':\r\n                            console.log(\"duplicate \" + c.data.name + \" set isvalidation\", {data:c.data, iv:c.data.isValidation});\r\n                            (lview as any)[key] = (c.data as any)[key];\r\n                            break;\r\n                        default:\r\n                            try {\r\n                                (lview as any)[key] = (c.data as any)[key];\r\n                            } catch(e) {\r\n                            //    Log.ee('Error on duplicate view:', e);\r\n                            }\r\n                    }\r\n                }\r\n\r\n                // insert in viewpoint.subview\r\n                //let defaultViews: Dictionary<Pointer, boolean> = Defaults.defaultViewsMap;\r\n                let vp: LViewPoint = c.proxyObject.viewpoint;\r\n                // let oldViews: Pointer<DViewElement>[] = Object.keys(vp.__raw.subViews);\r\n                // if (Defaults.viewpoints.indexOf(vpid)) oldViews = oldViews.filter( vid => !defaultViews[vid]);\r\n                // let i: number = oldViews.indexOf(c.data.id);\r\n                /*\r\n                if (i === -1) oldViews.push(dclone.id);\r\n                else oldViews.splice(i+1, 0, dclone.id); // insert in-place right after the cloned view\r\n                vp.subViews = oldViews as any;*/\r\n                // SetRootFieldAction.new('stackViews', dview.id, '+=', true);\r\n\r\n\r\n                const isVP = c.data.className === 'DViewPoint';\r\n                if (isVP) SetRootFieldAction.new(`viewpoints`, c.data.id, '+=', true);\r\n                else SetRootFieldAction.new(`viewelements`, c.data.id, '+=', true);\r\n                for (let key of DViewElement.RecompileKeys) SetRootFieldAction.new(`VIEWS_RECOMPILE_${key}`, c.data.id, '+=', false);\r\n            })\r\n            return lview;\r\n        }\r\n    }\r\n}\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DViewElement);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LViewElement);\r\n\r\ntype DuplicateVPChange = {\r\n    pvid: Pointer<DViewElement>,\r\n    // score: number //unused\r\n}\r\nexport type WViewElement = getWParams<LViewElement, DPointerTargetable>;\r\n\r\n@RuntimeAccessible('DViewTransientProperties')\r\nexport class DViewTransientProperties extends RuntimeAccessibleClass{\r\n    static logic: typeof LPointerTargetable;\r\n    _isDViewTransientProperties!: true;\r\n    // isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // private: DViewPrivateTransientProperties;\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(RuntimeAccessibleClass, DViewTransientProperties);\r\n@RuntimeAccessible('LViewTransientProperties')\r\nexport class LViewTransientProperties extends LPointerTargetable{\r\n    static structure: typeof DPointerTargetable;\r\n    static singleton: LViewTransientProperties;\r\n    _isLViewTransientProperties!: true;\r\n\r\n    // isSelected: Dictionary<DocString<Pointer<DUser>>, boolean> = {};\r\n    // private!: LViewPrivateTransientProperties;\r\n    /*\r\n        get_private(context: LogicContext<DViewTransientProperties>): LViewPrivateTransientProperties {\r\n            return LViewTransientProperties.wrap(context.data.private, context.proxy.baseObjInLookup, context.proxy.additionalPath + '.private'); }*/\r\n    /*\r\n        get_isSelected(logicContext: LogicContext<TargetableProxyHandler<DViewTransientProperties>, DViewTransientProperties>): Proxyfied<Dictionary> {\r\n            // @ts-ignore for $ at end of getpath\r\n            console.log('GET_ISSELECTED handler func');\r\n            return TargetableProxyHandler.getMap(logicContext.data.isSelected, logicContext, logicContext.proxy.additionalPath + '.' + (getPath as this).isSelected.$);\r\n        }*/\r\n}\r\n\r\nRuntimeAccessibleClass.set_extend(DPointerTargetable, DViewTransientProperties);\r\nRuntimeAccessibleClass.set_extend(LPointerTargetable, LViewTransientProperties);\r\nexport type WViewTransientProperties = getWParams<LViewTransientProperties, DViewTransientProperties>;\r\n\r\n/*\r\n\r\n@RuntimeAccessible\r\nexport class DViewPrivateTransientProperties extends DPointerTargetable{\r\n    static logic: typeof LViewPrivateTransientProperties;\r\n\r\n    public size: GraphSize\r\n    constructor(size?: GraphSize) {\r\n        super();\r\n        this.size = size || defaultVSize;\r\n    }\r\n}\r\n\r\n@RuntimeAccessible\r\nexport class LViewPrivateTransientProperties extends DViewPrivateTransientProperties{\r\n    static structure: typeof DViewPrivateTransientProperties;\r\n    static singleton: LViewPrivateTransientProperties;\r\n\r\n}*/\r\n// shapeless component, receive jsx from redux\r\n// can access any of the redux state, but will usually access 1-2 var among many,\r\n// how can i dynamically mapStateToProps to map only the required ones?\r\n\r\n"],"mappings":"+9BAAA,OACIA,KAAK,CACLC,YAAY,CACZC,cAAc,CACdC,KAAK,CACLC,QAAQ,CAMRC,kBAAkB,CAElBC,UAAU,CACVC,eAAe,CACfC,WAAW,CACXC,cAAc,CACdC,cAAc,CACdC,GAAG,CAGHC,UAAU,CACVC,SAAS,CAETC,GAAG,CAEHC,kBAAkB,CAAEC,KAAK,CACzBC,UAAU,CACVC,cAAc,CAEdC,QAAQ,CACRC,iBAAiB,CACjBC,sBAAsB,CACtBC,cAAc,CAAEC,kBAAkB,CAClCC,iBAAiB,CACjBC,KAAK,CACLC,WAAW,CACXC,CAAC,CACDC,OAAO,KACJ,cAAc,CACrB,OAAQC,KAAK,CAAiBC,mBAAmB,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAIhF,GAAI,CAAAC,KAAK,CAAG,CAAC,qBAAqB,CAAC,CAC3B,KAAK,CAAM,kFAAkF,CAC7F,IAAI,CAAO,0HAA0H,CACrI,IAAI,CAAO,wCAAwC,CACnD,IAAI,CAAO,uCAAuC,CAClD,IAAI,CAAO,6IAA6I,CACxJ,IAAI,CAAO,kCACf,CAAC,CAED,oBAAoB,CAAC,CACjB,MAAM,CAAK,wFAAwF,CACnG,KAAK,CAAM,gIAAgI,CAC3I,KAAK,CAAM,8CAA8C,CACzD,KAAK,CAAM,6CAA6C,CACxD,KAAK,CAAM,mJAAmJ,CAC9J,KAAK,CAAM,wCACf,CAAC,CAED,UAAU,CAAC,CACP,KAAK,CAAO,6CAA6C,CACzD,KAAK,CAAO,4CAA4C,CACxD,KAAK,CAAO,2CAA2C,CACvD,KAAK,CAAO,0CAA0C,CACtD,KAAK,CAAO,2CAA2C,CACvD,KAAK,CAAO,0CAA0C,CACtD,IAAI,CAAQ,gEAAgE,CAC5E,IAAI,CAAQ,gCAAgC,CAC5C,IAAI,CAAQ,iEAAiE,CAC7E,MAAM,CAAM,4CAA4C,CACxD,MAAM,CAAM,6CAA6C,CACzD,IAAI,CAAQ,+BAA+B,CAC3C,IAAI,CAAQ,kEAAkE,CAC9E,GAAG,CAAS,gBAChB,CAAC,CAED,2BAA2B,CAAC,CACxB,KAAK,CAAO,6CAA6C,CACzD,KAAK,CAAO,yCAAyC,CACrD,KAAK,CAAO,8CAA8C,CAC1D,OAAO,CAAK,wCAAwC,CACpD,OAAO,CAAK,yCAAyC,CACrD,KAAK,CAAO,wCAChB,CAAC,CAED,kBAAkB,CAAC,CACf,IAAI,CAAO,oCAAoC,CAC/C,IAAI,CAAO,mCAAmC,CAC9C,IAAI,CAAO,wCAAwC,CACnD,IAAI,CAAO,iCAAiC,CAC5C,IAAI,CAAO,mCAAmC,CAC9C,IAAI,CAAO,mCAAmC,CAC9C,GAAG,CAAQ,8CACf,CAAC,CAED,QAAQ,CAAC,CACL,KAAK,CAAO,yDAAyD,CACrE,MAAM,CAAM,4DAA4D,CACxE,KAAK,CAAO,wDAAwD,CACpE,MAAM,CAAM,kDAChB,CAAC,CAED,MAAM,CAAC,CACH,IAAI,CAAM,mBAAmB,CAC7B,GAAG,CAAO,yDACd,CAAC,CAED,WAAW,CAAC,CACR,IAAI,CAAO,+DAA+D,CAC1E,KAAK,CAAM,8CACf,CAAC,CAED,YAAY,CAAC,CACT,MAAM,CAAM,6BAA6B,CACzC,KAAK,CAAO,sBAAsB,CAClC,MAAM,CAAM,0BAChB,CAAE,CAAC,CAS4E;AAC6B;AAIhH,UACa,CAAAC,YAAY,EAAAC,IAAA,CADxBnB,iBAAiB,CAAC,cAAc,CAAC,CAAAmB,IAAA,CAAAC,MAAA,EAAAC,OAAA,uBAAAC,mBAAA,EAAAC,SAAA,CAAAL,YAAA,CAAAI,mBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAP,YAAA,WAAAA,aAAA,MAAAQ,KAAA,CAAAC,eAAA,MAAAT,YAAA,UAAAU,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAC,IAAA,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAAF,IAAA,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GAAAP,KAAA,CAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,QAAAY,MAAA,CAAAL,IAAA,GAAAL,KAAA,CAe9BW,EAAE,QAAAX,KAAA,CAIFY,YAAY,QAAAZ,KAAA,CACZa,IAAI,QAAAb,KAAA,CACJc,eAAe,QAAAd,KAAA,CAGfe,SAAS,QAAAf,KAAA,CAITgB,aAAa,QAAAhB,KAAA,CAEbiB,SAAS,QAAAjB,KAAA,CACTkB,iBAAiB,QAAAlB,KAAA,CAEjBmB,aAAa,QAAAnB,KAAA,CAMboB,kBAAkB,QAAApB,KAAA,CAClBqB,WAAW,QAAArB,KAAA,CACXsB,QAAQ,QAAAtB,KAAA,CACRuB,YAAY,QAAAvB,KAAA,CACZwB,WAAW,QAAAxB,KAAA,CACXyB,kBAAkB,QAAAzB,KAAA,CAElB0B,uBAAuB,QAAA1B,KAAA,CACvB2B,8BAA8B,QAAA3B,KAAA,CAC9B4B,2BAA2B,QAAA5B,KAAA,CAC3B6B,YAAY,QAAA7B,KAAA,CACZ8B,WAAW,QAAA9B,KAAA,CACX+B,UAAU,QAAA/B,KAAA,CAGVgC,SAAS,QAAAhC,KAAA,CACTiC,SAAS,QAAAjC,KAAA,CACTkC,SAAS,QAAAlC,KAAA,CAGTmC,YAAY,QAAAnC,KAAA,CACZoC,WAAW,QAAApC,KAAA,CACXqC,SAAS,QAAArC,KAAA,CACTsC,aAAa,QAAAtC,KAAA,CACbuC,aAAa,QAAAvC,KAAA,CACbwC,WAAW,QAAAxC,KAAA,CACXyC,aAAa,QAAAzC,KAAA,CACb0C,eAAe,QAAA1C,KAAA,CACf2C,aAAa,QAAA3C,KAAA,CACb4C,aAAa,QAAA5C,KAAA,CACb6C,MAAM,QAAA7C,KAAA,CACN8C,WAAW,QAAA9C,KAAA,CACX+C,WAAW,QAAA/C,KAAA,CAEXgD,SAAS,QAAAhD,KAAA,CACTiD,IAAI,QAAAjD,KAAA,CACJkD,cAAc,QAAAlD,KAAA,CACdmD,eAAe,QAAAnD,KAAA,CACfoD,aAAa,QAAApD,KAAA,CACbqD,4BAA4B,QAAArD,KAAA,CAC5BsD,0BAA0B,QAAAtD,KAAA,CAC1BuD,yBAAyB,QAAAvD,KAAA,CACzBwD,uBAAuB,QAAAxD,KAAA,CACvByD,kBAAkB,QAAAzD,KAAA,CAClB0D,YAAY,QAAA1D,KAAA,CACZ2D,YAAY,QAAA3D,KAAA,CACZ4D,OAAO,QAAA5D,KAAA,CACP6D,GAAG,QAAA7D,KAAA,CACH8D,WAAW,QAAA9D,KAAA,CACG+D,YAAY,QAAA/D,KAAA,CACZgE,kBAAkB,eAAAhE,KAAA,EArFhC;AACA;AACA;AAOA;AACA;AAIA;AACwB;AAIxB;AAEA;AAEA;AAGoB;AAG6D;AACjF;AACA;AACA;AACA;AACA;AAC+B;AAGR;AACD;AAEtB;AACmC;AACO;AACJ;AAEhB;AAEtB;AACJ,sBADI,CAKA;AACA;AAcA;AAG0B;AAa1B,cACA,aAAAiE,YAAA,CAAAzE,YAAA,QAAA0E,GAAA,OAAAC,KAAA,CAEA,SAAAC,KAAkBvD,IAAY,CAAEI,SAAiB,CAAEY,YAAwB,CAEoE,IAFlE,CAAAX,iBAAyB,CAAAf,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,EAAE,IAAE,CAAAY,SAAiB,CAAAZ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,EAAE,IACjH,CAAAa,aAAqB,CAAAb,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,EAAE,IAAE,CAAAiB,kBAA4B,CAAAjB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,EAAE,IAAE,CAAAoB,YAAoB,CAAApB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,EAAE,IACxF,CAAAmE,QAAiB,CAAAnE,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAkE,SAAA,IAAE,CAAAE,OAAgB,CAAApE,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,IAAI,IAAE,CAAAqE,aAAsB,CAAArE,SAAA,CAAAC,MAAA,KAAAD,SAAA,OAAAkE,SAAA,CAAAlE,SAAA,KAAG,KAAK,IAAE,CAAAsE,EAAiC,CAAAtE,SAAA,CAAAC,MAAA,IAAAD,SAAA,KAAAkE,SAAA,CAC3H,GAAI,CAAA1D,EAAE,CAAG6D,aAAa,CAAG,cAAc,CAAG3D,IAAI,CAAGwD,SAAS,CAC1D,MAAO,IAAI,CAAAlH,YAAY,CAAC,GAAI,CAAAqC,YAAY,CAAC,KAAK,CAAC,CAAE6E,SAAS,CAAEE,OAAO,CAAEF,SAAS,CAAE1D,EAAE,CAAC,CAACpD,kBAAkB,CAAC,CAAC,CAACiC,YAAY,CAACqB,IAAI,CAAEI,SAAS,CAAEwD,EAAE,CAAE5C,YAAY,CAAEX,iBAAiB,CAAEH,SAAS,CACjLC,aAAa,CAAEI,kBAAkB,CAAEG,YAAY,CAAE+C,QAAQ,CAAC,CAACI,GAAG,CAAC,CAAC,CAExE,CAAC,GAAAR,GAAA,QAAAC,KAAA,CACD,SAAAQ,KAAmB9D,IAAY,CAAEI,SAAiB,CAAE2D,QAAiC,CAAyF,IAAvF,CAAAL,OAAgB,CAAApE,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,IAAI,IAAE,CAAAsE,EAAiC,CAAAtE,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAkE,SAAA,IAAE,CAAA1D,EAAW,CAAAR,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAkE,SAAA,CAC1J;AACA,MAAO,IAAI,CAAAlH,YAAY,CAAC,GAAI,CAAAqC,YAAY,CAAC,KAAK,CAAC,CAAE6E,SAAS,CAAEE,OAAO,CAAEF,SAAS,CAAE1D,EAAE,CAAC,CAC9EpD,kBAAkB,CAAC,CAAC,CAACiC,YAAY,CAACqB,IAAI,CAAEI,SAAS,CAAEwD,EAAE,CAAC,CAACC,GAAG,CAACE,QAAQ,CAAC,CAC7E,CAAC,GAAAV,GAAA,cAAAC,KAAA,CAED,SAAAU,WAAkBC,OAAuB,CAAe,CACpD,GAAM,CAAA7F,GAAG,yWAWV,CACC,GAAM,CAAA8F,QAAqB,CAAG,CAC1B,eAAe,CAAE,CAACC,IAAI,CAAC,OAAO,CAAEb,KAAK,CAAE,CAAC,CAACc,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpE,aAAa,CAAE,CAACJ,IAAI,CAAC,OAAO,CAAEb,KAAK,CAAE,CAAC,CAACc,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,GAAG,CAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClE,QAAQ,CAAE,CAACJ,IAAI,CAAC,OAAO,CAAEb,KAAK,CAAE,CAAC,CAACc,CAAC,CAAC,CAAC,CAAEC,CAAC,CAAC,EAAE,CAAEC,CAAC,CAAC,EAAE,CAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5D,CAAC,CACG,GAAM,CAAAvB,GAAG,2kBA8BnB,CACM,GAAI,CAAAwB,KAAK,CAAG,EAAE,CACd,GAAIP,OAAO,CAAE,OAAOA,OAAO,CAACQ,SAAS,EACjC,IAAK,QAAQ,CACTD,KAAK,+CAAA3E,MAAA,CAAiDoE,OAAO,CAACnE,EAAE,KAAG,CACnE,MACJ,IAAK,YAAY,CACjB,IAAK,YAAY,CACb0E,KAAK,8CAAA3E,MAAA,CAAgDoE,OAAO,CAACnE,EAAE,KAAG,CAClE,MACJ,QACI0E,KAAK,YAAA3E,MAAA,CAAcoE,OAAO,CAACQ,SAAS,sBAAA5E,MAAA,CAAoBoE,OAAO,CAACnE,EAAE,KAAG,CACrE,MACR,CACA,GAAM,CAAA4E,IAAI,CAAGrH,KAAK,CAACsH,WAAW,CAACzG,KAAK,CAAC0G,OAAO,CAAC,CAC7C;AACA,GAAI,CAAA5E,IAAY,CAChB,GAAIiE,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEjE,IAAI,CAAE,CACfA,IAAI,CAAGiE,OAAO,CAACjE,IAAI,CAAG,MAAM,CAChC,CAAC,IAAM,KAAA6E,aAAA,CACH,GAAM,CAAAjB,EAAc,CAAG,CAAAc,IAAI,SAAJA,IAAI,kBAAAG,aAAA,CAAJH,IAAI,CAAEI,OAAO,UAAAD,aAAA,iBAAbA,aAAA,CAAeE,eAAe,GAAI3H,kBAAkB,CAACuH,WAAW,CAAClI,QAAQ,CAACuI,UAAU,CAAC,CAAC,CAAC,CAAC,CAC/G,GAAI,CAAAC,KAAe,CAAGrB,EAAE,CAACnD,QAAQ,CAACyE,GAAG,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,EAAIA,CAAC,CAACnF,IAAI,GAAC,CACvDA,IAAI,CAAGhC,CAAC,CAACoH,oBAAoB,CAAE,OAAO,CAAG,CAAC,CAAE,KAAK,CAAE,KAAK,CAAE,SAAAC,OAAO,QAAI,CAAAJ,KAAK,CAACK,OAAO,CAACD,OAAO,CAAC,EAAI,CAAC,GAAC,CACrG,CACA,MAAO,CAAA1G,YAAY,CAACmF,IAAI,CAAC9D,IAAI,CAAE5B,GAAG,CAAE,SAACmH,CAAC,CAAG,CACrCA,CAAC,CAACvC,GAAG,CAAGA,GAAG,CACXuC,CAAC,CAACxC,OAAO,CAAGmB,QAAQ,CACpBqB,CAAC,CAACpC,kBAAkB,CAAG,IAAI,CAC3BoC,CAAC,CAAC7E,YAAY,CAAG8D,KAAK,CAC1B,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,WAAA7F,YAAA,GAtL6BjC,kBAAkB,EAAAoC,OAAA,CACzC0G,UAAU,CAA+C,EAAE,CAAA1G,OAAA,CAC3D2G,QAAQ,CAA+C,EAAE,CAAA3G,OAAA,CAIlD4G,cAAc,CAAa,CAAC,cAAc,CAAE,aAAa,CAAE,WAAW,CAAE,eAAe,CAAE,eAAe,CAClH,aAAa,CAAE,eAAe,CAAE,iBAAiB,CAAE,eAAe,CAAE,eAAe,CAAC,CAAA5G,OAAA,CAC1E6G,aAAa,CAAa,CAAC,cAAc,CAAE,aAAa,CAAE,WAAW,CAAE,eAAe,CAAE,eAAe,CACjH,aAAa,CAAE,eAAe,CAAE,iBAAiB,CAAE,eAAe,CAAE,eAAe,CACnF,WAAW,CAAE,mBAAmB,CAAE,WAAW,CAAE,eAAe,CAAE,aAAa,CAAE,KAAK,CAAE,QAAQ,CAAC,CAAA7G,OAAA,IAAAD,MAAA,EA+KvG,UACa,CAAA+G,YAAY,EAAAC,KAAA,CADxBpI,iBAAiB,CAAC,cAAc,CAAC,CAAAoI,KAAA,CAAAC,OAAA,EAAAC,OAAA,uBAAAC,mBAAA,EAAAhH,SAAA,CAAA4G,YAAA,CAAAI,mBAAA,MAAAC,OAAA,CAAA/G,YAAA,CAAA0G,YAAA,WAAAA,aAAA,MAAAM,MAAA,CAAA9G,eAAA,MAAAwG,YAAA,UAAAO,KAAA,CAAA7G,SAAA,CAAAC,MAAA,CAAAC,IAAA,KAAAC,KAAA,CAAA0G,KAAA,EAAAC,KAAA,GAAAA,KAAA,CAAAD,KAAA,CAAAC,KAAA,IAAA5G,IAAA,CAAA4G,KAAA,EAAA9G,SAAA,CAAA8G,KAAA,GAAAF,MAAA,CAAAD,OAAA,CAAAtG,IAAA,CAAAC,KAAA,CAAAqG,OAAA,QAAApG,MAAA,CAAAL,IAAA,GAAA0G,MAAA,CAWvBG,KAAK,QAAAH,MAAA,CACZpG,EAAE,QAAAoG,MAAA,CACK9B,CAAC,QAAA8B,MAAA,CAKRnG,YAAY,QAAAmG,MAAA,CACZlG,IAAI,QAAAkG,MAAA,CACJI,eAAe,CAAS,CAACC,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAEtG,iBAAiB,CAAC2I,OAAO,CAAEC,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,kBAAgB,CAAK,CAAC,CAAC,CAAAR,MAAA,CAC1GS,SAAS,QAAAT,MAAA,CACTU,oBAAoB,CAAS,CAACL,QAAQ,CAAC,IAAI,CAAEpC,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,qGAChF,cAAArI,IAAA,QAAI,CAAC,iHAA8G,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAMlInF,2BAA2B,QAAAmF,MAAA,CAC3BY,sCAAsC,CAAS,CAACP,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAEtG,iBAAiB,CAACkJ,KAAK,CAAEC,KAAK,CAAC,mBAAmB,CACpHP,GAAG,CAAE,kHAAmH,CAAC,CAAAP,MAAA,CAS7HjG,eAAe,QAAAiG,MAAA,CACfe,0BAA0B,CAAS,CAACV,QAAQ,CAAC,IAAI,CAAEpC,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,qGAC9F,cAAArI,IAAA,QAAI,CAAC,iHAA8G,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAO1HhG,SAAS,QAAAgG,MAAA,CACTgB,oBAAoB,CAAS,CAACC,IAAI,CAAC,IAAI,CAAEZ,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,mBAAmB,CAAE6C,KAAK,CAAC,uBAAuB,CAC7GP,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,uHAAqH,cAAArI,IAAA,QAAI,CAAC,2CAC3F,cAAAA,IAAA,QAAI,CAAC,EAC5C,CAAC,CAAC,CAAA6H,MAAA,CAIP/F,aAAa,QAAA+F,MAAA,CACbkB,wBAAwB,CAAS,CAACb,QAAQ,CAAE,IAAI,CAAEc,QAAQ,CAAE,IAAI,CAAElD,IAAI,CAAE,mBAAmB,CAAE6C,KAAK,CAAC,qBAAqB,CACpHP,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,+HAA6H,cAAArI,IAAA,QAAI,CAAC,iCAA8B,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAMpL9F,SAAS,QAAA8F,MAAA,CACToB,oBAAoB,CAAS,CAACf,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,MAAM,CAAE6C,KAAK,CAAC,cAAc,CAC5EP,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,yBAAuB,cAAArI,IAAA,MAAGkJ,IAAI,CAAE,iDAAkD,CAAAb,QAAA,CAAC,cAAY,CAAG,CAAC,yCAAsC,EAAK,CAAC,CAAC,CAAAR,MAAA,CAa7J7F,iBAAiB,QAAA6F,MAAA,CACjBsB,4BAA4B,CAAS,CAACL,IAAI,CAAE,KAAK,CAAEZ,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,mBAAmB,CAAE6C,KAAK,CAAC,oBAAoB,CACpHP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,yEACN,cAAArI,IAAA,QAAI,CAAC,2EACL,cAAAA,IAAA,QAAI,CAAC,sGACL,cAAAA,IAAA,QAAI,CAAC,qGACL,cAAAA,IAAA,QAAI,CAAC,sFACL,cAAAA,IAAA,QAAI,CAAC,yEAAoE,cACzEA,IAAA,QAAI,CAAC,iDACb,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAsBPtF,kBAAkB,QAAAsF,MAAA,CAClBuB,6BAA6B,CAAS,CAACC,QAAQ,CAAE,+BAA+B,CAAEC,SAAS,CAAE,iBAAiB,CAC1GlB,GAAG,CAAE,oIAAoI,CAAC,CAAAP,MAAA,CAwBtI/C,kBAAkB,QAAA+C,MAAA,CACnBjD,WAAW,QAAAiD,MAAA,CAClB0B,sBAAsB,CAAS,CAACzD,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,CAAE,mHAAmH,CAAC,CAAAP,MAAA,CAUpLlD,GAAG,QAAAkD,MAAA,CACV2B,cAAc,CAAS,CAAC1D,IAAI,CAAE,YAAY,CAAEsC,GAAG,CAAE,sGAAsG,CAAC,CAAAP,MAAA,CAWxJhD,YAAY,QAAAgD,MAAA,CACZ4B,uBAAuB,CAAS,CAAEC,MAAM,CAAE,IAAI,CAAEtB,GAAG,CAAC,0CAA0C,CAAC,CAAAP,MAAA,CAkGxFnD,OAAO,QAAAmD,MAAA,CACd8B,kBAAkB,CAAS,CAAC7D,IAAI,CAAE,8BAA8B,CAAEsC,GAAG,CAAC,8GAA8G,CAAC,CAAAP,MAAA,CASrL5F,aAAa,QAAA4F,MAAA,CACb+B,wBAAwB,CAAS,CAAC1B,QAAQ,CAAC,IAAI,CAAEpC,IAAI,CAAE,gBAAgB,CAAE+D,IAAI,CAAEpL,cAAc,CAAEkK,KAAK,CAAC,iBAAiB,CAClHP,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,wIAA4I,CAAK,CAAC,CAAC,CAAAR,MAAA,CAEhKiC,IAAI,QAAAjC,MAAA,CACJkC,eAAe,CAAS,CAACjB,IAAI,CAAE,IAAI,CAAEkB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAElH,UAAU,CAACqL,KAAK,CAAE7B,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,8CAA4C,CAAK,CAAC,CAAC,CAAAR,MAAA,CAYvI3F,kBAAkB,QAAA2F,MAAA,CAClBqC,6BAA6B,CAAS,CAAChC,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,iCAAiC,CAC1F+D,IAAI,CAAAM,aAAA,CAAAA,aAAA,CAAAA,aAAA,IAAMzL,cAAc,EAAKD,cAAc,MAAEwL,KAAK,CAAC,iCAAiC,EAAC,CAAEtB,KAAK,CAAC,eAAe,CAC5GP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,qDACN,cAAArI,IAAA,QAAI,CAAC,kEACL,cAAAA,IAAA,QAAI,CAAC,+CAA4C,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAEhE1F,WAAW,QAAA0F,MAAA,CAEXzF,QAAQ,QAAAyF,MAAA,CACRuC,mBAAmB,CAAS,CAAClC,QAAQ,CAAE,IAAI,CAAEwB,MAAM,CAAE,IAAI,CAAE5D,IAAI,CAAE,gBAAgB,CAAE6C,KAAK,CAAC,WAAW,CAChGP,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,wGACL,cAAArI,IAAA,QAAI,CAAC,8HACL,cAAAA,IAAA,QAAI,CAAC,wGAAqG,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAezHwC,eAAe,QAAAxC,MAAA,CACfyC,0BAA0B,CAAS,CAACpC,QAAQ,CAAE,IAAI,CAAEwB,MAAM,CAAE,IAAI,CAAE5D,IAAI,CAAE,4CAA4C,CAAEsC,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,qEAAmE,CAAK,CAAC,CAAC,CAAAR,MAAA,CAmBzM0C,WAAW,QAAA1C,MAAA,CACX2C,sBAAsB,CAAS,CAAC1E,IAAI,CAAE,eAAe,CAAEsC,GAAG,CAAE,gCAAgC,CAAC,CAAAP,MAAA,CAwB7FlF,YAAY,QAAAkF,MAAA,CACZ4C,uBAAuB,CAAS,CAACT,MAAM,CAAC,IAAI,CAAElE,IAAI,CAAE,WAAW,CAAE6C,KAAK,CAAC,cAAc,CAAEP,GAAG,CAAE,2BAA2B,CAAC,CAAAP,MAAA,CAGxHhF,UAAU,QAAAgF,MAAA,CACV6C,qBAAqB,CAAS,CAACV,MAAM,CAAC,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,aAAa,CAC7FP,GAAG,CAAE,6EAA6E,CAAC,CAAAP,MAAA,CAEvFjF,WAAW,QAAAiF,MAAA,CACX8C,sBAAsB,CAAS,CAACX,MAAM,CAAC,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,cAAc,CAC/FP,GAAG,CAAE,8EAA8E,CAAC,CAAAP,MAAA,CAExF/E,SAAS,QAAA+E,MAAA,CACT+C,oBAAoB,CAAS,CAACZ,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,CAAE,+BAA+B,CAAC,CAAAP,MAAA,CAEnH9E,SAAS,QAAA8E,MAAA,CACTgD,oBAAoB,CAAS,CAACb,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,CAAE,+BAA+B,CAAC,CAAAP,MAAA,CAEnHxF,YAAY,QAAAwF,MAAA,CACZiD,uBAAuB,CAAS,CAAC5C,QAAQ,CAAE,IAAI,CAAEwB,MAAM,CAAC,IAAI,CAAEf,KAAK,CAAC,qBAAqB,CAAE7C,IAAI,CAAE,MAAM,CAAE;AACrGsC,GAAG,CAAE,sFAAsF,CAAC,CAAAP,MAAA,CAchGvF,WAAW,QAAAuF,MAAA,CACXkD,sBAAsB,CAAS,CAAC7C,QAAQ,CAAE,IAAI,CAAEwB,MAAM,CAAC,IAAI,CAAEf,KAAK,CAAC,oBAAoB,CAAE7C,IAAI,CAAE,MAAM,CACjGsC,GAAG,CAAE,qFAAqF,CAAC,CAAAP,MAAA,CAe/F7E,SAAS,QAAA6E,MAAA,CACTmD,oBAAoB,CAAS,CAACtB,MAAM,CAAE,IAAI,CAAE5D,IAAI,CAAE7G,UAAU,CAACgL,KAAK,CAAE7B,GAAG,cAAEpI,IAAA,QAAAqI,QAAA,CAAK,yFAAuF,CAAK,CAAC,CAAC,CAAAR,MAAA,CAE5KoD,OAAO,QAAApD,MAAA,CACPqD,kBAAkB,CAAS,CAAClC,QAAQ,CAAE,IAAI,CAAEgB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAAC2I,OAAO,CACrFC,GAAG,CAAE,gCAAgC,CAAC,CAAAP,MAAA,CAE1C3E,WAAW,QAAA2E,MAAA,CACXsD,sBAAsB,CAAS,CAACnB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACjEsC,GAAG,CAAE,0DAA0D,CAAC,CAAAP,MAAA,CAYpE1E,SAAS,QAAA0E,MAAA,CACTuD,oBAAoB,CAAS,CAACpB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CAC/DsC,GAAG,CAAE,4DAA4D,CAAC,CAAAP,MAAA,CAYtEzE,aAAa,QAAAyE,MAAA,CACbwD,wBAAwB,CAAS,CAACrB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACnEsC,GAAG,CAAE,0FAA0F,CAAC,CAAAP,MAAA,CAYpGxE,aAAa,QAAAwE,MAAA,CACbyD,wBAAwB,CAAS,CAACtB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACvEsC,GAAG,CAAE,0DAA0D,CAAC,CAAAP,MAAA,CAYhEvE,WAAW,QAAAuE,MAAA,CACX0D,sBAAsB,CAAS,CAACvB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACjEsC,GAAG,CAAE,4DAA4D,CAAC,CAAAP,MAAA,CAYtEtE,aAAa,QAAAsE,MAAA,CACb2D,wBAAwB,CAAS,CAACxB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACnEsC,GAAG,CAAE,0FAA0F,CAAC,CAAAP,MAAA,CAYpGrE,eAAe,QAAAqE,MAAA,CACf4D,0BAA0B,CAAS,CAACzB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACzEsC,GAAG,CAAE,0DAA0D,CAAC,CAAAP,MAAA,CAYhEpE,aAAa,QAAAoE,MAAA,CACb6D,wBAAwB,CAAS,CAAC1B,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACnEsC,GAAG,CAAE,4DAA4D,CAAC,CAAAP,MAAA,CAYtEnE,aAAa,QAAAmE,MAAA,CACb8D,wBAAwB,CAAS,CAAC3B,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CACnEsC,GAAG,CAAE,0FAA0F,CAAC,CAAAP,MAAA,CAYpG5E,YAAY,QAAA4E,MAAA,CACZ+D,uBAAuB,CAAS,CAAC5B,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CAClEsC,GAAG,CAAE,4KAA4K,CAAC,CAAAP,MAAA,CAYtLlE,MAAM,QAAAkE,MAAA,CACNgE,KAAK,QAAAhE,MAAA,CACLiE,iBAAiB,CAAS,CAAChD,IAAI,CAAE,IAAI,CAAEZ,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,4BAA4B,CACrFsC,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,qDAAmD,cAAArI,IAAA,QAAI,CAAC,6CAA6D,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAC1IkE,gBAAgB,CAAS,CAACjD,IAAI,CAAE,IAAI,CAAEZ,QAAQ,CAAE,IAAI,CAAEpC,IAAI,CAAE,4BAA4B,CAAEsC,GAAG,CAAE,uBAAuB,CAAC,CAAAP,MAAA,CAyCvHmE,WAAW,QAAAnE,MAAA,CACXoE,sBAAsB,CAAS,CAACnD,IAAI,CAAE,IAAI,CAAEkB,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAE,iBAAiB,CAC7EsC,GAAG,CAAE,mBAAmB,CAAC,CAAAP,MAAA,CAG7BjE,WAAW,QAAAiE,MAAA,CACXqE,sBAAsB,CAAS,CAACC,MAAM,CAAE,IAAI,CAAEtC,IAAI,CAAEtL,eAAe,CAAEuH,IAAI,CAAE,iDAAiD,CACxH6C,KAAK,CAAC,WAAW,CACjBP,GAAG,cAAEpI,IAAA,CAAAI,SAAA,EAAAiI,QAAA,cAAErI,IAAA,QAAAqI,QAAA,CAAK,0DAAwD,CAAsG,CAAC,CAAE,CAAC,CAAC,CAAAR,MAAA,CAEnLhE,WAAW,QAAAgE,MAAA,CACXuE,sBAAsB,CAAS,CAACD,MAAM,CAAE,IAAI,CAAEtC,IAAI,CAAErL,WAAW,CAAEsH,IAAI,CAAE,yDAAyD,CAC5H6C,KAAK,CAAC,UAAU,CAChBP,GAAG,cAAEpI,IAAA,CAAAI,SAAA,EAAAiI,QAAA,cAAEnI,KAAA,QAAAmI,QAAA,EAAK,2DAAyD,cAAArI,IAAA,QAAI,CAAC,8DACtE,cAAAA,IAAA,QAAI,CAAC,oGAA+F,EAAK,CAAC,CAAE,CAAC,CAAC,CAAA6H,MAAA,CAOtH/D,SAAS,QAAA+D,MAAA,CACTwE,oBAAoB,CAAS,CAACrC,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,oBAAoB,CACpGP,GAAG,CAAE,0GAA0G,CAAC,CAAAP,MAAA,CAEpH7D,cAAc,QAAA6D,MAAA,CACdyE,yBAAyB,CAAS,CAACtC,MAAM,CAAE,IAAI,CAAElE,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEJ,GAAG,cAAEpI,IAAA,QAAAqI,QAAA,CAAK,6FAA2F,CAAK,CAAC,CAAC,CAAAR,MAAA,CAE/L5D,eAAe,QAAA4D,MAAA,CACf0E,0BAA0B,CAAS,CAACJ,MAAM,CAAE,IAAI,CAAErG,IAAI,CAAElH,UAAU,CAACqL,KAAK,CAAEtB,KAAK,CAAC,cAAc,CAC1FP,GAAG,CAAE,qGAAqG,CAAC,CAAAP,MAAA,CAE/G3D,aAAa,QAAA2D,MAAA,CACb2E,wBAAwB,CAAS,CAACL,MAAM,CAAE,IAAI,CAAGrG,IAAI,CAAElH,UAAU,CAACqL,KAAK,CAAEtB,KAAK,CAAC,YAAY,CACvFP,GAAG,CAAE,8BAA8B,CAAC,CAAAP,MAAA,CAGxC1D,4BAA4B,QAAA0D,MAAA,CAC5B4E,uCAAuC,CAAS,CAACN,MAAM,CAAE,IAAI,CAAErG,IAAI,CAACtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,qBAAqB,CACvHP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,+DAA6D,cAAArI,IAAA,QAAI,CAAC,iDAA8C,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAErIzD,0BAA0B,QAAAyD,MAAA,CAC1B6E,qCAAqC,CAAS,CAACP,MAAM,CAAE,IAAI,CAAErG,IAAI,CAACtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,mBAAmB,CACnHP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,+DAA6D,cAAArI,IAAA,QAAI,CAAC,iDAA8C,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAGrIxD,yBAAyB,QAAAwD,MAAA,CACzB8E,oCAAoC,CAAS,CAACR,MAAM,CAAE,IAAI,CAAErG,IAAI,CAACtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,+BAA+B,CAC9HP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,wGAAqG,cAAArI,IAAA,QAAI,CAAC,kDAA+C,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAE9KvD,uBAAuB,QAAAuD,MAAA,CACvB+E,kCAAkC,CAAS,CAACT,MAAM,CAAE,IAAI,CAAErG,IAAI,CAAEtG,iBAAiB,CAACgJ,QAAQ,CAAEG,KAAK,CAAC,6BAA6B,CAC3HP,GAAG,cAAElI,KAAA,QAAAmI,QAAA,EAAK,wGAAqG,cAAArI,IAAA,QAAI,CAAC,kDAA+C,EAAK,CAAC,CAAC,CAAA6H,MAAA,CAG9KtD,kBAAkB,QAAAsD,MAAA,CAClBgF,6BAA6B,CAAS,CAACC,WAAW,CAAE,IAAI,CAAEhH,IAAI,CAAE,gBAAgB,CAAE+D,IAAI,CAAE3L,cAAc,CAAEyK,KAAK,CAAC,iBAAiB,CAC3HP,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,2EAAyE,CAAK,CAAC,CAAC,CAAAR,MAAA,CAkB7FrD,YAAY,QAAAqD,MAAA,CACZkF,uBAAuB,CAAS,CAACZ,MAAM,CAAE,IAAI,CAAErG,IAAI,CAAClH,UAAU,CAACqL,KAAK,CAAEtB,KAAK,CAAC,qBAAqB,CAAEP,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,6CAA2C,CAAK,CAAC,CAAC,CAAAR,MAAA,CAE9JpD,YAAY,QAAAoD,MAAA,CACZmF,uBAAuB,CAAS,CAACb,MAAM,CAAE,IAAI,CAAErG,IAAI,CAAClH,UAAU,CAACqL,KAAK,CAAEtB,KAAK,CAAC,qBAAqB,CAAEP,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,6CAA2C,CAAK,CAAC,CAAC,CAAAR,MAAA,CAEpJ9D,IAAI,QAAA8D,MAAA,CACdoF,eAAe,CAAS,CAACjD,MAAM,CAAE,IAAI,CAAEN,MAAM,CAAC,IAAI,CAAE5D,IAAI,CAAEtG,iBAAiB,CAAC0N,IAAI,CAC5E9E,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,mGAAiG,CAAK,CAAC,CAAC,CAAAR,MAAA,CAGrHsF,qBAAqB,CAAS,CAACnD,MAAM,CAAC,IAAI,CAAEN,MAAM,CAAC,IAAI,CAAE5D,IAAI,CAAC,wEAAwE,CAClIsC,GAAG,cAAClI,KAAA,QAAAmI,QAAA,EAAK,0DAAwD,cAAArI,IAAA,QAAI,CAAC,qEAAkE,EAAK,CAAC,CAAC,CAAA6H,MAAA,CACnJuF,kBAAkB,CAAS,CAACpD,MAAM,CAAC,IAAI,CAAEN,MAAM,CAAC,IAAI,CAAE5D,IAAI,CAAC,6DAA6D,CACpHsC,GAAG,cAACpI,IAAA,QAAAqI,QAAA,CAAK,uDAAqD,CAAK,CAAC,CAAC,QAAAR,MAAA,EAlrB5C;AAI7B;AACA;AACA;AAEA;AAOA;AACwB;AAAA9C,YAAA,CAAAwC,YAAA,GAAAvC,GAAA,iBAAAC,KAAA,CAMxB,SAAAoI,cAAcC,CAAU,CAAqB,CAAE,MAAO,KAAI,CAACC,mBAAmB,CAACD,CAAC,CAAC,CAAE,CAAC,GAAAtI,GAAA,iBAAAC,KAAA,CACpF,SAAAuI,cAAcC,GAAsB,CAAEH,CAAU,CAAW,CAAE,MAAO,KAAI,CAACI,mBAAmB,CAACD,GAAG,CAAEH,CAAC,CAAC,CAAE,CAIhE;AAAA,GAAAtI,GAAA,mCAAAC,KAAA,CAGtC,SAAA0I,gCAAgCL,CAAU,CAAuC,KAAAM,mBAAA,CAAAC,oBAAA,CAC7E,GAAIP,CAAC,CAACQ,IAAI,CAACpL,2BAA2B,GAAKyC,SAAS,CAAE,MAAO,CAAAmI,CAAC,CAACQ,IAAI,CAACpL,2BAA2B,CAAC,IAC3F,OAAO,CAAC,EAAAkL,mBAAA,CAAAN,CAAC,CAACQ,IAAI,CAACxL,WAAW,UAAAsL,mBAAA,iBAAlBA,mBAAA,CAAoB1M,MAAM,GAAI,CAAC,GAAK,EAAA2M,oBAAA,CAAAP,CAAC,CAACQ,IAAI,CAACzL,YAAY,UAAAwL,oBAAA,iBAAnBA,oBAAA,CAAqB3M,MAAM,GAAI,CAAC,CAAC,CAAE,CAAC,GAAA8D,GAAA,mCAAAC,KAAA,CACzF,SAAA8I,gCAAgCN,GAAoD,CAAEH,CAAU,CAAW,CACvGhO,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,6BAA6B,CAAEL,GAAG,CAAY,EAAE,CAAE,KAAK,CAAC,CACnF,MAAO,KAAI,CACf,CAAC,GAAAzI,GAAA,uBAAAC,KAAA,CAKD,SAAAsI,oBAAoBD,CAAU,CAA2B,CAAE,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAClM,eAAe,CAAE,CAAC,GAAAoD,GAAA,uBAAAC,KAAA,CAC3F,SAAAyI,oBAAoBD,GAA4B,CAAEH,CAAU,CAAW,CACnE,GAAIlP,QAAQ,CAAC6P,KAAK,CAACX,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAC,CAAE,MAAO,KAAI,CAAE;AAC5C,MAAO,CAAAnC,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,iBAAiB,CAAE,CAAC,CAACL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC1E,CAOA;AACA;AAEwB;AAAA,GAAAzI,GAAA,kBAAAC,KAAA,CAIxB,SAAAiJ,eAAyBZ,CAAU,CAAEa,CAAwB,CAAO,CAAE,MAAO,KAAI,CAACC,eAAe,CAACd,CAAC,CAAEa,CAAC,CAAC,CAAE,CAAC,GAAAnJ,GAAA,kBAAAC,KAAA,CAE1G,SAAAoJ,eAAyBvH,CAAM,CAAEwG,CAAU,CAAEa,CAAwB,CAAO,CAAE,MAAO,KAAI,CAACG,eAAe,CAACxH,CAAC,CAAEwG,CAAC,CAAEa,CAAC,CAAC,CAAE,CAAC,GAAAnJ,GAAA,iBAAAC,KAAA,CAKrH,SAAAsJ,cAAwBC,OAAgB,CAAqB,CACzD,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC/L,SAAS,CACjC,CAAC,GAAAiD,GAAA,iBAAAC,KAAA,CACD,SAAAwJ,cAAwBhB,GAAsB,CAAEe,OAAgB,CAAW,CACvE9O,WAAW,CAAC,UAAM,CACd;AACAJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,WAAW,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC7DlO,kBAAkB,CAACyO,GAAG,CAAC,2BAA2B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACrF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,yBAAAC,KAAA,CAYD,SAAAyJ,sBAAgCpB,CAAU,CAA4B,CAClE,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAC9L,iBAAiB,EAAI,kEAAkE,CACjG,uDAAuD,CACvD,mBAAmB,CACnB,mBAAmB,CACnB,mBAAmB,CACnB,kGAAkG,CAClG;AACA,uGAAuG,CACvG,iCAAiC,CACjC,GAAG,CACX,CAAC,GAAAgD,GAAA,yBAAAC,KAAA,CACD,SAAA0J,sBAAgClB,GAA8B,CAAEe,OAAgB,CAAW,CACvF9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,mBAAmB,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACrElO,kBAAkB,CAACyO,GAAG,CAAC,mCAAmC,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAC7F,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAEA;AAAA,GAAAuD,GAAA,0BAAAC,KAAA,CAIA,SAAA2J,uBAAuBtB,CAAU,CAA8B,CAAE,MAAO,CAAAxN,mBAAmB,CAAC+O,IAAI,CAACvB,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAC,CAACqN,yBAAyB,CAAE,CAAC,GAAA9J,GAAA,0BAAAC,KAAA,CACxI,SAAA8J,uBAAuBtB,GAA0B,CAAEH,CAAU,CAAW,CACpE5N,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,oBAAoB,CAAEL,GAAG,EAAI,EAAE,CAAE,EAAE,CAAE,KAAK,CAAC,CACtE;AACA;AACAlO,kBAAkB,CAACyO,GAAG,CAAC,gCAAgC,CAAEV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACpF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uKAXA,GAAAuD,GAAA,mBAAAC,KAAA,CAgBI,SAAA+J,gBAAgB1B,CAAU,CAAuB,CAAE,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAClJ,WAAW,CAAE,CAAC,GAAAI,GAAA,mBAAAC,KAAA,CAC/E,SAAAgK,gBAAgBxB,GAAwB,CAAEH,CAAU,CAAW,CAC3D5N,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,aAAa,CAAE,CAAC,CAACL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC3D;AACAnO,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACrE,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAA9I,GAAA,WAAAC,KAAA,CAGD,SAAAiK,QAAQ5B,CAAU,CAAe,CAAE,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAACnJ,GAAG,CAAE,CAAC,GAAAK,GAAA,WAAAC,KAAA,CACvD,SAAAkK,QAAQ1B,GAAe,CAAEH,CAAU,CAAW,CAC1C5N,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,KAAK,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjD;AACAnO,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACrE,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAA9I,GAAA,oBAAAC,KAAA,CAID,SAAAmK,iBAAiB9B,CAAU,CAAwB,CAC/C,GAAI,CAACA,CAAC,CAACQ,IAAI,CAAChJ,kBAAkB,CAAE,MAAO,CAAAwI,CAAC,CAACQ,IAAI,CAACjJ,YAAY,CAAE;AAC5D,GAAI,CAAAwK,CAAC,CAAG,EAAE,CACV,GAAM,CAAAC,SAAS,CAAG,KAAK,CACvB,GAAI,CAAAC,gBAAwB,CAC5B,GAAI,CAAAC,EAAE,CAAGlC,CAAC,CACV,QAAS,CAAAmC,UAAUA,CAACnC,CAA8B,CAAS,CACvDxO,GAAG,CAAC4Q,KAAK,CAAC,CAACpC,CAAC,CAAE,gBAAgB,CAAE,CAAC7L,EAAE,CAAE+N,EAAE,CAAC1B,IAAI,CAACrM,EAAE,CAAE6L,CAAC,CAADA,CAAC,CAAEiC,gBAAgB,CAAhBA,gBAAgB,CAAEI,CAAC,CAACH,EAAE,CAAC1B,IAAI,CAACpJ,OAAO,CAAC,CAAC,CACzF,MAAO,OAAO,CAAC4I,CAAC,CAACvH,CAAC,CAAC,GAAG,CAACuH,CAAC,CAACtH,CAAC,CAAC,GAAG,CAACsH,CAAC,CAACrH,CAAC,CAAC,GAAG,CAACqH,CAAC,CAACpH,CAAC,CAAC,GAAG,CAClD,CACA;AACA,IAAK,GAAI,CAAA0J,WAAW,GAAI,CAAAtC,CAAC,CAACQ,IAAI,CAACpJ,OAAO,CAAE,CACpC,GAAI,CAAAmL,QAAQ,CAAGvC,CAAC,CAACQ,IAAI,CAACpJ,OAAO,CAACkL,WAAW,CAAQ,CACjD,GAAIC,QAAQ,CAAC/J,IAAI,GAAK,OAAO,CAAE,CAC3B,GAAI,CAAApB,OAAO,CAAGmL,QAA0B,CACxC,GAAI,CAAAC,MAAM,CAAGpL,OAAO,CAACO,KAAK,CAC1B,GAAI,CAAC6K,MAAM,CAAC5O,MAAM,CAAE,SACpB,GAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC6O,QAAQ,CAACH,WAAW,CAACA,WAAW,CAAC1O,MAAM,CAAC,CAAC,CAAC,CAAC,CAAEqO,gBAAgB,CAAGK,WAAW,CAACI,SAAS,CAAC,CAAC,CAAEJ,WAAW,CAAC1O,MAAM,CAAG,CAAC,CAAC,CAAC,IAC3H,CAAAqO,gBAAgB,CAAGK,WAAW,CACnC,GAAI,CAAAK,IAAI,CAAGR,UAAU,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,CAChC;AACA,GAAIR,SAAS,CAAED,CAAC,EAAI,KAAK,CAAGE,gBAAgB,CAAG,IAAI,CAAGU,IAAI,CAAG,KAAK,CAClEZ,CAAC,EAAI,MAAM,CAAGE,gBAAgB,CAAG,IAAI,CAAGU,IAAI,CAAG,KAAK,CACpD;AACA,GAAIX,SAAS,CAAED,CAAC,EAAI,KAAK,CAAGO,WAAW,CAAG,KAAK,CAAGK,IAAI,CAAG,KAAK,CAC9DZ,CAAC,EAAI,MAAM,CAAGO,WAAW,CAAG,KAAK,CAAGK,IAAI,CAAG,KAAK,CAChD;AACA,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAGA,CAAC,CAAGJ,MAAM,CAAC5O,MAAM,CAAEgP,CAAC,EAAE,CAAE,CACrCD,IAAI,CAAGR,UAAU,CAACK,MAAM,CAACI,CAAC,CAAC,CAAC,CAC5B,GAAIZ,SAAS,CAAED,CAAC,EAAI,KAAK,CAAGO,WAAW,EAAIM,CAAC,CAAC,CAAC,CAAC,CAAG,IAAI,CAAGD,IAAI,CAAG,KAAK,CACrEZ,CAAC,EAAI,MAAM,CAAGO,WAAW,EAAIM,CAAC,CAAC,CAAC,CAAC,CAAG,IAAI,CAAGD,IAAI,CAAG,KAAK,CAC3D,CACJ,CAAC,IAAM,IAAIJ,QAAQ,CAAC/J,IAAI,GAAK,MAAM,CAAC,CAChC,GAAI,CAAApB,QAAoB,CAAGmL,QAAQ,CACnC,GAAI,CAAApC,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAACzL,QAAO,CAACO,KAAK,CAAE,OAAO,CAAE,EAAE,CAAC,CAClDwI,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,OAAO,CAAE,EAAE,CAAC,CACpCA,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE/I,QAAO,CAAC0L,CAAC,CAAC,CACvC3C,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE/I,QAAO,CAAC2L,CAAC,CAAC,CACvC5C,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE,IAAI,CAAC,CAClCA,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE,IAAI,CAAC,CAAE;AACpCA,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE,KAAK,CAAC,CACnCA,GAAG,CAAG9N,CAAC,CAACwQ,UAAU,CAAC1C,GAAG,CAAE,GAAG,CAAE,KAAK,CAAC,CACnC,GAAI,CAAA6C,MAA2B,CAAG7C,GAAG,CAAC8C,KAAK,CAAC,OAAO,CAAC,CACpD;AACAD,MAAM,CAAIA,MAAM,CAAczJ,GAAG,CAAC,SAAA4G,GAAG,CAAI,CACrC,GAAI,CAAC+C,KAAK,CAAC,CAAC/C,GAAG,CAAC,CAAE,MAAO,CAAAA,GAAG,CAC5B,GAAI,CAAAgD,OAAiB,CAAGhD,GAAG,CAAC8C,KAAK,CAAC,GAAG,CAAC,CACtC,GAAI,CAAAG,IAAa,CAAGpD,CAAC,CAACQ,IAAI,CAAC,IAAA6C,SAAA,CAAAC,0BAAA,CACPH,OAAO,EAAAI,KAAA,KAA3B,IAAAF,SAAA,CAAAtB,CAAA,KAAAwB,KAAA,CAAAF,SAAA,CAAAG,CAAA,IAAAC,IAAA,EAA6B,IAApB,CAAAC,OAAO,CAAAH,KAAA,CAAA5L,KAAA,CACZyL,IAAI,CAAGA,IAAI,CAACM,OAAO,CAAC,CACpBlS,GAAG,CAACmS,CAAC,CAAC,CAACP,IAAI,GAAKjD,GAAG,CAACvM,MAAM,CAAG,CAAC,EAAIuP,OAAO,CAACvP,MAAM,CAAG,CAAC,CAAC,CAAE,2CAA2C,CAAE,CAACgQ,KAAK,CAACzD,GAAG,CAAEoB,IAAI,CAACvB,CAAC,CAACQ,IAAI,CAACnM,IAAI,CAAC,CAAC,CAClI,GAAI,CAAC+O,IAAI,CAAE,MACf,CAAC,OAAAS,GAAA,EAAAR,SAAA,CAAAM,CAAA,CAAAE,GAAA,WAAAR,SAAA,CAAAS,CAAA,IACD,GAAI,MAAO,CAAAV,IAAI,GAAK,QAAQ,EAAK,MAAO,CAAAA,IAAI,GAAK,WAAW,GAAKjD,GAAG,CAACvM,MAAM,CAAG,CAAC,EAAIuP,OAAO,CAACvP,MAAM,CAAG,CAAC,CAAE,CACnGpC,GAAG,CAACuS,EAAE,CAAE,2CAA2C,CAAE,CAACH,KAAK,CAACzD,GAAG,CAAEoB,IAAI,CAACvB,CAAC,CAACQ,IAAI,CAACnM,IAAI,CAAC,CAAC,CAAC,IACnF,CAAA8L,GAAG,CAAGiD,IAAI,EAAIjD,GAAG,CACtB,MAAO,CAAAA,GAAG,CACd,CAAC,CAAC,CAAC6D,MAAM,CAAC,SAAA3B,CAAC,QAAE,CAAC,CAACA,CAAC,GAAC,CAEjB,IAAK,GAAI,CAAAO,EAAC,CAAG,CAAC,CAAGA,EAAC,CAAGI,MAAM,CAACpP,MAAM,CAAEgP,EAAC,EAAE,CAAE,CACrC,GAAI,CAAAzC,IAAG,CAAG6C,MAAM,CAACJ,EAAC,CAAC,CACnB,OAAQzC,IAAG,EAAI;AACX,QAAS,SACT,IAAK,GAAG,CAAE6C,MAAM,CAACJ,EAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAGI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE,MACnF,IAAK,GAAG,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAGI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE,MACnF,IAAK,GAAG,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,EAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAGI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE,MACnF,IAAK,GAAG,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,CAACI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAEI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAGI,MAAM,CAACJ,EAAC,CAAC,CAAC,CAAC,CAAG,EAAE,CAAE,MACvF,CACJ,CACAzC,GAAG,CAAG6C,MAAM,CAACgB,MAAM,CAAC,SAAA3B,CAAC,QAAE,CAAC,CAACA,CAAC,GAAC,CAAC4B,IAAI,CAAC,GAAG,CAAC,CACrC9D,GAAG,CAAG,GAAG,CAACA,GAAG,CAAC,GAAG,CACjB,GAAI6B,SAAS,CAAED,CAAC,EAAI,KAAK,CAAGO,WAAW,CAAG,IAAI,CAAGnC,GAAG,CAAG,KAAK,CAC5D4B,CAAC,EAAI,MAAM,CAAGO,WAAW,CAAG,IAAI,CAAGnC,GAAG,CAAG,KAAK,CAClD,CAAC,IACI,CACD;AACA,GAAI,CAAA/I,SAAsC,CAAGmL,QAAQ,CACrD,GAAI,CAAApC,KAAG,CAAG/I,SAAO,CAACO,KAAK,EAAKP,SAAO,CAAmB8M,IAAI,EAAI,EAAE,CAAC,CACjE,GAAI,CAAC/D,KAAG,CAAEA,KAAG,CAAG,IAAI,CACpB,GAAI6B,SAAS,CAAED,CAAC,EAAI,KAAK,CAAGO,WAAW,CAAG,IAAI,CAAGnC,KAAG,CAAG,KAAK,CAC5D4B,CAAC,EAAI,MAAM,CAAGO,WAAW,CAAG,IAAI,CAAGnC,KAAG,CAAG,KAAK,CAClD,CACJ,CACA4B,CAAC,EAAI,MAAM,CAAG1P,CAAC,CAACwQ,UAAU,CAAC7C,CAAC,CAACQ,IAAI,CAACnJ,GAAG,CAAE,IAAI,CAAE,MAAM,CAAC,CACpD,GAAM,CAAA8M,iBAAiB,CAAG,GAAG,CAACnE,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE;AACzC4N,CAAC,CAAG,CAAC,CAAC/B,CAAC,CAACQ,IAAI,CAAClJ,WAAW,CAAG6M,iBAAiB,CAAG,MAAM,EAAG,MAAM,CAAGpC,CAAC,CAAG,KAAK,CAC1E;AACA;AACA/B,CAAC,CAACQ,IAAI,CAAChJ,kBAAkB,CAAG,KAAK,CACjC,MAAO,CAAAwI,CAAC,CAACQ,IAAI,CAACjJ,YAAY,CAAGwK,CAAC,CAClC,CAAC,GAAArK,GAAA,oBAAAC,KAAA,CACD,SAAAyM,iBAAiBjE,GAAyB,CAAEH,CAAU,CAAW,CAC7DxO,GAAG,CAAC6S,GAAG,CAAC,mFAAmF,CAC3F,8EAAqF,CAAC,CACtF,MAAO,MAAK,CAChB,CAAC,GAAA3M,GAAA,eAAAC,KAAA,CAID,SAAA2M,YAAYtE,CAAU,CAAmB,CAAE,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAACpJ,OAAO,CAAE,CAAC,GAAAM,GAAA,eAAAC,KAAA,CACnE,SAAA4M,YAAYpE,GAAmB,CAAEH,CAAU,CAAW,CAClD5N,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,SAAS,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACrDnO,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACrE,CAAC,CAAC,CACN,MAAO,KAAI,CAAE,CAQb;AACJ;AACA;AACA;AACA;AACA,sGALI,CAOA;AACA;AACA;AAE+B;AAAA,GAAA9I,GAAA,gBAAAC,KAAA,CAc/B,SAAA6M,aAAaxE,CAAU,CAAoB,CACvC,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAC2P,aAAa,CACpC,MAAO,CAAAC,MAAM,CAACC,IAAI,CAAC3E,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAC,CAACyE,GAAG,CAAE,SAAAqL,GAAG,QAAI,CAAAnT,kBAAkB,CAACuH,WAAW,CAAC4L,GAAG,CAAC,EAAgB,CAAC,CACxG,CAAC,GAAAlN,GAAA,gBAAAC,KAAA,CACD,SAAAkN,aAAa1E,GAA+B,CAAEH,CAAU,CAAW,CAC/D,GAAI,CAAA8E,WAAoB,CACxB,GAAIhR,KAAK,CAACiR,OAAO,CAAC5E,GAAG,CAAC,CAAE,CACpB,GAAI,CAAA6E,OAAO,CAAGnT,QAAQ,CAACoT,OAAO,CAAC9E,GAAG,CAAC,CACnC2E,WAAW,CAAGzS,CAAC,CAAC6S,qBAAqB,CAACF,OAAO,CAAE,GAAG,CAAC,CACvD,CAAC,IAAM,CAAAF,WAAW,CAAG3E,GAAG,EAAI,CAAC,CAAC,CAC9BnO,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,UAAU,CAAEsE,WAAW,CAAE,EAAE,CAAE,IAAI,CAAC,CAC7D,MAAO,KAAI,CAAE,CAAC,GAAApN,GAAA,uBAAAC,KAAA,CAMlB;AACA,SAAAwN,oBAAoBnF,CAAU,CAAmE,CAC7F,MAAO,UAACoF,OAA4B,CAAiC,IAA/B,CAAAC,KAAmB,CAAA1R,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,GAAG,CAC3D,GAAI,CAAA2R,QAAQ,CAAAzI,aAAA,IAAOmD,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAC,CACnC,GAAI,CAAAyQ,GAAG,CAAG1T,QAAQ,CAAC2T,IAAI,CAACJ,OAAO,CAA0B,CACzD,GAAIC,KAAK,GAAK,IAAI,CAAE,CAAE;AAClB,GAAIC,QAAQ,CAACC,GAAG,CAAC,GAAKF,KAAK,CAAE,OAC7BC,QAAQ,CAACC,GAAG,CAAC,CAAGF,KAAK,CACzB,CAAC,IAAM,CAAC;AACJ,GAAIC,QAAQ,CAACC,GAAG,CAAC,GAAK1N,SAAS,CAAE,OACjC,MAAO,CAAAyN,QAAQ,CAACC,GAAG,CAAC,CACxB,CACAvT,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,UAAU,CAAG8E,QAAQ,CAAE,EAAE,CAAE,IAAI,CAAC,CAC/D,CAAC,CACL,CAAC,GAAA5N,GAAA,mBAAAC,KAAA,CAKD,SAAA8N,gBAAgBzF,CAAU,CAAuB,CAC7C,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAC2P,aAAa,CACpC,GAAI,CAAAiB,GAA4B,CAAGhB,MAAM,CAACC,IAAI,CAAC3E,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAC,CAC/D,GAAI,CAAA6Q,OAAgC,CAAG,EAAE,CACzC,GAAI,CAAAC,KAAwC,CAAG,CAAC,CAAC,CACjD,GAAI,CAAA7D,CAAS,CAAG5P,KAAK,CAAC0T,QAAQ,CAAC,CAAC,CAChC,GAAI,CAAAC,KAAmB,CACvB,MAAOJ,GAAG,CAAC9R,MAAM,CAAE,KAAAmS,UAAA,CAAAzC,0BAAA,CACCoC,GAAG,EAAAM,MAAA,KAAnB,IAAAD,UAAA,CAAAhE,CAAA,KAAAiE,MAAA,CAAAD,UAAA,CAAAvC,CAAA,IAAAC,IAAA,EAAqB,IAAZ,CAAAmB,GAAG,CAAAoB,MAAA,CAAArO,KAAA,CACR,GAAIiO,KAAK,CAAChB,GAAG,CAAC,CAAE,SAChBkB,KAAK,CAAG/U,kBAAkB,CAACiI,WAAW,CAAC4L,GAAG,CAAE7C,CAAC,CAAC,CAC9C,GAAI,CAAC+D,KAAK,CAAE,SACZF,KAAK,CAAChB,GAAG,CAAC,CAAGkB,KAAK,CAClBzT,CAAC,CAAC4T,iBAAiB,CAACN,OAAO,CAAEjB,MAAM,CAACC,IAAI,CAACmB,KAAK,CAAChR,QAAQ,CAAC,CAAC,CAC7D,CAAC,OAAA+O,GAAA,EAAAkC,UAAA,CAAApC,CAAA,CAAAE,GAAA,WAAAkC,UAAA,CAAAjC,CAAA,IACD4B,GAAG,CAAGC,OAAO,CACbA,OAAO,CAAG,EAAE,CAChB,CACA,MAAO,CAAAlU,kBAAkB,CAACyU,KAAK,CAACxB,MAAM,CAACyB,MAAM,CAACP,KAAK,CAAC,CAAC,CACzD,CAAC,GAAAlO,GAAA,mBAAAC,KAAA,CACD,SAAAyO,gBAAgBjG,GAAwB,CAAEH,CAAU,CAAW,CAAE,MAAO,KAAI,CAACqG,kBAAkB,CAAC,wDAAwD,CAAC,CAAE,CAqBpI;AAAA,GAAA3O,GAAA,oBAAAC,KAAA,CAGvB,SAAA2O,iBAA2BpF,OAAgB,CAAwB,CAC/D,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACzL,YAAY,CACpC,CAAC,GAAA2C,GAAA,oBAAAC,KAAA,CACD,SAAA4O,iBAAiBpG,GAAW,CAAEe,OAAgB,CAAW,CACrDf,GAAG,CAAG,CAACA,GAAG,EAAI,EAAE,EAAEqG,IAAI,CAAC,CAAC,CACxB,GAAIrG,GAAG,GAAKe,OAAO,CAACV,IAAI,CAACzL,YAAY,CAAE,MAAO,KAAI,CAClD3C,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,cAAc,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAChElO,kBAAkB,CAACyO,GAAG,CAAC,qBAAqB,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAAE;AACjF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAEsB;AAAA,GAAAuD,GAAA,mBAAAC,KAAA,CAGtB,SAAA8O,gBAA0BvF,OAAgB,CAAuB,CAC7D,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACxL,WAAW,CACnC,CAAC,GAAA0C,GAAA,mBAAAC,KAAA,CACD,SAAA+O,gBAAgBvG,GAAW,CAAEe,OAAgB,CAAW,CACpDf,GAAG,CAAG,CAACA,GAAG,EAAI,EAAE,EAAEqG,IAAI,CAAC,CAAC,CACxB,GAAIrG,GAAG,GAAKe,OAAO,CAACV,IAAI,CAACxL,WAAW,CAAE,MAAO,KAAI,CACjD5C,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,aAAa,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC/DlO,kBAAkB,CAACyO,GAAG,CAAC,6BAA6B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACvF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAEA;AAAA,GAAAuD,GAAA,mBAAAC,KAAA,CAWA,SAAAgP,gBAA0BzF,OAAgB,CAAuB,CAC7D,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC5K,WAAW,CACnC,CAAC,GAAA8B,GAAA,mBAAAC,KAAA,CACD,SAAAiP,gBAA0BzG,GAAwB,CAAEe,OAAgB,CAAW,CAC3E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,aAAa,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC/DlO,kBAAkB,CAACyO,GAAG,CAAC,6BAA6B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACvF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,iBAAAC,KAAA,CAKD,SAAAkP,cAAwB3F,OAAgB,CAAqB,CACzD,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC3K,SAAS,CACjC,CAAC,GAAA6B,GAAA,iBAAAC,KAAA,CACD,SAAAmP,cAAwB3G,GAAsB,CAAEe,OAAgB,CAAW,CACvE9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,WAAW,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC7DlO,kBAAkB,CAACyO,GAAG,CAAC,2BAA2B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACrF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAKD,SAAAoP,kBAA4B7F,OAAgB,CAAyB,CACjE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC1K,aAAa,CACrC,CAAC,GAAA4B,GAAA,qBAAAC,KAAA,CACD,SAAAqP,kBAA4B7G,GAA0B,CAAEe,OAAgB,CAAW,CAC/E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjElO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACzF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAKD,SAAAsP,kBAA4B/F,OAAgB,CAAyB,CACjE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACzK,aAAa,CACrC,CAAC,GAAA2B,GAAA,qBAAAC,KAAA,CACD,SAAAuP,kBAA4B/G,GAA0B,CAAEe,OAAgB,CAAW,CAC/E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjElO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACzF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,mBAAAC,KAAA,CAKD,SAAAwP,gBAA0BjG,OAAgB,CAAuB,CAC7D,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACxK,WAAW,CACnC,CAAC,GAAA0B,GAAA,mBAAAC,KAAA,CACD,SAAAyP,gBAA0BjH,GAAwB,CAAEe,OAAgB,CAAW,CAC3E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,aAAa,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC/DlO,kBAAkB,CAACyO,GAAG,CAAC,6BAA6B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACvF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAKD,SAAA0P,kBAA4BnG,OAAgB,CAAyB,CACjE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACvK,aAAa,CACrC,CAAC,GAAAyB,GAAA,qBAAAC,KAAA,CACD,SAAA2P,kBAA4BnH,GAA0B,CAAEe,OAAgB,CAAW,CAC/E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjElO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACzF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,uBAAAC,KAAA,CAKD,SAAA4P,oBAA8BrG,OAAgB,CAA2B,CACrE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACtK,eAAe,CACvC,CAAC,GAAAwB,GAAA,uBAAAC,KAAA,CACD,SAAA6P,oBAA8BrH,GAA4B,CAAEe,OAAgB,CAAW,CACnF9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,iBAAiB,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACnElO,kBAAkB,CAACyO,GAAG,CAAC,iCAAiC,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAC3F,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAKD,SAAA8P,kBAA4BvG,OAAgB,CAAyB,CACjE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACrK,aAAa,CACrC,CAAC,GAAAuB,GAAA,qBAAAC,KAAA,CACD,SAAA+P,kBAA4BvH,GAA0B,CAAEe,OAAgB,CAAW,CAC/E9O,WAAW,CAAC,UAAI,CAChBJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjElO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACrF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAKD,SAAAgQ,kBAA4BzG,OAAgB,CAAyB,CACjE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACpK,aAAa,CACrC,CAAC,GAAAsB,GAAA,qBAAAC,KAAA,CACD,SAAAiQ,kBAA4BzH,GAA0B,CAAEe,OAAgB,CAAW,CAC/E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACjElO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACzF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,oBAAAC,KAAA,CAKD,SAAAkQ,iBAA2B3G,OAAgB,CAAwB,CAC/D,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC7K,YAAY,CACpC,CAAC,GAAA+B,GAAA,oBAAAC,KAAA,CACD,SAAAmQ,iBAA2B3H,GAAyB,CAAEe,OAAgB,CAAW,CAC7E9O,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,cAAc,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAChElO,kBAAkB,CAACyO,GAAG,CAAC,8BAA8B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACxF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,aAAAC,KAAA,CAOD,SAAAoQ,UAAoB/H,CAAU,CAAkB,CAAE,MAAO,KAAI,CAACgI,UAAU,CAAChI,CAAC,CAAC,CAAE,CAAC,GAAAtI,GAAA,cAAAC,KAAA,CAC9E,SAAAqQ,WAAqBhI,CAAU,CAAkB,CAC7CxO,GAAG,CAAC6S,GAAG,CAAC,yBAAyB,CAAEhS,CAAC,CAAC4V,aAAa,CAAC,CAAC,CAAC,CACrD,MAAO,CAAC,CAAC,CACT;AACJ,CAAC,GAAAvQ,GAAA,cAAAC,KAAA,CACD,SAAAuQ,WAAqB/H,GAA2B,CAAEe,OAAgB,CAAW,CACzE,GAAM,CAAAiH,KAAK,CAAG,IAAI,CAClB/V,WAAW,CAAC,UAAK,CACbJ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,QAAQ,CAAEL,GAAG,CAAE,IAAI,CAAE,KAAK,CAAC,CAC5DlO,kBAAkB,CAACyO,GAAG,CAAC,wBAAwB,CAAE,CAC7CkE,GAAG,CAAE1D,OAAO,CAACV,IAAI,CAACrM,EAAE,CACpBwQ,IAAI,CAAED,MAAM,CAACC,IAAI,CAACxE,GAAG,CACzB,CAAC,CAAE,IAAI,CAAE,KAAK,CAAC,CACf,GAAI,CAAAiI,KAAK,CAAGlH,OAAO,CAACV,IAAI,CAAC9L,iBAAiB,CAC1C,GAAI,CAACyT,KAAK,EAAI,CAACC,KAAK,CAAE,OACtB,GAAI,CAAAC,KAAK,CAAGhW,CAAC,CAACiW,WAAW,CAACpH,OAAO,CAACV,IAAI,CAACnK,MAAM,CAAE8J,GAAG,CAAE,KAAK,CAAC,CAC1D,IAAK,GAAI,CAAAzI,GAAG,GAAI,CAAA2Q,KAAK,CAAE,CACnB,GAAI,CAAA7O,CAAC,CAAG2G,GAAG,CAACzI,GAAG,CAAC,CAChB,GAAI,CAAA6Q,UAAU,CAAG,MAAM,CAAG7Q,GAAG,CAAG,iBAAiB,CAACA,GAAG,CAAC,oCAAoC,CAC1F,GAAI,CAAC8B,CAAC,CAAE4O,KAAK,CAAGA,KAAK,CAACnF,KAAK,CAACsF,UAAU,CAAC,CAACtE,IAAI,CAAC,EAAE,CAAC,CAAC,IAC5C,CACD,GAAI,CAAC/C,OAAO,CAACV,IAAI,CAACnK,MAAM,CAACqB,GAAG,CAAC,CAAE,CAAE;AAC7B,GAAI,CAAA8Q,OAAO,CAAG,iCAAiC,CAC/C,GAAI,CAAAC,QAAQ,CAAGL,KAAK,CAACzO,OAAO,CAAC6O,OAAO,CAAC,CACrC,GAAIC,QAAQ,GAAK,CAAC,CAAC,CAAE,SAAU;AAC/BA,QAAQ,EAAID,OAAO,CAAC5U,MAAM,CAC1BwU,KAAK,CAAGA,KAAK,CAAC1F,SAAS,CAAC,CAAC,CAAE+F,QAAQ,CAAC,CAAGF,UAAU,CAAGH,KAAK,CAAC1F,SAAS,CAAC+F,QAAQ,CAAC,CACjF,CAAC,IAAM,CACH;AAAA,CAER,CACJ,CACA,GAAIL,KAAK,GAAKlH,OAAO,CAACV,IAAI,CAAC9L,iBAAiB,CAAE,OAC9C1C,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE,mBAAmB,CAAE4H,KAAK,CAAE,EAAE,CAAE,KAAK,CAAC,CACvEnW,kBAAkB,CAACyO,GAAG,CAAC,mCAAmC,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAC7F,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAkBA;AACJ;AACA;AACA;AACA,0HAJI,GAAAuD,GAAA,0BAAAC,KAAA,CA0CA,SAAA+Q,uBAAuBvI,GAAmB,CAAEH,CAAU,CAAW,CAC7D5N,WAAW,CAAC,UAAI,CACZuW,UAAU,CAAC,UAAI,CAAE;AACb,GAAI,CAAA5G,CAAS,CAAG5P,KAAK,CAAC0T,QAAQ,CAAC,CAAC,CAChC,IAAK,GAAI,CAAA+C,GAAG,GAAI,CAAApW,mBAAmB,CAACqW,IAAI,CAAE,KAAAC,YAAA,CACtC,GAAI,CAAAC,EAAE,CAAGvW,mBAAmB,CAACqW,IAAI,CAACD,GAAG,CAAC,CACtC,GAAI,CAACG,EAAE,EAAI,EAAAD,YAAA,CAAAC,EAAE,CAACC,QAAQ,UAAAF,YAAA,iBAAXA,YAAA,CAAa3U,EAAE,IAAK6L,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,SAC1C,GAAI,CAAA8U,KAAiB,CAAGxX,kBAAkB,CAACuH,WAAW,CAAC4P,GAAG,CAAE7G,CAAC,CAAC,CAC9D,GAAI,CAAAmH,2BAA2B,CAAGD,KAAY,CAC9CC,2BAA2B,CAACzS,IAAI,CAAGwS,KAAK,CAACxS,IAAI,CACjD,CACJ,CAAC,CAAE,GAAG,CAAC,CACPzE,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,oBAAoB,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACpE,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAQyF;AAAA,GAAAzI,GAAA,iBAAAC,KAAA,CAUzF;AACA;AAEA,SAAAwR,cAAqBnJ,CAAU,CAAqB,CAChD,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAACjM,SAAS,CAC3B,CAAC,GAAAmD,GAAA,iBAAAC,KAAA,CAmBD,SAAAyR,cAAqBzR,KAAwB,CAAEqI,CAAU,CAAW,CAChE,GAAIrI,KAAK,GAAKqI,CAAC,CAACQ,IAAI,CAACjM,SAAS,CAAE,MAAO,KAAI,CAC3CnC,WAAW,CAAC,UAAK,CACbJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,WAAW,CAAEwD,KAAK,CAAE,EAAE,CAAE,KAAK,CAAC,CAC5D1F,kBAAkB,CAACyO,GAAG,CAAC,2BAA2B,CAAEV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAC3EnC,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACxE,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,qBAAAC,KAAA,CAED,SAAA0R,kBAAyBrJ,CAAU,CAAyB,CACxD,MAAO,CAAAA,CAAC,CAACQ,IAAI,CAAChM,aAAa,CAC/B,CAAC,GAAAkD,GAAA,qBAAAC,KAAA,CACD,SAAA2R,kBAAyB3R,KAA4B,CAAEqI,CAAU,CAAW,CACxE,GAAM,CAAAuJ,MAAM,CAAG5R,KAAK,CAAGA,KAAK,CAAG,UAAU,CACzC,MAAO,CAAA3F,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,eAAe,CAAEoV,MAAM,CAAE,EAAE,CAAE,KAAK,CAAC,CAC5E,CAAC,GAAA7R,GAAA,oBAAAC,KAAA,CAED,SAAA6R,iBAAwBxJ,CAAU,CAAwB,CAAE,MAAO,IAAI,CAAA1O,UAAU,CAAC0O,CAAC,CAACQ,IAAI,CAACtJ,YAAY,CAAC4L,CAAC,CAAE9C,CAAC,CAACQ,IAAI,CAACtJ,YAAY,CAAC6L,CAAC,CAAC,CAAE,CAAC,GAAArL,GAAA,oBAAAC,KAAA,CAClI,SAAA8R,iBAAwBzJ,CAAU,CAAwB,CAAE,MAAO,IAAI,CAAA1O,UAAU,CAAC0O,CAAC,CAACQ,IAAI,CAACrJ,YAAY,CAAC2L,CAAC,CAAE9C,CAAC,CAACQ,IAAI,CAACrJ,YAAY,CAAC4L,CAAC,CAAC,CAAE,CAAC,GAAArL,GAAA,oBAAAC,KAAA,CAClI,SAAA+R,iBAAwBlQ,CAAgC,CAAEwG,CAAU,CAAW,CAC3E,GAAI,CAAA+B,CAAC,CAAG/B,CAAC,CAACQ,IAAI,CAACtJ,YAAY,EAAI,GAAI,CAAA5F,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CACnD,GAAI,EAAE,GAAG,EAAI,CAAAkI,CAAC,CAAC,CAAEA,CAAC,CAACsJ,CAAC,CAAGf,CAAC,CAACe,CAAC,CAC1B,GAAI,EAAE,GAAG,EAAI,CAAAtJ,CAAC,CAAC,CAAEA,CAAC,CAACuJ,CAAC,CAAGhB,CAAC,CAACgB,CAAC,CAC1B3Q,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACpEnC,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,cAAc,CAAEqF,CAAC,CAAgB,EAAE,CAAE,KAAK,CAAC,CAC7E,CAAC,CAAC,CACF,MAAO,KAAI,CAAE,CAAC,GAAA9B,GAAA,oBAAAC,KAAA,CAClB,SAAAgS,iBAAwBnQ,CAAgC,CAAEwG,CAAU,CAAW,CAC3E,GAAI,CAAA+B,CAAC,CAAG/B,CAAC,CAACQ,IAAI,CAACrJ,YAAY,EAAI,GAAI,CAAA7F,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC,CACnD,GAAI,EAAE,GAAG,EAAI,CAAAkI,CAAC,CAAC,CAAEA,CAAC,CAACsJ,CAAC,CAAGf,CAAC,CAACe,CAAC,CAC1B,GAAI,EAAE,GAAG,EAAI,CAAAtJ,CAAC,CAAC,CAAEA,CAAC,CAACuJ,CAAC,CAAGhB,CAAC,CAACgB,CAAC,CAC1B3Q,WAAW,CAAC,UAAI,CACZJ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,oBAAoB,CAAE,IAAI,CAAE,EAAE,CAAE,KAAK,CAAC,CACpEnC,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,cAAc,CAAEqF,CAAC,CAAgB,EAAE,CAAE,KAAK,CAAC,CAC7E,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAA9B,GAAA,iBAAAC,KAAA,CAED,SAAAiS,cAAqB1I,OAAgB,CAAqB,CACtD,MAAQ,CAAAvP,UAAU,CAACqH,WAAW,CAACkI,OAAO,CAACV,IAAI,CAAC9K,SAAgC,CAAC,CACjF,CACA;AAEA;AAAA,GAAAgC,GAAA,iBAAAC,KAAA,CACA,SAAAkS,cAAqBrQ,CAAsB,CAAE0H,OAAgB,CAAE4I,WAA0B,CAA2C,IAAzC,CAAAC,aAAsB,CAAApW,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,KAAK,CACrH,GAAI,CAAAqW,GAAG,CAAG,KAAK,CACf,GAAI,CAAAC,IAAyB,CAAGzQ,CAAC,EAAI3H,QAAQ,CAAC2T,IAAI,CAAChM,CAAC,CAAC,CACrD,GAAM,CAAAgH,IAAI,CAAKsJ,WAAW,EAAI5I,OAAO,CAACV,IAAK,CAC3C,GAAI,CAAArM,EAAE,CAAGqM,IAAI,CAACrM,EAAE,CAChB,GAAI,CAAA+V,OAA4B,CAAG1J,IAAI,CAAC9K,SAAS,CACjD,GAAIuU,IAAI,GAAKC,OAAO,CAAE,MAAO,KAAI,CAEjC9X,WAAW,CAAC,UAAI,CACZ4X,GAAG,CAAGhY,cAAc,CAAC0O,GAAG,CAACvM,EAAE,CAAE,WAAW,CAAE8V,IAAI,CAAE,EAAE,CAAE,IAAI,CAAC,CACzD,GAAIC,OAAO,CAAE,CACT,GAAI,CAAApV,QAAQ,CAAA+H,aAAA,IAAO9L,kBAAkB,CAACiI,WAAW,CAACkR,OAAO,CAAC,CAACpV,QAAQ,CAAC,CACpE,MAAO,CAAAA,QAAQ,CAACX,EAAE,CAAC,CACnBnC,cAAc,CAAC0O,GAAG,CAACwJ,OAAO,CAAE,UAAU,CAAEpV,QAAQ,CAAE,EAAE,CAAE,IAAI,CAAC,CAC/D,CACA,GAAImV,IAAI,CAAE,CACN,GAAI,CAAA5V,IAAI,CAAGmM,IAAI,CAACnM,IAAI,CACpB,GAAI,CAAA8V,OAAO,CAAG9V,IAAI,CAACsF,OAAO,CAAC,MAAM,CAAC,CAClC,GAAI,CAAAyQ,WAAW,CAAGrZ,kBAAkB,CAACiI,WAAW,CAACiR,IAAI,CAAC,CAACnV,QAAQ,CAC/D,GAAI,CAAAuV,YAAoB,CAAG,EAAE,CAC7B,GAAI,CAAAvV,SAAiB,CAAG,CAAC,CAAC,CAC1B,GAAIqV,OAAO,CAAE,CACT,GAAI,CAAAG,cAAsB,CAAGH,OAAO,CAAG9V,IAAI,CAACqO,SAAS,CAAC,CAAC,CAAEyH,OAAO,CAAC,CAAC3D,IAAI,CAAC,CAAC,CAAG,EAAE,CAC7E,GAAI8D,cAAc,GAAI,CAAAF,WAAW,CAAEC,YAAY,CAAGC,cAAc,CAAC,IAC5D,CACD,IAAK,GAAI,CAAA5S,GAAG,GAAI,CAAA0S,WAAW,EAAE,GAAI1S,GAAG,CAACiC,OAAO,CAAC2Q,cAAc,CAAC,GAAK,CAAC,CAAE,CAAED,YAAY,CAAG3S,GAAG,CAAE,MAAO,CAAC,CACtG,CACJ,CAGA;AACA,GAAIqS,aAAa,EAAIM,YAAY,CAAE,CAC/BvV,SAAQ,CAAG,CAAC,CAAC,CACb,IAAK,GAAI,CAAA4C,KAAG,GAAI,CAAA0S,WAAW,CAAE,CACzBtV,SAAQ,CAAC4C,KAAG,CAAC,CAAG0S,WAAW,CAAC1S,KAAG,CAAC,CAChC;AACA,GAAIA,KAAG,GAAK2S,YAAY,CAAEvV,SAAQ,CAACX,EAAE,CAAC,CAAGW,SAAQ,CAACuV,YAAY,CAAC,CACnE,CACJ,CAAC,IAAM,CAAEvV,SAAQ,CAAA+H,aAAA,IAAOuN,WAAW,CAAC,CAAEtV,SAAQ,CAACX,EAAE,CAAC,CAAG,GAAG,CAAE,CAC1DW,SAAQ,CAACX,EAAE,CAAC,CAAGkW,YAAY,CAAGvV,SAAQ,CAACuV,YAAY,CAAC,CAAG,GAAG,CAC1DrY,cAAc,CAAC0O,GAAG,CAACuJ,IAAI,CAAE,UAAU,CAAEnV,SAAQ,CAAE,IAAI,CAAE,IAAI,CAAC,CAC9D,CACJ,CAAC,CAAC,CACF,MAAO,CAAAkV,GAAG,CACd,CAAC,GAAAtS,GAAA,gBAAAC,KAAA,CAGD,SAAA4S,aAAoBrJ,OAAgB,CAAExJ,GAAW,CAAiB,CAC9D,GAAI,CAAA8S,gBAAgB,CAAGtJ,OAAO,CAACV,IAAI,CAAC1L,QAAQ,CAC5C,GAAI,CAAAA,QAAwB,CAAG,EAAE,CACjC,IAAK,GAAI,CAAA2V,OAAO,GAAI,CAAAD,gBAAgB,CAAE,CAClC,GAAI,CAAAE,IAAkB,CAAG9Y,cAAc,CAAC+Y,IAAI,CAACF,OAAO,CAAC,CACrD,GAAIC,IAAI,GAAK7S,SAAS,CAAE/C,QAAQ,CAAC8V,IAAI,CAACF,IAAI,CAAC,CAC/C,CACA,MAAO,CAAA5V,QAAQ,CACnB,CAEA;AAAA,GAAA4C,GAAA,cAAAC,KAAA,CACA,SAAAkT,WAAkB1W,EAAmD,CAAEsC,IAAwB,CAAW,CAAE,MAAO,KAAI,CAAC4P,kBAAkB,CAAC,YAAY,CAAC,CAAE,CAAC,GAAA3O,GAAA,kBAAAC,KAAA,CAC3J,SAAAmT,eAAsB5J,OAAgB,CAAsB,CACxD,MAAO,UAAC/M,EAAmD,CAAE4W,KAAyB,CAAK,CACvF,GAAI,CAAAtU,IAAY,CAAGsU,KAAY,CAC/B,GAAI,CAAA9S,EAAE,CAAGiJ,OAAO,CAAC8J,WAAW,CAACtV,SAAS,CACtC,GAAI,CAACwL,OAAO,CAACV,IAAI,CAAChK,SAAS,CAAE,CACzB,GAAIyB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEzB,SAAS,CAAE,MAAO,CAAAyB,EAAE,CAAC4S,UAAU,CAAC1W,EAAE,CAAEsC,IAAI,CAAC,CACjD,MAAO,MAAK,CAChB,CACA,GAAI,CAAAwU,KAAa,CAAI/J,OAAO,CAACV,IAAI,CAAC/J,IAAI,CAACtC,EAAE,CAAC,GAAI8D,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEyC,KAAK,CAACjE,IAAI,CAACtC,EAAE,CAAC,CAAW,CAC3E,GAAI,CAAA+W,OAAe,CAAG,GAAI,CAAA3Z,SAAS,CAAC,CAAW,CAC/C,GAAIkF,IAAI,CAAC0U,gBAAgB,GAAKF,KAAK,CAACE,gBAAgB,CAAE,CAAE;AACpDD,OAAO,CAACpI,CAAC,CAAG,CAAArM,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEqM,CAAC,IAAKjL,SAAS,CAAGpB,IAAI,CAACqM,CAAC,CAAGmI,KAAK,CAACnI,CAAC,CACpDoI,OAAO,CAACnI,CAAC,CAAG,CAAAtM,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsM,CAAC,IAAKlL,SAAS,CAAGpB,IAAI,CAACsM,CAAC,CAAGkI,KAAK,CAAClI,CAAC,CACxD,CAAC,IAAM,IAAItM,IAAI,CAACqM,CAAC,GAAKjL,SAAS,EAAIpB,IAAI,CAACsM,CAAC,GAAKlL,SAAS,CAAE,CAAE;AACvDqT,OAAO,CAACpI,CAAC,CAAGrM,IAAI,CAACqM,CAAC,CAClBoI,OAAO,CAACnI,CAAC,CAAGtM,IAAI,CAACsM,CAAC,CAClBmI,OAAO,CAACC,gBAAgB,CAAG1U,IAAI,CAAC0U,gBAAgB,EAAIva,cAAc,CAACwa,QAAQ,CAC/E,CAAC,IAAM,IAAIH,KAAK,CAACnI,CAAC,GAAKjL,SAAS,EAAIoT,KAAK,CAAClI,CAAC,GAAKlL,SAAS,CAAE,CAAE;AACzDqT,OAAO,CAACpI,CAAC,CAAGmI,KAAK,CAACnI,CAAC,CACnBoI,OAAO,CAACnI,CAAC,CAAGkI,KAAK,CAAClI,CAAC,CACnBmI,OAAO,CAACC,gBAAgB,CAAGF,KAAK,CAACE,gBAAgB,EAAIva,cAAc,CAACwa,QAAQ,CAChF,CACA,GAAI,CAAAC,WAAW,CAAGnK,OAAO,CAACV,IAAI,CAACnL,YAAY,GAAI4C,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEyC,KAAK,CAACrF,YAAY,EACrE,GAAI6V,OAAO,CAACpI,CAAC,GAAKjL,SAAS,EAAIqT,OAAO,CAACnI,CAAC,GAAKlL,SAAS,CAAE,CAAE;AACtDqT,OAAO,CAAG,GAAI,CAAA3Z,SAAS,CAAC,CAAC,CAAC+Z,KAAK,CAACD,WAAW,CAAW,CACtDH,OAAO,CAACC,gBAAgB,CAAGva,cAAc,CAACwa,QAAQ,CACtD,CACA;AACAF,OAAO,CAACK,CAAC,CAAG,CAAA9U,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE8U,CAAC,IAAK1T,SAAS,CAAGpB,IAAI,CAAC8U,CAAC,CAAGN,KAAK,CAACM,CAAC,CACpDL,OAAO,CAACM,CAAC,CAAG,CAAA/U,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE+U,CAAC,IAAK3T,SAAS,CAAGpB,IAAI,CAAC+U,CAAC,CAAGP,KAAK,CAACO,CAAC,CACpD,GAAIN,OAAO,CAACM,CAAC,GAAK3T,SAAS,CAAEqT,OAAO,CAACM,CAAC,CAAGH,WAAW,CAACG,CAAC,EAAI,EAAE,CAC5D,GAAIN,OAAO,CAACK,CAAC,GAAK1T,SAAS,CAAEqT,OAAO,CAACK,CAAC,CAAGF,WAAW,CAACE,CAAC,EAAI,EAAE,CAE5D,GAAI,CAACL,OAAO,CAACO,MAAM,CAACR,KAAK,CAAC,CAAEjZ,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,OAAO,CAAGA,EAAE,CAAS+W,OAAO,CAAC,CAC7F,MAAO,KAAI,CACf,CAAC,CACL,CAAC,GAAAxT,GAAA,oBAAAC,KAAA,CAED,SAAA+T,iBAAwBxK,OAAgB,CAAuB,CAAE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAACnL,YAAY,CAAE,CAAC,GAAAqC,GAAA,WAAAC,KAAA,CACpG,SAAAgU,QAAexX,EAAmD,CAAwB,CAAE,MAAO,KAAI,CAACkS,kBAAkB,CAAC,SAAS,CAAC,CAAE,CAAC,GAAA3O,GAAA,eAAAC,KAAA,CACxI,SAAAiU,YAAmB1K,OAAgB,CAA6E,CAC5G,QAAS,CAAA2K,YAAYA,CAAC1X,EAAmD,CAAuC,CAC5G,GAAI,MAAO,CAAAA,EAAE,GAAK,QAAQ,CAAEA,EAAE,CAAIA,EAAE,CAASA,EAAE,CAC/C,GAAI,CAAAoN,IAAI,CAAGL,OAAO,CAACV,IAAI,CACvB,GAAI,CAAAwJ,GAAc,CAClB,GAAIzI,IAAI,CAAC/K,SAAS,CAAC,CACfwT,GAAG,CAAGzI,IAAI,CAAC9K,IAAI,CAACtC,EAAE,CAAC,CACnB,GAAG6V,GAAG,CAAE,MAAO,CAAAA,GAAG,CAAE,CACxB,GAAI,CAAA/R,EAAE,CAAGiJ,OAAO,CAAC8J,WAAW,CAACtV,SAAS,CACtC,GAAIuC,EAAE,EAAIsJ,IAAI,CAACpN,EAAE,GAAK8D,EAAE,CAAC9D,EAAE,EAAI8D,EAAE,CAACzB,SAAS,CAAC,CACxCwT,GAAG,CAAG/R,EAAE,CAACxB,IAAI,CAACtC,EAAE,CAAC,CACjB,GAAI6V,GAAG,CAAE,MAAO,CAAAA,GAAG,CAAE,CACzB,MAAO,CAAAnS,SAAS,CACpB,CAEA,MAAO,CAAAgU,YAAY,CAAE,CAAC,GAAAnU,GAAA,qBAAAC,KAAA,CAE1B,SAAAmU,kBAAkB5K,OAAgB,CAAExJ,GAAuB,CAAEyI,GAAQ,CAAW,CAC5E4L,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE,CAAC9K,OAAO,CAAPA,OAAO,CAAExJ,GAAG,CAAHA,GAAG,CAAEyI,GAAG,CAAHA,GAAG,CAAC,CAAC,CACrDnO,cAAc,CAAC0O,GAAG,CAACQ,OAAO,CAACV,IAAI,CAAE9I,GAAG,CAAEyI,GAAG,CAAC,CAC1C,MAAO,KAAI,CACf,CAAC,GAAAzI,GAAA,gBAAAC,KAAA,CAED,SAAAsU,aAAa/K,OAAgB,CAAW,CAAE,MAAO,EAAE,CAAE,CAAC,GAAAxJ,GAAA,sBAAAC,KAAA,CAGtD,SAAAuU,mBAAmBhL,OAAgB,CAAuB,CAAE,MAAO,CAAArQ,KAAK,CAACsb,SAAS,EAAIjL,OAAO,CAACV,IAAI,CAAC9J,cAAc,CAAE,CAAC,GAAAgB,GAAA,sBAAAC,KAAA,CACpH,SAAAyU,mBAAmBjM,GAAwB,CAAEe,OAAgB,CAAW,CACpE,MAAO,CAAArQ,KAAK,CAACsb,SAAS,EAAI,IAAI,CAACL,iBAAiB,CAAC5K,OAAO,CAAE,gBAAgB,CAAEf,GAAG,CAAC,CACpF,CAAC,GAAAzI,GAAA,mBAAAC,KAAA,CAED,SAAA0U,gBAAgBnL,OAAgB,CAAoB,CAAE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAClK,WAAW,CAAE,CAAC,GAAAoB,GAAA,mBAAAC,KAAA,CACxF,SAAA2U,gBAAgBnM,GAAqB,CAAEe,OAAgB,CAAW,CAC9D,MAAO,KAAI,CAAC4K,iBAAiB,CAAC5K,OAAO,CAAE,aAAa,CAAEf,GAAG,CAAC,CAC9D,CAAC,GAAAzI,GAAA,mBAAAC,KAAA,CAED,SAAA4U,gBAAgBpM,GAAwB,CAAEH,CAAU,CAAW,CAAE;AAC7D,GAAI,CAACG,GAAG,CAAEA,GAAG,CAAG,KAAK,CACrB,GAAI,CAAAxL,aAAqB,CAAGqL,CAAC,CAACQ,IAAI,CAAC7L,aAAuB,CAC1D,GAAIA,aAAa,GAAKwL,GAAG,CAAE,OAAOA,GAAG,EACjC;AACA,QAASxL,aAAa,CAAGwL,GAAG,CAChC,CAEA4L,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAE,CAACrX,aAAa,CAAbA,aAAa,CAAEwL,GAAG,CAAHA,GAAG,CAAC,CAAC,CACpDzP,KAAK,CAAC,CAAC,CACP,GAAIiE,aAAa,GAAKqL,CAAC,CAACQ,IAAI,CAAC7L,aAAa,CAAE3C,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,eAAe,CAAE7L,aAAa,CAAE,EAAE,CAAE,KAAK,CAAC,CACjH3C,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,aAAa,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CACzD9O,GAAG,CAAC,CAAC,CACL,MAAO,KAAI,CACf,CAAC,GAAAqG,GAAA,qBAAAC,KAAA,CACD,SAAA6U,kBAAkBrM,GAA0B,CAAEH,CAAU,CAAW,CAC/D,GAAI,CAACG,GAAG,CAAEA,GAAG,CAAG,KAAK,CACrB;AACR;AACA;AACA;AACA;AACA,WACQzP,KAAK,CAAC,CAAC,CACP;AACAsB,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,eAAe,CAAEL,GAAG,CAAE,EAAE,CAAE,KAAK,CAAC,CAC3D9O,GAAG,CAAC,CAAC,CACL,MAAO,KAAI,CACf,CAAC,GAAAqG,GAAA,0BAAAC,KAAA,CACD,SAAA8U,uBAAuBvL,OAAgB,CAA8B,CAAE,MAAO,CAAAA,OAAO,CAACV,IAAI,CAAC5L,kBAAkB,EAAI,EAAE,CAAE,CAAC,GAAA8C,GAAA,0BAAAC,KAAA,CACtH,SAAA+U,uBAAuBvM,GAA+B,CAAEe,OAAgB,CAAW,KAAAyL,qBAAA,CAAAC,MAAA,MAC/E,GAAI,CAACzM,GAAG,CAAEA,GAAG,CAAG,EAAE,CAAC,IACd,IAAI,CAACrM,KAAK,CAACiR,OAAO,CAAC5E,GAAG,CAAC,CAAEA,GAAG,CAAG,CAACA,GAAG,CAAC,CACzCA,GAAG,CAAC0M,IAAI,CAAC,CAAC,CACV,GAAI,CAAAC,UAAmB,CACvB,GAAI3M,GAAG,CAACvM,MAAM,KAAA+Y,qBAAA,CAAKzL,OAAO,CAACV,IAAI,CAAC5L,kBAAkB,UAAA+X,qBAAA,iBAA/BA,qBAAA,CAAiC/Y,MAAM,EAAE,CACxDkZ,UAAU,CAAG,KAAK,CAClB,IAAK,GAAI,CAAAlK,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGzC,GAAG,CAACvM,MAAM,CAAEgP,CAAC,EAAE,EAAE,GAAIzC,GAAG,CAACyC,CAAC,CAAC,GAAK1B,OAAO,CAACV,IAAI,CAAC5L,kBAAkB,CAACgO,CAAC,CAAC,CAAE,CAAEkK,UAAU,CAAG,IAAI,CAAE,MAAO,CAAC,CACzH,CAAC,IAAM,CAAAA,UAAU,CAAG,IAAI,CAExB,GAAI,CAACA,UAAU,CAAE,MAAO,KAAI,CAC5B1a,WAAW,CAAC,UAAI,CACZwa,MAAI,CAACd,iBAAiB,CAAC5K,OAAO,CAAE,oBAAoB,CAAEf,GAAG,CAAC,CAC1DlO,kBAAkB,CAACyO,GAAG,CAAC,+BAA+B,CAAEQ,OAAO,CAACV,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CACzF,CAAC,CAAC,CACF,MAAO,KAAI,CACf,CAAC,GAAAuD,GAAA,oBAAAC,KAAA,CAED,SAAAoV,iBAAiB5M,GAAc,CAAEH,CAAU,CAAU,KAAAgN,MAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAC,MAAA,CACjD,GAAI,CAAChN,GAAG,EAAI,MAAO,CAAAA,GAAG,GAAK,QAAQ,CAAE,MAAO,KAAI,CAChD,GAAI,CAAA2C,CAAC,EAAAkK,MAAA,CAAG7M,GAAG,CAAC2C,CAAC,UAAAkK,MAAA,UAAAA,MAAA,CAAI,CAAC7M,GAAG,CAAC2C,CAAC,CACvB,GAAI,CAAAC,CAAC,EAAAkK,MAAA,CAAG9M,GAAG,CAAC4C,CAAC,UAAAkK,MAAA,UAAAA,MAAA,CAAI,CAAC9M,GAAG,CAAC4C,CAAC,CACvB,GAAI,CAAAwI,CAAC,EAAA2B,MAAA,CAAG/M,GAAG,CAACoL,CAAC,UAAA2B,MAAA,UAAAA,MAAA,CAAI,CAAC/M,GAAG,CAACoL,CAAC,CACvB,GAAI,CAAAC,CAAC,EAAA2B,MAAA,CAAGhN,GAAG,CAACqL,CAAC,UAAA2B,MAAA,UAAAA,MAAA,CAAI,CAAChN,GAAG,CAACqL,CAAC,CACvB,GAAItI,KAAK,CAACJ,CAAC,CAAC,CAAEA,CAAC,CAAG9C,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACyN,CAAC,CACvC,GAAII,KAAK,CAACH,CAAC,CAAC,CAAEA,CAAC,CAAG/C,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAAC0N,CAAC,CACvC,GAAIG,KAAK,CAACqI,CAAC,CAAC,CAAEA,CAAC,CAAGvL,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACkW,CAAC,CACvC,GAAIrI,KAAK,CAACsI,CAAC,CAAC,CAAEA,CAAC,CAAGxL,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACmW,CAAC,CACvC,GAAI1I,CAAC,GAAK9C,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACyN,CAAC,EAAIC,CAAC,GAAK/C,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAAC0N,CAAC,EAAIwI,CAAC,GAAKvL,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACkW,CAAC,EAAIC,CAAC,GAAKxL,CAAC,CAACQ,IAAI,CAACnL,YAAY,CAACmW,CAAC,CAAE,MAAO,KAAI,CACzIxZ,cAAc,CAAC0O,GAAG,CAACV,CAAC,CAACQ,IAAI,CAAE,cAAc,CAAE,CAACsC,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAEwI,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,CAAC,CAAS,EAAE,CAAE,KAAK,CAAC,CAC1E,MAAO,KAAI,CACf,CAAC,GAAA9T,GAAA,aAAAC,KAAA,CAGD,SAAAyV,UAAA,CAAyE,IAAxD,CAAAC,IAAa,CAAA1Z,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,IAAI,IAAE,CAAA2Z,MAA0B,CAAA3Z,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAkE,SAAA,CAC7D,MAAO,KAAI,CAACwO,kBAAkB,CAAG,IAAI,CAACkH,WAAW,CAAmC5Q,KAAK,CAAG,aAAa,CAAC,CAAE,CAAC,GAAAjF,GAAA,iBAAAC,KAAA,CACjH,SAAA6V,cAAwBxN,CAAU,CAAkE,KAAAyN,MAAA,MAChG,MAAO,WAAwD,IAAvD,CAAAJ,IAAa,CAAA1Z,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAkE,SAAA,CAAAlE,SAAA,IAAG,KAAK,IAAE,CAAA+Z,OAA2B,CAAA/Z,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAkE,SAAA,CACtDkU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAE,CAAC2B,EAAE,CAAE3N,CAAC,CAACQ,IAAI,CAAC1H,SAAS,CAAE0K,CAAC,CAACxD,CAAC,CAACQ,IAAI,CAACnM,IAAI,CAAEgZ,IAAI,CAAJA,IAAI,CAAEK,OAAO,CAAPA,OAAO,CAAC,CAAC,CAC3F,GAAI,CAAAE,KAAmB,CAAG/V,SAAgB,CAC1C,GAAI,CAAAgW,KAAa,CAAG1b,KAAK,CAAC0T,QAAQ,CAAC,CAAC,CACpCzT,WAAW,CAAE,UAAM,CACf,GAAI,CAAA0b,IAAyB,CAAG9N,CAAC,CAACQ,IAAI,CAAC9K,SAAgC,CACvE,GAAM,CAAAqY,MAAoB,CAAG/N,CAAC,CAACQ,IAAI,CAAC1H,SAAS,GAAK,YAAY,CAC1D9H,UAAU,CAACmH,IAAI,IAAAjE,MAAA,CAAI8L,CAAC,CAACQ,IAAI,CAACnM,IAAI,UAAS,EAAE,CAAEwD,SAAS,CAAE,IAAI,CAAC,CAC3D7E,YAAY,CAACmF,IAAI,IAAAjE,MAAA,CAAI8L,CAAC,CAACQ,IAAI,CAACnM,IAAI,UAAS,EAAE,CAAEwD,SAAS,CAAE,IAAI,CAAE,MAAM,CAAC,CACzE+V,KAAK,CAAGnc,kBAAkB,CAACyU,KAAK,CAAC6H,MAAM,CAAC,CACxC,GAAM,CAAAT,MAAyB,CAAGI,OAAO,EAAI,CAACI,IAAI,CAAJA,IAAI,CAAC,CACnD;AAEA,IAAK,GAAI,CAAApW,GAAG,GAAI,CAAAsI,CAAC,CAACQ,IAAI,CAAE,CACpB,OAAO9I,GAAG,EACN,IAAK,UAAU,CACX;AACA,GAAI,CAAC2V,IAAI,CAAE,MACX;AACA,IAAK,GAAM,CAAAW,MAAM,GAAI,CAAAhO,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAAE,CAClC,GAAM,CAAAmZ,QAAQ,CAAGjO,CAAC,CAACQ,IAAI,CAAC1L,QAAQ,CAACkZ,MAAM,CAAC,CACvCvc,kBAAkB,CAACuH,WAAW,CAACgV,MAAM,CAAEH,KAAK,CAAC,CAAkBT,SAAS,CAACC,IAAI,CAAE,CAACS,IAAI,CAACC,MAAM,CAAC5Z,EAAE,oBAAoB,CAAC,CAAC,CACrH;AACJ,CACA;AACA,MACJ,IAAK,QAAQ,CACb,IAAK,WAAW,CACZ;AACA;AAC5B;AACA;AACA;AACA,kGAJ4B,CAKA;AACAsZ,MAAI,CAAC5D,aAAa,CAACyD,MAAM,CAACQ,IAAI,CAAEjW,SAAS,CAASkW,MAAM,CAAE,CAACV,IAAI,CAAC,CAChE;AACA,MACJ,IAAK,EAAE,CACP,IAAK,IAAI,CACT,IAAK,MAAM,CACX,IAAK,WAAW,CAChB,IAAK,WAAW,CAChB,IAAK,YAAY,CACjB,IAAK,UAAU,CACf,IAAK,eAAe,CAAE,MACtB,IAAK,oBAAoB,CAAE,MAE3B,IAAK,cAAc,CACftB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAGhM,CAAC,CAACQ,IAAI,CAACnM,IAAI,CAAG,mBAAmB,CAAE,CAACmM,IAAI,CAACR,CAAC,CAACQ,IAAI,CAAE0N,EAAE,CAAClO,CAAC,CAACQ,IAAI,CAACpM,YAAY,CAAC,CAAC,CACnGwZ,KAAK,CAASlW,GAAG,CAAC,CAAIsI,CAAC,CAACQ,IAAI,CAAS9I,GAAG,CAAC,CAC1C,MACJ,QACI,GAAI,CACCkW,KAAK,CAASlW,GAAG,CAAC,CAAIsI,CAAC,CAACQ,IAAI,CAAS9I,GAAG,CAAC,CAC9C,CAAE,MAAMiM,CAAC,CAAE,CACX;AAAA,CAER,CACJ,CAEA;AACA;AACA,GAAI,CAAA1L,EAAc,CAAG+H,CAAC,CAACgL,WAAW,CAACtV,SAAS,CAC5C;AACA;AACA;AACA;AAChB;AACA;AACA,gDAHgB,CAIA;AAGA,GAAM,CAAAyY,IAAI,CAAGnO,CAAC,CAACQ,IAAI,CAAC1H,SAAS,GAAK,YAAY,CAC9C,GAAIqV,IAAI,CAAElc,kBAAkB,CAACyO,GAAG,cAAeV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC,IACjE,CAAAlC,kBAAkB,CAACyO,GAAG,gBAAiBV,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,IAAI,CAAC,CAAC,IAAAia,UAAA,CAAA9K,0BAAA,CACnDtQ,YAAY,CAACgH,aAAa,EAAAqU,MAAA,KAA1C,IAAAD,UAAA,CAAArM,CAAA,KAAAsM,MAAA,CAAAD,UAAA,CAAA5K,CAAA,IAAAC,IAAA,MAAS,CAAA/L,KAAG,CAAA2W,MAAA,CAAA1W,KAAA,CAAgC1F,kBAAkB,CAACyO,GAAG,oBAAAxM,MAAA,CAAoBwD,KAAG,EAAIsI,CAAC,CAACQ,IAAI,CAACrM,EAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,QAAA0P,GAAA,EAAAuK,UAAA,CAAAzK,CAAA,CAAAE,GAAA,WAAAuK,UAAA,CAAAtK,CAAA,IACzH,CAAC,CAAC,CACF,MAAO,CAAA8J,KAAK,CAChB,CAAC,CACL,CAAC,KAAAlW,GAAA,kBAAAC,KAAA,CAzVD,SAAA2W,eAA6BC,QAAiB,CAAuB,CACjE,GAAI,CAACA,QAAQ,CAAE,MAAO,CAAC,CAAC,CACxB,GAAI,CAAAC,eAAwB,CAAG,CAAC,CAAC,CACjC,GAAI,CAAAtN,OAAgB,CAAG,CAACuN,OAAO,CAAED,eAAe,CAAC,CACjDtN,OAAO,CAACwN,SAAS,CAAGpc,OAAO,CAACqc,cAAc,CAC1C,GAAG,CACC,GAAI,CAAAC,UAAU,CAAGvc,CAAC,CAACwc,gCAAgC,CAACN,QAAQ,CAAErN,OAAO,CAAEA,OAAO,CAAE,CAAC,KAAK,CAAC,CAAC,CACxF0N,UAAU,CAAC1N,OAAO,CAAEsN,eAAe,CAAC,CACpC;AACJ,CAAE,MAAO7K,CAAM,CAAE,CACbnS,GAAG,CAAC+Z,CAAC,CAAC,4DAA4D,CAAG5H,CAAC,CAACmL,OAAO,CAAC7L,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAEU,CAAC,CAAC,CACjG,MAAO,CAAA9L,SAAS,CACpB,CACA,MAAO,CAAA2W,eAAe,CAC1B,CAAC,WAAAvU,YAAA,GA1sBOxI,kBAAkB,EAAA2I,OAAA,CAEnBP,UAAU,CAA+C,EAAE,CAAAO,OAAA,CAC3DN,QAAQ,CAA+C,EAAE,CAAAM,OAAA,IAAAD,OAAA,EAohCpEpI,sBAAsB,CAACgd,UAAU,CAAChe,kBAAkB,CAAEiC,YAAY,CAAC,CACnEjB,sBAAsB,CAACgd,UAAU,CAACtd,kBAAkB,CAAEwI,YAAY,CAAC,CAQnE,UACa,CAAA+U,wBAAwB,EAAAC,KAAA,CADpCnd,iBAAiB,CAAC,0BAA0B,CAAC,CAAAmd,KAAA,CAAAC,OAAA,EAAAC,OAAA,uBAAAC,qBAAA,EAAA/b,SAAA,CAAA2b,wBAAA,CAAAI,qBAAA,MAAAC,OAAA,CAAA9b,YAAA,CAAAyb,wBAAA,WAAAA,yBAAA,MAAAM,MAAA,CAAA7b,eAAA,MAAAub,wBAAA,UAAAO,KAAA,CAAA5b,SAAA,CAAAC,MAAA,CAAAC,IAAA,KAAAC,KAAA,CAAAyb,KAAA,EAAAC,KAAA,GAAAA,KAAA,CAAAD,KAAA,CAAAC,KAAA,IAAA3b,IAAA,CAAA2b,KAAA,EAAA7b,SAAA,CAAA6b,KAAA,GAAAF,MAAA,CAAAD,OAAA,CAAArb,IAAA,CAAAC,KAAA,CAAAob,OAAA,QAAAnb,MAAA,CAAAL,IAAA,GAAAyb,MAAA,CAG1CG,2BAA2B,eAAAH,MAAA,EAC3B;AACA;AAAA,OAAAN,wBAAA,GAJ0Cjd,sBAAsB,EAAAod,OAAA,CACzDO,KAAK,QAAAP,OAAA,IAAAD,OAAA,EAMhBnd,sBAAsB,CAACgd,UAAU,CAAChd,sBAAsB,CAAEid,wBAAwB,CAAC,CACnF,UACa,CAAAW,wBAAwB,EAAAC,KAAA,CADpC9d,iBAAiB,CAAC,0BAA0B,CAAC,CAAA8d,KAAA,CAAAC,OAAA,EAAAC,OAAA,uBAAAC,oBAAA,EAAA1c,SAAA,CAAAsc,wBAAA,CAAAI,oBAAA,MAAAC,OAAA,CAAAzc,YAAA,CAAAoc,wBAAA,WAAAA,yBAAA,MAAAM,MAAA,CAAAxc,eAAA,MAAAkc,wBAAA,UAAAO,KAAA,CAAAvc,SAAA,CAAAC,MAAA,CAAAC,IAAA,KAAAC,KAAA,CAAAoc,KAAA,EAAAC,KAAA,GAAAA,KAAA,CAAAD,KAAA,CAAAC,KAAA,IAAAtc,IAAA,CAAAsc,KAAA,EAAAxc,SAAA,CAAAwc,KAAA,GAAAF,MAAA,CAAAD,OAAA,CAAAhc,IAAA,CAAAC,KAAA,CAAA+b,OAAA,QAAA9b,MAAA,CAAAL,IAAA,GAAAoc,MAAA,CAI1CG,2BAA2B,eAAAH,MAAA,EAE3B;AACA;AACA;AACJ;AACA,qJAFI,CAGA;AACJ;AACA;AACA;AACA;AACA,WALI,OAAAN,wBAAA,GAV0Cle,kBAAkB,EAAAqe,OAAA,CACrDO,SAAS,QAAAP,OAAA,CACTQ,SAAS,QAAAR,OAAA,IAAAD,OAAA,EAgBpB9d,sBAAsB,CAACgd,UAAU,CAAChe,kBAAkB,CAAEie,wBAAwB,CAAC,CAC/Ejd,sBAAsB,CAACgd,UAAU,CAACtd,kBAAkB,CAAEke,wBAAwB,CAAC,CAG/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlBA,CAmBA;AACA;AACA"},"metadata":{},"sourceType":"module"}