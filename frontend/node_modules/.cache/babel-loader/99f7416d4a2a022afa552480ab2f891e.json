{"ast":null,"code":"import{Input,LPointerTargetable}from\"../../../../joiner\";import{connect}from\"react-redux\";import'./permissions.scss';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export function PermissionViewpointTabComponent(props){let groups={'Metamodelers':{},'Modelers':{},'Language designer':{},'Concrete Syntax designer':{}};let groupsarr=Object.keys(groups);return/*#__PURE__*/_jsx(\"section\",{className:'permission-tab',children:groupsarr.map(group=>/*#__PURE__*/_jsxs(\"section\",{className:'group-permission',children:[/*#__PURE__*/_jsxs(\"h2\",{children:[group,\" can:\"]}),/*#__PURE__*/_jsxs(\"label\",{className:'single-permission',children:[/*#__PURE__*/_jsx(Input,{type:'checkbox',data:props.view,field:'example1'+group}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit Views\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:'single-permission',children:[/*#__PURE__*/_jsx(Input,{type:'checkbox',data:props.view,field:'example2'+group}),/*#__PURE__*/_jsx(\"span\",{children:\"Deactivate viewpoint\"})]})]}))});}function mapStateToProps(state,ownProps){const ret={};ret.view=LPointerTargetable.fromPointer(ownProps.viewID);return ret;}function mapDispatchToProps(dispatch){const ret={};return ret;}export const PermissionViewpointTab=connect(mapStateToProps,mapDispatchToProps)(PermissionViewpointTabComponent);PermissionViewpointTab.cname='PermissionViewpointTab';PermissionViewpointTabComponent.cname='PermissionViewpointTabComponent';","map":{"version":3,"names":["Input","LPointerTargetable","connect","jsxs","_jsxs","jsx","_jsx","PermissionViewpointTabComponent","props","groups","groupsarr","Object","keys","className","children","map","group","type","data","view","field","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","PermissionViewpointTab","cname"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/editors/views/data/PermissionViewpointTab.tsx"],"sourcesContent":["import {DState, DViewElement, Input, LPointerTargetable, LViewElement, Overlap, Pointer} from \"../../../../joiner\";\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {Dispatch} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport './permissions.scss';\r\n\r\n\r\nexport function PermissionViewpointTabComponent(props: AllProps): JSX.Element{\r\n    let groups={'Metamodelers':{}, 'Modelers':{}, 'Language designer':{}, 'Concrete Syntax designer':{}};\r\n    let groupsarr = Object.keys(groups);\r\n\r\n    return <section className={'permission-tab'}>\r\n        {groupsarr.map(group=> <section className={'group-permission'}>\r\n            <h2>{group} can:</h2>\r\n            <label className={'single-permission'}>\r\n                <Input type={'checkbox'} data={props.view} field={'example1'+group}/>\r\n                <span>Edit Views</span>\r\n            </label>\r\n            <label className={'single-permission'}>\r\n                <Input type={'checkbox'} data={props.view} field={'example2'+group}/>\r\n                <span>Deactivate viewpoint</span>\r\n            </label>{/*\r\n            readmode should alwasy be on. write mode i can take it from model permissions, and allow it if query string does not contain =\r\n            or if it does not match a user regexp\r\n            <label className={'single-permission'}>\r\n                <Input type={'checkbox'} data={props.view} field={'example'}/>\r\n                <span>Use Console</span>\r\n            </label>*/}\r\n        </section>)}\r\n    </section>;\r\n}\r\n\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {\r\n}\r\n\r\ntype AllProps = Overlap<Overlap<OwnProps, StateProps>, DispatchProps>;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps { const ret: DispatchProps = {}; return ret; }\r\n\r\nexport const PermissionViewpointTab = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PermissionViewpointTabComponent);\r\n\r\n(PermissionViewpointTab as any).cname = 'PermissionViewpointTab';\r\nPermissionViewpointTabComponent.cname = 'PermissionViewpointTabComponent';\r\n"],"mappings":"AAAA,OAA8BA,KAAK,CAAEC,kBAAkB,KAAuC,oBAAoB,CAGlH,OAAQC,OAAO,KAAO,aAAa,CACnC,MAAO,oBAAoB,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAG5B,MAAO,SAAS,CAAAC,+BAA+BA,CAACC,KAAe,CAAc,CACzE,GAAI,CAAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAE,UAAU,CAAC,CAAC,CAAC,CAAE,mBAAmB,CAAC,CAAC,CAAC,CAAE,0BAA0B,CAAC,CAAC,CAAC,CAAC,CACpG,GAAI,CAAAC,SAAS,CAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAEnC,mBAAOH,IAAA,YAASO,SAAS,CAAE,gBAAiB,CAAAC,QAAA,CACvCJ,SAAS,CAACK,GAAG,CAACC,KAAK,eAAGZ,KAAA,YAASS,SAAS,CAAE,kBAAmB,CAAAC,QAAA,eAC1DV,KAAA,OAAAU,QAAA,EAAKE,KAAK,CAAC,OAAK,EAAI,CAAC,cACrBZ,KAAA,UAAOS,SAAS,CAAE,mBAAoB,CAAAC,QAAA,eAClCR,IAAA,CAACN,KAAK,EAACiB,IAAI,CAAE,UAAW,CAACC,IAAI,CAAEV,KAAK,CAACW,IAAK,CAACC,KAAK,CAAE,UAAU,CAACJ,KAAM,CAAC,CAAC,cACrEV,IAAA,SAAAQ,QAAA,CAAM,YAAU,CAAM,CAAC,EACpB,CAAC,cACRV,KAAA,UAAOS,SAAS,CAAE,mBAAoB,CAAAC,QAAA,eAClCR,IAAA,CAACN,KAAK,EAACiB,IAAI,CAAE,UAAW,CAACC,IAAI,CAAEV,KAAK,CAACW,IAAK,CAACC,KAAK,CAAE,UAAU,CAACJ,KAAM,CAAC,CAAC,cACrEV,IAAA,SAAAQ,QAAA,CAAM,sBAAoB,CAAM,CAAC,EAC9B,CAAC,EAOH,CAAC,CAAC,CACN,CAAC,CACd,CAiBA,QAAS,CAAAO,eAAeA,CAACC,KAAa,CAAEC,QAAkB,CAAc,CACpE,KAAM,CAAAC,GAAe,CAAG,CAAC,CAAmB,CAC5CA,GAAG,CAACL,IAAI,CAAGlB,kBAAkB,CAACwB,WAAW,CAACF,QAAQ,CAACG,MAAM,CAAC,CAC1D,MAAO,CAAAF,GAAG,CACd,CAEA,QAAS,CAAAG,kBAAkBA,CAACC,QAAuB,CAAiB,CAAE,KAAM,CAAAJ,GAAkB,CAAG,CAAC,CAAC,CAAE,MAAO,CAAAA,GAAG,CAAE,CAEjH,MAAO,MAAM,CAAAK,sBAAsB,CAAG3B,OAAO,CACzCmB,eAAe,CACfM,kBACJ,CAAC,CAACpB,+BAA+B,CAAC,CAEjCsB,sBAAsB,CAASC,KAAK,CAAG,wBAAwB,CAChEvB,+BAA+B,CAACuB,KAAK,CAAG,iCAAiC","ignoreList":[]},"metadata":{},"sourceType":"module"}