{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\defaultNode\\\\DefaultNode.tsx\",\n  _this = this;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { GraphElementComponent, GraphElementDispatchProps, GraphElementOwnProps, GraphElementReduxStateProps, GraphElementStatee, Log, RuntimeAccessibleClass, SetRootFieldAction, Vertex, windoww } from \"../../joiner\";\nimport { Field, Graph, GraphVertex } from \"../vertex/Vertex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst superclass = RuntimeAccessibleClass.classes.GraphElementComponent;\n\n// private\nclass DefaultNodeStatee extends GraphElementStatee {}\n\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\n\n// Giordano: add ignore for webpack\n//@ts-ignore\nexport class DefaultNodeComponent extends superclass {\n  static mapStateToProps(state, ownProps) {\n    let ret = {}; // NB: cannot use a constructor, must be pojo\n    GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\n    // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\n    try {\n      GraphElementComponent.mapViewStuff(state, ret, ownProps);\n      ret.skiparenderforloading = false;\n    } catch (e) {\n      ret.skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\n      /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp\r\n      Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});*/\n    }\n    return ret;\n  }\n  constructor(props, context) {\n    super(props, context);\n  }\n  render() {\n    var _this$props$data, _this$props$view, _this$props$views;\n    if (this.props.skiparenderforloading) {\n      console.log(\"realoading render: \", {\n        thiss: this,\n        data: this.props.data\n      });\n      windoww.bugged = this;\n      console.log(\"realoading render: \", {\n        thiss: this,\n        data: this.props.data\n      });\n      SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 88\n      }, this);\n    }\n    const view = this.props.view;\n    const modelElement = this.props.data;\n    if (!view) {\n      Log.exx({\n        props: this.props,\n        thiss: this\n      });\n    }\n    // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\n\n    let componentMap = windoww.components;\n    let dmodelMap = RuntimeAccessibleClass.classes;\n    let serializableProps = {\n      ...this.props,\n      data: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.id,\n      view: (_this$props$view = this.props.view) === null || _this$props$view === void 0 ? void 0 : _this$props$view.id,\n      views: (_this$props$views = this.props.views) === null || _this$props$views === void 0 ? void 0 : _this$props$views.map(v => v.id)\n    };\n    // console.log('dnode render', {props: {...this.props}, serializableProps});\n    if (view.forceNodeType) switch (view.forceNodeType) {\n      default:\n        Log.exDevv('unrecognized View.forceNodeType:' + view.forceNodeType, {\n          view,\n          modelElement\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"dev error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      case windoww.Components.GraphElementComponent.name:\n      case windoww.Components.VertexComponent.name:\n      case windoww.Components.FieldComponent.name:\n        return componentMap[view.forceNodeType](this.props, this.props.children);\n    }\n    let componentfunction = null;\n    if (modelElement === null || modelElement === void 0 ? void 0 : modelElement.className) switch (modelElement.className) {\n      case \"DModel\":\n        componentfunction = Graph;\n        break;\n      case \"DPackage\":\n        componentfunction = GraphVertex;\n        break;\n      case \"DClassifier\":\n      case \"DEnumerator\":\n      case \"DObject\":\n      case \"DClass\":\n        componentfunction = Vertex;\n        break;\n      case \"DAnnotation\":\n      case \"DAttribute\":\n      case \"DOperation\":\n      case \"DParameter\":\n      case \"DReference\":\n      case \"DEnumLiteral\":\n      case \"DValue\":\n      case \"DModelElement\":\n        componentfunction = Field;\n        break;\n      default:\n        Log.exDevv('invalid model class, add a case in the switch', {\n          modelElement,\n          view,\n          dmodelMap,\n          componentMap\n        });\n      // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\n      // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\n      // return dmodel.defaultComponent(serializableProps, this.props.children);\n    }\n    if (componentfunction) return componentfunction(serializableProps, this.props.children);\n    // errore: questoon passa gli id correttamente al sottoelemento vertex o field\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Error: Node is missing both view and model\"\n    }, void 0, false);\n  }\n}\n\n// private\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\nclass DefaultNodeReduxStateProps extends GraphElementReduxStateProps {}\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\nconst DefaultNodeConnected = connect(DefaultNodeComponent.mapStateToProps, DefaultNodeComponent.mapDispatchToProps)(DefaultNodeComponent);\n// export const Vertex = VertexConnected;\n\nexport const DefaultNode = function (props) {\n  let childrens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(DefaultNodeConnected, {\n    ...props,\n    childrens\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 12\n  }, _this);\n};\n_c = DefaultNode;\nvar _c;\n$RefreshReg$(_c, \"DefaultNode\");","map":{"version":3,"names":["React","connect","GraphElementComponent","GraphElementDispatchProps","GraphElementOwnProps","GraphElementReduxStateProps","GraphElementStatee","Log","RuntimeAccessibleClass","SetRootFieldAction","Vertex","windoww","Field","Graph","GraphVertex","jsxDEV","_jsxDEV","Fragment","_Fragment","superclass","classes","DefaultNodeStatee","DefaultNodeComponent","mapStateToProps","state","ownProps","ret","mapLModelStuff","mapViewStuff","skiparenderforloading","e","constructor","props","context","render","_this$props$data","_this$props$view","_this$props$views","console","log","thiss","data","bugged","new","Date","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","view","modelElement","exx","componentMap","components","dmodelMap","serializableProps","id","views","map","v","forceNodeType","exDevv","Components","name","VertexComponent","FieldComponent","componentfunction","className","DefaultNodeOwnProps","DefaultNodeReduxStateProps","DefaultNodeDispatchProps","DefaultNodeConnected","mapDispatchToProps","DefaultNode","childrens","arguments","length","undefined","_this","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/defaultNode/DefaultNode.tsx"],"sourcesContent":["import React, {ReactElement, ReactNode} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    DClassifier,\r\n    DEnumerator,\r\n    Dictionary,\r\n    DModel,\r\n    DModelElement,\r\n    DPackage,\r\n    GObject,\r\n    GraphElementComponent,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    IStore,\r\n    LModelElement,\r\n    Log,\r\n    LViewElement,\r\n    RuntimeAccessibleClass, SetRootFieldAction,\r\n    Vertex,\r\n    windoww,\r\n} from \"../../joiner\";\r\nimport {Field, Graph, GraphVertex} from \"../vertex/Vertex\";\r\n\r\nconst superclass: typeof GraphElementComponent = RuntimeAccessibleClass.classes.GraphElementComponent as any as typeof GraphElementComponent;\r\n\r\n// private\r\nclass DefaultNodeStatee extends GraphElementStatee { }\r\n\r\n// from ownstateprops function getVertexID(props: AllPropss): Pointer<DVoidVertex, 0, 1, LVoidVertex> { return props.vertex?.id; }\r\n\r\n\r\n// Giordano: add ignore for webpack\r\n//@ts-ignore\r\nexport class DefaultNodeComponent<AllProps extends AllPropss = AllPropss, NodeState = DefaultNodeStatee> extends superclass<AllProps, NodeState>{\r\n\r\n    static mapStateToProps(state: IStore, ownProps: GraphElementOwnProps): GraphElementReduxStateProps {\r\n        let ret: GraphElementReduxStateProps = {} as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret); // not necessary either?\r\n        // GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass); not necessary, it's demanded to sub-components\r\n        try{\r\n            GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n            (ret as any).skiparenderforloading = false;\r\n        } catch(e) {\r\n            (ret as any).skiparenderforloading = true; // model id is updated, but he's still trying to load old model which got replaced and is not in state.\r\n            /* crashes on loading because old model and new model have different timestamps? looks by id of old model with same number and diffferent timestamp\r\n        Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});*/ }\r\n        return ret; }\r\n\r\n    constructor(props: AllProps, context: any) { super(props, context); }\r\n\r\n    render(): ReactNode {\r\n        if ((this.props as any).skiparenderforloading) {\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            windoww.bugged = this;\r\n            console.log(\"realoading render: \", {thiss:this, data:this.props.data});\r\n            SetRootFieldAction.new(\"rerenderforloading\", new Date().getTime()); return <div>loading...</div>;}\r\n        const view: LViewElement = this.props.view;\r\n        const modelElement: LModelElement = this.props.data;\r\n        if (!view) { Log.exx({props: this.props, thiss:this}); }\r\n        // if (!view) { SetRootFieldAction.new(\"uselessrefresh_afterload\", new Date().getTime()); return <div>Loading...</div>; }\r\n\r\n        let componentMap: Dictionary<string, (props: GObject, childrens?: (string | React.Component)[]) => ReactElement> = windoww.components;\r\n        let dmodelMap: Dictionary<string, typeof DModelElement> = RuntimeAccessibleClass.classes as any;\r\n\r\n        let serializableProps = {...this.props, data: this.props.data?.id, view: this.props.view?.id, views: this.props.views?.map( v => v.id )};\r\n        // console.log('dnode render', {props: {...this.props}, serializableProps});\r\n        if (view.forceNodeType) switch (view.forceNodeType) {\r\n            default: Log.exDevv('unrecognized View.forceNodeType:' + view.forceNodeType, {view, modelElement});\r\n            return <div>dev error</div>\r\n            case windoww.Components.GraphElementComponent.name:\r\n            case windoww.Components.VertexComponent.name:\r\n            case windoww.Components.FieldComponent.name: return componentMap[view.forceNodeType](this.props, this.props.children);\r\n        }\r\n\r\n        let componentfunction: typeof Graph = null as any;\r\n        if (modelElement?.className) switch(modelElement.className) {\r\n            case \"DModel\": componentfunction = Graph; break;\r\n            case \"DPackage\": componentfunction = GraphVertex; break;\r\n            case \"DClassifier\":\r\n            case \"DEnumerator\":\r\n            case \"DObject\":\r\n            case \"DClass\": componentfunction = Vertex; break;\r\n            case \"DAnnotation\":\r\n            case \"DAttribute\":\r\n            case \"DOperation\":\r\n            case \"DParameter\":\r\n            case \"DReference\":\r\n            case \"DEnumLiteral\":\r\n            case \"DValue\":\r\n            case \"DModelElement\": componentfunction = Field; break;\r\n            default:\r\n                Log.exDevv('invalid model class, add a case in the switch', {modelElement, view, dmodelMap, componentMap});\r\n                // const dmodel: typeof DModelElement = dmodelMap[modelElement.className];\r\n                // Log.exDev(!dmodel || !dmodel.defaultComponent, 'invalid model class:', {dmodel, modelElement, view, dmodelMap, componentMap});\r\n                // return dmodel.defaultComponent(serializableProps, this.props.children);\r\n        }\r\n        if (componentfunction) return componentfunction(serializableProps, this.props.children);\r\n        // errore: questoon passa gli id correttamente al sottoelemento vertex o field\r\n        return (<>Error: Node is missing both view and model</>);\r\n    }\r\n\r\n}\r\n\r\n// private\r\nclass DefaultNodeOwnProps extends GraphElementOwnProps {}\r\nclass DefaultNodeReduxStateProps  extends GraphElementReduxStateProps {}\r\nclass DefaultNodeDispatchProps extends GraphElementDispatchProps {}\r\ntype AllPropss = DefaultNodeOwnProps & DefaultNodeReduxStateProps & DefaultNodeDispatchProps;\r\n\r\n\r\nconst DefaultNodeConnected = connect<DefaultNodeReduxStateProps, DefaultNodeDispatchProps, DefaultNodeOwnProps, IStore>(\r\n    DefaultNodeComponent.mapStateToProps,\r\n    DefaultNodeComponent.mapDispatchToProps\r\n)(DefaultNodeComponent as any);\r\n// export const Vertex = VertexConnected;\r\n\r\n\r\nexport const DefaultNode = (props: DefaultNodeOwnProps, childrens: (string | React.Component)[] = []): ReactElement => {\r\n    return <DefaultNodeConnected {...{...props, childrens}} />; }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}