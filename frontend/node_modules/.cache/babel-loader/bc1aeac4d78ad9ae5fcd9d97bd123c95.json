{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\forEndUser\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Defaults, Keystrokes, LPointerTargetable, U } from '../../joiner';\nimport { useStateIfMounted } from 'use-state-if-mounted';\nimport './inputselect.scss';\nimport { Tooltip } from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function getSelectOptions(data, field, props) {\n  let returns;\n  let primitives;\n  let classes;\n  let enumerators;\n  let objects;\n  if (field === 'type') {\n    if (data) switch (data.className) {\n      case 'DValue':\n        let m2 = data.instanceof;\n        if (!m2) return data.model.allSubObjects;\n        let m1modelid = data.model.id;\n        return m2.instances.filter(o => o.model.id === m1modelid);\n      case 'DAttribute':\n        primitives = props.primitives;\n        enumerators = data.enums;\n        break;\n      case 'DReference':\n        classes = data.classes;\n        break;\n      case 'DOperation':\n        primitives = props.primitives;\n        classes = data.classes;\n        enumerators = data.enums;\n        returns = props.returns;\n        break;\n      case 'DParameter':\n        primitives = props.primitives;\n        classes = data.classes;\n        enumerators = data.enums;\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [returns && returns.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Defaults',\n      children: returns.map((returnType, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: returnType.id,\n          children: returnType.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 49\n    }, this), primitives && primitives.length && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Primitives',\n      children: primitives.map((primitive, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: primitive.id,\n          children: primitive.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 51\n    }, this), enumerators && enumerators.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Enumerators',\n      children: enumerators.map((enumerator, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: enumerator.id,\n          children: enumerator.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 57\n    }, this), classes && classes.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Classes',\n      children: classes.map((classifier, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: classifier.id,\n          children: classifier.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 49\n    }, this), objects && objects.length > 0 && /*#__PURE__*/_jsxDEV(\"optgroup\", {\n      label: 'Classes',\n      children: objects.map((classifier, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: classifier.id,\n          children: classifier.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }, this), props.options]\n  }, void 0, true);\n}\nexport function InputComponent(props) {\n  _s();\n  var _data;\n  const data = props.data;\n  const getter = props.getter;\n  const setter = props.setter;\n  const field = props.field;\n  const oldValue = !data ? undefined : getter ? getter(data, field) : data[field]; // !== undefined); ? data[field] : 'undefined'\n  const [value, setValue] = useStateIfMounted(oldValue);\n  const [isTouched, setIsTouched] = useStateIfMounted(false);\n  const inputRef = useRef(null);\n\n  // I check if the value that I have in my local state is being edited by other <Input />\n  if (value !== oldValue && !isTouched) {\n    setValue(oldValue);\n    setIsTouched(false);\n  }\n  if (!(data || getter && setter)) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Either props.data or both getter & setter are required.\"\n  }, void 0, false);\n  const readOnly = props.readonly !== undefined ? props.readonly : props.debugmodee !== 'true' && Defaults.check(data === null || data === void 0 ? void 0 : data.id);\n  const type = props.type ? props.type : 'text';\n  const label = props.jsxLabel || props.label;\n  let tooltip = (props.tooltip === true ? data === null || data === void 0 ? void 0 : (_data = data['__info_of__' + field]) === null || _data === void 0 ? void 0 : _data.txt : props.tooltip) || '';\n  let css = ''; //'my-auto input ';\n  //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\n  css += props.hidden ? ' hidden-input' : '';\n  let autosize = props.autosize === undefined ? false : props.autosize; // props.type==='text'\n  css += autosize ? ' autosize-input' : '';\n  const isBoolean = ['checkbox', 'radio'].includes(type);\n  const onChange = evt => {\n    if (readOnly) return;\n    if (isBoolean) {\n      const target = evt.target.checked;\n      if (setter) setter(target, data, field);else data[field] = target;\n      return;\n    }\n    if (props.tag === \"select\") {\n      onBlur(evt);\n    } else {\n      setValue(getValueFromEvent(evt));\n      setIsTouched(true); // I'm editing the element in my local state.\n      // the actual set is done in onBlur\n    }\n  };\n\n  const onKeyDown = evt => {\n    if (evt.key === Keystrokes.enter) onBlur(evt);\n    if (evt.key === Keystrokes.escape) {\n      const oldValue = getter ? getter(data, field) : data[field];\n      evt.target.value = oldValue;\n      setValue(oldValue);\n      setIsTouched(false);\n      evt.target.blur();\n      // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\n      // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\n    }\n  };\n\n  const getValueFromEvent = evt => {\n    switch (props.tag) {\n      case \"textarea\":\n      case \"input\":\n      case \"select\":\n      case \"\":\n      case null:\n      case \"undefined\":\n        return evt.target.value;\n      default:\n        return evt.target.innerText;\n    }\n  };\n  const onBlur = evt => {\n    if (readOnly || isBoolean) return;\n    const newValue = getValueFromEvent(evt);\n    const oldValue = getter ? getter(data, field) : data[field];\n    if (newValue !== oldValue) {\n      if (setter) setter(newValue, data, field);else data[field] = newValue;\n    }\n    // I terminate my editing, so I communicate it to other <Input /> that render the same field.\n    setIsTouched(false);\n  };\n  const otherprops = {\n    ...props\n  };\n  delete otherprops.data;\n  delete otherprops.field;\n  delete otherprops.getter;\n  delete otherprops.setter;\n  delete otherprops.label;\n  delete otherprops.jsxLabel;\n  delete otherprops.tooltip;\n  delete otherprops.hidden;\n  delete otherprops.inputStyle;\n  delete otherprops.children;\n  delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\n\n  let checked = undefined;\n  if (isBoolean) checked = typeof value === \"boolean\" ? value : typeof value === \"string\" ? U.fromBoolString(value) : !!value;\n  let cursor;\n  if (tooltip) cursor = 'help';else if (readOnly) cursor = 'not-allowed';else if (isBoolean) cursor = 'pointer';else cursor = 'auto';\n  let inputProps = {\n    spellCheck: props.spellCkeck || false,\n    readOnly,\n    type,\n    value,\n    checked,\n    className: [props.inputClassName, css].join(' '),\n    style: props.inputStyle || {},\n    onChange,\n    onBlur,\n    onKeyDown\n  }; // key:`${field}.${data?.id}`\n  if (!inputProps.style.cursor && cursor === 'not-allowed') {\n    inputProps.style.cursor = cursor;\n  }\n  let input;\n  let rootprops = {\n    ...otherprops\n  };\n  switch (typeof rootprops.ref) {\n    default:\n      rootprops.ref = inputRef;\n      break;\n    case \"object\":\n      let oldref = rootprops.ref;\n      rootprops.ref = v => {\n        oldref.current = inputRef.current = v;\n      };\n      break;\n    case \"function\":\n      let oldreff = rootprops.ref;\n      rootprops.ref = v => {\n        oldreff(v);\n        inputRef.current = v;\n      };\n      break;\n  }\n  if (tooltip) {\n    rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, rootprops.ref);\n    rootprops.onMouseLeave = () => Tooltip.hide();\n  }\n  let rootkeys = new Set(...Object.keys(rootprops));\n  //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\n  //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\n  for (let k of rootkeys) {\n    if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\n    if (inputProps[k]) inputProps[k] = function () {\n      for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n        a[_key] = arguments[_key];\n      }\n      inputProps[k](arguments);\n      rootprops[k](arguments);\n    };else inputProps[k] = rootprops[k];\n    delete rootprops[k];\n  }\n  if (!label && !autosize) {\n    if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\n    if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\n    inputProps = {\n      ...rootprops,\n      ...inputProps\n    };\n    switch (props.tag) {\n      case \"textarea\":\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ...inputProps,\n          children: inputProps.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 37\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          ...inputProps,\n          children: selectoptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 35\n        }, this);\n      case null:\n      case undefined:\n      case \"\":\n      case \"input\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          ...inputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 70\n        }, this);\n      default:\n        inputProps.contentEditable = inputProps.contentEditable !== false;\n        return /*#__PURE__*/React.createElement(props.tag, inputProps, props.children);\n    }\n  }\n  if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';\n  switch (props.tag) {\n    case \"textarea\":\n      input = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ...inputProps,\n        children: inputProps.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 34\n      }, this);\n      break;\n    case \"select\":\n      input = /*#__PURE__*/_jsxDEV(\"select\", {\n        ...inputProps,\n        children: selectoptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 32\n      }, this);\n      break;\n    case null:\n    case undefined:\n    case \"\":\n    case \"input\":\n      input = /*#__PURE__*/_jsxDEV(\"input\", {\n        ...inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 67\n      }, this);\n      break;\n    default:\n      inputProps.contentEditable = inputProps.contentEditable !== false;\n      input = /*#__PURE__*/React.createElement(props.tag, inputProps, props.children);\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    ...rootprops,\n    children: [label || undefined, input]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 12\n  }, this);\n  /*\r\n  return(<label className={'p-1'} {...otherprops}\r\n                style={rootStyle}>\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                      onMouseLeave={e => setShowTooltip(false)}>{label}\r\n      </span>}\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                         onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n      </span>}\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n          <b className={'text-center text-capitalize'}>{field}</b>\r\n          <br />\r\n          <label>{tooltip}</label>\r\n      </div>}\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                       data-value={value}>{input}\r\n      </div> : input}\r\n  </label>);\r\n  */\n}\n_s(InputComponent, \"nlzZzFhpjnEHW6d8jEzTV191MA8=\", false, function () {\n  return [useStateIfMounted, useStateIfMounted];\n});\n_c = InputComponent;\nInputComponent.cname = 'InputComponent';\nexport function InputMapStateToProps(state, ownProps) {\n  var _ownProps$data;\n  const ret = {};\n  const pointer = typeof ownProps.data === 'string' ? ownProps.data : (_ownProps$data = ownProps.data) === null || _ownProps$data === void 0 ? void 0 : _ownProps$data.id;\n  ret.debugmodee = state.debug ? 'true' : 'false';\n  if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\n  return ret;\n}\n_c2 = InputMapStateToProps;\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const InputConnected = connect(InputMapStateToProps, mapDispatchToProps)(InputComponent);\nexport function Input(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Input;\nexport function TextArea(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"textarea\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 12\n  }, this);\n}\n_c4 = TextArea;\nexport function Select(props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(InputConnected, {\n    ...props,\n    children,\n    tag: \"select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 12\n  }, this);\n}\n_c5 = Select;\nexport const Edit = Input;\nInputComponent.cname = 'InputComponent';\nInputConnected.cname = 'InputConnected';\nInput.cname = 'Input';\nTextArea.cname = 'TextArea';\nSelect.cname = 'Select';\nEdit.cname = 'Edit';\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"InputMapStateToProps\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"TextArea\");\n$RefreshReg$(_c5, \"Select\");","map":{"version":3,"names":["React","useRef","connect","Defaults","Keystrokes","LPointerTargetable","U","useStateIfMounted","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","getSelectOptions","data","field","props","returns","primitives","classes","enumerators","objects","className","m2","instanceof","model","allSubObjects","m1modelid","id","instances","filter","o","enums","children","length","label","map","returnType","i","value","name","fileName","_jsxFileName","lineNumber","columnNumber","primitive","enumerator","classifier","options","InputComponent","_s","_data","getter","setter","oldValue","undefined","setValue","isTouched","setIsTouched","inputRef","readOnly","readonly","debugmodee","check","type","jsxLabel","tooltip","txt","css","hidden","autosize","isBoolean","includes","onChange","evt","target","checked","tag","onBlur","getValueFromEvent","onKeyDown","key","enter","escape","blur","innerText","newValue","otherprops","inputStyle","fromBoolString","cursor","inputProps","spellCheck","spellCkeck","inputClassName","join","style","input","rootprops","ref","oldref","v","current","oldreff","onMouseEnter","show","onMouseLeave","hide","rootkeys","Set","Object","keys","k","toUpperCase","_len","arguments","a","Array","_key","objectMergeInPlace","selectoptions","contentEditable","createElement","_c","cname","InputMapStateToProps","state","ownProps","_ownProps$data","ret","pointer","debug","fromPointer","_c2","mapDispatchToProps","dispatch","InputConnected","Input","_c3","TextArea","_c4","Select","_c5","Edit","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Input.tsx"],"sourcesContent":["import React, {Dispatch, KeyboardEvent, LegacyRef, ReactElement, ReactNode, useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {\r\n    Defaults,\r\n    DObject,\r\n    DPointerTargetable,\r\n    GObject,\r\n    Keystrokes, LAttribute,\r\n    LClass, LEnumerator, LModel, LObject,\r\n    LPointerTargetable, LReference, LValue,\r\n    Overlap,\r\n    Pointer, Selectors,\r\n    U\r\n} from '../../joiner';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './inputselect.scss';\r\nimport { Tooltip } from './Tooltip';\r\n\r\n\r\nexport function getSelectOptions(data: any, field: string, props: AllProps) {\r\n    let returns: LClass[] | undefined;\r\n    let primitives: LClass[] | undefined;\r\n    let classes: LClass[] | undefined;\r\n    let enumerators: LEnumerator[] | undefined;\r\n    let objects: LObject[] | undefined;\r\n    if ((field) === 'type') {\r\n        if (data) switch (data.className) {\r\n            case 'DValue':\r\n                let m2: LReference | LAttribute | undefined = (data as LValue).instanceof;\r\n                if (!m2) return (data as LValue).model.allSubObjects;\r\n                let m1modelid = data.model.id;\r\n                return m2.instances.filter( o => o.model.id === m1modelid);\r\n            case 'DAttribute': primitives = props.primitives; enumerators = data.enums; break;\r\n            case 'DReference': classes = data.classes; break;\r\n            case 'DOperation': primitives = props.primitives; classes = data.classes; enumerators = data.enums; returns = props.returns; break;\r\n            case 'DParameter': primitives = props.primitives; classes = data.classes; enumerators = data.enums;  break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(returns && returns.length > 0) && <optgroup label={'Defaults'}>\r\n                {returns.map((returnType, i) => {\r\n                    return <option key={i} value={returnType.id}>{returnType.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(primitives && primitives.length) && <optgroup label={'Primitives'}>\r\n                {primitives.map((primitive, i) => {\r\n                    return <option key={i} value={primitive.id}>{primitive.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(enumerators && enumerators.length > 0) && <optgroup label={'Enumerators'}>\r\n                {enumerators.map((enumerator, i) => {\r\n                    return <option key={i} value={enumerator.id}>{enumerator.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(classes && classes.length > 0) && <optgroup label={'Classes'}>\r\n                {classes.map((classifier, i) => {\r\n                    return <option key={i} value={classifier.id}>{classifier.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {(objects && objects.length > 0) && <optgroup label={'Classes'}>\r\n                {objects.map((classifier, i) => {\r\n                    return <option key={i} value={classifier.id}>{classifier.name}</option>\r\n                })}\r\n            </optgroup>}\r\n            {props.options}\r\n        </>);\r\n}\r\nexport function InputComponent(props: AllProps) {\r\n    const data = props.data;\r\n    const getter = props.getter;\r\n    const setter = props.setter;\r\n    const field: string = props.field as string;\r\n    const oldValue = (!data) ? undefined : (getter) ? getter(data, field) : data[field]; // !== undefined); ? data[field] : 'undefined'\r\n    const [value, setValue] = useStateIfMounted<string>(oldValue);\r\n    const [isTouched, setIsTouched] = useStateIfMounted(false);\r\n    const inputRef = useRef<Element | null>(null);\r\n\r\n    // I check if the value that I have in my local state is being edited by other <Input />\r\n    if (value !== oldValue && !isTouched){\r\n        setValue(oldValue);\r\n        setIsTouched(false);\r\n    }\r\n\r\n\r\n    if (!(data || (getter && setter))) return(<>Either props.data or both getter & setter are required.</>);\r\n    const readOnly = (props.readonly !== undefined) ? props.readonly : props.debugmodee !== 'true' && Defaults.check(data?.id);\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: ReactNode|undefined = props.jsxLabel || props.label;\r\n    let tooltip: ReactNode|string|undefined = ((props.tooltip === true) ? data?.['__info_of__' + field]?.txt : props.tooltip) || '';\r\n\r\n    let css = '';//'my-auto input ';\r\n    //css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type==='text'\r\n    css += autosize ? ' autosize-input' : '';\r\n    const isBoolean = (['checkbox', 'radio'].includes(type));\r\n\r\n\r\n    const onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (readOnly) return;\r\n        if (isBoolean) {\r\n            const target = evt.target.checked;\r\n            if (setter) setter(target, data, field);\r\n            else data[field] = target;\r\n            return;\r\n        }\r\n        if (props.tag === \"select\") {\r\n            onBlur(evt as any);\r\n        } else {\r\n            setValue(getValueFromEvent(evt));\r\n            setIsTouched(true);     // I'm editing the element in my local state.\r\n            // the actual set is done in onBlur\r\n        }\r\n    }\r\n    const onKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (evt.key === Keystrokes.enter) onBlur(evt as any);\r\n        if (evt.key === Keystrokes.escape) {\r\n            const oldValue = getter ? getter(data, field) : data[field];\r\n            (evt.target as HTMLInputElement).value = oldValue;\r\n            setValue(oldValue);\r\n            setIsTouched(false);\r\n            (evt.target as HTMLInputElement).blur();\r\n            // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\r\n            // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\r\n        }\r\n    }\r\n    const getValueFromEvent = (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) => {\r\n        switch (props.tag){\r\n            case \"textarea\": case \"input\": case \"select\": case \"\": case null: case \"undefined\": return evt.target.value;\r\n            default: return evt.target.innerText;\r\n        }\r\n    }\r\n\r\n    const onBlur = (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) => {\r\n        if (readOnly || isBoolean) return;\r\n        const newValue: string = getValueFromEvent(evt);\r\n        const oldValue = getter ? getter(data, field) : data[field];\r\n        if (newValue !== oldValue) {\r\n            if (setter) setter(newValue, data, field);\r\n            else data[field] = newValue;\r\n        }\r\n        // I terminate my editing, so I communicate it to other <Input /> that render the same field.\r\n        setIsTouched(false);\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.field;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.label;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.tooltip;\r\n    delete otherprops.hidden;\r\n    delete otherprops.inputStyle;\r\n    delete otherprops.children;\r\n    delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\r\n\r\n    let checked: boolean | undefined = undefined;\r\n    if (isBoolean) checked = typeof value === \"boolean\" ? value : (typeof value === \"string\" ? U.fromBoolString(value) : !!value);\r\n\r\n    let cursor: string;\r\n    if (tooltip) cursor = 'help';\r\n    else if (readOnly) cursor = 'not-allowed';\r\n    else if (isBoolean) cursor = 'pointer';\r\n    else cursor = 'auto';\r\n\r\n    let inputProps: GObject = { spellCheck: (props as any).spellCkeck || false, readOnly, type, value, checked,\r\n        className: [props.inputClassName, css].join(' '),\r\n        style: (props.inputStyle || {}),\r\n        onChange, onBlur, onKeyDown} // key:`${field}.${data?.id}`\r\n    if (!inputProps.style.cursor && cursor === 'not-allowed') { inputProps.style.cursor = cursor; }\r\n\r\n    let input: ReactNode;\r\n    let rootprops: GObject = {...otherprops};\r\n    switch (typeof rootprops.ref) {\r\n        default: rootprops.ref = inputRef; break;\r\n        case \"object\":\r\n            let oldref = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldref.current = inputRef.current = v; }\r\n            break;\r\n        case \"function\":\r\n            let oldreff = rootprops.ref;\r\n            rootprops.ref = (v: Element | null) => { oldreff(v); inputRef.current = v; }\r\n            break;\r\n    }\r\n    if (tooltip) {\r\n        rootprops.onMouseEnter = () => Tooltip.show(tooltip, true, (rootprops.ref));\r\n        rootprops.onMouseLeave = () => Tooltip.hide();\r\n    }\r\n    let rootkeys = new Set(...Object.keys(rootprops));\r\n    //  merge events: ltodo: might want to distinguish which events are merged between root and input and which not.\r\n    //  onChange surely needs merge. onMouseHover might not to let it trigger on label too.\r\n    for (let k of rootkeys) {\r\n        if (!(k[0] === 'o' && k[1] === 'n' && k[2] && k[2].toUpperCase() === k[2])) continue;\r\n        if (inputProps[k]) inputProps[k] = function(...a:any) { inputProps[k](arguments); rootprops[k](arguments); }\r\n        else inputProps[k] = rootprops[k];\r\n        delete rootprops[k];\r\n    }\r\n    if (!label && !autosize) {\r\n        if (rootprops.className) inputProps.className = rootprops.className + ' ' + inputProps.className;\r\n        if (rootprops.style) U.objectMergeInPlace(inputProps.style, rootprops.style);\r\n        inputProps = {...rootprops, ...inputProps};\r\n        switch (props.tag){\r\n            case \"textarea\": return <textarea {...inputProps}>{inputProps.value}</textarea>;\r\n            case \"select\": return <select {...inputProps}>{selectoptions}</select>;\r\n            case null: case undefined: case \"\": case \"input\": return <input {...inputProps} />;\r\n            default:\r\n                inputProps.contentEditable = inputProps.contentEditable !== false;\r\n                return React.createElement(props.tag, inputProps, props.children);\r\n        }\r\n    }\r\n    if (autosize) rootprops.className = (rootprops.className || '') + ' autosize-input-container';\r\n\r\n    switch (props.tag){\r\n        case \"textarea\": input = <textarea {...inputProps}>{inputProps.value}</textarea>; break;\r\n        case \"select\": input = <select {...inputProps}>{selectoptions}</select>; break;\r\n        case null: case undefined: case \"\": case \"input\": input = <input {...inputProps} />; break;\r\n        default:\r\n            inputProps.contentEditable = inputProps.contentEditable !== false;\r\n            input = React.createElement(props.tag, inputProps, props.children); break;\r\n    }\r\n\r\n    return <label {...rootprops}>{label || undefined}{input}</label>;\r\n    /*\r\n    return(<label className={'p-1'} {...otherprops}\r\n                  style={rootStyle}>\r\n\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                        onMouseLeave={e => setShowTooltip(false)}>{label}\r\n        </span>}\r\n\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                           onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n        </span>}\r\n\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n            <b className={'text-center text-capitalize'}>{field}</b>\r\n            <br />\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                         data-value={value}>{input}\r\n        </div> : input}\r\n    </label>);\r\n    */\r\n}\r\n\r\nInputComponent.cname = 'InputComponent';\r\nexport interface InputOwnProps {\r\n    data?: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field?: string;\r\n    // DANGER: use the data provided in parameters instead of using js closure, as the proxy accessed from using closure won't be updated in rerenders.\r\n    getter?: (data: any/*LPointerTargetable*/, field: string) => string | boolean | undefined;\r\n    setter?: (value: string|boolean, data: any, field: string) => void;\r\n    label?: string | ReactNode;\r\n    jsxLabel?: ReactNode; // @deprecated, use label\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n    'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    className?: string;\r\n    style?: GObject;\r\n    readonly?: boolean;\r\n    tooltip?: boolean | ReactNode;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    key?: React.Key | null;\r\n    placeholder?: string;\r\n    tag?: string;\r\n    children?: ReactNode;\r\n    // todo: div contenteditable\r\n}\r\n\r\nexport interface SelectOwnProps extends InputOwnProps {\r\n    options?: JSX.Element;\r\n}\r\n\r\ninterface StateProps {\r\n    debugmodee: string;\r\n    data: LPointerTargetable & GObject;\r\n    // selected: Dictionary<Pointer<DUser>, LModelElement | null>;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<SelectOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nexport function InputMapStateToProps(state: DState, ownProps: SelectOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer | undefined = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data?.id;\r\n    ret.debugmodee = state.debug ? 'true' : 'false';\r\n    if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const InputConnected =\r\n    connect<StateProps, DispatchProps, SelectOwnProps, DState>(InputMapStateToProps, mapDispatchToProps)(InputComponent);\r\n\r\n\r\nexport function Input(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children}} />;\r\n}\r\nexport function TextArea(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"textarea\"}} />;\r\n}\r\nexport function Select(props: SelectOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children, tag:\"select\"}} />;\r\n}\r\nexport const Edit = Input;\r\n\r\nInputComponent.cname = 'InputComponent';\r\nInputConnected.cname = 'InputConnected';\r\nInput.cname = 'Input';\r\nTextArea.cname = 'TextArea';\r\nSelect.cname = 'Select';\r\nEdit.cname = 'Edit';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}