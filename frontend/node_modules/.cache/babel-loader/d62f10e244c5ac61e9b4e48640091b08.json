{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\rightbar\\\\viewsEditor\\\\data\\\\NodeData.tsx\";\nimport React from 'react';\nimport { Input, LPointerTargetable } from '../../../../joiner';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NodeDataComponent(props) {\n  const view = props.view;\n  let dview = view.__raw || view;\n  const readOnly = props.readonly;\n  /*\r\n      const objectTypes = [\"\", \"DModel\", \"DPackage\", \"DEnumerator\", \"DEnumLiteral\", \"DClass\", \"DAttribute\", \"DReference\", \"DOperation\", \"DParameter\", \"DObject\", \"DValue\", \"DStructuralFeature\"];\r\n  \r\n      const classesOptions = <optgroup label={\"Object type\"}>\r\n          {objectTypes.map((o)=><option key={o} value={o}>{o.length ? o.substring(1) : \"anything\"}</option>)}\r\n      </optgroup>;*/\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: 'p-3',\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Vertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"storeSize\",\n      label: \"Store Size in view\",\n      readonly: readOnly,\n      tooltip: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"On - The node position depends from the view currently displayed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 83\n        }, this), \"Off - It depends from the graph.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this),\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)\n    /* on = EuseSizeFrom.nv,   off = EuseSizeFrom.n */, /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"lazySizeUpdate\",\n      label: \"Lazy Update\",\n      type: \"checkbox\",\n      tooltip: true,\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"adaptWidth\",\n      label: \"Adapt Width\",\n      type: \"checkbox\",\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"adaptHeight\",\n      label: \"Adapt Height\",\n      type: \"checkbox\",\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"draggable\",\n      label: \"Draggable\",\n      type: \"checkbox\",\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: view,\n      field: \"resizable\",\n      label: \"Resizable\",\n      type: \"checkbox\",\n      readonly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      children: [!dview.adaptWidth && /*#__PURE__*/_jsxDEV(Input, {\n        data: view,\n        label: \"Default Width\",\n        type: \"number\",\n        readonly: readOnly,\n        getter: () => '' + view.defaultVSize.w,\n        setter: val => view.defaultVSize = {\n          w: +val\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this), !dview.adaptHeight && /*#__PURE__*/_jsxDEV(Input, {\n        data: view,\n        label: \"Default Height\",\n        type: \"number\",\n        readonly: readOnly,\n        getter: () => '' + view.defaultVSize.h,\n        setter: val => view.defaultVSize = {\n          h: +val\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 35\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n_c = NodeDataComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const NodeData = connect(mapStateToProps, mapDispatchToProps)(NodeDataComponent);\nexport default NodeData;\nvar _c;\n$RefreshReg$(_c, \"NodeDataComponent\");","map":{"version":3,"names":["React","Input","LPointerTargetable","connect","jsxDEV","_jsxDEV","NodeDataComponent","props","view","dview","__raw","readOnly","readonly","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","field","label","tooltip","type","adaptWidth","getter","defaultVSize","w","setter","val","adaptHeight","h","_c","mapStateToProps","state","ownProps","ret","fromPointer","viewID","mapDispatchToProps","dispatch","NodeData","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/rightbar/viewsEditor/data/NodeData.tsx"],"sourcesContent":["import React, {Dispatch} from 'react';\r\nimport {\r\n    LViewElement,\r\n    Input,\r\n    SetFieldAction,\r\n    TextArea,\r\n    Pointer,\r\n    DViewElement,\r\n    DState,\r\n    LPointerTargetable\r\n} from '../../../../joiner';\r\nimport {FakeStateProps} from \"../../../../joiner/types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction NodeDataComponent(props: AllProps) {\r\n    const view = props.view;\r\n    let dview = (view.__raw || view) as DViewElement;\r\n    const readOnly = props.readonly;\r\n/*\r\n    const objectTypes = [\"\", \"DModel\", \"DPackage\", \"DEnumerator\", \"DEnumLiteral\", \"DClass\", \"DAttribute\", \"DReference\", \"DOperation\", \"DParameter\", \"DObject\", \"DValue\", \"DStructuralFeature\"];\r\n\r\n    const classesOptions = <optgroup label={\"Object type\"}>\r\n        {objectTypes.map((o)=><option key={o} value={o}>{o.length ? o.substring(1) : \"anything\"}</option>)}\r\n    </optgroup>;*/\r\n\r\n    return(<section className={'p-3'}>\r\n        {/*<Select obj={view} field={\"useSizeFrom\"} readonly={readOnly} options={\r\n            <optgroup label=\"Node position depends from what?\">\r\n                <option value={EuseSizeFrom.nv}>Node & View: Will change his position when the view or graph changes</option>\r\n                <option value={EuseSizeFrom.n}>Node only: Will keep his position when view changes, but not when the graph is changed</option>\r\n                <option value={EuseSizeFrom.m}>Model: Will keep his position regardless of view or graph applied, but cannot represent the same model fragment with two different nodes</option>\r\n            </optgroup>\r\n        } tooltip={ \"Node & View: Will change his position when the view or graph changes.\\n\" +\r\n                    \"Node only: Will keep his position when view changes, but not when the graph is changed.\\n\"+\r\n                    \"Model: Will keep his position regardless of view or graph applied, but cannot represent the same model fragment with two different nodes.\"\r\n        }></Select>*/}\r\n\r\n        {/*[<Input data={view} field={\"scalezoomx\"} label={\"Zoom X\"} type={\"number\"}/>,                <Input data={view} field={\"scalezoomy\"} label={\"Zoom Y\"} type={\"number\"}/>]*/}\r\n\r\n        <h5>Vertex</h5>\r\n        {<Input data={view} field={\"storeSize\"} label={\"Store Size in view\"} readonly={readOnly}  tooltip={\r\n            <div>On - The node position depends from the view currently displayed.<br/>Off - It depends from the graph.</div>} type={\"checkbox\"} />\r\n            /* on = EuseSizeFrom.nv,   off = EuseSizeFrom.n */\r\n        }\r\n        <Input data={view} field={\"lazySizeUpdate\"} label={\"Lazy Update\"} type={\"checkbox\"} tooltip={true} readonly={readOnly} />\r\n\r\n        <Input data={view} field={\"adaptWidth\"} label={\"Adapt Width\"} type={\"checkbox\"} readonly={readOnly} />\r\n        <Input data={view} field={\"adaptHeight\"} label={\"Adapt Height\"} type={\"checkbox\"} readonly={readOnly} />\r\n        <Input data={view} field={\"draggable\"} label={\"Draggable\"} type={\"checkbox\"} readonly={readOnly} />\r\n        <Input data={view} field={\"resizable\"} label={\"Resizable\"} type={\"checkbox\"} readonly={readOnly} />\r\n        <div className={\"w-100\"}>{[\r\n            !dview.adaptWidth && <Input data={view} label={\"Default Width\"} type={\"number\"} readonly={readOnly}\r\n                                        getter={()=>''+view.defaultVSize.w} setter={(val) => view.defaultVSize = {w:+val} as any}/>,\r\n            !dview.adaptHeight && <Input data={view} label={\"Default Height\"} type={\"number\"} readonly={readOnly}\r\n                                         getter={()=>''+view.defaultVSize.h} setter={(val) => view.defaultVSize = {h:+val} as any} />\r\n        ]}</div>\r\n\r\n\r\n    </section>);\r\n}\r\n\r\ninterface OwnProps {\r\n    viewID: Pointer<DViewElement>;\r\n    readonly : boolean;\r\n}\r\n\r\ninterface StateProps {\r\n    view: LViewElement;\r\n}\r\n\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.view = LPointerTargetable.fromPointer(ownProps.viewID);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const NodeData = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NodeDataComponent);\r\n\r\nexport default NodeData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}