{"ast":null,"code":"import React from'react';import{Log}from\"../../joiner\";import{useStateIfMounted}from\"use-state-if-mounted\";import\"./FunctionComponent.scss\";import{CommandBar,Btn,Sep}from'../commandbar/CommandBar';/*\r\n Rationale behind this:\r\n To do this properly, one would need a complete js parser to make sure comments, ifs, loops, newlines,\r\n   expressions inside array indexing for objects... are all correctly parsed.\r\n\r\n\r\n Instead, to make it faster, i'm forcing the valid \"function string\" value to hold a much more definite structure\r\n   for which i can do an extremely simpler inline parser.\r\n The getter and setter properties and the interface, are making sure the user cannot write a \"function string\"\r\n   not respecting my format, and that it is as much turing-complete as javascript is.\r\n\r\n legenda:\r\n  - ALL_CAPS identifiers, are not literals and the user can change their names.\r\n  - Newlines are included in the format, spaces are not.\r\n  - ... are explaining the format and are not part of it.\r\n  - // **   ** // Styled comments ARE part of the format.\r\n  - Excess spaces in the format are not preserved (might be added/removed by getter/setter), but not mandatory and not relevant.\r\n\r\n my structure is:\r\n (OBJECT_NAME)=> {\\n\r\n   STATEMENT_A1\r\n   STATEMENT_A2\r\n   ...\r\n   STATEMENT_AN\r\n   \\n// ** declarations here ** //\\n\r\n   OBJECT_NAME.IDENTIFIER_1 = STATEMENT_1;\\n\r\n   OBJECT_NAME.IDENTIFIER_2 = STATEMENT_2;\\n\r\n   ...\r\n   OBJECT_NAME.IDENTIFIER_N = STATEMENT_N;\\n\r\n }\r\n */import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const minimalTextareaValue='(ret)=>{\\n';function parseFunction(props){Log.exDev(!props.data,\"FunctionComponent: missing data props\",{props});let getter=props.getter||(a=>a[props.field]);// ((lobj: GObject<LPointerTargetable>, key: string) => U.wrapUserFunction(lobj[key]));\nlet val=getter(props.data);if(!val||val.length<=2)val=\"(ret)=>{\\n    // ** declarations here ** //\\n\\n}\";// fallback for empty string and {}\nelse val=val.trim();let txtparts=val.split(\"// ** declarations here ** //\");if(txtparts.length!==2){Log.eDevv(\"cannot find declaration section\",{val,props});txtparts=[val.substring(0,val.length-1),val.substring(val.length-1)];}let declarations=(txtparts[1]||'').split(\"\\n\");let stateArrayValues=[];let textAreaState={v:txtparts[0]};let i=-1;for(let dec of declarations){let splitindex=dec.indexOf(\"=\");if(splitindex===-1)continue;// for ending \\n} line\ni++;// don't loop by i, the index ending in state must increase only for non-empty rows filtering them out.\nlet expression=dec.substring(splitindex+1);let identifier=dec.substring(0,splitindex);let idsplitindex=identifier.indexOf(\".\");let identifierPrefix=identifier.substring(0,idsplitindex);let identifierName=identifier.substring(idsplitindex+1);stateArrayValues.push({index:i,key:i,id:{prefix:identifierPrefix,value:identifierName.trim(),line:i,startindex:idsplitindex,endindex:splitindex},exp:{value:expression.trim(),line:i,startindex:splitindex,endindex:-1}});}return{advancedMode:!!props.advancedMode,collapsed:props.collapsed===!!props.collapsed,ta:textAreaState,arr:stateArrayValues};}// event listing start\n// it's not on purpose, but this function is a candidate for obscure code context XD\nfunction addClick(v,set){var _v$arr$index,_v$arr,_v$arr$key,_v$arr2,_v$arr$;let lasti=((_v$arr$index=(_v$arr=v.arr[v.arr.length-1])===null||_v$arr===void 0?void 0:_v$arr.index)!==null&&_v$arr$index!==void 0?_v$arr$index:-1)+1;let lastk=((_v$arr$key=(_v$arr2=v.arr[v.arr.length-1])===null||_v$arr2===void 0?void 0:_v$arr2.key)!==null&&_v$arr$key!==void 0?_v$arr$key:-1)+1;set({...v,arr:[...v.arr,{index:lasti,key:lastk,id:{prefix:((_v$arr$=v.arr[0])===null||_v$arr$===void 0?void 0:_v$arr$.id.prefix)||\"ret\",value:\"\"},exp:{value:\"\"}}]});}// function fixIndex(i: number, rows: RowData[]): number{ for (let row of rows) if (row.index === ) }\nfunction deleteClick(v0,set,i,props,row){// do i really need to shallow copy nested objects too? it should not be necessary\nlet v={...v0};//, arr:[...v0.arr]};\n/// problem: deleting an element in the middle invalidetes the row.index values\n/// solution 1: update the row.index values, move the rect key to a different field that is initial = index, but never changes.\n/// implemented\nv.arr.splice(i,1);for(;i<v.arr.length;i++)v.arr[i].index=i;/// solution 2: keep original indexes, use a fixIndex function to map the index in html (without holes) to index in row structure (with holes).\n///  discareded\nset(v);onBlur(v,set,props,undefined,true);}function expressionChange(e,i,v,set){v={...v,arr:[...v.arr]};v.arr[i]={...v.arr[i],isDirty:true,exp:{...v.arr[i].exp,value:e.currentTarget.value}};set(v);}function identifierChange(e,i,v,set){let nv=e.currentTarget.value;v={...v,arr:[...v.arr]};v.arr[i]={...v.arr[i],isDirty:true,// empty string is fine, as long value is empty too the entire row is ignored. but identifiers cannot start with a number are not allowed.\nid:{...v.arr[i].id,value:isNaN(+nv[0])?nv:\"A\"+nv}};set(v);}function textAreaChange(e,v,set){set({...v,ta:{v:e.currentTarget.value,isDirty:true}});}function onBlur(v,set,props,i,isDelete){if(isDelete){// force update without checking dirty (the row is not present anymore)\n}// problem: this might be called before the onChange setState() actually edits the state, so it finds isDirty false or even a non-yet existing index\n// for now i will just hope the user is not typing and blurring extra fast, i don't think a simple solution exists\nelse if(i!==undefined){var _v$arr$i;if(!((_v$arr$i=v.arr[i])===null||_v$arr$i===void 0?void 0:_v$arr$i.isDirty))return;v={...v,arr:[...v.arr]};v.arr[i]={...v.arr[i],isDirty:false};set(v);}else{if(!v.ta.isDirty)return;set({...v,ta:{v:v.ta.v,isDirty:false}});}updateFunctionValue(props,v.ta.v,v.arr);}function updateFunctionValue(props,textAreaContent,stateArrayValues){let declarations=stateArrayValues.map(o=>o.id.value&&o.exp.value?o.id.prefix+\".\"+o.id.value+\" = \"+o.exp.value:'');let setter=props.setter||(v=>props.data[props.field]=v);setter(textAreaContent+\"\\n// ** declarations here ** //\\n\"+declarations.filter(d=>!!d).join(\"\\n\")+\"\\n}\");}// event listing end\nfunction FunctionComponent(props){var _ref;// if (false) return asTextArea(props) // i gave up\nconst[state,setState]=useStateIfMounted(parseFunction(props));const[showTooltip,setShowTooltip]=useStateIfMounted(false);// if (!props.data) return <></>;\nlet advancedMode=state.advancedMode,readOnly=props.readonly;// (props.readonly !== undefined) ? props.readonly : !props.debugMode && props.data.id.indexOf(\"Pointer_View\") !== -1;\n// NB: could be heavily optimized by cutting the original string with indexes and substring,\n// but it is a function called too rarely and not impactful on overall performances\nlet tooltip=props.tooltip===true?(_ref=props.data['__info_of__'+props.field])===null||_ref===void 0?void 0:_ref.txt:props.tooltip;// JSX building start\nlet inputs=[];// console.log(\"funccomp\", {stateArrayValues, textAreaState, props});\nfor(let row of state.arr){inputs.push(/*#__PURE__*/_jsxs(\"label\",{className:\"d-flex template-item\"+(advancedMode?\"\":\" my-1\"),\"data-key\":row.index,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"my-auto detailedMode\",children:[row.id.prefix,\".\"]}),/*#__PURE__*/_jsx(\"input\",{className:\"my-auto input\",placeholder:\"identifier\",value:row.id.value,disabled:readOnly,tabIndex:row.index*2,onInput:e=>identifierChange(e,row.index,state,setState),onBlur:e=>!readOnly&&onBlur(state,setState,props,row.index),style:{width:'30%'}}),/*#__PURE__*/_jsx(\"span\",{className:\"my-auto mx-1 simpleMode\",style:{paddingRight:'6px',paddingLeft:'6px'},children:/*#__PURE__*/_jsx(\"i\",{style:{fontSize:'1.2em'},className:\"bi bi-arrow-left-square\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"my-auto mx-1 detailedMode\",children:\"=\"}),\" \",/*#__PURE__*/_jsx(\"input\",{className:\"my-auto input\",placeholder:\"expression\",value:row.exp.value,disabled:readOnly,tabIndex:row.index*2+1,onInput:e=>expressionChange(e,row.index,state,setState),onBlur:e=>!readOnly&&onBlur(state,setState,props,row.index),style:{marginRight:'6px'}}),/*#__PURE__*/_jsx(\"span\",{className:\"my-auto detailedMode\",children:\";\"}),/*#__PURE__*/_jsx(CommandBar,{style:{paddingTop:'10px'},children:/*#__PURE__*/_jsx(Btn,{icon:'delete',tip:'Delete',action:()=>!readOnly&&deleteClick(state,setState,row.index,props,row)})})]},row.index));}let transitionTime=300;return/*#__PURE__*/_jsxs(\"div\",{className:\"function-editor-root\",\"data-mode\":advancedMode?\"detailedMode\":\"simpleMode\",style:{fontSize:\"0.9rem\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex w-100 function-editor-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"function-editor-label\",children:[props.jsxLabel,/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'0.8em',paddingBottom:'0px'},children:props.payoff})]}),/*#__PURE__*/_jsx(CommandBar,{style:{marginLeft:'auto'},children:!state.collapsed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Btn,{icon:'add',action:()=>!readOnly&&addClick(state,setState),tip:'Add new constant'}),/*#__PURE__*/_jsx(Sep,{}),showTooltip?/*#__PURE__*/_jsx(Btn,{icon:'info',action:()=>{setShowTooltip(false);},tip:'Hide information',mode:'negative'}):/*#__PURE__*/_jsx(Btn,{icon:'info',action:()=>{setShowTooltip(true);},tip:'Show information'}),advancedMode?/*#__PURE__*/_jsx(Btn,{icon:'settings',action:()=>setState({...state,advancedMode:!state.advancedMode}),tip:'Close advanced mode',mode:'negative'}):/*#__PURE__*/_jsx(Btn,{icon:'settings',action:()=>setState({...state,advancedMode:!state.advancedMode}),tip:'Open advanced mode'}),/*#__PURE__*/_jsx(Sep,{}),/*#__PURE__*/_jsx(Btn,{icon:'open-down',action:()=>setState({...state,collapsed:!state.collapsed}),tip:'Hide definitions'})]}):/*#__PURE__*/_jsx(Btn,{icon:'close-up',action:()=>setState({...state,collapsed:!state.collapsed}),tip:'Show definitions'})})]}),tooltip&&showTooltip&&/*#__PURE__*/_jsx(\"div\",{className:'my-tooltip',style:{marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"label\",{children:tooltip})}),/*#__PURE__*/_jsxs(\"div\",{className:\"collapsable-section\"+(state.collapsed?\"collapsed\":\"expanded\"),\"data-comment\":\"collapsable-section\",style:{/*\r\n                transition: transitionTime + \"ms all\", // transformOrigin: \"top\", transform: \"rotateX(\"+(state.collapsed ? 0 : 90 )+\"deg)\",\r\n                transform: \"scaleY(\"+(state.collapsed ? 0 : 1 )+\") \",\r\n                transformOrigin: \"top\",\r\n                overflow:\"hidden\"*/},children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"detailedMode input w-100\",disabled:readOnly,rows:Math.min(10,state.ta.v.split(\"\\n\").length),onInput:e=>textAreaChange(e,state,setState),onBlur:e=>!readOnly&&onBlur(state,setState,props),\"data-txtcontent\":state.ta.v,value:state.ta.v}),inputs,false&&/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:\"pre\"},children:props.data[props.field]})]})]});}/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n  return ownProps;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const FunctionConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FunctionComponent);\r\n*/ // export const Function = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => (<FunctionConnected {...{...props, children}} />);\nexport const Function=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(FunctionComponent,{...props,children,tooltip:true});};Function.cname=\"FunctionComponent\";// FunctionConnected.cname = \"FunctionComponent_Connected\";\nFunctionComponent.cname=\"FunctionComponent_Disconnected\";","map":{"version":3,"names":["React","Log","useStateIfMounted","CommandBar","Btn","Sep","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","minimalTextareaValue","parseFunction","props","exDev","data","getter","a","field","val","length","trim","txtparts","split","eDevv","substring","declarations","stateArrayValues","textAreaState","v","i","dec","splitindex","indexOf","expression","identifier","idsplitindex","identifierPrefix","identifierName","push","index","key","id","prefix","value","line","startindex","endindex","exp","advancedMode","collapsed","ta","arr","addClick","set","_v$arr$index","_v$arr","_v$arr$key","_v$arr2","_v$arr$","lasti","lastk","deleteClick","v0","row","splice","onBlur","undefined","expressionChange","e","isDirty","currentTarget","identifierChange","nv","isNaN","textAreaChange","isDelete","_v$arr$i","updateFunctionValue","textAreaContent","map","o","setter","filter","d","join","FunctionComponent","_ref","state","setState","showTooltip","setShowTooltip","readOnly","readonly","tooltip","txt","inputs","className","children","placeholder","disabled","tabIndex","onInput","style","width","paddingRight","paddingLeft","fontSize","marginRight","paddingTop","icon","tip","action","transitionTime","jsxLabel","paddingBottom","payoff","marginLeft","mode","marginBottom","rows","Math","min","whiteSpace","Function","arguments","cname"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/forEndUser/FunctionComponent.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, ReactNode, useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport type {Dictionary, DocString, GObject, DState, LViewElement, Pointer, Info} from \"../../joiner\";\r\nimport {Log, LPointerTargetable, U} from \"../../joiner\";\r\nimport {useStateIfMounted} from \"use-state-if-mounted\";\r\nimport {stringify} from \"querystring\";\r\nimport \"./FunctionComponent.scss\";\r\nimport { CommandBar, Btn, Sep } from '../commandbar/CommandBar';\r\nimport { Tooltip } from './Tooltip';\r\n\r\n/*\r\n Rationale behind this:\r\n To do this properly, one would need a complete js parser to make sure comments, ifs, loops, newlines,\r\n   expressions inside array indexing for objects... are all correctly parsed.\r\n\r\n\r\n Instead, to make it faster, i'm forcing the valid \"function string\" value to hold a much more definite structure\r\n   for which i can do an extremely simpler inline parser.\r\n The getter and setter properties and the interface, are making sure the user cannot write a \"function string\"\r\n   not respecting my format, and that it is as much turing-complete as javascript is.\r\n\r\n legenda:\r\n  - ALL_CAPS identifiers, are not literals and the user can change their names.\r\n  - Newlines are included in the format, spaces are not.\r\n  - ... are explaining the format and are not part of it.\r\n  - // **   ** // Styled comments ARE part of the format.\r\n  - Excess spaces in the format are not preserved (might be added/removed by getter/setter), but not mandatory and not relevant.\r\n\r\n my structure is:\r\n (OBJECT_NAME)=> {\\n\r\n   STATEMENT_A1\r\n   STATEMENT_A2\r\n   ...\r\n   STATEMENT_AN\r\n   \\n// ** declarations here ** //\\n\r\n   OBJECT_NAME.IDENTIFIER_1 = STATEMENT_1;\\n\r\n   OBJECT_NAME.IDENTIFIER_2 = STATEMENT_2;\\n\r\n   ...\r\n   OBJECT_NAME.IDENTIFIER_N = STATEMENT_N;\\n\r\n }\r\n */\r\n\r\ntype StrPos = {value: string, line?: number, startindex?: number, endindex?: number};\r\ntype RowData = {index: number; key: number, id: StrPos & { prefix: string }; exp: StrPos, isDirty?: boolean};\r\ntype TextAreaState = {v:string, isDirty?: boolean};\r\ntype FunctionComponentState = {advancedMode: boolean, collapsed: boolean, ta: TextAreaState, arr: RowData[]};\r\ntype SetState = (value: FunctionComponentState)=>void;\r\nconst minimalTextareaValue = '(ret)=>{\\n';\r\n\r\nfunction parseFunction(props: AllProps): FunctionComponentState {\r\n    Log.exDev(!props.data, \"FunctionComponent: missing data props\", {props});\r\n    let getter = props.getter || ((a: GObject) => a[props.field]); // ((lobj: GObject<LPointerTargetable>, key: string) => U.wrapUserFunction(lobj[key]));\r\n    let val: string = getter(props.data);\r\n    if (!val || val.length <= 2) val = \"(ret)=>{\\n    // ** declarations here ** //\\n\\n}\"; // fallback for empty string and {}\r\n    else val = val.trim();\r\n    let txtparts = val.split(\"// ** declarations here ** //\");\r\n    if (txtparts.length !== 2) {\r\n        Log.eDevv(\"cannot find declaration section\", {val, props});\r\n        txtparts = [val.substring(0, val.length-1), val.substring(val.length-1)];\r\n    }\r\n    let declarations: string[] = (txtparts[1] || '').split(\"\\n\");\r\n    let stateArrayValues: RowData[] = [];\r\n    let textAreaState: TextAreaState = {v: txtparts[0]};\r\n    let i: number = -1;\r\n    for (let dec of declarations) {\r\n        let splitindex = dec.indexOf(\"=\");\r\n        if (splitindex === -1) continue; // for ending \\n} line\r\n        i++; // don't loop by i, the index ending in state must increase only for non-empty rows filtering them out.\r\n        let expression = dec.substring(splitindex+1);\r\n        let identifier = dec.substring(0, splitindex);\r\n        let idsplitindex = identifier.indexOf(\".\");\r\n        let identifierPrefix = identifier.substring(0, idsplitindex);\r\n        let identifierName = identifier.substring(idsplitindex+1);\r\n        stateArrayValues.push({\r\n            index: i,\r\n            key: i,\r\n            id: {prefix: identifierPrefix, value: identifierName.trim(), line: i, startindex: idsplitindex, endindex: splitindex},\r\n            exp:{                          value: expression.trim(),     line: i, startindex: splitindex,   endindex: -1}\r\n        });\r\n    }\r\n    return {advancedMode: !!props.advancedMode, collapsed: props.collapsed === !!props.collapsed, ta: textAreaState, arr:stateArrayValues};\r\n}\r\n\r\n// event listing start\r\n// it's not on purpose, but this function is a candidate for obscure code context XD\r\nfunction addClick(v: FunctionComponentState, set: SetState): void {\r\n    let lasti: number = (v.arr[v.arr.length-1]?.index ?? -1) +1;\r\n    let lastk: number = (v.arr[v.arr.length-1]?.key ?? -1) +1;\r\n    set({...v, arr: [...v.arr, {index: lasti, key: lastk,\r\n            id: {prefix: v.arr[0]?.id.prefix || \"ret\", value: \"\"},\r\n            exp: {value: \"\"} }]\r\n    });\r\n}\r\n\r\n// function fixIndex(i: number, rows: RowData[]): number{ for (let row of rows) if (row.index === ) }\r\nfunction deleteClick(v0: FunctionComponentState, set: SetState, i: number, props: AllProps, row:RowData): void {\r\n    // do i really need to shallow copy nested objects too? it should not be necessary\r\n    let v = {...v0} //, arr:[...v0.arr]};\r\n    /// problem: deleting an element in the middle invalidetes the row.index values\r\n    /// solution 1: update the row.index values, move the rect key to a different field that is initial = index, but never changes.\r\n    /// implemented\r\n    v.arr.splice(i, 1);\r\n    for (; i < v.arr.length; i++) v.arr[i].index = i;\r\n    /// solution 2: keep original indexes, use a fixIndex function to map the index in html (without holes) to index in row structure (with holes).\r\n    ///  discareded\r\n\r\n    set(v);\r\n    onBlur(v, set, props, undefined, true);\r\n}\r\n\r\nfunction expressionChange(e: React.FormEvent<HTMLInputElement>, i: number, v: FunctionComponentState, set: SetState): void {\r\n    v = {...v, arr:[...v.arr]};\r\n    v.arr[i] = {\r\n        ...v.arr[i],\r\n        isDirty: true,\r\n        exp: {...v.arr[i].exp, value: e.currentTarget.value}\r\n    };\r\n    set(v);\r\n}\r\n\r\nfunction identifierChange(e: React.FormEvent<HTMLInputElement>, i: number, v: FunctionComponentState, set: SetState): void {\r\n    let nv = e.currentTarget.value;\r\n    v = {...v, arr:[...v.arr]};\r\n    v.arr[i] = {\r\n        ...v.arr[i],\r\n        isDirty: true,\r\n        // empty string is fine, as long value is empty too the entire row is ignored. but identifiers cannot start with a number are not allowed.\r\n        id: {...v.arr[i].id, value: isNaN(+nv[0]) ? nv : \"A\" + nv}\r\n    };\r\n    set(v);\r\n}\r\n\r\nfunction textAreaChange(e: React.FormEvent<HTMLTextAreaElement>, v: FunctionComponentState, set: SetState): void {\r\n    set({...v, ta: {v:e.currentTarget.value, isDirty: true} });\r\n}\r\n\r\nfunction onBlur(v: FunctionComponentState, set: SetState, props: AllProps, i?: number, isDelete?: boolean) {\r\n    if (isDelete) {\r\n        // force update without checking dirty (the row is not present anymore)\r\n    }\r\n    // problem: this might be called before the onChange setState() actually edits the state, so it finds isDirty false or even a non-yet existing index\r\n        // for now i will just hope the user is not typing and blurring extra fast, i don't think a simple solution exists\r\n    else if (i !== undefined) {\r\n        if (!v.arr[i]?.isDirty) return;\r\n        v = {...v, arr:[...v.arr]};\r\n        v.arr[i] = {\r\n            ...v.arr[i],\r\n            isDirty: false,\r\n        };\r\n        set(v);\r\n    }\r\n    else {\r\n        if (!v.ta.isDirty) return;\r\n        set({...v, ta: {v: v.ta.v, isDirty: false} });\r\n    }\r\n    updateFunctionValue(props, v.ta.v, v.arr);\r\n}\r\n\r\nfunction updateFunctionValue(props: AllProps, textAreaContent: string, stateArrayValues: RowData[]){\r\n    let declarations: string[] = stateArrayValues.map( o => o.id.value && o.exp.value ? o.id.prefix + \".\" + o.id.value + \" = \" + o.exp.value : '');\r\n    let setter = props.setter || ((v: string) => (props.data as GObject)[props.field] = v);\r\n    setter(textAreaContent + \"\\n// ** declarations here ** //\\n\" + declarations.filter(d=>!!d).join(\"\\n\") + \"\\n}\")\r\n}\r\n// event listing end\r\n\r\nfunction FunctionComponent(props: AllProps) {\r\n    // if (false) return asTextArea(props) // i gave up\r\n    const [state, setState] = useStateIfMounted(parseFunction(props));\r\n    const [showTooltip, setShowTooltip] = useStateIfMounted(false);\r\n    // if (!props.data) return <></>;\r\n    let advancedMode: boolean = state.advancedMode,\r\n        readOnly = props.readonly; // (props.readonly !== undefined) ? props.readonly : !props.debugMode && props.data.id.indexOf(\"Pointer_View\") !== -1;\r\n\r\n    // NB: could be heavily optimized by cutting the original string with indexes and substring,\r\n    // but it is a function called too rarely and not impactful on overall performances\r\n\r\n    let tooltip: string|undefined | ReactNode = (props.tooltip === true) ? (props.data as GObject)['__info_of__' + props.field]?.txt : props.tooltip;\r\n\r\n\r\n    // JSX building start\r\n    let inputs: JSX.Element[] = [];\r\n    // console.log(\"funccomp\", {stateArrayValues, textAreaState, props});\r\n\r\n\r\n    for (let row of state.arr) {\r\n        inputs.push(<label className={\"d-flex template-item\" + (advancedMode ? \"\" : \" my-1\")} key={row.index} data-key={row.index}>\r\n            <span className={\"my-auto detailedMode\"}>{row.id.prefix}.</span>\r\n            <input className={\"my-auto input\"}\r\n                placeholder={\"identifier\"} value={row.id.value}  disabled={readOnly}\r\n                tabIndex={row.index*2}\r\n                onInput={(e)=>identifierChange(e, row.index, state, setState)}\r\n                onBlur={(e)=> !readOnly && onBlur(state, setState, props, row.index)}\r\n                style={{width: '30%'}}\r\n            />\r\n            <span className={\"my-auto mx-1 simpleMode\"} style={{paddingRight: '6px', paddingLeft: '6px'}}><i style={{fontSize: '1.2em'}} className=\"bi bi-arrow-left-square\"></i></span>\r\n            <span className={\"my-auto mx-1 detailedMode\"}>=</span> {/*  */}\r\n            <input className={\"my-auto input\"}\r\n                placeholder={\"expression\"}\r\n                value={row.exp.value}\r\n                disabled={readOnly}\r\n                tabIndex={row.index*2+1}\r\n                onInput={(e)=>expressionChange(e, row.index, state, setState)}\r\n                onBlur={(e)=> !readOnly && onBlur(state, setState, props, row.index)}\r\n                style={{marginRight: '6px'}}\r\n            />\r\n            <span className={\"my-auto detailedMode\"}>;</span>\r\n            <CommandBar style={{paddingTop: '10px'}}>\r\n                <Btn icon={'delete'} tip={'Delete'} action={()=>!readOnly && deleteClick(state, setState, row.index, props, row)} />\r\n            </CommandBar>\r\n            {/* <button className={\"bg btn-delete my-auto ms-2\"} tabIndex={state.arr.length*2 +1 +row.index} disabled={readOnly} onClick={()=>!readOnly && deleteClick(state, setState, row.index, props, row)}>\r\n                <i className={\"p-1 bi bi-dash\"} /></button> */}\r\n        </label>);\r\n    }\r\n\r\n    let transitionTime = 300;\r\n\r\n    return <div className={\"function-editor-root\"} data-mode={advancedMode ? \"detailedMode\" : \"simpleMode\"} style={{fontSize: \"0.9rem\"}}>\r\n        <div className={\"d-flex w-100 function-editor-header\"}>\r\n        {/* <div className={\"d-flex w-100 function-editor-header\"} style={{transition: \"all 300ms\",  cursor: tooltip ? 'help' : 'auto'}}\r\n             onMouseEnter={e => tooltip && setShowTooltip(true)} onMouseLeave={e =>  tooltip && setShowTooltip(false)}></div>*/}\r\n            <div className={\"function-editor-label\"}>\r\n                {props.jsxLabel}\r\n                <p style={{fontSize: '0.8em', paddingBottom: '0px'}}>{props.payoff}</p>\r\n                {/* <button className={\"btn button-add\"} tabIndex={state.arr.length*2}\r\n                        disabled={readOnly} onClick={()=> !readOnly && addClick(state, setState)}>+</button> */}\r\n            </div>\r\n\r\n            <CommandBar style={{marginLeft: 'auto'}}>\r\n                {!state.collapsed ?\r\n                    <>\r\n                        <Btn icon={'add'} action={()=> !readOnly && addClick(state, setState)} tip={'Add new constant'}/>\r\n                        <Sep />\r\n                        {showTooltip ?\r\n                            <Btn icon={'info'} action={()=> {setShowTooltip(false)}} tip={'Hide information'} mode={'negative'}/>\r\n                            :\r\n                            <Btn icon={'info'} action={()=> {setShowTooltip(true)}} tip={'Show information'} />\r\n                        }\r\n\r\n                        {advancedMode?\r\n                            <Btn icon={'settings'} action={()=>setState( {...state, advancedMode:!state.advancedMode})} tip={'Close advanced mode'} mode={'negative'}/>\r\n                            :\r\n                            <Btn icon={'settings'} action={()=>setState( {...state, advancedMode:!state.advancedMode})} tip={'Open advanced mode'}/>\r\n                        }\r\n\r\n                        <Sep />\r\n                        <Btn icon={'open-down'} action={()=>setState( {...state, collapsed:!state.collapsed})} tip={'Hide definitions'}/>\r\n                    </>\r\n                    :\r\n                    <Btn icon={'close-up'} action={()=>setState( {...state, collapsed:!state.collapsed})} tip={'Show definitions'}/>\r\n                }\r\n\r\n            </CommandBar>\r\n\r\n\r\n            {/*\r\n            <span className={\"m-auto me-1\"} style={{border: '1px solid red', cursor: 'auto'}}>\r\n\r\n            {tooltip && <i className={\"p1 m-auto me-1 bi bi-info-square\"} style={{cursor: 'help'}} />}\r\n\r\n                <span className={\"m-auto\"} style={{cursor: 'auto', height: \"100%\", display: \"inline-block\"}}\r\n                      onMouseEnter={e => tooltip && setShowTooltip(false)} onMouseLeave={e =>  tooltip && setShowTooltip(true)}\r\n                >\r\n\r\n                <i className={ \"p1 m-auto mx-1 bi \" + (advancedMode ? \"btn-outline-secondary bi-eye-slash\" : \"btn-outline-secondary bi-eye\")}\r\n                   onClick={()=>setState( {...state, advancedMode:!state.advancedMode})} style={{cursor: 'pointer'}} />\r\n\r\n                   <i className={ \"p1 bi m-auto mx-1 bi bi-chevron-down btn-outline-secondary\"}\r\n                   onClick={()=>setState( {...state, collapsed:!state.collapsed})}\r\n                   style={{cursor: 'pointer', transition:transitionTime/2 + \"ms all\",\r\n                       transform: \"scaleY(\"+(state.collapsed ? 1 : -1 )+\")  translateY(\" + (state.collapsed ? -0 : 0.1) +\"em)\",\r\n                   }} />\r\n\r\n                </span>\r\n            </span>\r\n            */}\r\n\r\n\r\n\r\n        </div>\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'} style={{marginBottom: '10px'}}>\r\n            {/*\r\n            <b className={'text-center text-capitalize'}>{props.field}</b>\r\n            <br />\r\n            */}\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n        {<div\r\n            className={\"collapsable-section\" + (state.collapsed ? \"collapsed\" : \"expanded\")}\r\n            data-comment={\"collapsable-section\"}\r\n            style={{/*\r\n                transition: transitionTime + \"ms all\", // transformOrigin: \"top\", transform: \"rotateX(\"+(state.collapsed ? 0 : 90 )+\"deg)\",\r\n                transform: \"scaleY(\"+(state.collapsed ? 0 : 1 )+\") \",\r\n                transformOrigin: \"top\",\r\n                overflow:\"hidden\"*/\r\n            }}>\r\n\r\n            <textarea className={\"detailedMode input w-100\"} disabled={readOnly} rows={Math.min(10, state.ta.v.split(\"\\n\").length)}\r\n                  onInput={(e)=>textAreaChange(e, state, setState)}\r\n                  onBlur={(e)=> !readOnly && onBlur(state, setState, props)}\r\n                  data-txtcontent={state.ta.v}\r\n                  value={state.ta.v} />\r\n            {inputs}\r\n            {false && <div style={{whiteSpace:\"pre\"}}>{(props.data as any)[props.field]}</div>}\r\n        </div>}\r\n    </div>;\r\n}\r\n\r\ninterface OwnProps {\r\n    advancedMode?: boolean; // toggle textbox pre-declarations, initial value to set state. after initialization only state.advancedMode is used\r\n    collapsed?: boolean; // start collapsed or visible, default value is false = visible\r\n    data: LPointerTargetable;\r\n    field: string;\r\n    getter?: (data: LPointerTargetable) => string;\r\n    setter?: (value: string|boolean) => void;\r\n    readonly?: boolean;\r\n    // not used for now\r\n    label?: string;\r\n    jsxLabel?: ReactNode;\r\n    payoff?: string;\r\n    className?: string;\r\n    style?: GObject;\r\n    tooltip?: string | boolean | ReactElement;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    key?: React.Key | null;\r\n}\r\n\r\ninterface StateProps {\r\n}\r\n\r\ninterface DispatchProps { }\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n  return ownProps;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const FunctionConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FunctionComponent);\r\n*/\r\n// export const Function = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => (<FunctionConnected {...{...props, children}} />);\r\nexport const Function = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => (<FunctionComponent {...{...props, children}} tooltip={true} />);\r\n\r\nFunction.cname = \"FunctionComponent\";\r\n// FunctionConnected.cname = \"FunctionComponent_Connected\";\r\nFunctionComponent.cname = \"FunctionComponent_Disconnected\";\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}