{"ast":null,"code":"import{OclEngine}from\"@stekoe/ocl.js\";import{DPointerTargetable,Log,LPointerTargetable,RuntimeAccessibleClass,store,transientProperties,ViewEClassMatch}from\"../joiner\";let windoww=window;export class Company{constructor(){let name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'cname';let employee=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];let manager=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;this.name=name;this.employee=employee;this.manager=manager;Company.all.push(this);}}Company.all=[];export class Persona{constructor(){let name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'pname';let age=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;let isUnemployed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;this.name=name;this.age=age;this.isUnemployed=isUnemployed;Persona.all.push(this);}}Persona.all=[];export class OCL{static evaluate(obj0,constructor,oclexp){let typeused=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];let oclEngine=arguments.length>4?arguments[4]:undefined;windoww.OclEngine=OclEngine;if(!oclEngine){oclEngine=OclEngine.create();var oclResult=null;// let objexp = //\"context Object inv: self.age > 0\" +\nif(!oclexp)oclexp=\"context Persona inv: self.age>0\";const typeregister={};typeregister[constructor.cname||constructor.name]=constructor;for(let type of typeused){typeregister[type.cname||type.name]=type;}oclEngine.registerTypes(typeregister);oclEngine.addOclExpression(oclexp);}let obj=obj0;if(!obj){obj=new Persona();obj.age=-55;obj.name={notEmpty:()=>{console.log('innerfunc');return true;}};obj.f=a=>{console.error('called a',a);return a>0;};obj.name0='';//obj.$$typeof = Persona;\nobj.__asArray=true;}// as you set classname in runtimeaccessible you must set this typeName\n// obj.typeName = constructor.name || constructor;\n// obj = getPath;\n// obj.constructor = Persona;\noclResult=oclEngine.evaluate(obj);return oclResult;}static test_bugged_new(mp0,view0,node0){if(!mp0||!view0)return ViewEClassMatch.MISMATCH_OCL;let mp,lmp;let node,lnode;let view;// @ts-ignore\nif(mp=mp0.__raw)lmp=mp0;else{var _lmp;lmp=mp0;mp=(_lmp=lmp)===null||_lmp===void 0?void 0:_lmp.__raw;}// @ts-ignore\nif(node=node0===null||node0===void 0?void 0:node0.__raw)lnode=node0;else{var _lnode;lnode=node0;node=(_lnode=lnode)===null||_lnode===void 0?void 0:_lnode.__raw;}// @ts-ignore\nview=(view0===null||view0===void 0?void 0:view0.__raw)||view0;let oclCondition=view.oclCondition;let tv=transientProperties.view[view.id];console.log(\"Evaluating ocl: \"+view.oclCondition,{view,ocl:view.oclCondition});if(!view.oclCondition){return true;}let oclEngine;if(!tv)transientProperties.view[view.id]=tv={};if(tv.oclEngine)oclEngine=tv.oclEngine;else{windoww.OclEngine=OclEngine;tv.oclEngine=oclEngine=OclEngine.create();let state=store.getState();let rootModel=mp;windoww.rootModel=rootModel;while(rootModel&&rootModel.className!==\"DModel\")rootModel=DPointerTargetable.fromPointer(rootModel.father,state);oclEngine.registerTypes(RuntimeAccessibleClass.getOCLClasses(rootModel.id));oclEngine.addOclExpression(oclCondition);console.log(\"4 Evaluating ocl: \"+view.oclCondition,{view,ocl:view.oclCondition,mp,lmp,oclEngine});}try{let oclResult;if(!lmp)lmp=LPointerTargetable.fromD(mp);if(node){// dangerous cheat, to make ocl be able to access current \"node\" if model have multiple nodes.\nconst oldNode=transientProperties.modelElement[mp.id].node;transientProperties.modelElement[mp.id].node=lnode||LPointerTargetable.fromD(node);oclResult=oclEngine.evaluate(lmp);transientProperties.modelElement[mp.id].node=oldNode;}else oclResult=oclEngine.evaluate(lmp);windoww.oclDebug={oclResult,oclEngine,lmp,oclCondition};console.log(\"5 Evaluating ocl: \"+view.oclCondition,{view,ocl:view.oclCondition,mp,lmp,oclResult,oclEngine});// return oclResult ? OCL.getOCLScore(oclCondition) : ViewEClassMatch.MISMATCH_OCL;\nlet matches=oclResult&&oclResult.getEvaluatedContexts().length>0&&oclResult.getResult();return matches||ViewEClassMatch.MISMATCH_OCL;}catch(e){Log.ee('failed to evalute OCL expression:',{e,obj:mp,view:view.name,oclexp:view.oclCondition,node});return ViewEClassMatch.MISMATCH_OCL;}// oclEngine.setTypeDeterminer()\n}static test(me,view,node){if(!me||!view)return false;const condition=view.oclCondition;if(!condition)return true;try{const types=RuntimeAccessibleClass.getAllClasses();return!!OCL.filter(true,'src',[me],condition,types)[0];}catch(e){return false;}}// warning: do not read ret.result with returntype='ocl'\n// it neeeds to be evaluated both with  ret.getEvaluatedContexts().length > 0 && ret.getResult();\nstatic filter(keepIndex,returnType,obj0,oclexp){let typeused=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];windoww.OclEngine=OclEngine;var oclEngine=OclEngine.create();var oclResult=null;windoww.oclEngine=oclEngine;const typeregister={};for(let type of typeused){typeregister[type.cname||type.name]=type;}oclEngine.registerTypes(typeregister);if(!oclexp)oclexp=\"context Persona inv: self.age>0\";oclEngine.addOclExpression(oclexp);let obj=obj0;let ret=[];for(let i=0;i<obj.length;i++){let res;try{res=oclEngine.evaluate(obj[i]);}catch(e){console.error('failed to evalute object:',{e});res=null;}if(returnType==='ocl'){ret[i]=res;continue;}let bool=res&&res.getEvaluatedContexts().length>0&&res.getResult();if(returnType==='bool')ret[i]=bool;else ret[i]=bool?obj[i]:null;}if(!keepIndex){ret=ret.filter(r=>!!r);}return ret;}}windoww.OCL=OCL;const oclEngine=OclEngine.create();/*\r\n\r\nlet p = new Persona();\r\np.age = 0;\r\nlet p2 = new Persona();\r\np2.age = 1;\r\nlet p3 = new Persona();\r\np3.age = -5;\r\nlet pp = [p, p2, p3];\r\nOCL.filter(true, 'ocl', pp, undefined, \"context Persona inv: self.age>0\")\r\n\r\n\r\n///\r\n\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.abstract\")\r\n/// works\r\nlet pp = Selectors.getAll(DClass, undefined, undefined, true);\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.name = \\\"class_2\\\"\")\r\n\r\n* */oclEngine.addOclExpression(\"\\n    -- No one should work that long...\\n    context Company inv:\\n        self.employee->forAll(p : Person | p.age <= 65 )\\n\\n    -- If a company has a manager, \\n    -- the company has at least one employee.\\n    context Company\\n        inv: self.manager.isUnemployed = false\\n        inv: self.employee->notEmpty()\\n\");let company=new Company();company.employee.push(new Persona());const oclResult=oclEngine.evaluate(company);windoww.Person=Persona;windoww.Company=Company;windoww.oclEngine=oclEngine;console.log('tests:','\\n'+'oclEngine.addOclExpression(`\\n'+'    -- No one should work that long...\\n'+'    context Company inv:\\n'+'        self.employee->forAll(p : Person | p.age <= 65 )\\n'+'\\n'+'    -- If a company has a manager, \\n'+'    -- the company has at least one employee.\\n'+'    context Company\\n'+'        inv: self.manager.isUnemployed = false\\n'+'        inv: self.employee->notEmpty()\\n'+'`);\\n'+'\\n'+'const customTypes = {\\n'+'  \"Person\": Person, \"Company\": Company \\n'+'}\\n'+'\\n'+'oclEngine.registerTypes(customTypes);'+'let company = new Company();\\n'+'let employee = new Person();\\n'+'let parent = new Person();\\n'+'let child = new Person();\\n'+'child.parents = [parent];\\n'+'parent.parents = [parent];\\n'+'employee.age = 70;\\n'+'company.employee.push(employee);\\n'+'\\n'+'console.log(\\'evaluate company\\', oclEngine.evaluate(company));\\n'+'\\n'+'\\n'+'// parentchild test\\n'+'let oclEnginep = OclEngine.create();\\n'+'oclEnginep.addOclExpression(`\\n'+'    context Person\\n'+'        inv: self.parents->forAll(p | p <> self)\\n'+'`)\\n'+'console.log(\\'evaluate parent\\', oclEnginep.evaluate(parent));\\n'+'console.log(\\'evaluate child\\', oclEnginep.evaluate(child));\\n');","map":{"version":3,"names":["OclEngine","DPointerTargetable","Log","LPointerTargetable","RuntimeAccessibleClass","store","transientProperties","ViewEClassMatch","windoww","window","Company","constructor","name","arguments","length","undefined","employee","manager","all","push","Persona","age","isUnemployed","OCL","evaluate","obj0","oclexp","typeused","oclEngine","create","oclResult","typeregister","cname","type","registerTypes","addOclExpression","obj","notEmpty","console","log","f","a","error","name0","__asArray","test_bugged_new","mp0","view0","node0","MISMATCH_OCL","mp","lmp","node","lnode","view","__raw","_lmp","_lnode","oclCondition","tv","id","ocl","state","getState","rootModel","className","fromPointer","father","getOCLClasses","fromD","oldNode","modelElement","oclDebug","matches","getEvaluatedContexts","getResult","e","ee","test","me","condition","types","getAllClasses","filter","keepIndex","returnType","ret","i","res","bool","r","company","Person"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/ocl/ocl.tsx"],"sourcesContent":["import {OclEngine} from \"@stekoe/ocl.js\"\r\nimport {\r\n    Constructor, DGraphElement,\r\n    DModel,\r\n    DModelElement, DPointerTargetable, DState, DViewElement,\r\n    GObject, LGraphElement,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass, store, transientProperties, ViewEClassMatch\r\n} from \"../joiner\";\r\nimport {OclResult} from \"@stekoe/ocl.js/dist/components/OclResult\";\r\n\r\nlet windoww = window as any;\r\n\r\nexport class Company {\r\n    static all: Company[] = [];\r\n    constructor(public name: string ='cname', public employee: Persona[]=[], public manager: Persona|null = null) { Company.all.push(this); }\r\n}\r\nexport class Persona {\r\n    static all: Persona[] = [];\r\n    constructor(public name: string='pname', public age: number=18, public isUnemployed: boolean=true){ Persona.all.push(this) }\r\n}\r\n\r\nexport class OCL{\r\n    public static evaluate<T extends GObject>(obj0: T, constructor: Constructor<T>, oclexp: string, typeused: Constructor[]=[], oclEngine?: OclEngine): OclResult {\r\n        windoww.OclEngine = OclEngine;\r\n        if (!oclEngine) {\r\n            oclEngine = OclEngine.create();\r\n            var oclResult = null;\r\n            // let objexp = //\"context Object inv: self.age > 0\" +\r\n            if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n\r\n\r\n            const typeregister: GObject = {};\r\n            typeregister[(constructor as any as typeof RuntimeAccessibleClass).cname || constructor.name] = constructor;\r\n            for (let type of typeused) { typeregister[(type as any as typeof RuntimeAccessibleClass).cname || type.name] = type; }\r\n            oclEngine.registerTypes(typeregister);\r\n            oclEngine.addOclExpression(oclexp);\r\n        }\r\n\r\n        let obj: GObject = obj0;\r\n        if (!obj) {\r\n            obj = new Persona();\r\n            obj.age = -55;\r\n            obj.name = {notEmpty: () => { console.log('innerfunc'); return true} };\r\n            obj.f = (a:any) => { console.error('called a', a); return a>0};\r\n            obj.name0= '';\r\n//obj.$$typeof = Persona;\r\n\r\n            obj.__asArray = true;\r\n        }\r\n        // as you set classname in runtimeaccessible you must set this typeName\r\n        // obj.typeName = constructor.name || constructor;\r\n// obj = getPath;\r\n// obj.constructor = Persona;\r\n        oclResult = oclEngine.evaluate(obj);\r\n        return oclResult;\r\n    }\r\n\r\n    public static test_bugged_new(mp0: DModelElement | LModelElement | undefined, view0: LViewElement | DViewElement | undefined, node0?: LGraphElement | DGraphElement): boolean | (typeof ViewEClassMatch)[\"MISMATCH_OCL\"] {\r\n        if (!mp0 || !view0) return ViewEClassMatch.MISMATCH_OCL;\r\n        let mp: DModelElement, lmp: LModelElement;\r\n        let node: DGraphElement, lnode: LGraphElement;\r\n        let view: DViewElement;\r\n        // @ts-ignore\r\n        if ((mp = mp0.__raw)) lmp = mp0; else { lmp = mp0; mp = (lmp as LModelElement)?.__raw; }\r\n        // @ts-ignore\r\n        if ((node = node0?.__raw)) lnode = node0; else { lnode = node0; node = lnode?.__raw; }\r\n        // @ts-ignore\r\n        view = view0?.__raw || view0;\r\n        let oclCondition = view.oclCondition;\r\n        let tv = transientProperties.view[view.id];\r\n        console.log(\"Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition});\r\n        if (!view.oclCondition) { return true; }\r\n        let oclEngine: OclEngine;\r\n        if (!tv) transientProperties.view[view.id] = tv = {} as any;\r\n        if (tv.oclEngine) oclEngine = tv.oclEngine;\r\n        else {\r\n            windoww.OclEngine = OclEngine;\r\n            tv.oclEngine = oclEngine = OclEngine.create();\r\n            let state: DState = store.getState();\r\n            let rootModel: DModel = mp as any;\r\n            windoww.rootModel = rootModel;\r\n            while (rootModel && rootModel.className !== \"DModel\") rootModel = DPointerTargetable.fromPointer(rootModel.father, state);\r\n            oclEngine.registerTypes(RuntimeAccessibleClass.getOCLClasses(rootModel.id));\r\n            oclEngine.addOclExpression(oclCondition);\r\n            console.log(\"4 Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition, mp, lmp, oclEngine});\r\n        }\r\n        try {\r\n            let oclResult: OclResult;\r\n            if (!lmp) lmp = LPointerTargetable.fromD(mp);\r\n            if (node) {\r\n                // dangerous cheat, to make ocl be able to access current \"node\" if model have multiple nodes.\r\n                const oldNode = transientProperties.modelElement[mp.id].node;\r\n                transientProperties.modelElement[mp.id].node = lnode || LPointerTargetable.fromD(node);\r\n                oclResult = oclEngine.evaluate(lmp)\r\n                transientProperties.modelElement[mp.id].node = oldNode;\r\n            }\r\n            else oclResult = oclEngine.evaluate(lmp);\r\n            windoww.oclDebug={oclResult, oclEngine, lmp, oclCondition};\r\n            console.log(\"5 Evaluating ocl: \"+view.oclCondition, {view, ocl:view.oclCondition, mp, lmp, oclResult, oclEngine});\r\n            // return oclResult ? OCL.getOCLScore(oclCondition) : ViewEClassMatch.MISMATCH_OCL;\r\n            let matches: boolean = oclResult && oclResult.getEvaluatedContexts().length > 0 && oclResult.getResult();\r\n            return matches || ViewEClassMatch.MISMATCH_OCL;\r\n        } catch(e) {\r\n            Log.ee('failed to evalute OCL expression:', {e, obj: mp, view: view.name, oclexp: view.oclCondition, node});\r\n            return ViewEClassMatch.MISMATCH_OCL;\r\n        }\r\n        // oclEngine.setTypeDeterminer()\r\n    }\r\n    public static test(me: DModelElement | LModelElement | undefined, view: LViewElement | DViewElement | undefined, node?: LGraphElement | DGraphElement): boolean | (typeof ViewEClassMatch)[\"MISMATCH_OCL\"] {\r\n        if (!me || !view) return false;\r\n        const condition = view.oclCondition;\r\n        if (!condition) return true;\r\n        try {\r\n            const types = RuntimeAccessibleClass.getAllClasses();\r\n            return !!OCL.filter(true, 'src', [me], condition, types as any)[0];\r\n        } catch (e) {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // warning: do not read ret.result with returntype='ocl'\r\n    // it neeeds to be evaluated both with  ret.getEvaluatedContexts().length > 0 && ret.getResult();\r\n    public static filter<T extends GObject>(keepIndex: boolean, returnType: 'ocl' | 'bool' | 'src', obj0: T[], oclexp: string, typeused: Constructor[]=[]) {\r\n        windoww.OclEngine = OclEngine;\r\n        var oclEngine = OclEngine.create();\r\n        var oclResult = null;\r\n        windoww.oclEngine = oclEngine;\r\n        const typeregister: GObject = {};\r\n        for (let type of typeused) { typeregister[(type as any as typeof RuntimeAccessibleClass).cname || type.name] = type; }\r\n        oclEngine.registerTypes(typeregister);\r\n        if (!oclexp) oclexp = \"context Persona inv: self.age>0\";\r\n        oclEngine.addOclExpression(oclexp);\r\n\r\n        let obj: GObject[] = obj0;\r\n        let ret: ((OclResult | boolean) | (GObject | null))[] = [];\r\n\r\n        for (let i = 0; i < obj.length; i++) {\r\n            let res: OclResult | null;\r\n            try { res = oclEngine.evaluate(obj[i]); }\r\n            catch(e) { console.error('failed to evalute object:', {e}); res = null; }\r\n            if (returnType === 'ocl') {\r\n                ret[i] = res;\r\n                continue; }\r\n            let bool = res && res.getEvaluatedContexts().length > 0 && res.getResult();\r\n            if (returnType === 'bool') ret[i] = bool;\r\n            else ret[i] = bool ? obj[i] : null;\r\n        }\r\n\r\n        if (!keepIndex) {\r\n            ret = (ret).filter((r:any) => !!r) as any;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n}\r\nwindoww.OCL = OCL;\r\nconst oclEngine = OclEngine.create();\r\n\r\n\r\n/*\r\n\r\nlet p = new Persona();\r\np.age = 0;\r\nlet p2 = new Persona();\r\np2.age = 1;\r\nlet p3 = new Persona();\r\np3.age = -5;\r\nlet pp = [p, p2, p3];\r\nOCL.filter(true, 'ocl', pp, undefined, \"context Persona inv: self.age>0\")\r\n\r\n\r\n///\r\n\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.abstract\")\r\n/// works\r\nlet pp = Selectors.getAll(DClass, undefined, undefined, true);\r\nOCL.filter(true, 'src', Selectors.getAll(DClass, undefined, undefined, true), \"context DClass inv: self.name = \\\"class_2\\\"\")\r\n\r\n* */\r\n\r\noclEngine.addOclExpression(`\r\n    -- No one should work that long...\r\n    context Company inv:\r\n        self.employee->forAll(p : Person | p.age <= 65 )\r\n\r\n    -- If a company has a manager, \r\n    -- the company has at least one employee.\r\n    context Company\r\n        inv: self.manager.isUnemployed = false\r\n        inv: self.employee->notEmpty()\r\n`);\r\n\r\nlet company = new Company();\r\ncompany.employee.push(new Persona());\r\n\r\nconst oclResult = oclEngine.evaluate(company);\r\n\r\n\r\n\r\nwindoww.Person = Persona;\r\nwindoww.Company = Company;\r\nwindoww.oclEngine = oclEngine;\r\n\r\nconsole.log('tests:', '\\n' +\r\n    'oclEngine.addOclExpression(`\\n' +\r\n    '    -- No one should work that long...\\n' +\r\n    '    context Company inv:\\n' +\r\n    '        self.employee->forAll(p : Person | p.age <= 65 )\\n' +\r\n    '\\n' +\r\n    '    -- If a company has a manager, \\n' +\r\n    '    -- the company has at least one employee.\\n' +\r\n    '    context Company\\n' +\r\n    '        inv: self.manager.isUnemployed = false\\n' +\r\n    '        inv: self.employee->notEmpty()\\n' +\r\n    '`);\\n' +\r\n    '\\n' +\r\n    'const customTypes = {\\n' +\r\n    '  \"Person\": Person, \"Company\": Company \\n' +\r\n    '}\\n' +\r\n    '\\n' +\r\n    'oclEngine.registerTypes(customTypes);' +\r\n    'let company = new Company();\\n' +\r\n    'let employee = new Person();\\n' +\r\n    'let parent = new Person();\\n' +\r\n    'let child = new Person();\\n' +\r\n    'child.parents = [parent];\\n' +\r\n    'parent.parents = [parent];\\n' +\r\n    'employee.age = 70;\\n' +\r\n    'company.employee.push(employee);\\n' +\r\n    '\\n' +\r\n    'console.log(\\'evaluate company\\', oclEngine.evaluate(company));\\n' +\r\n    '\\n' +\r\n    '\\n' +\r\n    '// parentchild test\\n' +\r\n    'let oclEnginep = OclEngine.create();\\n' +\r\n    'oclEnginep.addOclExpression(`\\n' +\r\n    '    context Person\\n' +\r\n    '        inv: self.parents->forAll(p | p <> self)\\n' +\r\n    '`)\\n' +\r\n    'console.log(\\'evaluate parent\\', oclEnginep.evaluate(parent));\\n' +\r\n    'console.log(\\'evaluate child\\', oclEnginep.evaluate(child));\\n');\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}