{"ast":null,"code":"import{U}from\"../../joiner\";import{useEffect,useState}from\"react\";import\"./control.scss\";import{useStateIfMounted}from\"use-state-if-mounted\";import{useEffectOnce}from\"usehooks-ts\";/* Notification */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Notification=props=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"control-widget control-notification\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"You forgot something...\"}),props.type&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Missing '\",props.field,\"'' in '\",props.widget,\"' in template definition.\"]})]}),props.suggestion&&/*#__PURE__*/_jsx(\"p\",{children:props.suggestion})]});};const CheckProps=(widget,props)=>{let result=false;let notification=null;let field=null;let type=null;let suggestion='';switch(widget){case'control':if(!props.children){alert('You did not specify any children in <Control ...> </Control>');// field = 'children';\n// type = 'missing';\n// suggestion = 'You did not specify any children in <Control ...> </Control>';\n// notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\nresult=true;}break;case'slider':if(!props.node){alert('You did not specify node in <Slider .../>');// field = 'node';\n// type = 'missing';\n// suggestion = '';\n// notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\nresult=true;}if(!props.name){alert('You did not specify name in <Slider .../>');field='name';type='missing';suggestion='You did not specify name in <Slider .../>';notification=/*#__PURE__*/_jsx(Notification,{widget:widget,field:field,type:type,suggestion:suggestion});result=true;}break;}return result;};function useClickOutside(ref,onClickOutside){useEffect(()=>{function handleClickOutside(event){if(ref.current&&!ref.current.contains(event.target)){onClickOutside();}}// Bind\ndocument.addEventListener(\"mousedown\",handleClickOutside);return()=>{// dispose\ndocument.removeEventListener(\"mousedown\",handleClickOutside);};},[ref,onClickOutside]);}/*  Control */const ControlComponent=(props,children)=>{const[controlOpen,setControlOpen]=useStateIfMounted(false);const toggleValue=()=>{setControlOpen(!controlOpen);};function onClick(e){console.log('setup hide control');U.clickedOutside(e,()=>{console.log('hide control');setControlOpen(false);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"jjodel-control-root\",onClick:onClick,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"jjodel-control d-flex flex-row \".concat(controlOpen?'opened':'closed'),children:[/*#__PURE__*/_jsxs(\"div\",{className:'control-header',children:[/*#__PURE__*/_jsx(\"h1\",{children:props.title}),/*#__PURE__*/_jsx(\"h2\",{children:props.payoff})]}),props.children||children]}),/*#__PURE__*/_jsx(\"div\",{className:'jjodel-control-icon',children:/*#__PURE__*/_jsx(\"i\",{onClick:e=>{toggleValue();},className:\"bi bi-toggles\"})})]});};const Control=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(ControlComponent,{...props,children:children||props.children});};/* Slider */const SliderComponent=props=>{const min=props.min?props.min:0;const max=props.max?props.max:10;const step=props.step?props.step:1;const defaultValue=props.defaultValue?props.defaultValue:max;const name=props.name;useEffectOnce(()=>{{/* @ts-ignore */}props.node.state={[name]:defaultValue};});function updateValue(value){// @ts-ignore\nprops.node.state={[name]:value};}return/*#__PURE__*/_jsx(_Fragment,{children:CheckProps('slider',props)||/*#__PURE__*/_jsxs(\"div\",{className:'control-widget control-slider',children:[/*#__PURE__*/_jsx(\"div\",{className:'track',style:{transition:'width 0.3s',position:'relative',left:'10px',width:\"calc(((100%/\".concat(max,\" - 8px) * \").concat(props.node.state[name],\"))\")}}),/*#__PURE__*/_jsx(\"input\",{type:'range',min:min,max:max,step:step,onChange:e=>{updateValue(+e.target.value);}}),props.title&&/*#__PURE__*/_jsxs(\"div\",{className:'tip',children:[props.title,\" \",/*#__PURE__*/_jsx(\"label\",{children:props.node.state[name]})]})]})});};const Slider=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(SliderComponent,{...props});};/* Toggle */const ToggleComponent=props=>{const[value,setValue]=useState(false);const defaultValue=false;const labels=props.labels?props.labels:{true:'On',false:'Off'};useEffectOnce(()=>{{/* @ts-ignore */}props.node.state={[props.name]:defaultValue};});function updateValue(value){// @ts-ignore\nprops.node.state={[props.name]:value};}function toggleValue(){const newValue=!value;setValue(newValue);// @ts-ignore\nprops.node.state={[props.name]:newValue};}// // updateValue(+e.target.value) \nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:'toggle',onClick:e=>{toggleValue();},children:[/*#__PURE__*/_jsx(\"input\",{type:'checkbox',className:'toggle-input',id:props.name,checked:value,onChange:e=>{alert(e.target.value);},onClick:e=>alert('input, click')}),/*#__PURE__*/_jsx(\"label\",{onClick:()=>alert(),className:'toggle-label'}),/*#__PURE__*/_jsx(\"div\",{className:\"toggle-labels\",children:value?/*#__PURE__*/_jsx(\"span\",{className:\"toggle-on\",children:labels['true']}):/*#__PURE__*/_jsx(\"span\",{className:\"toggle-off\",children:labels['false']})}),/*#__PURE__*/_jsx(\"div\",{className:\"tip\",children:props.title})]})});};const Toggle=function(props){let children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(ToggleComponent,{...props});};export{Control,Slider,Toggle};","map":{"version":3,"names":["U","useEffect","useState","useStateIfMounted","useEffectOnce","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Notification","props","className","children","type","field","widget","suggestion","CheckProps","result","notification","alert","node","name","useClickOutside","ref","onClickOutside","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ControlComponent","controlOpen","setControlOpen","toggleValue","onClick","e","console","log","clickedOutside","concat","title","payoff","Control","arguments","length","undefined","SliderComponent","min","max","step","defaultValue","state","updateValue","value","style","transition","position","left","width","onChange","Slider","ToggleComponent","setValue","labels","true","false","newValue","id","checked","Toggle"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/forEndUser/Control.tsx"],"sourcesContent":["import {ClickEvent, ControlPanel, LGraphElement, SetRootFieldAction, U} from \"../../joiner\";\r\nimport { ReactElement, ReactNode, useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./control.scss\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport { Tooltip } from \"./Tooltip\";\r\nimport { VertexOwnProps } from \"../../graph/graphElement/sharedTypes/sharedTypes\";\r\nimport { useEffectOnce } from \"usehooks-ts\";\r\n\r\n\r\n/* Notification */\r\n\r\ntype Widget = 'control'|'slider'|null;\r\ntype Field = 'node'|'name'|'children'|null;\r\ntype ErrorType = 'missing'|null;\r\n\r\ntype NotificationProps = {\r\n    widget: Widget,\r\n    field: Field,\r\n    type: ErrorType,\r\n    suggestion?: string\r\n}\r\nconst Notification = (props: NotificationProps) => {\r\n\r\n    return (\r\n        <div className=\"control-widget control-notification\">\r\n            <div className=\"control-header\">\r\n                <h1>You forgot something...</h1>\r\n                {props.type && <h2>Missing '{props.field}'' in '{props.widget}' in template definition.</h2>}\r\n            </div>\r\n\r\n            {props.suggestion && <p>{props.suggestion}</p>}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\ntype CheckReturnTYpe = {\r\n    error: boolean;\r\n    notification: any;\r\n}\r\n\r\nconst CheckProps = (widget: Widget, props: any): any => {\r\n\r\n    let result:any = false;\r\n    let notification: any|null = null;\r\n    let field: Field = null;\r\n    let type: ErrorType = null;\r\n    let suggestion = '';\r\n\r\n    switch(widget) {\r\n        case 'control':\r\n            if (!props.children) {\r\n                alert('You did not specify any children in <Control ...> </Control>');\r\n                // field = 'children';\r\n                // type = 'missing';\r\n                // suggestion = 'You did not specify any children in <Control ...> </Control>';\r\n                // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n            }\r\n        break;\r\n        case 'slider':\r\n            if (!props.node) {\r\n                alert('You did not specify node in <Slider .../>');\r\n                // field = 'node';\r\n                // type = 'missing';\r\n                // suggestion = '';\r\n                // notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n\r\n            }\r\n            if (!props.name) {\r\n                alert('You did not specify name in <Slider .../>');\r\n                field = 'name';\r\n                type = 'missing';\r\n                suggestion = 'You did not specify name in <Slider .../>';\r\n                notification = <Notification widget={widget} field={field} type={type} suggestion={suggestion}/>;\r\n                result = true;\r\n            }\r\n        break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\ntype ControlProps = {\r\n    children: any;\r\n    title?: string;\r\n    payoff?: string;\r\n    icon?: boolean;\r\n}\r\n\r\nfunction useClickOutside(ref: any, onClickOutside: any) {\r\n    useEffect(() => {\r\n\r\n        function handleClickOutside(event: Event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                onClickOutside();\r\n            }\r\n        }\r\n\r\n      // Bind\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // dispose\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref, onClickOutside]);\r\n  }\r\n\r\n\r\n/*  Control */\r\n\r\nconst ControlComponent = (props: ControlProps, children?:ReactNode) => {\r\n    \r\n    const [controlOpen, setControlOpen] = useStateIfMounted(false);\r\n\r\n    const toggleValue = () => {\r\n        setControlOpen(!controlOpen);\r\n\r\n    }\r\n\r\n\r\n    function onClick(e: any){\r\n        console.log('setup hide control');\r\n        U.clickedOutside(e, ()=> {\r\n            console.log('hide control');\r\n            setControlOpen(false)\r\n        });\r\n    }\r\n    return (<div className={`jjodel-control-root`} onClick={onClick}>\r\n        <div className={`jjodel-control d-flex flex-row ${controlOpen ? 'opened' : 'closed'}`}>\r\n            <div className={'control-header'}>\r\n                <h1>{props.title}</h1>\r\n                <h2>{props.payoff}</h2>\r\n            </div>\r\n            {props.children || children}\r\n        </div>\r\n        <div className={'jjodel-control-icon'}>\r\n            <i onClick={(e) => {toggleValue()}} className=\"bi bi-toggles\"/>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nconst Control = (props: VertexOwnProps, children: ReactNode = []): ReactElement => {\r\n    return <ControlComponent {...props}>{children || props.children}</ControlComponent>;\r\n}\r\n\r\n\r\n/* Slider */\r\n\r\ntype SliderProps = {\r\n    node: LGraphElement;\r\n    name?: string;\r\n    defaultValue?:number;\r\n    title?:string;\r\n    min?: number;\r\n    max?: number;\r\n    step?: number;\r\n    label?: string;\r\n}\r\n\r\nconst SliderComponent = (props: SliderProps) => {\r\n\r\n    const min = props.min ? props.min : 0;\r\n    const max = props.max ? props.max : 10;\r\n    const step = props.step ? props.step : 1;\r\n    const defaultValue = props.defaultValue ? props.defaultValue : max;\r\n    const name = props.name;\r\n\r\n    useEffectOnce(\r\n        () => {\r\n            {/* @ts-ignore */}\r\n            props.node.state = {[name] : defaultValue};\r\n        }\r\n    );\r\n\r\n    function updateValue(value: number) {\r\n        // @ts-ignore\r\n        props.node.state = {[name]: value};\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {CheckProps('slider', props) || <div className={'control-widget control-slider'}>\r\n\r\n                <div className={'track'}\r\n                    style={{transition: 'width 0.3s', position: 'relative', left: '10px',\r\n                        width: `calc(((100%/${max} - 8px) * ${props.node.state[name as string]}))`}}\r\n                >\r\n\r\n                </div>\r\n\r\n                <input\r\n                    type={'range'}\r\n                    min={min}\r\n                    max={max}\r\n                    step={step}\r\n                    onChange={(e)=>{updateValue(+e.target.value)}} />\r\n\r\n                {/* @ts-ignore */}\r\n                {props.title && <div className={'tip'}>{props.title} <label>{props.node.state[name]}</label></div>}\r\n                </div>\r\n            }\r\n        </>);\r\n}\r\n\r\nconst Slider = (props: SliderProps, children: ReactNode = []): ReactElement => {\r\n    return <SliderComponent {...props} />;\r\n}\r\n\r\n\r\n/* Toggle */\r\n\r\ntype ToggleValues = {\r\n    true: string;\r\n    false: string;\r\n}\r\n\r\ntype ToggleProps = {\r\n    name: string;\r\n    values?: ToggleValues;\r\n    labels?: ToggleValues;\r\n    size?: string;\r\n    style?: React.CSSProperties;\r\n    title?: string;\r\n};\r\n\r\nconst ToggleComponent = (props: ToggleProps) => {\r\n    const [value, setValue] = useState<boolean>(false);\r\n    const defaultValue = false;\r\n\r\n    const labels = props.labels ? props.labels : {true: 'On', false: 'Off'};\r\n\r\n    useEffectOnce(\r\n        () => {\r\n            {/* @ts-ignore */}\r\n            props.node.state = {[props.name] : defaultValue};\r\n        }\r\n    );\r\n\r\n    function updateValue(value: boolean) {\r\n        // @ts-ignore\r\n        props.node.state = {[props.name]: value};\r\n    }\r\n\r\n    function toggleValue() {\r\n        const newValue = !value;\r\n        setValue(newValue);\r\n\r\n        // @ts-ignore\r\n        props.node.state = {[props.name]: newValue};\r\n    }\r\n    // // updateValue(+e.target.value) \r\n\r\n    return (<>\r\n        \r\n        <div className={'toggle'} onClick={(e) => {toggleValue()}}>\r\n            <input type={'checkbox'} className={'toggle-input'} id={props.name} checked={value} onChange={(e)=>{alert(e.target.value)}}  onClick={(e) => alert('input, click')} /> \r\n\r\n            <label onClick={() => alert()} className={'toggle-label'}></label>\r\n\r\n            <div className={\"toggle-labels\"}>\r\n                {value ?\r\n                    <span className={\"toggle-on\"}>{labels['true']}</span>\r\n                    :\r\n                    <span className={\"toggle-off\"}>{labels['false']}</span>\r\n                }\r\n            </div>\r\n            <div className={\"tip\"}>{props.title}</div>\r\n\r\n        </div></>\r\n    );\r\n}\r\n\r\nconst Toggle = (props: ToggleProps, children: ReactNode = []): ReactElement => {\r\n    return <ToggleComponent {...props} />;\r\n}\r\n\r\nexport {Control, Slider, Toggle};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}