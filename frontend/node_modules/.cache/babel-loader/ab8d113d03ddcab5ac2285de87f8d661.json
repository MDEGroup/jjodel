{"ast":null,"code":"import React from \"react\";\nimport { DockContextType, placeHolderStyle } from \"./DockData\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DragState } from \"./dragdrop/DragManager\";\nexport class DockDropSquare extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      dropping: false\n    };\n    this.onDragOver = e => {\n      let {\n        panelElement: targetElement,\n        direction,\n        depth,\n        panelData\n      } = this.props;\n      this.setState({\n        dropping: true\n      });\n      for (let i = 0; i < depth; ++i) {\n        targetElement = targetElement.parentElement;\n      }\n      if (panelData.group === placeHolderStyle && direction !== 'float') {\n        // place holder panel should always have full size drop rect\n        this.context.setDropRect(targetElement, 'middle', this, e);\n      } else {\n        let dockId = this.context.getDockId();\n        let panelSize = DragState.getData('panelSize', dockId);\n        this.context.setDropRect(targetElement, direction, this, e, panelSize);\n      }\n      e.accept('');\n    };\n    this.onDragLeave = e => {\n      let {\n        panelElement,\n        direction\n      } = this.props;\n      this.setState({\n        dropping: false\n      });\n      this.context.setDropRect(null, 'remove', this);\n    };\n    this.onDrop = e => {\n      let dockId = this.context.getDockId();\n      let source = DragState.getData('tab', dockId);\n      if (!source) {\n        source = DragState.getData('panel', dockId);\n      }\n      if (source) {\n        let {\n          panelData,\n          direction,\n          depth\n        } = this.props;\n        let target = panelData;\n        for (let i = 0; i < depth; ++i) {\n          target = target.parent;\n        }\n        this.context.dockMove(source, target, direction);\n      }\n    };\n  }\n  render() {\n    let {\n      direction,\n      depth\n    } = this.props;\n    let {\n      dropping\n    } = this.state;\n    let classes = ['dock-drop-square'];\n    classes.push(\"dock-drop-\".concat(direction));\n    if (depth) {\n      classes.push(\"dock-drop-deep\");\n    }\n    if (dropping) {\n      classes.push('dock-drop-square-dropping');\n    }\n    return React.createElement(DragDropDiv, {\n      className: classes.join(' '),\n      onDragOverT: this.onDragOver,\n      onDragLeaveT: this.onDragLeave,\n      onDropT: this.onDrop\n    }, React.createElement(\"div\", {\n      className: 'dock-drop-square-box'\n    }));\n  }\n  componentWillUnmount() {\n    this.context.setDropRect(null, 'remove', this);\n  }\n}\nDockDropSquare.contextType = DockContextType;\nexport class DockDropLayer extends React.PureComponent {\n  static addDepthSquare(children, mode, panelData, panelElement, depth) {\n    if (mode === 'horizontal') {\n      children.push(React.createElement(DockDropSquare, {\n        key: \"top\".concat(depth),\n        direction: 'top',\n        depth: depth,\n        panelData: panelData,\n        panelElement: panelElement\n      }));\n      children.push(React.createElement(DockDropSquare, {\n        key: \"bottom\".concat(depth),\n        direction: 'bottom',\n        depth: depth,\n        panelData: panelData,\n        panelElement: panelElement\n      }));\n    } else {\n      children.push(React.createElement(DockDropSquare, {\n        key: \"left\".concat(depth),\n        direction: 'left',\n        depth: depth,\n        panelData: panelData,\n        panelElement: panelElement\n      }));\n      children.push(React.createElement(DockDropSquare, {\n        key: \"right\".concat(depth),\n        direction: 'right',\n        depth: depth,\n        panelData: panelData,\n        panelElement: panelElement\n      }));\n    }\n  }\n  render() {\n    var _a;\n    let {\n      panelData,\n      panelElement,\n      dropFromPanel\n    } = this.props;\n    let dockId = this.context.getDockId();\n    let children = [];\n    // check if it's whole panel dragging\n    let draggingPanel = DragState.getData('panel', dockId);\n    let fromGroup = this.context.getGroup(dropFromPanel.group);\n    if (fromGroup.floatable !== false && (!draggingPanel || !draggingPanel.panelLock && ((_a = draggingPanel.parent) === null || _a === void 0 ? void 0 : _a.mode) !== 'float')) {\n      children.push(React.createElement(DockDropSquare, {\n        key: 'float',\n        direction: 'float',\n        panelData: panelData,\n        panelElement: panelElement\n      }));\n    }\n    if (draggingPanel !== panelData && !fromGroup.disableDock) {\n      // don't drop panel to itself\n      // 4 direction base drag square\n      DockDropLayer.addDepthSquare(children, 'horizontal', panelData, panelElement, 0);\n      DockDropLayer.addDepthSquare(children, 'vertical', panelData, panelElement, 0);\n      if (!(draggingPanel === null || draggingPanel === void 0 ? void 0 : draggingPanel.panelLock) && panelData.group === dropFromPanel.group && panelData !== dropFromPanel) {\n        // dock to tabs\n        children.push(React.createElement(DockDropSquare, {\n          key: 'middle',\n          direction: 'middle',\n          panelData: panelData,\n          panelElement: panelElement\n        }));\n      }\n      let box = panelData.parent;\n      if (box && box.children.length > 1) {\n        // deeper drop\n        DockDropLayer.addDepthSquare(children, box.mode, panelData, panelElement, 1);\n        if (box.parent) {\n          DockDropLayer.addDepthSquare(children, box.parent.mode, panelData, panelElement, 2);\n        }\n      }\n    }\n    return React.createElement(\"div\", {\n      className: 'dock-drop-layer'\n    }, children);\n  }\n}\nDockDropLayer.contextType = DockContextType;","map":{"version":3,"names":["React","DockContextType","placeHolderStyle","DragDropDiv","DragState","DockDropSquare","PureComponent","constructor","arguments","state","dropping","onDragOver","e","panelElement","targetElement","direction","depth","panelData","props","setState","i","parentElement","group","context","setDropRect","dockId","getDockId","panelSize","getData","accept","onDragLeave","onDrop","source","target","parent","dockMove","render","classes","push","concat","createElement","className","join","onDragOverT","onDragLeaveT","onDropT","componentWillUnmount","contextType","DockDropLayer","addDepthSquare","children","mode","key","_a","dropFromPanel","draggingPanel","fromGroup","getGroup","floatable","panelLock","disableDock","box","length"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/node_modules/rc-dock/es/DockDropLayer.js"],"sourcesContent":["import React from \"react\";\nimport { DockContextType, placeHolderStyle } from \"./DockData\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DragState } from \"./dragdrop/DragManager\";\nexport class DockDropSquare extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = { dropping: false };\n        this.onDragOver = (e) => {\n            let { panelElement: targetElement, direction, depth, panelData } = this.props;\n            this.setState({ dropping: true });\n            for (let i = 0; i < depth; ++i) {\n                targetElement = targetElement.parentElement;\n            }\n            if (panelData.group === placeHolderStyle && direction !== 'float') {\n                // place holder panel should always have full size drop rect\n                this.context.setDropRect(targetElement, 'middle', this, e);\n            }\n            else {\n                let dockId = this.context.getDockId();\n                let panelSize = DragState.getData('panelSize', dockId);\n                this.context.setDropRect(targetElement, direction, this, e, panelSize);\n            }\n            e.accept('');\n        };\n        this.onDragLeave = (e) => {\n            let { panelElement, direction } = this.props;\n            this.setState({ dropping: false });\n            this.context.setDropRect(null, 'remove', this);\n        };\n        this.onDrop = (e) => {\n            let dockId = this.context.getDockId();\n            let source = DragState.getData('tab', dockId);\n            if (!source) {\n                source = DragState.getData('panel', dockId);\n            }\n            if (source) {\n                let { panelData, direction, depth } = this.props;\n                let target = panelData;\n                for (let i = 0; i < depth; ++i) {\n                    target = target.parent;\n                }\n                this.context.dockMove(source, target, direction);\n            }\n        };\n    }\n    render() {\n        let { direction, depth } = this.props;\n        let { dropping } = this.state;\n        let classes = ['dock-drop-square'];\n        classes.push(`dock-drop-${direction}`);\n        if (depth) {\n            classes.push(`dock-drop-deep`);\n        }\n        if (dropping) {\n            classes.push('dock-drop-square-dropping');\n        }\n        return (React.createElement(DragDropDiv, { className: classes.join(' '), onDragOverT: this.onDragOver, onDragLeaveT: this.onDragLeave, onDropT: this.onDrop },\n            React.createElement(\"div\", { className: 'dock-drop-square-box' })));\n    }\n    componentWillUnmount() {\n        this.context.setDropRect(null, 'remove', this);\n    }\n}\nDockDropSquare.contextType = DockContextType;\nexport class DockDropLayer extends React.PureComponent {\n    static addDepthSquare(children, mode, panelData, panelElement, depth) {\n        if (mode === 'horizontal') {\n            children.push(React.createElement(DockDropSquare, { key: `top${depth}`, direction: 'top', depth: depth, panelData: panelData, panelElement: panelElement }));\n            children.push(React.createElement(DockDropSquare, { key: `bottom${depth}`, direction: 'bottom', depth: depth, panelData: panelData, panelElement: panelElement }));\n        }\n        else {\n            children.push(React.createElement(DockDropSquare, { key: `left${depth}`, direction: 'left', depth: depth, panelData: panelData, panelElement: panelElement }));\n            children.push(React.createElement(DockDropSquare, { key: `right${depth}`, direction: 'right', depth: depth, panelData: panelData, panelElement: panelElement }));\n        }\n    }\n    render() {\n        var _a;\n        let { panelData, panelElement, dropFromPanel } = this.props;\n        let dockId = this.context.getDockId();\n        let children = [];\n        // check if it's whole panel dragging\n        let draggingPanel = DragState.getData('panel', dockId);\n        let fromGroup = this.context.getGroup(dropFromPanel.group);\n        if (fromGroup.floatable !== false &&\n            (!draggingPanel ||\n                (!draggingPanel.panelLock && ((_a = draggingPanel.parent) === null || _a === void 0 ? void 0 : _a.mode) !== 'float'))) {\n            children.push(React.createElement(DockDropSquare, { key: 'float', direction: 'float', panelData: panelData, panelElement: panelElement }));\n        }\n        if (draggingPanel !== panelData && !fromGroup.disableDock) { // don't drop panel to itself\n            // 4 direction base drag square\n            DockDropLayer.addDepthSquare(children, 'horizontal', panelData, panelElement, 0);\n            DockDropLayer.addDepthSquare(children, 'vertical', panelData, panelElement, 0);\n            if (!(draggingPanel === null || draggingPanel === void 0 ? void 0 : draggingPanel.panelLock) && panelData.group === dropFromPanel.group && panelData !== dropFromPanel) {\n                // dock to tabs\n                children.push(React.createElement(DockDropSquare, { key: 'middle', direction: 'middle', panelData: panelData, panelElement: panelElement }));\n            }\n            let box = panelData.parent;\n            if (box && box.children.length > 1) {\n                // deeper drop\n                DockDropLayer.addDepthSquare(children, box.mode, panelData, panelElement, 1);\n                if (box.parent) {\n                    DockDropLayer.addDepthSquare(children, box.parent.mode, panelData, panelElement, 2);\n                }\n            }\n        }\n        return (React.createElement(\"div\", { className: 'dock-drop-layer' }, children));\n    }\n}\nDockDropLayer.contextType = DockContextType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}