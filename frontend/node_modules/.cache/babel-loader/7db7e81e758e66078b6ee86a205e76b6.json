{"ast":null,"code":"import _classCallCheck from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport { Divider } from \"./Divider\";\nimport { DockPanel } from \"./DockPanel\";\nexport var DockBox = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DockBox, _React$PureComponent);\n  var _super = _createSuper(DockBox);\n  function DockBox() {\n    var _this;\n    _classCallCheck(this, DockBox);\n    _this = _super.apply(this, arguments);\n    _this.getRef = function (r) {\n      _this._ref = r;\n    };\n    _this.getDividerData = function (idx) {\n      if (_this._ref) {\n        var _this$props$boxData = _this.props.boxData,\n          children = _this$props$boxData.children,\n          mode = _this$props$boxData.mode;\n        var nodes = _this._ref.childNodes;\n        if (nodes.length === children.length * 2 - 1) {\n          var dividerChildren = [];\n          for (var i = 0; i < children.length; ++i) {\n            if (mode === 'vertical') {\n              dividerChildren.push({\n                size: nodes[i * 2].offsetHeight,\n                minSize: children[i].minHeight\n              });\n            } else {\n              dividerChildren.push({\n                size: nodes[i * 2].offsetWidth,\n                minSize: children[i].minWidth\n              });\n            }\n          }\n          return {\n            element: _this._ref,\n            beforeDivider: dividerChildren.slice(0, idx),\n            afterDivider: dividerChildren.slice(idx)\n          };\n        }\n      }\n      return null;\n    };\n    _this.changeSizes = function (sizes) {\n      var children = _this.props.boxData.children;\n      if (children.length === sizes.length) {\n        for (var i = 0; i < children.length; ++i) {\n          children[i].size = sizes[i];\n        }\n        _this.forceUpdate();\n      }\n    };\n    _this.onDragEnd = function () {\n      _this.context.onSilentChange(null, 'move');\n    };\n    return _this;\n  }\n  _createClass(DockBox, [{\n    key: \"render\",\n    value: function render() {\n      var boxData = this.props.boxData;\n      var minWidth = boxData.minWidth,\n        minHeight = boxData.minHeight,\n        size = boxData.size,\n        children = boxData.children,\n        mode = boxData.mode,\n        id = boxData.id;\n      var isVertical = mode === 'vertical';\n      var childrenRender = [];\n      for (var i = 0; i < children.length; ++i) {\n        if (i > 0) {\n          childrenRender.push(React.createElement(Divider, {\n            idx: i,\n            key: i,\n            isVertical: isVertical,\n            onDragEnd: this.onDragEnd,\n            getDividerData: this.getDividerData,\n            changeSizes: this.changeSizes\n          }));\n        }\n        var child = children[i];\n        if ('tabs' in child) {\n          childrenRender.push(React.createElement(DockPanel, {\n            size: child.size,\n            panelData: child,\n            key: child.id\n          }));\n          // render DockPanel\n        } else if ('children' in child) {\n          childrenRender.push(React.createElement(DockBox, {\n            size: child.size,\n            boxData: child,\n            key: child.id\n          }));\n        }\n      }\n      var cls;\n      if (mode === 'vertical') {\n        cls = 'dock-box dock-vbox';\n      } else {\n        cls = 'dock-box dock-hbox';\n      }\n      return React.createElement(\"div\", {\n        ref: this.getRef,\n        className: cls,\n        \"data-dockid\": id,\n        style: {\n          minWidth: minWidth,\n          minHeight: minHeight,\n          flex: \"\".concat(size, \" 1 \").concat(size, \"px\")\n        }\n      }, childrenRender);\n    }\n  }]);\n  return DockBox;\n}(React.PureComponent);\nDockBox.contextType = DockContextType;","map":{"version":3,"names":["React","DockContextType","Divider","DockPanel","DockBox","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","getRef","r","_ref","getDividerData","idx","_this$props$boxData","props","boxData","children","mode","nodes","childNodes","length","dividerChildren","i","push","size","offsetHeight","minSize","minHeight","offsetWidth","minWidth","element","beforeDivider","slice","afterDivider","changeSizes","sizes","forceUpdate","onDragEnd","context","onSilentChange","_createClass","key","value","render","id","isVertical","childrenRender","createElement","child","panelData","cls","ref","className","style","flex","concat","PureComponent","contextType"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-dock/es/DockBox.js"],"sourcesContent":["import React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport { Divider } from \"./Divider\";\nimport { DockPanel } from \"./DockPanel\";\nexport class DockBox extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.getRef = (r) => {\n            this._ref = r;\n        };\n        this.getDividerData = (idx) => {\n            if (this._ref) {\n                let { children, mode } = this.props.boxData;\n                let nodes = this._ref.childNodes;\n                if (nodes.length === children.length * 2 - 1) {\n                    let dividerChildren = [];\n                    for (let i = 0; i < children.length; ++i) {\n                        if (mode === 'vertical') {\n                            dividerChildren.push({ size: nodes[i * 2].offsetHeight, minSize: children[i].minHeight });\n                        }\n                        else {\n                            dividerChildren.push({ size: nodes[i * 2].offsetWidth, minSize: children[i].minWidth });\n                        }\n                    }\n                    return {\n                        element: this._ref,\n                        beforeDivider: dividerChildren.slice(0, idx),\n                        afterDivider: dividerChildren.slice(idx)\n                    };\n                }\n            }\n            return null;\n        };\n        this.changeSizes = (sizes) => {\n            let { children } = this.props.boxData;\n            if (children.length === sizes.length) {\n                for (let i = 0; i < children.length; ++i) {\n                    children[i].size = sizes[i];\n                }\n                this.forceUpdate();\n            }\n        };\n        this.onDragEnd = () => {\n            this.context.onSilentChange(null, 'move');\n        };\n    }\n    render() {\n        let { boxData } = this.props;\n        let { minWidth, minHeight, size, children, mode, id } = boxData;\n        let isVertical = mode === 'vertical';\n        let childrenRender = [];\n        for (let i = 0; i < children.length; ++i) {\n            if (i > 0) {\n                childrenRender.push(React.createElement(Divider, { idx: i, key: i, isVertical: isVertical, onDragEnd: this.onDragEnd, getDividerData: this.getDividerData, changeSizes: this.changeSizes }));\n            }\n            let child = children[i];\n            if ('tabs' in child) {\n                childrenRender.push(React.createElement(DockPanel, { size: child.size, panelData: child, key: child.id }));\n                // render DockPanel\n            }\n            else if ('children' in child) {\n                childrenRender.push(React.createElement(DockBox, { size: child.size, boxData: child, key: child.id }));\n            }\n        }\n        let cls;\n        if (mode === 'vertical') {\n            cls = 'dock-box dock-vbox';\n        }\n        else {\n            cls = 'dock-box dock-hbox';\n        }\n        return (React.createElement(\"div\", { ref: this.getRef, className: cls, \"data-dockid\": id, style: { minWidth, minHeight, flex: `${size} 1 ${size}px` } }, childrenRender));\n    }\n}\nDockBox.contextType = DockContextType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}