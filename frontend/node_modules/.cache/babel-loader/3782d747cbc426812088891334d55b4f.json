{"ast":null,"code":"import _objectSpread from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{connect}from'react-redux';import{Defaults,Keystrokes,LPointerTargetable,U}from'../../joiner';import{useStateIfMounted}from'use-state-if-mounted';import'./style.scss';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InputComponent(props){var _data;var data=props.data;/*  Uncomment this when we have user authentication: if a user is on a ME, it cannot be edited.\r\n                damiano: ok, ma se data non è ModelElement crasha perchè non ha \"father\"\r\n                mettici prima un\r\n                if (RuntimeAccessibleClass.extends(data, DModelElement.cname))\r\n\r\n    const fathers = U.fatherChain(data as LModelElement);\r\n    for(let father of fathers) {\r\n        const user = Object.keys(selected).find(key => selected[key]?.id === father);\r\n        if(user && user !== DUser.current) editable = false;\r\n        if(!editable) break;\r\n    }\r\n    */var getter=props.getter;var setter=props.setter;var field=props.field;var oldValue=!data?undefined:getter?getter(data):data[field];// !== undefined); ? data[field] : 'undefined'\nvar _useStateIfMounted=useStateIfMounted(oldValue),_useStateIfMounted2=_slicedToArray(_useStateIfMounted,2),value=_useStateIfMounted2[0],setValue=_useStateIfMounted2[1];var _useStateIfMounted3=useStateIfMounted(false),_useStateIfMounted4=_slicedToArray(_useStateIfMounted3,2),isTouched=_useStateIfMounted4[0],setIsTouched=_useStateIfMounted4[1];var _useStateIfMounted5=useStateIfMounted(false),_useStateIfMounted6=_slicedToArray(_useStateIfMounted5,2),showTooltip=_useStateIfMounted6[0],setShowTooltip=_useStateIfMounted6[1];// I check if the value that I have in my local state is being edited by other <Input />\nif(value!==oldValue&&!isTouched){setValue(oldValue);setIsTouched(false);}if(!(data||getter&&setter))return/*#__PURE__*/_jsx(_Fragment,{children:\"Either props.data or both getter & setter are required.\"});var readOnly=props.readonly!==undefined?props.readonly:props.debugmodee!=='true'&&Defaults.check(data===null||data===void 0?void 0:data.id);var type=props.type?props.type:'text';var label=props.label;var jsxLabel=props.jsxLabel;var tooltip=(props.tooltip===true?data===null||data===void 0?void 0:(_data=data['__info_of__'+field])===null||_data===void 0?void 0:_data.txt:props.tooltip)||'';var css='my-auto input ';css+=jsxLabel?'ms-1':label?'ms-auto':'';css+=props.hidden?' hidden-input':'';var autosize=props.autosize===undefined?false:props.autosize;// props.type==='text'\ncss+=autosize?' autosize-input':'';var isBoolean=['checkbox','radio'].includes(type);var change=function change(evt){if(isBoolean){if(readOnly)return;var target=evt.target.checked;if(setter)setter(target);else data[field]=target;}else{setValue(evt.target.value);setIsTouched(true);// I'm editing the element in my local state.\n}};var keyDown=function keyDown(evt){if(evt.key===Keystrokes.enter)blur(evt);if(evt.key===Keystrokes.escape){var _oldValue=getter?getter(data):data[field];evt.target.value=_oldValue;setValue(_oldValue);setIsTouched(false);evt.target.blur();// to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\n// optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\n}};var blur=function blur(evt){if(readOnly||isBoolean)return;var newValue=evt.target.value;var oldValue=getter?getter(data):data[field];if(newValue!==oldValue){if(setter)setter(newValue);else data[field]=newValue;}// I terminate my editing, so I communicate it to other <Input /> that render the same field.\nsetIsTouched(false);};var otherprops=_objectSpread({},props);delete otherprops.data;delete otherprops.field;delete otherprops.getter;delete otherprops.setter;delete otherprops.label;delete otherprops.jsxLabel;delete otherprops.tooltip;delete otherprops.hidden;delete otherprops.inputStyle;delete otherprops.children;delete otherprops.autosize;// because react complains is bool in dom attribute or unknown attrib name\nvar checked=undefined;if(isBoolean)checked=typeof value===\"boolean\"?value:typeof value===\"string\"?U.fromBoolString(value):!!value;var cursor;if(tooltip)cursor='help';else if(readOnly)cursor='not-allowed';else if(isBoolean)cursor='pointer';else cursor='auto';var inputStyle=props.inputStyle||{};if(!inputStyle.cursor&&cursor==='not-allowed'){inputStyle.cursor=cursor;}var rootStyle=_objectSpread({display:jsxLabel||label?'flex':'block',cursor:cursor},props.style||{});if(readOnly&&!(\"color\"in rootStyle))rootStyle.color=\"gray\";var input=/*#__PURE__*/_createElement(\"input\",_objectSpread(_objectSpread({},otherprops),{},{key:\"\".concat(field,\".\").concat(data===null||data===void 0?void 0:data.id),className:props.inputClassName||css,style:inputStyle,spellCheck:false,readOnly:readOnly,type:type,value:value,onChange:change,onBlur:blur,onKeyDown:keyDown,checked:checked}));return/*#__PURE__*/_jsxs(\"label\",_objectSpread(_objectSpread({className:'p-1'},otherprops),{},{style:rootStyle,children:[label&&/*#__PURE__*/_jsx(\"span\",{className:'my-auto',onMouseEnter:function onMouseEnter(e){return setShowTooltip(true);},onMouseLeave:function onMouseLeave(e){return setShowTooltip(false);},children:label}),jsxLabel&&/*#__PURE__*/_jsx(\"span\",{onMouseEnter:function onMouseEnter(e){return setShowTooltip(true);},onMouseLeave:function onMouseLeave(e){return setShowTooltip(false);},style:{width:'100%'},children:jsxLabel}),tooltip&&showTooltip&&/*#__PURE__*/_jsxs(\"div\",{className:'my-tooltip',children:[/*#__PURE__*/_jsx(\"b\",{className:'text-center text-capitalize',children:field}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:tooltip})]}),autosize?/*#__PURE__*/_jsx(\"div\",{className:(autosize?'autosize-input-container':'')+(props.asLabel?' labelstyle':''),\"data-value\":value,children:input}):input]}));}InputComponent.cname='InputComponent';function mapStateToProps(state,ownProps){var _ownProps$data;var ret={};var pointer=typeof ownProps.data==='string'?ownProps.data:(_ownProps$data=ownProps.data)===null||_ownProps$data===void 0?void 0:_ownProps$data.id;ret.debugmodee=state.debug?'true':'false';if(pointer)ret.data=LPointerTargetable.fromPointer(pointer);/*\r\n    const selected = state.selected;\r\n    ret.selected = {};\r\n    for(let user of Object.keys(selected)) {\r\n        const pointer = selected[user];\r\n        if(pointer) ret.selected[user] = LModelElement.fromPointer(pointer);\r\n        else ret.selected[user] = null;\r\n    }\r\n\r\n    */return ret;}function mapDispatchToProps(dispatch){var ret={};return ret;}export var InputConnected=connect(mapStateToProps,mapDispatchToProps)(InputComponent);export function Input(props){var children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return/*#__PURE__*/_jsx(InputConnected,_objectSpread({},_objectSpread(_objectSpread({},props),{},{children:children})));}InputComponent.cname='InputComponent';InputConnected.cname='InputConnected';Input.cname='Input';","map":{"version":3,"names":["React","connect","Defaults","Keystrokes","LPointerTargetable","U","useStateIfMounted","Fragment","_Fragment","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","InputComponent","props","_data","data","getter","setter","field","oldValue","undefined","_useStateIfMounted","_useStateIfMounted2","_slicedToArray","value","setValue","_useStateIfMounted3","_useStateIfMounted4","isTouched","setIsTouched","_useStateIfMounted5","_useStateIfMounted6","showTooltip","setShowTooltip","children","readOnly","readonly","debugmodee","check","id","type","label","jsxLabel","tooltip","txt","css","hidden","autosize","isBoolean","includes","change","evt","target","checked","keyDown","key","enter","blur","escape","newValue","otherprops","_objectSpread","inputStyle","fromBoolString","cursor","rootStyle","display","style","color","input","concat","className","inputClassName","spellCheck","onChange","onBlur","onKeyDown","onMouseEnter","e","onMouseLeave","width","asLabel","cname","mapStateToProps","state","ownProps","_ownProps$data","ret","pointer","debug","fromPointer","mapDispatchToProps","dispatch","InputConnected","Input","arguments","length"],"sources":["C:/d/Programming/web/jodel-mde/src/components/forEndUser/Input.tsx"],"sourcesContent":["import React, {Dispatch, KeyboardEvent, ReactElement, ReactNode} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../redux/store';\r\nimport {Defaults, DPointerTargetable, GObject, Keystrokes, LPointerTargetable, Overlap, Pointer, U} from '../../joiner';\r\nimport {useStateIfMounted} from 'use-state-if-mounted';\r\nimport './style.scss';\r\n\r\n\r\nfunction InputComponent(props: AllProps) {\r\n    const data = props.data;\r\n\r\n    /*  Uncomment this when we have user authentication: if a user is on a ME, it cannot be edited.\r\n                damiano: ok, ma se data non è ModelElement crasha perchè non ha \"father\"\r\n                mettici prima un\r\n                if (RuntimeAccessibleClass.extends(data, DModelElement.cname))\r\n\r\n    const fathers = U.fatherChain(data as LModelElement);\r\n    for(let father of fathers) {\r\n        const user = Object.keys(selected).find(key => selected[key]?.id === father);\r\n        if(user && user !== DUser.current) editable = false;\r\n        if(!editable) break;\r\n    }\r\n    */\r\n\r\n    const getter = props.getter;\r\n    const setter = props.setter;\r\n    const field: string = props.field as string;\r\n    const oldValue = (!data) ? undefined : (getter) ? getter(data) : data[field]; // !== undefined); ? data[field] : 'undefined'\r\n    const [value, setValue] = useStateIfMounted(oldValue);\r\n    const [isTouched, setIsTouched] = useStateIfMounted(false);\r\n    const [showTooltip, setShowTooltip] = useStateIfMounted(false);\r\n\r\n    // I check if the value that I have in my local state is being edited by other <Input />\r\n    if (value !== oldValue && !isTouched){\r\n        setValue(oldValue);\r\n        setIsTouched(false);\r\n    }\r\n\r\n\r\n    if (!(data || (getter && setter))) return(<>Either props.data or both getter & setter are required.</>);\r\n    const readOnly = (props.readonly !== undefined) ? props.readonly : props.debugmodee !== 'true' && Defaults.check(data?.id);\r\n    const type = (props.type) ? props.type : 'text';\r\n    const label: ReactNode|string|undefined = props.label;\r\n    const jsxLabel: ReactNode|undefined = props.jsxLabel;\r\n    let tooltip: ReactNode|string|undefined = ((props.tooltip === true) ? data?.['__info_of__' + field]?.txt : props.tooltip) || '';\r\n\r\n    let css = 'my-auto input ';\r\n    css += (jsxLabel) ? 'ms-1' : (label) ? 'ms-auto' : '';\r\n    css += (props.hidden) ? ' hidden-input' : '';\r\n    let autosize: boolean = props.autosize === undefined ? false : props.autosize; // props.type==='text'\r\n    css += autosize ? ' autosize-input' : '';\r\n    const isBoolean = (['checkbox', 'radio'].includes(type));\r\n\r\n    const change = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (isBoolean) {\r\n            if (readOnly) return;\r\n            const target = evt.target.checked;\r\n            if (setter) setter(target);\r\n            else data[field] = target;\r\n        } else {\r\n            setValue(evt.target.value);\r\n            setIsTouched(true);     // I'm editing the element in my local state.\r\n        }\r\n    }\r\n    const keyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (evt.key === Keystrokes.enter) blur(evt as any);\r\n        if (evt.key === Keystrokes.escape) {\r\n            const oldValue = getter ? getter(data) : data[field];\r\n            (evt.target as HTMLInputElement).value = oldValue;\r\n            setValue(oldValue);\r\n            setIsTouched(false);\r\n            (evt.target as HTMLInputElement).blur();\r\n            // to optimize: probably can remove a large part of this function because this should trigger blur event as well. or move \"change\" event contents here\r\n            // optimize 2: memoize the whole component, so it won't update unless the displayed value changed. this would also fix cursor going to input end when pressing enter.\r\n        }\r\n    }\r\n\r\n    const blur = (evt: React.FocusEvent<HTMLInputElement>) => {\r\n        if (readOnly || isBoolean) return;\r\n        const newValue = evt.target.value;\r\n        const oldValue = getter ? getter(data) : data[field];\r\n        if (newValue !== oldValue) {\r\n            if (setter) setter(newValue);\r\n            else data[field] = newValue;\r\n        }\r\n        // I terminate my editing, so I communicate it to other <Input /> that render the same field.\r\n        setIsTouched(false);\r\n    }\r\n\r\n    const otherprops: GObject = {...props};\r\n    delete otherprops.data;\r\n    delete otherprops.field;\r\n    delete otherprops.getter;\r\n    delete otherprops.setter;\r\n    delete otherprops.label;\r\n    delete otherprops.jsxLabel;\r\n    delete otherprops.tooltip;\r\n    delete otherprops.hidden;\r\n    delete otherprops.inputStyle;\r\n    delete otherprops.children;\r\n    delete otherprops.autosize; // because react complains is bool in dom attribute or unknown attrib name\r\n\r\n    let checked: boolean | undefined = undefined;\r\n    if (isBoolean) checked = typeof value === \"boolean\" ? value : (typeof value === \"string\" ? U.fromBoolString(value) : !!value);\r\n\r\n    let cursor: string;\r\n    if (tooltip) cursor = 'help';\r\n    else if (readOnly) cursor = 'not-allowed';\r\n    else if (isBoolean) cursor = 'pointer';\r\n    else cursor = 'auto';\r\n    let inputStyle = props.inputStyle || {};\r\n    if (!inputStyle.cursor && cursor === 'not-allowed') { inputStyle.cursor = cursor; }\r\n    let rootStyle = {display: (jsxLabel || label) ? 'flex' : 'block', cursor, ...((props as any).style || {})};\r\n    if (readOnly && !(\"color\" in rootStyle)) rootStyle.color = \"gray\";\r\n    let input = <input {...otherprops}\r\n                       key={`${field}.${data?.id}`}\r\n                       className={props.inputClassName || css}\r\n                       style={inputStyle}\r\n                       spellCheck={false}\r\n                       readOnly={readOnly}\r\n                       type={type} value={value} onChange={change} onBlur={blur} onKeyDown={keyDown}\r\n                       checked={checked} />\r\n\r\n    return(<label className={'p-1'} {...otherprops}\r\n                  style={rootStyle}>\r\n\r\n        {label && <span className={'my-auto'} onMouseEnter={e => setShowTooltip(true)}\r\n                         onMouseLeave={e => setShowTooltip(false)}>{label}\r\n        </span>}\r\n\r\n        {jsxLabel && <span onMouseEnter={e => setShowTooltip(true)}\r\n                            onMouseLeave={e => setShowTooltip(false)} style={{width: '100%'}}>{jsxLabel}\r\n        </span>}\r\n\r\n        {(tooltip && showTooltip) && <div className={'my-tooltip'}>\r\n            <b className={'text-center text-capitalize'}>{field}</b>\r\n            <br />\r\n            <label>{tooltip}</label>\r\n        </div>}\r\n\r\n        {autosize ? <div className={(autosize ? 'autosize-input-container' : '') + (props.asLabel ? ' labelstyle' : '')}\r\n                         data-value={value}>{input}\r\n        </div> : input}\r\n    </label>);\r\n}\r\n\r\nInputComponent.cname = 'InputComponent';\r\nexport interface InputOwnProps {\r\n    data?: LPointerTargetable | DPointerTargetable | Pointer<DPointerTargetable, 1, 1, LPointerTargetable>;\r\n    field?: string;\r\n    getter?: (data: any/*LPointerTargetable*/) => string | boolean | undefined;\r\n    setter?: (value: string|boolean) => void;\r\n    label?: string | ReactNode;\r\n    jsxLabel?: ReactNode;\r\n    type?: 'checkbox'|'color'|'date'|'datetime-local'|'email'|'file'|'image'|'month'|\r\n    'number'|'password'|'radio'|'range'|'tel'|'text'|'time'|'url'|'week';\r\n    className?: string;\r\n    style?: GObject;\r\n    readonly?: boolean;\r\n    tooltip?: string | boolean | ReactElement;\r\n    hidden?: boolean;\r\n    autosize?: boolean;\r\n    inputClassName?: string;\r\n    inputStyle?: GObject;\r\n    asLabel?: boolean;\r\n    key?: React.Key | null;\r\n    placeholder?: string;\r\n}\r\ninterface StateProps {\r\n    debugmodee: string;\r\n    data: LPointerTargetable & GObject;\r\n    // selected: Dictionary<Pointer<DUser>, LModelElement | null>;\r\n}\r\ninterface DispatchProps { }\r\ntype AllProps = Overlap<InputOwnProps, Overlap<StateProps, DispatchProps>>;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: InputOwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    const pointer: Pointer | undefined = typeof ownProps.data === 'string' ? ownProps.data : ownProps.data?.id;\r\n    ret.debugmodee = state.debug ? 'true' : 'false';\r\n    if (pointer) ret.data = LPointerTargetable.fromPointer(pointer);\r\n    /*\r\n    const selected = state.selected;\r\n    ret.selected = {};\r\n    for(let user of Object.keys(selected)) {\r\n        const pointer = selected[user];\r\n        if(pointer) ret.selected[user] = LModelElement.fromPointer(pointer);\r\n        else ret.selected[user] = null;\r\n    }\r\n\r\n    */\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const InputConnected =\r\n    connect<StateProps, DispatchProps, InputOwnProps, DState>(mapStateToProps, mapDispatchToProps)(InputComponent);\r\n\r\n\r\nexport function Input(props: InputOwnProps, children: (string | React.Component)[] = []): ReactElement {\r\n    return <InputConnected {...{...props, children}} />;\r\n}\r\n\r\nInputComponent.cname = 'InputComponent';\r\nInputConnected.cname = 'InputConnected';\r\nInput.cname = 'Input';\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}