{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\pages\\\\Recent.tsx\",\n  _this = this;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LProject, Try, U } from '../joiner';\nimport { Dashboard } from './components';\nimport Storage from \"../data/storage\";\nimport { Cards } from './components/cards/Cards';\nimport { Catalog } from './components/catalog/Catalog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllProjectsComponent(props) {\n  const {\n    projects\n  } = props;\n  const reader = new FileReader();\n  reader.onload = async e => {\n    var _e$target;\n    /* Import Project File */\n    const content = String((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n    if (!content) return;\n    try {\n      const project = JSON.parse(content);\n      const projects = Storage.read('projects') || [];\n      const filtered = projects.filter(p => p.id !== project.id);\n      filtered.push(project);\n      Storage.write('projects', filtered);\n      U.refresh();\n    } catch (e) {\n      alert('Invalid File.');\n    }\n  };\n  const importProject = async e => {\n    const files = e.target.files || [];\n    if (!files.length) return;\n    const file = files[0];\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(Try, {\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      active: 'Recent',\n      version: props.version,\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Cards, {\n          children: [/*#__PURE__*/_jsxDEV(Cards.Item, {\n            title: 'Need help?',\n            subtitle: 'Don\\' ask Alexa, click here instead.',\n            icon: 'alexa',\n            style: 'red-orange'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), false && /*#__PURE__*/_jsxDEV(Cards.Item, {\n            icon: 'question',\n            style: 'clear',\n            title: 'Ehy!',\n            subtitle: 'What do you want to do today?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Catalog, {\n          projects: projects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}\n_c = AllProjectsComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.projects = LProject.fromArr(state.projects);\n  ret.version = state.version;\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nconst AllProjectsConnected = connect(mapStateToProps, mapDispatchToProps)(AllProjectsComponent);\nconst RecentPage = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(AllProjectsConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = RecentPage;\nexport { RecentPage };\nvar _c, _c2;\n$RefreshReg$(_c, \"AllProjectsComponent\");\n$RefreshReg$(_c2, \"RecentPage\");","map":{"version":3,"names":["React","connect","LProject","Try","U","Dashboard","Storage","Cards","Catalog","jsxDEV","_jsxDEV","AllProjectsComponent","props","projects","reader","FileReader","onload","e","_e$target","content","String","target","result","project","JSON","parse","read","filtered","filter","p","id","push","write","refresh","alert","importProject","files","length","file","readAsText","children","active","version","Fragment","Item","title","subtitle","icon","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","ownProps","ret","fromArr","mapDispatchToProps","dispatch","AllProjectsConnected","RecentPage","arguments","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/pages/Recent.tsx"],"sourcesContent":["import React, {ChangeEvent, MouseEventHandler, Component, Dispatch, ReactElement, useState, useRef } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DProject, DState, LProject, Try, U} from '../joiner';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport {Dashboard, Project} from './components';\r\nimport Storage from \"../data/storage\";\r\n\r\nimport {Menu, Item, Divisor} from './components/menu/Menu';\r\nimport { Cards, Card } from './components/cards/Cards';\r\nimport { Catalog } from './components/catalog/Catalog';\r\n\r\nimport colors from '../static/img/colors.png';\r\n\r\n\r\nfunction AllProjectsComponent(props: AllProps): JSX.Element {\r\n    const {projects} = props;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async e => {\r\n        /* Import Project File */\r\n        const content = String(e.target?.result);\r\n        if(!content) return;\r\n        try {\r\n            const project = JSON.parse(content) as DProject;\r\n            const projects = Storage.read<DProject[]>('projects') || [];\r\n            const filtered = projects.filter(p => p.id !== project.id);\r\n            filtered.push(project);\r\n            Storage.write('projects', filtered);\r\n            U.refresh();\r\n        } catch (e) {alert('Invalid File.')}\r\n    }\r\n    \r\n    const importProject = async(e: ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files || [];\r\n        if(!files.length) return;\r\n        const file = files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n\r\n\r\n\r\n    return(<Try>\r\n        <Dashboard active={'Recent'} version={props.version}>\r\n            \r\n            <React.Fragment>                \r\n\r\n                <Cards>\r\n                    <Cards.Item\r\n                        title={'Need help?'} \r\n                        subtitle={'Don\\' ask Alexa, click here instead.'}\r\n                        icon={'alexa'} \r\n                        style={'red-orange'}   \r\n                    />\r\n                    {false && <Cards.Item icon={'question'} style={'clear'} title={'Ehy!'} subtitle={'What do you want to do today?'}/>}\r\n                </Cards>\r\n\r\n                <Catalog projects={projects} />\r\n            </React.Fragment>\r\n            \r\n        </Dashboard>\r\n    </Try>);\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    projects: LProject[];\r\n    version: DState[\"version\"];\r\n}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.projects = LProject.fromArr(state.projects);\r\n    ret.version = state.version;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nconst AllProjectsConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AllProjectsComponent);\r\n\r\nconst RecentPage = (props: OwnProps, children: (string | Component)[] = []): ReactElement => {\r\n    return <AllProjectsConnected {...{...props, children}} />;\r\n}\r\n\r\nexport {RecentPage};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}