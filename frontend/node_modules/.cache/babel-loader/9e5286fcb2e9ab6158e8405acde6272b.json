{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\widgets\\\\Widgets.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './widgets.scss';\nimport { SetRootFieldAction } from '../../joiner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Toggle = props => {\n  _s();\n  const [value, setValue] = useState(false);\n  const labels = props.labels ? props.labels : {\n    true: props.name + ' on',\n    false: props.name + ' off'\n  };\n  const toggleValue = () => {\n    setValue(!value);\n    SetRootFieldAction.new(props.name, !value);\n    console.log('action set state', {\n      n: props.name,\n      value: !value\n    });\n  };\n  let trueval = props.values ? props.values.true : true;\n  let falseval = props.values ? props.values.false : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toggle ${props.size ? props.size : 'medium'}`,\n    onClick: () => {\n      toggleValue();\n    },\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.name,\n      type: \"checkbox\",\n      value: \"true\",\n      checked: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [value === trueval && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"on\",\n        children: labels['true']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 39\n      }, this), value === falseval && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"off\",\n        children: labels['false']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Toggle, \"HfkdrTZbv6ig6ZNY/1nxKCooDOU=\");\n_c = Toggle;\nexport const HRule = props => {\n  const theme = !props.theme ? 'normal' : props.theme;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.style ? /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: `hrule ${theme}`,\n      style: props.style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: `hrule ${theme}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// type RangeProps = {\n//     name: string;\n//     min: int;\n//     max: int;\n//     step?: int;\n//     label?: string;\n\n// }\n\n// export const Range = (props: RangeProps) => {\n\n//     return (<div className={'range'}>\n//         /* <div className={'level'}>{level}</div> */\n//         <input\n//             name={props.name}\n//             id={props.name}\n//             min={props.min}\n//             max={props.max}\n//             type=\"range\"\n//             step={props.step}\n//             /* value={level} */\n//             onChange={(e)=>{SetRootFieldAction.new(props.name, e.target.value)}} />\n\n//         <div className={'tip'}>Abstraction1</div>\n//     </div>);\n\n// }\n_c2 = HRule;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toggle\");\n$RefreshReg$(_c2, \"HRule\");","map":{"version":3,"names":["React","useState","SetRootFieldAction","jsxDEV","_jsxDEV","Fragment","_Fragment","Toggle","props","_s","value","setValue","labels","true","name","false","toggleValue","new","console","log","n","trueval","values","falseval","className","size","onClick","style","children","id","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","HRule","theme","_c2","$RefreshReg$"],"sources":["C:/d/Programming/web/jodel-mde/src/components/widgets/Widgets.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './widgets.scss';\r\nimport { event } from 'jquery';\r\nimport { int } from '../../joiner/types';\r\nimport { windoww } from '../../joiner/types';\r\nimport { SetRootFieldAction } from '../../joiner';\r\nimport { MapStateToProps } from 'react-redux';\r\nimport { InputMapStateToProps } from '../forEndUser/Input';\r\nimport { DState } from '../../joiner';\r\nimport { VertexOwnProps, VertexStateProps } from '../../graph/graphElement/sharedTypes/sharedTypes';\r\n\r\n\r\n\r\ntype ToggleValues = {\r\n    true: string|boolean;\r\n    false: string|boolean;\r\n}\r\n\r\ntype ToggleProps = {\r\n    name: string;\r\n    values?: ToggleValues;\r\n    labels?: ToggleValues;\r\n    size?: \"small\" | \"medium\" | \"large\";\r\n    style?: React.CSSProperties;\r\n};\r\n\r\nexport const Toggle = (props: ToggleProps) => {\r\n    const [value, setValue] = useState<boolean>(false);\r\n\r\n    const labels = props.labels ? props.labels : {true: props.name+' on', false: props.name+' off'};\r\n    const toggleValue = () => {\r\n        setValue(!value);\r\n        SetRootFieldAction.new(props.name, !value);\r\n        console.log('action set state', {n:props.name, value: !value});\r\n    };\r\n    let trueval = props.values ? props.values.true : true;\r\n    let falseval = props.values ? props.values.false : false;\r\n\r\n    return (\r\n        <div className={`toggle ${props.size ? props.size : 'medium'}`} onClick={() => {toggleValue()}} style={props.style}>\r\n            <input id={props.name} type=\"checkbox\" value=\"true\" checked={value}  />\r\n            <div className={\"labels\"}>\r\n                {value === trueval && <span className={\"on\"}>{labels['true']}</span>}\r\n                {value === falseval && <span className={\"off\"}>{labels['false']}</span>}\r\n            </div>\r\n            <label></label>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype HRuleProps = {\r\n    theme?:  'normal' | 'light' | 'dark';\r\n    style?: React.CSSProperties;\r\n}\r\nexport const HRule = (props: HRuleProps) => {\r\n\r\n    const theme = (!props.theme ? 'normal' : props.theme);\r\n    return (<>\r\n        {props.style ?\r\n            <hr className={`hrule ${theme}`} style={props.style}></hr>\r\n        :\r\n            <hr className={`hrule ${theme}`} ></hr>\r\n        }\r\n    </>);\r\n}\r\n\r\n\r\n// type RangeProps = {\r\n//     name: string;\r\n//     min: int;\r\n//     max: int;\r\n//     step?: int;\r\n//     label?: string;\r\n\r\n// }\r\n\r\n// export const Range = (props: RangeProps) => {\r\n\r\n//     return (<div className={'range'}>\r\n//         /* <div className={'level'}>{level}</div> */\r\n//         <input\r\n//             name={props.name}\r\n//             id={props.name}\r\n//             min={props.min}\r\n//             max={props.max}\r\n//             type=\"range\"\r\n//             step={props.step}\r\n//             /* value={level} */\r\n//             onChange={(e)=>{SetRootFieldAction.new(props.name, e.target.value)}} />\r\n\r\n//         <div className={'tip'}>Abstraction1</div>\r\n//     </div>);\r\n\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}