{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\dock\\\\MyRcDock.tsx\",\n  _dec,\n  _class,\n  _class2,\n  _dec2,\n  _class3,\n  _class4;\nimport React, { PureComponent } from \"react\";\nimport { RuntimeAccessible, Try, U, windoww } from \"../../joiner\";\nimport { DockLayout } from \"rc-dock\";\nimport { MyPortal } from \"./MyDock\";\nimport \"./DockManagerStyles.scss\";\n\n// needs to be class component because needs setState() to be called externally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TabHeaderState {\n  constructor() {\n    this.pinned = void 0;\n    this.pinned = '';\n  }\n}\nclass TabContentState extends TabHeaderState {}\nexport let TabHeader = (_dec = RuntimeAccessible('TabHeader'), _dec(_class = (_class2 = class TabHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    TabHeader.instances[props.tid] = this;\n    this.state = new TabHeaderState();\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    const content = /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: () => {\n        console.log(\"tab dragging start\");\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this);\n    console.log(\"tabheader portal pre pin\", {\n      pinned\n    });\n    if (!pinned) return content;\n    const strip = PinnableStrip[pinned];\n    const html = strip.headerHtml;\n    console.log(\"taabheader portal\", {\n      html,\n      content\n    });\n    if (!html) return content;\n    return /*#__PURE__*/_jsxDEV(MyPortal, {\n      container: html,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n}, _class2.cname = 'TabHeader', _class2.instances = {}, _class2)) || _class);\nexport let TabContent = (_dec2 = RuntimeAccessible('TabHeader'), _dec2(_class3 = (_class4 = class TabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    TabContent.instances[props.tid] = this;\n    this.state = new TabContentState();\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    const content = /*#__PURE__*/_jsxDEV(Try, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this);\n    console.log(\"tabcontent portal pre pin\", {\n      pinned\n    });\n    if (!pinned) return content;\n    const strip = PinnableStrip[pinned];\n    const html = strip.contentHtml;\n    console.log(\"tabcontent portal\", {\n      html,\n      content\n    });\n    if (!html) return content;\n    return /*#__PURE__*/_jsxDEV(MyPortal, {\n      container: html,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n}, _class4.cname = 'TabContent', _class4.instances = {}, _class4)) || _class3);\nclass PinnableStripState {\n  // pinnedTabs: TabData[];// or what?\n\n  constructor() {\n    this.pinnedTabs = void 0;\n    this.pinnedTabs = [];\n  }\n}\nexport class PinnableStrip extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.html = null;\n    this.headerHtml = null;\n    this.contentHtml = null;\n    PinnableStrip[props.side] = this;\n    this.state = new PinnableStripState();\n  }\n  render() {\n    switch (this.props.side) {\n      case \"t\":\n        break;\n      case \"b\":\n        break;\n      case \"l\":\n        break;\n      case \"r\":\n        break;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (this.state.pinnedTabs.length ? '' : 'empty') + \" pinnable-strip pinnable-strip-\" + this.props.side,\n      ref: curr => this.html = curr,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-row\",\n        ref: curr => this.headerHtml = curr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-row\",\n        ref: curr => this.contentHtml = curr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinnable-strip-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-anchor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 54\n        }, this), \"anchor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\nPinnableStrip.t = void 0;\nPinnableStrip.b = void 0;\nPinnableStrip.l = void 0;\nPinnableStrip.r = void 0;\nlet currentDropRect;\nlet currentDropArea;\nlet dockLayout;\nlet dropIndicator = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;');\nfunction getStrip(side) {\n  let s = side[0];\n  return PinnableStrip[s];\n}\nfunction getStripHtml(side) {\n  return getStrip(side).html;\n}\nwindoww.highlightAnchorArea = function (side) {\n  //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\n  //if (!highlightdiv) return;\n  //highlightdiv.style.background = '#ff000077';\n  let strip = getStripHtml(side);\n  console.log(\"highlightpin\", {\n    strip,\n    side,\n    PinnableStrip\n  });\n  strip.classList.add('dock-drop-indicator');\n};\nwindoww.hideAnchorArea = function (side) {\n  let strip = getStripHtml(side);\n  strip.classList.remove('dock-drop-indicator');\n};\nconst todormovethisif = true;\nwindoww.confirmSetAnchor = function (side) {\n  const tabdata = PinnableDock.getTabFromDropRect(currentDropRect);\n  let strip = getStrip(side);\n  if (todormovethisif && strip.state.pinnedTabs.length === 0) strip.setState({\n    pinnedTabs: [...strip.state.pinnedTabs, tabdata.id]\n  });\n  let content = TabContent.instances[tabdata.id];\n  let title = TabHeader.instances[tabdata.id];\n  //console.log(\"confirm pin anchor 0\", {tid:tabdata.id, TabHeader, TabContent});\n  console.log(\"confirm pin anchor\", {\n    content,\n    title,\n    strip,\n    side,\n    tabdata,\n    currentDropRect\n  });\n  content.setState({\n    pinned: side\n  });\n  title.setState({\n    pinned: side\n  });\n\n  // how to? i create a new dockiing here for each strip?\n  // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\n  //strip.classList.remove('dock-drop-indicator');\n};\n// <LayoutProps, LayoutState>\nfunction makeAnchorControl(side) {\n  let s = side[0];\n  const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"><div class=\"dock-drop-square-box\"></div></div>`;\n  return U.toHtml(str);\n}\nconst anchorControls = [makeAnchorControl('top'), makeAnchorControl('bottom'), makeAnchorControl('left'), makeAnchorControl('right')];\nexport class PinnableDock extends DockLayout {\n  constructor(props) {\n    super(props);\n    let debug = false;\n    if (!debug) return;\n    let t = this;\n    for (let k in t) {\n      let originalfunc = t[k];\n      if (typeof t[k] === \"function\") t[k] = function () {\n        for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n          a[_key] = arguments[_key];\n        }\n        console.warn('PinnableDock called ' + k, {\n          arguments\n        });\n        return originalfunc(...a);\n      };\n    }\n  }\n  setState(state, callback) {\n    // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\n    super.setState(state, callback);\n  }\n  static getTabFromDropRect(dropRect) {\n    const panel = dropRect.source.props.panelData;\n    const tabdata = panel.tabs.filter(t => t.id === panel.activeId)[0];\n    return tabdata;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    super.componentDidUpdate(prevProps, prevState, snapshot);\n    if (this.state.dropRect) {\n      let droparea = this.state.dropRect.element;\n      if (!droparea) return;\n      /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\n      let droplayer = droparea.querySelector('.dock-drop-layer');\n      currentDropArea = droparea;\n      dockLayout = this._ref;\n      currentDropRect = this.state.dropRect;\n      windoww.htmldockLayout = this._ref;\n      if (!droplayer) return;\n      droplayer.append(...anchorControls);\n      // droparea.style.backgroundColor = \"red\";\n    }\n    // document.querySelectorAll('.dock-drop-layer')\n  }\n  //\n  // onDragStateChange = (draggingScope: any) => void{\n  //     //super.onDragStateChange(draggingScope);\n  // }\n  // onSilentChange(currentTabId?: string, direction?: DropDirection) {\n  //     super.onSilentChange(currentTabId, direction);\n  // }\n  // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\n  //     super.dockMove(source, target, direction);\n  // }\n  //\n  // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\n  //     super.setDropRect(element, direction, source, event, panelSize);\n  // }\n  //\n  // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\n  //     super.changeLayout(layoutData, currentTabId, direction, silent);\n  // }\n  // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\n  //     return super.updateTab(id, newTab, makeActive);\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pinnable-dock-root\",\n      children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinnable-dock-middle-strip\",\n        children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"l\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), super.render(), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 16\n    }, this);\n  }\n}","map":{"version":3,"names":["React","PureComponent","RuntimeAccessible","Try","U","windoww","DockLayout","MyPortal","jsxDEV","_jsxDEV","TabHeaderState","constructor","pinned","TabContentState","TabHeader","_dec","_class","_class2","Component","props","instances","tid","state","render","content","onMouseDown","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","strip","PinnableStrip","html","headerHtml","container","cname","TabContent","_dec2","_class3","_class4","contentHtml","PinnableStripState","pinnedTabs","side","className","length","ref","curr","t","b","l","r","currentDropRect","currentDropArea","dockLayout","dropIndicator","toHtml","getStrip","s","getStripHtml","highlightAnchorArea","classList","add","hideAnchorArea","remove","todormovethisif","confirmSetAnchor","tabdata","PinnableDock","getTabFromDropRect","setState","id","title","makeAnchorControl","str","anchorControls","debug","k","originalfunc","_len","arguments","a","Array","_key","warn","callback","dropRect","panel","source","panelData","tabs","filter","activeId","componentDidUpdate","prevProps","prevState","snapshot","droparea","element","droplayer","querySelector","_ref","htmldockLayout","append"],"sources":["C:/d/Programming/web/jodel-mde/src/components/dock/MyRcDock.tsx"],"sourcesContent":["import React, {PureComponent, ReactElement, ReactNode, useState} from \"react\";\r\nimport {Dictionary, DocString, GObject, Log, RuntimeAccessible, Try, U, windoww} from \"../../joiner\";\r\nimport {DockingLayout} from \"smart-webcomponents-react/dockinglayout\";\r\nimport $ from \"jquery\";\r\nimport {DockLayout, LayoutProps, PanelData, TabData} from \"rc-dock\";\r\nimport {MyPortal} from \"./MyDock\";\r\nimport \"./DockManagerStyles.scss\";\r\nimport {LayoutData} from \"rc-dock/src/DockData\";\r\n\r\n\r\n// needs to be class component because needs setState() to be called externally\r\ninterface TabHeaderProps{\r\n    tid: string;\r\n    children: ReactNode;\r\n}\r\nclass TabHeaderState{\r\n    pinned: AnchorTypes | \"\";\r\n    constructor() {\r\n        this.pinned = '';\r\n    }\r\n}\r\ninterface TabContentProps extends TabHeaderProps{}\r\nclass TabContentState extends TabHeaderState{}\r\n\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabHeader extends React.Component<TabHeaderProps, TabHeaderState>{\r\n    static cname: string = 'TabHeader';\r\n    static instances: Dictionary<string, TabHeader> = {};\r\n    constructor(props:TabHeaderProps) {\r\n        super(props);\r\n        TabHeader.instances[props.tid] = this;\r\n        this.state = new TabHeaderState();\r\n    }\r\n    render(): ReactNode {\r\n        const props: TabHeaderProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        const content = <div onMouseDown={()=>{console.log(\"tab dragging start\")}}>{props.children}</div>;\r\n        console.log(\"tabheader portal pre pin\", {pinned});\r\n        if (!pinned) return content;\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = strip.headerHtml;\r\n        console.log(\"taabheader portal\", {html, content});\r\n        if (!html) return content;\r\n        return <MyPortal container={html}>{content}</MyPortal>;\r\n    }\r\n}\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabContent extends React.Component<TabContentProps, TabContentState>{\r\n    static cname: string = 'TabContent';\r\n    static instances: Dictionary<string, TabContent> = {};\r\n    constructor(props:TabContentProps) {\r\n        super(props);\r\n        TabContent.instances[props.tid] = this;\r\n        this.state = new TabContentState();\r\n    }\r\n    render() {\r\n        const props: TabContentProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        const content = <Try>{props.children}</Try>;\r\n        console.log(\"tabcontent portal pre pin\", {pinned});\r\n        if (!pinned) return content;\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = strip.contentHtml;\r\n        console.log(\"tabcontent portal\", {html, content});\r\n        if (!html) return content;\r\n        return <MyPortal container={html}>{content}</MyPortal>;\r\n    }\r\n}\r\n\r\ntype AnchorTypes = \"t\" | \"l\" | \"r\" | \"b\";\r\ninterface PinnableStripProps{\r\n    side: AnchorTypes;\r\n}\r\nclass PinnableStripState{\r\n    // pinnedTabs: TabData[];// or what?\r\n    pinnedTabs: string[];\r\n\r\n    constructor() {\r\n        this.pinnedTabs = [];\r\n    }\r\n}\r\nexport class PinnableStrip extends PureComponent<PinnableStripProps, PinnableStripState>{\r\n    public static t: PinnableStrip;\r\n    public static b: PinnableStrip;\r\n    public static l: PinnableStrip;\r\n    public static r: PinnableStrip;\r\n\r\n    html: Element | null = null;\r\n    headerHtml: Element | null = null;\r\n    contentHtml: Element | null = null;\r\n\r\n    constructor(props: PinnableStripProps) {\r\n        super(props);\r\n        PinnableStrip[props.side] = this;\r\n        this.state = new PinnableStripState();\r\n    }\r\n\r\n\r\n    render(){\r\n        switch (this.props.side){\r\n            case \"t\":\r\n                break;\r\n            case \"b\":\r\n                break;\r\n            case \"l\":\r\n                break;\r\n            case \"r\":\r\n                break;\r\n        }\r\n\r\n        return <div className={(this.state.pinnedTabs.length ? '' : 'empty') +\" pinnable-strip pinnable-strip-\" + this.props.side} ref={(curr)=>this.html = curr}>\r\n            <div className={\"tab-row\"} ref={(curr)=>this.headerHtml = curr}></div>\r\n            <div className={\"content-row\"} ref={(curr)=>this.contentHtml = curr}></div>\r\n            <div className={\"pinnable-strip-button\"}><i className={\"bi bi-anchor\"}></i>anchor</div>\r\n        </div>;\r\n    }\r\n}\r\n\r\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\r\ninterface LayoutState {\r\n    layout: LayoutData;\r\n    /** @ignore */\r\n    dropRect?: any;// {left: number, width: number, top: number, height: number, element: HTMLElement, source?: any, direction?: DropDirection};\r\n}\r\nlet currentDropRect!: LayoutState[\"dropRect\"];\r\nlet currentDropArea!: Element;\r\nlet dockLayout!: Element;\r\nlet dropIndicator: Element = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;')\r\n\r\nfunction getStrip(side: string): PinnableStrip {\r\n    let s = side[0];\r\n    return (PinnableStrip as any)[s];\r\n}\r\nfunction getStripHtml(side: string): Element {\r\n    return getStrip(side).html as Element;\r\n}\r\n\r\nwindoww.highlightAnchorArea = function(side: string){\r\n    //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\r\n    //if (!highlightdiv) return;\r\n    //highlightdiv.style.background = '#ff000077';\r\n    let strip = getStripHtml(side);\r\n    console.log(\"highlightpin\", {strip, side, PinnableStrip});\r\n    strip.classList.add('dock-drop-indicator');\r\n}\r\nwindoww.hideAnchorArea = function(side: string){\r\n    let strip = getStripHtml(side);\r\n    strip.classList.remove('dock-drop-indicator');\r\n}\r\nconst todormovethisif = true\r\n\r\nwindoww.confirmSetAnchor = function(side: AnchorTypes){\r\n    const tabdata: TabData = PinnableDock.getTabFromDropRect(currentDropRect);\r\n    let strip = getStrip(side);\r\n    if (todormovethisif && strip.state.pinnedTabs.length === 0) strip.setState({pinnedTabs:[...strip.state.pinnedTabs, tabdata.id as string]});\r\n    let content: TabContent = TabContent.instances[tabdata.id as string];\r\n    let title: TabHeader = TabHeader.instances[tabdata.id as string];\r\n    //console.log(\"confirm pin anchor 0\", {tid:tabdata.id, TabHeader, TabContent});\r\n    console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, currentDropRect});\r\n\r\n    content.setState({pinned: side});\r\n    title.setState({pinned: side});\r\n\r\n    // how to? i create a new dockiing here for each strip?\r\n    // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\r\n    //strip.classList.remove('dock-drop-indicator');\r\n}\r\n// <LayoutProps, LayoutState>\r\nfunction makeAnchorControl(side: string){\r\n    let s = side[0];\r\n    const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"><div class=\"dock-drop-square-box\"></div></div>`;\r\n    return U.toHtml(str);\r\n}\r\nconst anchorControls = [\r\n    makeAnchorControl('top'),\r\n    makeAnchorControl('bottom'),\r\n    makeAnchorControl('left'),\r\n    makeAnchorControl('right'),\r\n];\r\n\r\nexport class PinnableDock extends DockLayout{\r\n    constructor(props: any) {\r\n        super(props);\r\n        let debug:boolean = false;\r\n        if (!debug) return;\r\n        let t: GObject = this;\r\n        for (let k in t) {\r\n            let originalfunc = t[k];\r\n            if (typeof t[k] === \"function\") t[k] = function (...a:any): any {\r\n                console.warn('PinnableDock called ' + k, {arguments});\r\n                return originalfunc(...a);\r\n            }\r\n        }\r\n    }\r\n\r\n    setState<K extends keyof LayoutState>(state: ((prevState: Readonly<LayoutState>, props: Readonly<LayoutProps>) => (Pick<LayoutState, K> | LayoutState | null)) | Pick<LayoutState, K> | LayoutState | null, callback?: () => void) {\r\n        // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\r\n        super.setState(state, callback);\r\n    }\r\n    public static getTabFromDropRect(dropRect: LayoutState['dropRect']): TabData{\r\n        const panel: PanelData = dropRect.source.props.panelData;\r\n        const tabdata: TabData = panel.tabs.filter(t=> t.id === panel.activeId)[0];\r\n        return tabdata;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<LayoutProps>, prevState: Readonly<LayoutState>, snapshot?: any) {\r\n        super.componentDidUpdate(prevProps, prevState, snapshot);\r\n        if (this.state.dropRect) {\r\n            let droparea = this.state.dropRect.element;\r\n            if (!droparea) return;\r\n            /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\r\n            let droplayer = droparea.querySelector('.dock-drop-layer');\r\n            currentDropArea = droparea;\r\n            dockLayout = this._ref;\r\n            currentDropRect = this.state.dropRect;\r\n            windoww.htmldockLayout = this._ref;\r\n            if (!droplayer) return;\r\n            droplayer.append(...anchorControls);\r\n            // droparea.style.backgroundColor = \"red\";\r\n        }\r\n        // document.querySelectorAll('.dock-drop-layer')\r\n    }\r\n    //\r\n    // onDragStateChange = (draggingScope: any) => void{\r\n    //     //super.onDragStateChange(draggingScope);\r\n    // }\r\n    // onSilentChange(currentTabId?: string, direction?: DropDirection) {\r\n    //     super.onSilentChange(currentTabId, direction);\r\n    // }\r\n    // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\r\n    //     super.dockMove(source, target, direction);\r\n    // }\r\n    //\r\n    // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\r\n    //     super.setDropRect(element, direction, source, event, panelSize);\r\n    // }\r\n    //\r\n    // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\r\n    //     super.changeLayout(layoutData, currentTabId, direction, silent);\r\n    // }\r\n    // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\r\n    //     return super.updateTab(id, newTab, makeActive);\r\n    // }\r\n\r\n    render(): React.ReactNode {\r\n        return <div className={\"pinnable-dock-root\"}>\r\n            <PinnableStrip side={\"t\"} />\r\n            <div className={\"pinnable-dock-middle-strip\"}>\r\n                <PinnableStrip side={\"l\"} />\r\n                {super.render\r\n                ()}\r\n                <PinnableStrip side={\"r\"} />\r\n            </div>\r\n            <PinnableStrip side={\"b\"} />\r\n        </div>\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}