{"ast":null,"code":"import { jodelInit, windoww } from \"../joiner\";\nimport * as Componentss from '../joiner/components';\n\n/*\r\nlet pairs = [\r\n    [DAnnotation, LAnnotation],\r\n    [DModelElement, LModelElement],\r\n    [DAttribute, LAttribute],\r\n    [DClass, LClass],\r\n    [DClassifier, LClassifier],\r\n    [DEnumerator, LEnumerator],\r\n    [DEnumLiteral, LEnumLiteral],\r\n    [DModel, LModel],\r\n    [DObject, LObject],\r\n    [DOperation, LOperation],\r\n    [DPackage, LPackage],\r\n    [DParameter, LParameter],\r\n    [DReference, LReference],\r\n    [DStructuralFeature, LStructuralFeature],\r\n    [DValue, LValue],\r\n    [DModelElementTransientProperties, LModelElementTransientProperties],\r\n    [DViewTransientProperties, LViewTransientProperties],\r\n    [DViewPrivateTransientProperties, LViewPrivateTransientProperties],\r\n    [DViewElement, LViewElement],\r\n    [DVoidVertex, LVoidVertex]\r\n    // [DMap, LMap],\r\n];\r\n*/\n\n/*for (let pair of pairs as any[]) {\r\n    pair[0].logic = pair[1];\r\n    pair[1].singleton = new pair[1]();\r\n    pair[1].structure = pair[0];\r\n    windoww[pair[0].name] = pair[0];\r\n    windoww[pair[1].name] = pair[1];\r\n}*/\n\n/*\r\nDAnnotation.logic = LAnnotation;\r\nLAnnotation.singleton = new LAnnotation();\r\n\r\nDModelElement.logic = LModelElement;\r\nLModelElement.singleton = new LModelElement();\r\nDAttribute.logic = LAttribute;\r\nLAttribute.singleton = new LAttribute();\r\nDClass.logic = LClass;\r\nDClassifier.logic = LClassifier;\r\nDEnumerator.logic = LEnumerator;\r\nDEnumLiteral.logic = LEnumLiteral;\r\nDModel.logic = LModel;\r\nDOBject.logic = LObject;\r\nDOperation.logic = LOperation;\r\nDPackage.logic = LPackage;\r\nDParameter.logic = LParameter;\r\nDReference.logic = LReference;\r\nDStructuralFeature.logic = LStructuralFeature;\r\nDValue.logic = LValue;\r\nDModelElementTransientProperties.logic = LModelElementTransientProperties;\r\n\r\nLClass.singleton = new LClass();\r\nLClassifier.singleton = new LClassifier();\r\nLEnumerator.singleton = new LEnumerator();\r\nLEnumLiteral.singleton = new LEnumLiteral();\r\nLOperation.singleton = new LOperation();\r\nLPackage.singleton = new LPackage();\r\nLParameter.singleton = new LParameter();\r\nLReference.singleton = new LReference();\r\nLStructuralFeature.singleton = new LStructuralFeature();\r\nLValue.singleton = new LValue();\r\nLModel.singleton = new LModel();\r\nLObject.singleton = new LObject();\r\nLModelElementTransientProperties.singleton = new LModelElementTransientProperties();\r\n*/\nexport const fakeExport = {}; // just to import-execute this file\n// IStore.fakeinit();\n// Symbol.prototype.toString = function(): string { alert('symbol to string'); return String(this); }\n\nlet Components = Componentss;\n/*\r\nComponents.map(C=> {\r\n    if (typeof C === 'object') return\r\n})\r\nfor (let Comp of Components) {\r\n\r\n}*/\nwindoww.Components = Componentss;\nfunction afterStoreLoad() {\n  jodelInit();\n}\n\n// afterStoreLoad();\n// setTimeout( afterStoreLoad, 0);","map":{"version":3,"names":["jodelInit","windoww","Componentss","fakeExport","Components","afterStoreLoad"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/joiner/ExecuteOnRead.ts"],"sourcesContent":["import {jodelInit, windoww} from \"../joiner\";\r\nimport * as Componentss from '../joiner/components';\r\n\r\n\r\n/*\r\nlet pairs = [\r\n    [DAnnotation, LAnnotation],\r\n    [DModelElement, LModelElement],\r\n    [DAttribute, LAttribute],\r\n    [DClass, LClass],\r\n    [DClassifier, LClassifier],\r\n    [DEnumerator, LEnumerator],\r\n    [DEnumLiteral, LEnumLiteral],\r\n    [DModel, LModel],\r\n    [DObject, LObject],\r\n    [DOperation, LOperation],\r\n    [DPackage, LPackage],\r\n    [DParameter, LParameter],\r\n    [DReference, LReference],\r\n    [DStructuralFeature, LStructuralFeature],\r\n    [DValue, LValue],\r\n    [DModelElementTransientProperties, LModelElementTransientProperties],\r\n    [DViewTransientProperties, LViewTransientProperties],\r\n    [DViewPrivateTransientProperties, LViewPrivateTransientProperties],\r\n    [DViewElement, LViewElement],\r\n    [DVoidVertex, LVoidVertex]\r\n    // [DMap, LMap],\r\n];\r\n*/\r\n\r\n/*for (let pair of pairs as any[]) {\r\n    pair[0].logic = pair[1];\r\n    pair[1].singleton = new pair[1]();\r\n    pair[1].structure = pair[0];\r\n    windoww[pair[0].name] = pair[0];\r\n    windoww[pair[1].name] = pair[1];\r\n}*/\r\n\r\n/*\r\nDAnnotation.logic = LAnnotation;\r\nLAnnotation.singleton = new LAnnotation();\r\n\r\nDModelElement.logic = LModelElement;\r\nLModelElement.singleton = new LModelElement();\r\nDAttribute.logic = LAttribute;\r\nLAttribute.singleton = new LAttribute();\r\nDClass.logic = LClass;\r\nDClassifier.logic = LClassifier;\r\nDEnumerator.logic = LEnumerator;\r\nDEnumLiteral.logic = LEnumLiteral;\r\nDModel.logic = LModel;\r\nDOBject.logic = LObject;\r\nDOperation.logic = LOperation;\r\nDPackage.logic = LPackage;\r\nDParameter.logic = LParameter;\r\nDReference.logic = LReference;\r\nDStructuralFeature.logic = LStructuralFeature;\r\nDValue.logic = LValue;\r\nDModelElementTransientProperties.logic = LModelElementTransientProperties;\r\n\r\nLClass.singleton = new LClass();\r\nLClassifier.singleton = new LClassifier();\r\nLEnumerator.singleton = new LEnumerator();\r\nLEnumLiteral.singleton = new LEnumLiteral();\r\nLOperation.singleton = new LOperation();\r\nLPackage.singleton = new LPackage();\r\nLParameter.singleton = new LParameter();\r\nLReference.singleton = new LReference();\r\nLStructuralFeature.singleton = new LStructuralFeature();\r\nLValue.singleton = new LValue();\r\nLModel.singleton = new LModel();\r\nLObject.singleton = new LObject();\r\nLModelElementTransientProperties.singleton = new LModelElementTransientProperties();\r\n*/\r\nexport const fakeExport = {}; // just to import-execute this file\r\n// IStore.fakeinit();\r\n// Symbol.prototype.toString = function(): string { alert('symbol to string'); return String(this); }\r\n\r\nlet Components = Componentss;\r\n/*\r\nComponents.map(C=> {\r\n    if (typeof C === 'object') return\r\n})\r\nfor (let Comp of Components) {\r\n\r\n}*/\r\nwindoww.Components = Componentss;\r\n\r\n\r\nfunction afterStoreLoad() {\r\n    jodelInit();\r\n}\r\n\r\n// afterStoreLoad();\r\n// setTimeout( afterStoreLoad, 0);\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,OAAO,QAAO,WAAW;AAC5C,OAAO,KAAKC,WAAW,MAAM,sBAAsB;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9B;AACA;;AAEA,IAAIC,UAAU,GAAGF,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,OAAO,CAACG,UAAU,GAAGF,WAAW;AAGhC,SAASG,cAAcA,CAAA,EAAG;EACtBL,SAAS,CAAC,CAAC;AACf;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}