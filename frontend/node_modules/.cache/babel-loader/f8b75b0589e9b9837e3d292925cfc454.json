{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\dock\\\\MyRcDock.tsx\",\n  _dec,\n  _class,\n  _class2,\n  _dec2,\n  _class3,\n  _class4,\n  _dec3,\n  _class5,\n  _class6;\nimport React, { PureComponent } from \"react\";\nimport { Log, Point, RuntimeAccessible, Size, Try, U, windoww } from \"../../joiner\";\nimport { DockLayout } from \"rc-dock\";\nimport { MyPortal } from \"./MyDock\";\nimport \"./DockManagerStyles.scss\";\n\n// needs to be class component because needs setState() to be called externally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TabHeaderState {\n  constructor() {\n    this.pinned = void 0;\n    this.pinned = '';\n  }\n}\nclass TabContentState extends TabHeaderState {}\nexport let TabHeader = (_dec = RuntimeAccessible('TabHeader'), _dec(_class = (_class2 = class TabHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.html = null;\n    TabHeader.instances[props.tid] = this;\n    this.state = new TabHeaderState();\n  }\n  unpin() {\n    let oldPinned = this.state.pinned;\n    if (oldPinned === \"\") return Log.ee(\"tab already unpinned\", this.props.tid);\n    TabContent.instances[this.props.tid].setState({\n      pinned: ''\n    });\n    this.setState({\n      pinned: ''\n    }, () => {\n      let strip = PinnableStrip[oldPinned];\n      strip.unpin(this.props.tid);\n    });\n  }\n  onMouseHoverExpand() {\n    this.setAsActiveTab();\n  }\n  onMouseLeaveExpand() {}\n  getTabStrip() {\n    Log.exDev(!this.state.pinned, \"Cannot get strip, tab is not pinned\");\n    return PinnableStrip[this.state.pinned];\n  }\n  setAsActiveTab() {\n    let strip = this.getTabStrip();\n    const tabdata = strip.dockLayout.find(this.props.tid + \"_pinned\");\n    if (!this.html) return; // not pinned\n    // strip.dockLayout!.updateTab(tabdata.id as string, tabdata, true);\n    console.log(\"setActiveTab\", {\n      strip,\n      tabdata,\n      tid: this.props.tid\n    });\n    let e = strip.html.querySelector('.dock-content-holder');\n    let tabh = this.html;\n    let tabsize = Size.of(tabh);\n    let offset = new Point(tabsize.x + tabsize.w / 2 - esize.w / 2, tabsize.y + tabsize.h / 2 - esize.w / 2);\n    switch (strip.props.side) {\n      default:\n        return;\n      case \"t\":\n      case \"b\":\n        e.style.left = \"clamp(0, \" + center.x + \", 100vw)\";\n      case \"l\":\n      case \"r\":\n    }\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: () => {\n        console.log(\"tab dragging start\");\n      },\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pin-button bi bi-pin-angle-fill\",\n        onClick: () => this.unpin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 98\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }, this);\n    console.log(\"tabheader portal pre pin\", {\n      pinned\n    });\n    if (!pinned) return content;\n    const strip = PinnableStrip[pinned];\n    const html = tabdict_title[props.tid + '_pinned'];\n    console.log(\"tabheader portal\", {\n      html,\n      content,\n      tabdict: tabdict_title,\n      td: {\n        ...tabdict_title\n      }\n    });\n    if (!html) return content;\n    function preventFocusOnOriginDock(e) {\n      e.stopPropagation();\n    }\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-on-mouseenter\",\n      ref: e => this.html = e,\n      onMouseDown: preventFocusOnOriginDock,\n      onClick: preventFocusOnOriginDock,\n      onMouseEnter: () => this.onMouseHoverExpand(),\n      onMouseLeave: () => this.onMouseLeaveExpand(),\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyPortal, {\n        container: html,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moved-content\",\n        children: \"moved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true);\n  }\n}, _class2.cname = 'TabHeader', _class2.instances = {}, _class2)) || _class);\nexport let TabContent = (_dec2 = RuntimeAccessible('TabHeader'), _dec2(_class3 = (_class4 = class TabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    TabContent.instances[props.tid] = this;\n    this.state = new TabContentState();\n  }\n  render() {\n    const props = this.props;\n    let pinned = this.state.pinned;\n    const content = /*#__PURE__*/_jsxDEV(Try, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }, this);\n    console.log(\"tabcontent portal pre pin\", {\n      pinned\n    });\n    if (!pinned) return content;\n    const strip = PinnableStrip[pinned];\n    const html = tabdict_content[props.tid + '_pinned'];\n    console.log(\"tabcontent portal\", {\n      html,\n      content,\n      tabdict: tabdict_content,\n      td: {\n        ...tabdict_content\n      }\n    });\n    if (!html) return content;\n    return /*#__PURE__*/_jsxDEV(MyPortal, {\n      container: html,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }, this);\n  }\n}, _class4.cname = 'TabContent', _class4.instances = {}, _class4)) || _class3);\nclass PinnableStripState {\n  // pinnedTabs: TabData[];// or what?\n  //pinnedTabsid: Dictionary<string, true>;\n\n  constructor() {\n    // this.pinnedTabsid = {};\n  }\n}\nexport let PinnableStrip = (_dec3 = RuntimeAccessible(\"PinnableStrip\"), _dec3(_class5 = (_class6 = class PinnableStrip extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.html = null;\n    this.headerHtml = null;\n    this.contentHtml = null;\n    this.panel = void 0;\n    this.dockLayout = null;\n    this.layout = void 0;\n    this.groups = void 0;\n    this.tabs = {};\n    this.afterUpdateCallback_funcs = [];\n    PinnableStrip[props.side] = this;\n    this.state = new PinnableStripState();\n    this.groups = {\n      'pinned': {\n        floatable: false,\n        maximizable: false,\n        tabLocked: true\n      }\n    };\n    const tabsData = [];\n    /*\r\n    let tabdict: Dictionary<string, TabData> = {};\r\n    for (let tabid in this.state.pinnedTabsid) {\r\n        const id: string = tabid+'_pinned';\r\n        const tabdata: TabData = {\r\n            id,\r\n            group: 'pinned',\r\n            closable: false,\r\n            title: <div ref={(curr)=>this.tabdict_title[id] = curr}></div>,\r\n            content: <div ref={(curr)=>this.tabdict_content[id] = curr}></div>,\r\n            //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n        };\r\n        tabdict[tabdata.id as string] = tabdata;\r\n        tabsData.push(tabdata);\r\n    }*/\n    this.layout = {\n      dockbox: {\n        mode: 'horizontal',\n        children: []\n      }\n    };\n    this.panel = {\n      id: 'side_panel' + this.props.side,\n      tabs: tabsData\n    };\n    this.layout.dockbox.children.push(this.panel);\n  }\n  unpin(tid) {\n    const stripdock = this.dockLayout;\n    let tabData = stripdock.find(tid + \"_pinned\");\n    delete this.tabs[tid + \"_pinned\"];\n    stripdock.dockMove(tabData, null, 'remove');\n    if (!Object.keys(this.tabs).length) this.forceUpdate();\n  }\n  setAfterUpdateCallback(c) {\n    this.afterUpdateCallback_funcs.push(c);\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.onupdate();\n  }\n  componentDidMount() {\n    this.onupdate();\n  }\n  onupdate() {\n    console.log('strip updated', [...this.afterUpdateCallback_funcs]);\n    for (let c of this.afterUpdateCallback_funcs) c();\n    this.afterUpdateCallback_funcs = [];\n  }\n  addTab(t) {\n    const tid = t.id;\n    if (this.tabs[tid]) Log.eDevv(\"docking tab already exist\", this, t);\n    this.tabs[tid] = t;\n    // if (Object.keys(this.tabs).length === 1) this.forceUpdate(); // updates .empty class\n    console.log(\"addTab\", {\n      t,\n      pp1: this.dockLayout.getLayout().dockbox.children[0],\n      pp0: this.panel\n    });\n    window.pinnableStrip = this;\n    //this.dockLayout!.dockMove(t, 'side_panel' + this.props.side, 'middle');\n    window.addTab = t => this.addTab(t);\n    this.dockLayout.dockMove(t, this.dockLayout.getLayout().dockbox.children[0], 'middle');\n    this.forceUpdate();\n    //this.dockLayout!.dockMove(t, this.panel, 'middle');\n  }\n\n  removeTab(tid) {\n    if (!this.tabs[tid]) Log.eDevv(\"docking tab already removed\", this, tid);\n    Log.eDevv(\"docking removeTab() todo\", this, tid);\n    delete this.tabs[tid];\n    if (Object.keys(this.tabs).length === 0) this.forceUpdate(); // updates .empty class\n  }\n\n  render() {\n    const layout = this.layout;\n    const groups = this.groups;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (Object.keys(this.tabs).length ? '' : 'empty') + \" pinnable-strip pinnable-strip-\" + this.props.side,\n      ref: curr => this.html = curr,\n      children: /*#__PURE__*/_jsxDEV(DockLayout, {\n        ref: e => this.dockLayout = e,\n        defaultLayout: layout,\n        groups: groups,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, \"thestripdock\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this);\n  }\n}, _class6.cname = 'PinnableStrip', _class6.t = void 0, _class6.b = void 0, _class6.l = void 0, _class6.r = void 0, _class6)) || _class5);\n\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\n\nlet currentDropRect;\nlet currentDropArea;\nlet dockLayout;\nlet dropIndicator = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;');\nfunction getStrip(side) {\n  let s = side[0];\n  return PinnableStrip[s];\n}\nfunction getStripHtml(side) {\n  return getStrip(side).html;\n}\nwindoww.highlightAnchorArea = function (side) {\n  //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\n  //if (!highlightdiv) return;\n  //highlightdiv.style.background = '#ff000077';\n  let strip = getStripHtml(side);\n  console.log(\"highlightpin\", {\n    strip,\n    side,\n    PinnableStrip\n  });\n  strip.classList.add('dock-drop-indicator');\n};\nwindoww.hideAnchorArea = function (side) {\n  let strip = getStripHtml(side);\n  strip.classList.remove('dock-drop-indicator');\n};\nconst tabdict_title = {};\nconst tabdict_content = {};\nwindoww.confirmSetAnchor = function (side) {\n  windoww.hideAnchorArea(side);\n  const tabdata = PinnableDock.getTabFromDropRect(currentDropRect);\n  let strip = getStrip(side);\n  let content = TabContent.instances[tabdata.id];\n  let title = TabHeader.instances[tabdata.id];\n  const id = tabdata.id + '_pinned'; // + '_' + side;\n  const newtabdata = {\n    //...tabdata, parent: undefined,\n    id,\n    group: 'pinned',\n    closable: false,\n    title: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: curr => tabdict_title[id] = curr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 16\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: curr => tabdict_content[id] = curr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 18\n    }, this)\n    //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\n  };\n\n  strip.setAfterUpdateCallback(() => {\n    content.setState({\n      pinned: side\n    });\n    title.setState({\n      pinned: side\n    });\n    console.log(\"confirm pin anchor\", {\n      content,\n      title,\n      strip,\n      side,\n      tabdata,\n      newtabdata,\n      currentDropRect\n    });\n  });\n  strip.addTab(newtabdata);\n\n  /*strip.setState({pinnedTabsid:{...strip.state.pinnedTabsid, [tabdata.id as string]:true}},\r\n      ()=>{\r\n      content.setState({pinned: side}); title.setState({pinned: side});\r\n      console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, currentDropRect});\r\n  });*/\n  console.log(\"confirm pin anchor 0\", {\n    tid: tabdata.id,\n    TabHeader,\n    TabContent\n  });\n\n  // how to? i create a new dockiing here for each strip?\n  // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\n  //strip.classList.remove('dock-drop-indicator');\n};\n/*\r\nlet htmltablist = <div className=\"dock-bar drag-initiator\" role=\"tablist\" tabIndex=\"-1\">\r\n    <div role=\"tablist\" className=\"dock-nav\">\r\n        <div className=\"dock-nav-wrap\">\r\n            <div className=\"dock-nav-list\" style=\"transform: translate(0px, 0px);\">\r\n                <div className=\"dock-tab dock-tab-active\">\r\n                    <div role=\"tab\" aria-selected=\"true\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid+'_pinned'} aria-controls={tabid+'_pinned'}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-tab\">\r\n                    <div role=\"tab\" aria-selected=\"false\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid} aria-controls={tabid}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-ink-bar dock-ink-bar-animated\" style=\"left: 0px; width: 30px;\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dock-nav-operations dock-nav-operations-hidden\">\r\n            <button type=\"button\" className=\"dock-nav-more\" tabIndex=\"-1\" aria-hidden=\"true\" aria-haspopup=\"listbox\"\r\n                    aria-controls=\"rc-tabs-1-more-popup\" id=\"rc-tabs-1-more\" aria-expanded=\"false\"\r\n                    style=\"visibility: hidden; order: 1;\">...\r\n            </button>\r\n        </div>\r\n        <div className=\"dock-extra-content\">\r\n            <div className=\"dock-panel-max-btn\"></div>\r\n        </div>\r\n    </div>\r\n</div>;\r\n    */\n// <LayoutProps, LayoutState>\nfunction makeAnchorControl(side) {\n  let s = side[0];\n  const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"\"><div class=\"dock-drop-square-box\"></div></div>`;\n  return U.toHtml(str);\n}\nconst anchorControls = [makeAnchorControl('top'), makeAnchorControl('bottom'), makeAnchorControl('left'), makeAnchorControl('right')];\nexport class PinnableDock extends DockLayout {\n  constructor(props) {\n    super(props);\n    let debug = false;\n    if (!debug) return;\n    let t = this;\n    for (let k in t) {\n      let originalfunc = t[k];\n      if (typeof t[k] === \"function\") t[k] = function () {\n        for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n          a[_key] = arguments[_key];\n        }\n        console.warn('PinnableDock called ' + k, {\n          arguments\n        });\n        return originalfunc(...a);\n      };\n    }\n  }\n  setState(state, callback) {\n    // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\n    super.setState(state, callback);\n  }\n  static getTabFromDropRect(dropRect) {\n    const panel = dropRect.source.props.panelData;\n    const tabdata = panel.tabs.filter(t => t.id === panel.activeId)[0];\n    return tabdata;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    super.componentDidUpdate(prevProps, prevState, snapshot);\n    if (this.state.dropRect) {\n      let droparea = this.state.dropRect.element;\n      if (!droparea) return;\n      /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\n      let droplayer = droparea.querySelector('.dock-drop-layer');\n      currentDropArea = droparea;\n      dockLayout = this._ref;\n      currentDropRect = this.state.dropRect;\n      windoww.htmldockLayout = this._ref;\n      if (!droplayer) return;\n      droplayer.append(...anchorControls);\n      // droparea.style.backgroundColor = \"red\";\n    }\n    // document.querySelectorAll('.dock-drop-layer')\n  }\n  //\n  // onDragStateChange = (draggingScope: any) => void{\n  //     //super.onDragStateChange(draggingScope);\n  // }\n  // onSilentChange(currentTabId?: string, direction?: DropDirection) {\n  //     super.onSilentChange(currentTabId, direction);\n  // }\n  // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\n  //     super.dockMove(source, target, direction);\n  // }\n  //\n  // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\n  //     super.setDropRect(element, direction, source, event, panelSize);\n  // }\n  //\n  // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\n  //     super.changeLayout(layoutData, currentTabId, direction, silent);\n  // }\n  // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\n  //     return super.updateTab(id, newTab, makeActive);\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pinnable-dock-root gray-style\",\n      children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinnable-dock-middle-strip\",\n        children: [/*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"l\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this), super.render(), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n          side: \"r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PinnableStrip, {\n        side: \"b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 16\n    }, this);\n  }\n}","map":{"version":3,"names":["React","PureComponent","Log","Point","RuntimeAccessible","Size","Try","U","windoww","DockLayout","MyPortal","jsxDEV","_jsxDEV","Fragment","_Fragment","TabHeaderState","constructor","pinned","TabContentState","TabHeader","_dec","_class","_class2","Component","props","html","instances","tid","state","unpin","oldPinned","ee","TabContent","setState","strip","PinnableStrip","onMouseHoverExpand","setAsActiveTab","onMouseLeaveExpand","getTabStrip","exDev","tabdata","dockLayout","find","console","log","e","querySelector","tabh","tabsize","of","offset","x","w","esize","y","h","side","style","left","center","render","content","onMouseDown","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","tabdict_title","tabdict","td","preventFocusOnOriginDock","stopPropagation","ref","onMouseEnter","onMouseLeave","container","cname","_dec2","_class3","_class4","tabdict_content","PinnableStripState","_dec3","_class5","_class6","headerHtml","contentHtml","panel","layout","groups","tabs","afterUpdateCallback_funcs","floatable","maximizable","tabLocked","tabsData","dockbox","mode","id","push","stripdock","tabData","dockMove","Object","keys","length","forceUpdate","setAfterUpdateCallback","c","componentDidUpdate","prevProps","prevState","snapshot","onupdate","componentDidMount","addTab","t","eDevv","pp1","getLayout","pp0","window","pinnableStrip","removeTab","curr","defaultLayout","width","height","b","l","r","currentDropRect","currentDropArea","dropIndicator","toHtml","getStrip","s","getStripHtml","highlightAnchorArea","classList","add","hideAnchorArea","remove","confirmSetAnchor","PinnableDock","getTabFromDropRect","title","newtabdata","group","closable","makeAnchorControl","str","anchorControls","debug","k","originalfunc","_len","arguments","a","Array","_key","warn","callback","dropRect","source","panelData","filter","activeId","droparea","element","droplayer","_ref","htmldockLayout","append"],"sources":["C:/d/Programming/web/jodel-mde/src/components/dock/MyRcDock.tsx"],"sourcesContent":["import React, {Component, PureComponent, ReactElement, ReactNode, useState} from \"react\";\r\nimport {\r\n    Dictionary,\r\n    DocString,\r\n    GObject,\r\n    Log,\r\n    LoggerComponent,\r\n    Point,\r\n    RuntimeAccessible,\r\n    Size,\r\n    Try,\r\n    U,\r\n    windoww\r\n} from \"../../joiner\";\r\nimport {DockingLayout} from \"smart-webcomponents-react/dockinglayout\";\r\nimport $ from \"jquery\";\r\nimport {DockLayout, LayoutProps, PanelData, TabData, TabGroup} from \"rc-dock\";\r\nimport {MyPortal} from \"./MyDock\";\r\nimport \"./DockManagerStyles.scss\";\r\nimport {LayoutData} from \"rc-dock/src/DockData\";\r\nimport TestTab from \"../abstract/tabs/TestTab\";\r\nimport StructureEditor from \"../rightbar/structureEditor/StructureEditor\";\r\nimport {ModelMetaData} from \"../rightbar/structureEditor/ModelMetaData\";\r\nimport TreeEditor from \"../rightbar/treeEditor/treeEditor\";\r\nimport ViewsEditor from \"../rightbar/viewsEditor/ViewsEditor\";\r\nimport NodeEditor from \"../rightbar/styleEditor/StyleEditor\";\r\nimport ViewpointEditor from \"../rightbar/viewpointsEditor/ViewpointsEditor\";\r\nimport CollaboratorsEditor from \"../rightbar/collaboratorsEditor/CollaboratorsEditor\";\r\nimport MqttEditor from \"../rightbar/mqtt/MqttEditor\";\r\nimport Console from \"../rightbar/console/Console\";\r\n\r\n\r\n// needs to be class component because needs setState() to be called externally\r\ninterface TabHeaderProps{\r\n    tid: string;\r\n    children: ReactNode;\r\n}\r\nclass TabHeaderState{\r\n    pinned: AnchorTypes | \"\";\r\n    constructor() {\r\n        this.pinned = '';\r\n    }\r\n}\r\ninterface TabContentProps extends TabHeaderProps{}\r\nclass TabContentState extends TabHeaderState{}\r\n\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabHeader extends React.Component<TabHeaderProps, TabHeaderState>{\r\n    static cname: string = 'TabHeader';\r\n    static instances: Dictionary<string, TabHeader> = {};\r\n    constructor(props:TabHeaderProps) {\r\n        super(props);\r\n        TabHeader.instances[props.tid] = this;\r\n        this.state = new TabHeaderState();\r\n    }\r\n\r\n    unpin(){\r\n        let oldPinned = this.state.pinned;\r\n        if (oldPinned === \"\") return Log.ee(\"tab already unpinned\", this.props.tid);\r\n        TabContent.instances[this.props.tid].setState({pinned: ''});\r\n        this.setState({pinned: ''}, ()=>{\r\n            let strip: PinnableStrip = PinnableStrip[oldPinned as AnchorTypes];\r\n            strip.unpin(this.props.tid);\r\n        });\r\n    }\r\n    onMouseHoverExpand(){\r\n        this.setAsActiveTab();\r\n    }\r\n    onMouseLeaveExpand(){\r\n\r\n    }\r\n    getTabStrip(): PinnableStrip{\r\n        Log.exDev(!this.state.pinned, \"Cannot get strip, tab is not pinned\");\r\n        return PinnableStrip[this.state.pinned as AnchorTypes];\r\n    }\r\n    setAsActiveTab(){\r\n        let strip = this.getTabStrip();\r\n        const tabdata: TabData = strip.dockLayout!.find(this.props.tid+\"_pinned\") as TabData;\r\n        if (!this.html) return; // not pinned\r\n        // strip.dockLayout!.updateTab(tabdata.id as string, tabdata, true);\r\n        console.log(\"setActiveTab\", {strip, tabdata, tid: this.props.tid});\r\n        let e: HTMLElement = strip.html!.querySelector('.dock-content-holder') as HTMLElement;\r\n        let tabh: HTMLElement = this.html;\r\n        let tabsize = Size.of(tabh);\r\n        let offset: Point = new Point(tabsize.x + tabsize.w/2 - esize.w/2, tabsize.y + tabsize.h/2 - esize.w/2);\r\n\r\n        switch(strip.props.side){\r\n            default: return;\r\n            case \"t\": case \"b\":\r\n                e.style.left = \"clamp(0, \" + center.x + \", 100vw)\";\r\n            case \"l\": case \"r\":\r\n        }\r\n    }\r\n\r\n    private html: HTMLElement | null = null\r\n    render(): ReactNode {\r\n        const props: TabHeaderProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        let content = <div onMouseDown={()=>{console.log(\"tab dragging start\")}}>{props.children}<i className={\"pin-button bi bi-pin-angle-fill\"} onClick={()=>this.unpin()}/></div>;\r\n        console.log(\"tabheader portal pre pin\", {pinned});\r\n        if (!pinned) return content;\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = tabdict_title[props.tid + '_pinned'];\r\n        console.log(\"tabheader portal\", {html, content, tabdict:tabdict_title, td:{...tabdict_title}});\r\n        if (!html) return content;\r\n        function preventFocusOnOriginDock(e: any): void{\r\n            e.stopPropagation();\r\n        }\r\n        content = <div className={\"active-on-mouseenter\"} ref={(e) => this.html = e} onMouseDown={preventFocusOnOriginDock} onClick={preventFocusOnOriginDock} onMouseEnter={()=>this.onMouseHoverExpand()} onMouseLeave={()=>this.onMouseLeaveExpand()}>{content}</div>\r\n        return <><MyPortal container={html}>{content}</MyPortal><div className={\"moved-content\"}>moved</div></>;\r\n    }\r\n}\r\n@RuntimeAccessible('TabHeader')\r\nexport class TabContent extends React.Component<TabContentProps, TabContentState>{\r\n    static cname: string = 'TabContent';\r\n    static instances: Dictionary<string, TabContent> = {};\r\n    constructor(props:TabContentProps) {\r\n        super(props);\r\n        TabContent.instances[props.tid] = this;\r\n        this.state = new TabContentState();\r\n    }\r\n    render() {\r\n        const props: TabContentProps = this.props;\r\n        let pinned = this.state.pinned;\r\n        const content = <Try>{props.children}</Try>;\r\n        console.log(\"tabcontent portal pre pin\", {pinned});\r\n        if (!pinned) return content;\r\n        const strip: PinnableStrip = (PinnableStrip as GObject)[pinned];\r\n        const html: Element|null = tabdict_content[props.tid + '_pinned'];\r\n        console.log(\"tabcontent portal\", {html, content, tabdict:tabdict_content, td:{...tabdict_content}});\r\n        if (!html) return content;\r\n        return <MyPortal container={html}>{content}</MyPortal>;\r\n    }\r\n}\r\n\r\ntype AnchorTypes = \"t\" | \"l\" | \"r\" | \"b\";\r\ninterface PinnableStripProps{\r\n    side: AnchorTypes;\r\n}\r\nclass PinnableStripState{\r\n    // pinnedTabs: TabData[];// or what?\r\n    //pinnedTabsid: Dictionary<string, true>;\r\n\r\n    constructor() {\r\n       // this.pinnedTabsid = {};\r\n    }\r\n}\r\n@RuntimeAccessible(\"PinnableStrip\")\r\nexport class PinnableStrip extends PureComponent<PinnableStripProps, PinnableStripState>{\r\n    static cname = 'PinnableStrip';\r\n    public static t: PinnableStrip;\r\n    public static b: PinnableStrip;\r\n    public static l: PinnableStrip;\r\n    public static r: PinnableStrip;\r\n\r\n    html: Element | null = null;\r\n    headerHtml: Element | null = null;\r\n    contentHtml: Element | null = null;\r\n\r\n    constructor(props: PinnableStripProps) {\r\n        super(props);\r\n        PinnableStrip[props.side] = this;\r\n        this.state = new PinnableStripState();\r\n        this.groups = {\r\n            'pinned': {floatable: false, maximizable: false, tabLocked: true}\r\n        };\r\n        const tabsData: TabData[] = [];\r\n        /*\r\n        let tabdict: Dictionary<string, TabData> = {};\r\n        for (let tabid in this.state.pinnedTabsid) {\r\n            const id: string = tabid+'_pinned';\r\n            const tabdata: TabData = {\r\n                id,\r\n                group: 'pinned',\r\n                closable: false,\r\n                title: <div ref={(curr)=>this.tabdict_title[id] = curr}></div>,\r\n                content: <div ref={(curr)=>this.tabdict_content[id] = curr}></div>,\r\n                //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n            };\r\n            tabdict[tabdata.id as string] = tabdata;\r\n            tabsData.push(tabdata);\r\n        }*/\r\n        this.layout = {dockbox: {mode: 'horizontal', children: []}};\r\n        this.panel = {id: 'side_panel' + this.props.side, tabs: tabsData};\r\n        this.layout.dockbox.children.push(this.panel);\r\n    }\r\n\r\n    private panel: PanelData;\r\n    dockLayout: DockLayout | null = null;\r\n\r\n    private layout: LayoutData;\r\n    private groups: {[p: string]: TabGroup};\r\n    private tabs: Dictionary<string, TabData> = {};\r\n    private afterUpdateCallback_funcs: ((...a:any)=>any)[] = [];\r\n\r\n    unpin(tid: string){\r\n        const stripdock: DockLayout = this.dockLayout as DockLayout;\r\n        let tabData: TabData = stripdock.find(tid+\"_pinned\") as TabData;\r\n        delete this.tabs[tid+\"_pinned\"];\r\n        stripdock.dockMove(tabData, null, 'remove');\r\n        if (!Object.keys(this.tabs).length) this.forceUpdate();\r\n    }\r\n    setAfterUpdateCallback(c: (...a:any)=>any){\r\n        this.afterUpdateCallback_funcs.push(c);\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<PinnableStripProps>, prevState: Readonly<PinnableStripState>, snapshot?: any) {\r\n        this.onupdate();\r\n    }\r\n    componentDidMount() {\r\n        this.onupdate();\r\n    }\r\n    onupdate(){\r\n        console.log('strip updated', [...this.afterUpdateCallback_funcs]);\r\n        for (let c of this.afterUpdateCallback_funcs) c();\r\n        this.afterUpdateCallback_funcs = [];\r\n    }\r\n\r\n    addTab(t: TabData): void{\r\n        const tid: string = t.id as string;\r\n        if (this.tabs[tid]) Log.eDevv(\"docking tab already exist\", this, t);\r\n        this.tabs[tid] = t;\r\n        // if (Object.keys(this.tabs).length === 1) this.forceUpdate(); // updates .empty class\r\n        console.log(\"addTab\", {t, pp1:this.dockLayout!.getLayout().dockbox.children[0], pp0: this.panel});\r\n        (window as any ).pinnableStrip = this;\r\n        //this.dockLayout!.dockMove(t, 'side_panel' + this.props.side, 'middle');\r\n        (window as any).addTab = (t: any)=> this.addTab(t);\r\n\r\n\r\n        this.dockLayout!.dockMove(t, this.dockLayout!.getLayout().dockbox.children[0], 'middle');\r\n        this.forceUpdate();\r\n        //this.dockLayout!.dockMove(t, this.panel, 'middle');\r\n\r\n    }\r\n    removeTab(tid: string): void{\r\n        if (!this.tabs[tid]) Log.eDevv(\"docking tab already removed\", this, tid);\r\n        Log.eDevv(\"docking removeTab() todo\", this, tid);\r\n        delete this.tabs[tid];\r\n        if (Object.keys(this.tabs).length === 0) this.forceUpdate(); // updates .empty class\r\n    }\r\n\r\n    render(){\r\n        const layout = this.layout;\r\n        const groups = this.groups;\r\n        return <div className={(Object.keys(this.tabs).length ? '' : 'empty') +\" pinnable-strip pinnable-strip-\" + this.props.side} ref={(curr)=>this.html = curr}>\r\n            {/* loadTab={(d)=>tabdict[d.id as string]} */}\r\n            <DockLayout key=\"thestripdock\" ref={(e)=>this.dockLayout = e} defaultLayout={layout} groups={groups} style={{width: '100%', height: '100%'}} />\r\n            {/*<div className={\"tab-row\"} ref={(curr)=>this.headerHtml = curr}></div>\r\n            <div className={\"content-row\"} ref={(curr)=>this.contentHtml = curr}></div>*/}\r\n        </div>;\r\n    }\r\n}\r\n\r\n/// todo: lodash _.debounce on whileDragging and similar stuff triggered too often\r\ninterface LayoutState {\r\n    layout: LayoutData;\r\n    /** @ignore */\r\n    dropRect?: any;// {left: number, width: number, top: number, height: number, element: HTMLElement, source?: any, direction?: DropDirection};\r\n}\r\nlet currentDropRect!: LayoutState[\"dropRect\"];\r\nlet currentDropArea!: Element;\r\nlet dockLayout!: Element;\r\nlet dropIndicator: Element = U.toHtml('<div class=\"dock-drop-indicator\" style=\"left: 0px; top: 0px; width: 0px; height: 60px; display: block;')\r\n\r\nfunction getStrip(side: string): PinnableStrip {\r\n    let s = side[0];\r\n    return (PinnableStrip as any)[s];\r\n}\r\nfunction getStripHtml(side: string): Element {\r\n    return getStrip(side).html as Element;\r\n}\r\n\r\nwindoww.highlightAnchorArea = function(side: string){\r\n    //let highlightdiv = dockLayout.querySelector('.dock-drop-indicator') as HTMLElement;\r\n    //if (!highlightdiv) return;\r\n    //highlightdiv.style.background = '#ff000077';\r\n    let strip = getStripHtml(side);\r\n    console.log(\"highlightpin\", {strip, side, PinnableStrip});\r\n    strip.classList.add('dock-drop-indicator');\r\n}\r\nwindoww.hideAnchorArea = function(side: string){\r\n    let strip = getStripHtml(side);\r\n    strip.classList.remove('dock-drop-indicator');\r\n}\r\n\r\n\r\nconst tabdict_title: Dictionary<DocString<\"tabdata.id\">, HTMLElement | null> = {};\r\nconst tabdict_content: Dictionary<DocString<\"tabdata.id\">, HTMLElement | null> = {};\r\nwindoww.confirmSetAnchor = function(side: AnchorTypes){\r\n    windoww.hideAnchorArea(side);\r\n    const tabdata: TabData = PinnableDock.getTabFromDropRect(currentDropRect);\r\n    let strip = getStrip(side);\r\n    let content: TabContent = TabContent.instances[tabdata.id as string];\r\n    let title: TabHeader = TabHeader.instances[tabdata.id as string];\r\n    const id: string = tabdata.id+'_pinned';// + '_' + side;\r\n    const newtabdata: TabData = {\r\n        //...tabdata, parent: undefined,\r\n        id,\r\n        group: 'pinned',\r\n        closable: false,\r\n        title: <div ref={(curr)=>tabdict_title[id] = curr}></div>,\r\n        content: <div ref={(curr)=>tabdict_content[id] = curr}></div>,\r\n        //title: <TabHeader tid={tid()}>Structure</TabHeader>, content: <TabContent tid={tid()}><StructureEditor /></TabContent>\r\n    };\r\n    strip.setAfterUpdateCallback(()=>{\r\n        content.setState({pinned: side}); title.setState({pinned: side});\r\n        console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, newtabdata, currentDropRect});\r\n    });\r\n    strip.addTab( newtabdata );\r\n\r\n    /*strip.setState({pinnedTabsid:{...strip.state.pinnedTabsid, [tabdata.id as string]:true}},\r\n        ()=>{\r\n        content.setState({pinned: side}); title.setState({pinned: side});\r\n        console.log(\"confirm pin anchor\", {content, title, strip, side, tabdata, currentDropRect});\r\n    });*/\r\n    console.log(\"confirm pin anchor 0\", {tid:tabdata.id, TabHeader, TabContent});\r\n\r\n\r\n    // how to? i create a new dockiing here for each strip?\r\n    // no i scrap the tabstuf, take the tabdata.header as preview. the tabdata.content as content. then add a un-pin button to the header\r\n    //strip.classList.remove('dock-drop-indicator');\r\n}\r\n/*\r\nlet htmltablist = <div className=\"dock-bar drag-initiator\" role=\"tablist\" tabIndex=\"-1\">\r\n    <div role=\"tablist\" className=\"dock-nav\">\r\n        <div className=\"dock-nav-wrap\">\r\n            <div className=\"dock-nav-list\" style=\"transform: translate(0px, 0px);\">\r\n                <div className=\"dock-tab dock-tab-active\">\r\n                    <div role=\"tab\" aria-selected=\"true\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid+'_pinned'} aria-controls={tabid+'_pinned'}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-tab\">\r\n                    <div role=\"tab\" aria-selected=\"false\" className=\"dock-tab-btn\" tabIndex=\"0\" id={tabid} aria-controls={tabid}>\r\n                        <div className=\"drag-initiator\">\r\n                            <TabSlot />\r\n                            <div className=\"dock-tab-hit-area\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dock-ink-bar dock-ink-bar-animated\" style=\"left: 0px; width: 30px;\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dock-nav-operations dock-nav-operations-hidden\">\r\n            <button type=\"button\" className=\"dock-nav-more\" tabIndex=\"-1\" aria-hidden=\"true\" aria-haspopup=\"listbox\"\r\n                    aria-controls=\"rc-tabs-1-more-popup\" id=\"rc-tabs-1-more\" aria-expanded=\"false\"\r\n                    style=\"visibility: hidden; order: 1;\">...\r\n            </button>\r\n        </div>\r\n        <div className=\"dock-extra-content\">\r\n            <div className=\"dock-panel-max-btn\"></div>\r\n        </div>\r\n    </div>\r\n</div>;\r\n    */\r\n// <LayoutProps, LayoutState>\r\nfunction makeAnchorControl(side: string){\r\n    let s = side[0];\r\n    const str = `<div class=\"dock-drop-square dock-drop-${side}-anchor\" onmouseup=\"confirmSetAnchor('${s}')\" onmouseenter=\"highlightAnchorArea('${s}')\" onmouseleave=\"hideAnchorArea('${s}')\"\"><div class=\"dock-drop-square-box\"></div></div>`;\r\n    return U.toHtml(str);\r\n}\r\nconst anchorControls = [\r\n    makeAnchorControl('top'),\r\n    makeAnchorControl('bottom'),\r\n    makeAnchorControl('left'),\r\n    makeAnchorControl('right'),\r\n];\r\n\r\n\r\nexport class PinnableDock extends DockLayout{\r\n    constructor(props: any) {\r\n        super(props);\r\n        let debug:boolean = false;\r\n        if (!debug) return;\r\n        let t: GObject = this;\r\n        for (let k in t) {\r\n            let originalfunc = t[k];\r\n            if (typeof t[k] === \"function\") t[k] = function (...a:any): any {\r\n                console.warn('PinnableDock called ' + k, {arguments});\r\n                return originalfunc(...a);\r\n            }\r\n        }\r\n    }\r\n\r\n    setState<K extends keyof LayoutState>(state: ((prevState: Readonly<LayoutState>, props: Readonly<LayoutProps>) => (Pick<LayoutState, K> | LayoutState | null)) | Pick<LayoutState, K> | LayoutState | null, callback?: () => void) {\r\n        // console.warn(\"set state\", state, (state as any)?.dropRect?.element);\r\n        super.setState(state, callback);\r\n    }\r\n    public static getTabFromDropRect(dropRect: LayoutState['dropRect']): TabData{\r\n        const panel: PanelData = dropRect.source.props.panelData;\r\n        const tabdata: TabData = panel.tabs.filter(t=> t.id === panel.activeId)[0];\r\n        return tabdata;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<LayoutProps>, prevState: Readonly<LayoutState>, snapshot?: any) {\r\n        super.componentDidUpdate(prevProps, prevState, snapshot);\r\n        if (this.state.dropRect) {\r\n            let droparea = this.state.dropRect.element;\r\n            if (!droparea) return;\r\n            /*<div class=\"dock-drop-square dock-drop-top anchor\"><div class=\"dock-drop-square-box\"></div></div>*/\r\n            let droplayer = droparea.querySelector('.dock-drop-layer');\r\n            currentDropArea = droparea;\r\n            dockLayout = this._ref;\r\n            currentDropRect = this.state.dropRect;\r\n            windoww.htmldockLayout = this._ref;\r\n            if (!droplayer) return;\r\n            droplayer.append(...anchorControls);\r\n            // droparea.style.backgroundColor = \"red\";\r\n        }\r\n        // document.querySelectorAll('.dock-drop-layer')\r\n    }\r\n    //\r\n    // onDragStateChange = (draggingScope: any) => void{\r\n    //     //super.onDragStateChange(draggingScope);\r\n    // }\r\n    // onSilentChange(currentTabId?: string, direction?: DropDirection) {\r\n    //     super.onSilentChange(currentTabId, direction);\r\n    // }\r\n    // dockMove(source: TabData | PanelData, target: string | TabData | PanelData | BoxData | null, direction: DropDirection) {\r\n    //     super.dockMove(source, target, direction);\r\n    // }\r\n    //\r\n    // setDropRect(element: HTMLElement, direction?: DropDirection, source?: any, event?: { clientX: number; clientY: number }, panelSize?: [number, number]) {\r\n    //     super.setDropRect(element, direction, source, event, panelSize);\r\n    // }\r\n    //\r\n    // changeLayout(layoutData: LayoutData, currentTabId: string, direction: DropDirection, silent?: boolean) {\r\n    //     super.changeLayout(layoutData, currentTabId, direction, silent);\r\n    // }\r\n    // updateTab(id: string, newTab: TabData, makeActive?: boolean): boolean {\r\n    //     return super.updateTab(id, newTab, makeActive);\r\n    // }\r\n\r\n    render(): React.ReactNode {\r\n        return <div className={\"pinnable-dock-root gray-style\"}>\r\n            <PinnableStrip side={\"t\"} />\r\n            <div className={\"pinnable-dock-middle-strip\"}>\r\n                <PinnableStrip side={\"l\"} />\r\n                {super.render()}\r\n                <PinnableStrip side={\"r\"} />\r\n            </div>\r\n            <PinnableStrip side={\"b\"} />\r\n        </div>\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}