{"ast":null,"code":"import { DProject, SetRootFieldAction, U } from '../../joiner';\nimport Storage from \"../../data/storage\";\nimport Api from \"../../data/api\";\nclass ProjectsApi {\n  static async create(type, name) {\n    let m2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let m1 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let otherProjects = arguments.length > 4 ? arguments[4] : undefined;\n    const project = DProject.new(type, name, undefined, m2, m1, undefined, otherProjects);\n    if (U.isOffline()) Offline.create(project);else await Online.create(project);\n    return project;\n  }\n  static async getAll() {\n    if (U.isOffline()) Offline.getAll();else await Online.getAll();\n  }\n  static async delete(project) {\n    if (U.isOffline()) Offline.delete(project.__raw);else await Online.delete(project.__raw);\n    project.delete(); // penso sia meglio spostare questi check isOffline() etc dentro la project.delete()\n  }\n  static async getOne(id) {\n    if (U.isOffline()) return Offline.getOne(id);else return await Online.getOne(id);\n  }\n  static async save(project) {\n    if (!project) return;\n    const rawProject = project.__raw;\n    console.log('Saved', rawProject);\n    SetRootFieldAction.new('_lastSelected', undefined);\n    if (U.isOffline()) await Offline.save(rawProject);else await Online.save(rawProject);\n  }\n  static importModal() {\n    const reader = new FileReader();\n    reader.onload = async e => {\n      var _e$target;\n      /* Import Project File */\n      const content = String((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n      if (!content) return;\n      try {\n        const project = JSON.parse(content);\n        const projects = Storage.read('projects') || [];\n        const filtered = projects.filter(p => p.id !== project.id);\n        filtered.push(project);\n        Storage.write('projects', filtered);\n        U.refresh();\n      } catch (e) {\n        alert('Invalid File.');\n      }\n    };\n    let extensions = ['*.jjodel'];\n    U.fileRead((e, files, fileContents) => {\n      //const files = e.target.files || [];\n      if (!(files === null || files === void 0 ? void 0 : files.length)) return;\n      const file = files[0];\n      reader.readAsText(file);\n    }, extensions, true);\n  }\n}\nclass Offline {\n  static create(project) {\n    const projects = Storage.read('projects') || [];\n    projects.push(project);\n    Storage.write('projects', projects);\n  }\n  static getAll() {\n    const projects = Storage.read('projects') || [];\n    for (const project of projects) DProject.new(project.type, project.name, project.state, [], [], project.id);\n  }\n  static delete(project) {\n    const projects = Storage.read('projects') || [];\n    const filteredProjects = projects.filter(p => p.id !== project.id);\n    Storage.write('projects', filteredProjects);\n  }\n  static getOne(id) {\n    const projects = Storage.read('projects') || [];\n    let filtered = projects.filter(p => p.id === id);\n    if (filtered.length <= 0) return null;\n    return filtered[0];\n  }\n  static async save(project) {\n    const projects = Storage.read('projects') || [];\n    const filtered = projects.filter(p => p.id !== project.id);\n    const state = await U.compressedState();\n    Storage.write('projects', [...filtered, {\n      ...project,\n      state\n    }]);\n    alert('Saved');\n  }\n}\nclass Online {\n  static async create(project) {\n    await Api.post(`${Api.persistance}/projects`, {\n      id: project.id,\n      name: project.name,\n      type: project.type\n    });\n  }\n  static async getAll() {\n    const response = await Api.get(`${Api.persistance}/projects`);\n    if (response.code !== 200) {\n      /* 401: Unauthorized -> Invalid Token (Local Storage)  */\n      Storage.reset();\n      U.refresh();\n      return;\n    }\n    const data = U.wrapper(response.data);\n    for (const project of data) DProject.new(project.type, project.name, project.state, [], [], project.id);\n  }\n  static async delete(project) {\n    await Api.delete(`${Api.persistance}/projects/${project.id}`);\n  }\n  static async getOne(id) {\n    const response = await Api.get(`${Api.persistance}/projects/${id}`);\n    if (response.code !== 200) return null;\n    return U.wrapper(response.data);\n  }\n  static async save(project) {\n    const state = await U.compressedState();\n    const response = await Api.patch(`${Api.persistance}/projects/${project.id}`, {\n      ...project,\n      state\n    });\n    if (response.code !== 200) alert('Cannot Save');else alert('Saved');\n  }\n}\nexport { ProjectsApi };","map":{"version":3,"names":["DProject","SetRootFieldAction","U","Storage","Api","ProjectsApi","create","type","name","m2","arguments","length","undefined","m1","otherProjects","project","new","isOffline","Offline","Online","getAll","delete","__raw","getOne","id","save","rawProject","console","log","importModal","reader","FileReader","onload","e","_e$target","content","String","target","result","JSON","parse","projects","read","filtered","filter","p","push","write","refresh","alert","extensions","fileRead","files","fileContents","file","readAsText","state","filteredProjects","compressedState","post","persistance","response","get","code","reset","data","wrapper","patch"],"sources":["C:/d/Programming/web/jodel-mde/src/api/persistance/projects.ts"],"sourcesContent":["import {\r\n    Dictionary,\r\n    DModel,\r\n    DProject, DUser,\r\n    LPointerTargetable,\r\n    LProject,\r\n    LUser,\r\n    Pointer,\r\n    SetRootFieldAction,\r\n    U\r\n} from '../../joiner';\r\nimport Storage from \"../../data/storage\";\r\nimport Api from \"../../data/api\";\r\n\r\nclass ProjectsApi {\r\n    static async create(type: DProject['type'], name?: DProject['name'], m2: Pointer<DModel>[] = [], m1: Pointer<DModel>[] = [], otherProjects?: LProject[]): Promise<DProject> {\r\n        const project = DProject.new(type, name, undefined, m2, m1, undefined, otherProjects);\r\n        if(U.isOffline()) Offline.create(project);\r\n        else await Online.create(project);\r\n        return project;\r\n    }\r\n    static async getAll(): Promise<void> {\r\n        if(U.isOffline()) Offline.getAll();\r\n        else await Online.getAll();\r\n    }\r\n    static async delete(project: LProject): Promise<void> {\r\n        if(U.isOffline()) Offline.delete(project.__raw as DProject);\r\n        else await Online.delete(project.__raw as DProject);\r\n        project.delete(); // penso sia meglio spostare questi check isOffline() etc dentro la project.delete()\r\n    }\r\n    static async getOne(id: DProject['id']): Promise<null|DProject> {\r\n        if(U.isOffline()) return Offline.getOne(id);\r\n        else return await Online.getOne(id);\r\n    }\r\n    static async save(project: LUser['project']): Promise<void> {\r\n        if(!project) return;\r\n        const rawProject = project.__raw as DProject;\r\n        console.log('Saved', rawProject);\r\n        SetRootFieldAction.new('_lastSelected', undefined);\r\n        if(U.isOffline()) await Offline.save(rawProject);\r\n        else await Online.save(rawProject);\r\n    }\r\n\r\n    static importModal() {\r\n        const reader = new FileReader();\r\n        reader.onload = async e => {\r\n            /* Import Project File */\r\n            const content = String(e.target?.result);\r\n            if(!content) return;\r\n            try {\r\n                const project = JSON.parse(content) as DProject;\r\n                const projects = Storage.read<DProject[]>('projects') || [];\r\n                const filtered = projects.filter(p => p.id !== project.id);\r\n                filtered.push(project);\r\n                Storage.write('projects', filtered);\r\n                U.refresh();\r\n            } catch (e) {alert('Invalid File.')}\r\n        }\r\n\r\n        let extensions = ['*.jjodel'];\r\n        U.fileRead((e: any, files?: FileList | null, fileContents?: string[]) => {\r\n            //const files = e.target.files || [];\r\n            if (!files?.length) return;\r\n            const file = files[0];\r\n            reader.readAsText(file);\r\n        }, extensions, true);\r\n    }\r\n}\r\n\r\nclass Offline {\r\n    static create (project: DProject): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        projects.push(project);\r\n        Storage.write('projects', projects);\r\n    }\r\n    static getAll(): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        for(const project of projects)\r\n            DProject.new(project.type, project.name, project.state, [], [], project.id);\r\n    }\r\n    static delete(project: DProject): void {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        const filteredProjects = projects.filter(p => p.id !== project.id);\r\n        Storage.write('projects', filteredProjects);\r\n    }\r\n    static getOne(id: string): DProject|null {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        let filtered: DProject|DProject[] = projects.filter(p => p.id === id);\r\n        if(filtered.length <= 0) return null;\r\n        return filtered[0];\r\n    }\r\n    static async save(project: DProject): Promise<void> {\r\n        const projects = Storage.read<DProject[]>('projects') || [];\r\n        const filtered = projects.filter(p => p.id !== project.id);\r\n        const state = await U.compressedState();\r\n        Storage.write('projects', [...filtered, {...project, state}]);\r\n        alert('Saved');\r\n    }\r\n}\r\n\r\nclass Online {\r\n    static async create (project: DProject): Promise<void> {\r\n        await Api.post(`${Api.persistance}/projects`, {\r\n           id: project.id,\r\n           name: project.name,\r\n           type: project.type\r\n        });\r\n    }\r\n    static async getAll(): Promise<void> {\r\n        const response = await Api.get(`${Api.persistance}/projects`);\r\n        if(response.code !== 200) {\r\n            /* 401: Unauthorized -> Invalid Token (Local Storage)  */\r\n            Storage.reset();\r\n            U.refresh();\r\n            return;\r\n        }\r\n        const data = U.wrapper<DProject[]>(response.data);\r\n        for(const project of data)\r\n            DProject.new(project.type, project.name, project.state, [], [], project.id);\r\n    }\r\n    static async delete(project: DProject): Promise<void> {\r\n        await Api.delete(`${Api.persistance}/projects/${project.id}`);\r\n    }\r\n    static async getOne(id: string): Promise<DProject|null> {\r\n        const response = await Api.get(`${Api.persistance}/projects/${id}`);\r\n        if(response.code !== 200) return null;\r\n        return U.wrapper<DProject>(response.data);\r\n    }\r\n    static async save(project: DProject): Promise<void> {\r\n        const state = await U.compressedState();\r\n        const response = await Api.patch(`${Api.persistance}/projects/${project.id}`, {...project, state});\r\n        if(response.code !== 200) alert('Cannot Save');\r\n        else alert('Saved')\r\n    }\r\n}\r\n\r\nexport {ProjectsApi};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}