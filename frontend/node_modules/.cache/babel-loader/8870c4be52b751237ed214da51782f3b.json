{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _slicedToArray = require(\"C:/d/Programming/web/jodel-mde/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapWindowToElement = exports.mapElementToScreenRect = exports.estimateWindowBorder = exports.estimateBrowserZoom = void 0;\nvar BrowserPopupWindow_1 = require(\"./BrowserPopupWindow\");\nfunction estimateBrowserZoom(_window) {\n  // one of them might be off by a lot due to developer console or other browser plugin\n  var _BrowserPopupWindow_ = BrowserPopupWindow_1.gerWindowBorder(),\n    _BrowserPopupWindow_2 = _slicedToArray(_BrowserPopupWindow_, 3),\n    topBorder = _BrowserPopupWindow_2[0],\n    sideBorder = _BrowserPopupWindow_2[1],\n    bottomBorder = _BrowserPopupWindow_2[2];\n  if (_window.outerWidth === _window.screen.availWidth) {\n    sideBorder = 0;\n    bottomBorder = 0;\n  }\n  var xRatio = (_window.outerWidth - sideBorder * 2) / _window.innerWidth;\n  var yRatio = (_window.outerHeight - topBorder - bottomBorder) / _window.innerHeight;\n  var zoomRatio = Math.min(yRatio, xRatio);\n  if (zoomRatio > 1.8) {\n    zoomRatio = Math.round(zoomRatio);\n  } else if (zoomRatio > 0.73) {\n    zoomRatio = Math.round(zoomRatio * 20) / 20;\n  } else {\n    zoomRatio = 2 / Math.round(2 / zoomRatio);\n  }\n  return zoomRatio;\n}\nexports.estimateBrowserZoom = estimateBrowserZoom;\nfunction estimateWindowBorder(_window) {\n  var addBorder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var zoom = _window ? estimateBrowserZoom(_window) : 1;\n  var xBorder = _window.outerWidth - _window.innerWidth * zoom >> 1;\n  var yBorder = Math.round(_window.outerHeight - _window.innerHeight * zoom);\n  if (xBorder > 32) {\n    // probably because of debugger console, assume it's in the right side\n    xBorder = 8;\n  } else {\n    yBorder -= xBorder;\n  }\n  return [xBorder, yBorder, zoom];\n}\nexports.estimateWindowBorder = estimateWindowBorder;\nvar MapRect2D = /*#__PURE__*/function () {\n  function MapRect2D() {\n    _classCallCheck(this, MapRect2D);\n  }\n  _createClass(MapRect2D, [{\n    key: \"init\",\n    value: function init(x1, y1, w1, h1, x2, y2, w2, h2) {\n      this.scaleX = w2 / w1;\n      this.scaleY = h2 / h1;\n      this.offsetX = x2 - x1 * this.scaleX;\n      this.offsetY = y2 - y1 * this.scaleY;\n    }\n  }, {\n    key: \"map\",\n    value: function map(pt) {\n      return {\n        x: pt.x * this.scaleX + this.offsetX,\n        y: pt.y * this.scaleY + this.offsetY\n      };\n    }\n  }, {\n    key: \"revertMap\",\n    value: function revertMap(pt) {\n      return {\n        x: (pt.x - this.offsetX) / this.scaleX,\n        y: (pt.y - this.offsetY) / this.scaleY\n      };\n    }\n  }]);\n  return MapRect2D;\n}();\nfunction mapElementToScreenRect(element, rect) {\n  if (!element) {\n    return null;\n  }\n  var clientRect = element.getBoundingClientRect();\n  var mapRect = new MapRect2D();\n  mapRect.init(0, 0, element.offsetWidth, element.offsetHeight, clientRect.x, clientRect.y, clientRect.width, clientRect.height);\n  var mappedRect;\n  if (rect) {\n    var _mapRect$map = mapRect.map({\n        x: rect.left,\n        y: rect.top\n      }),\n      x = _mapRect$map.x,\n      y = _mapRect$map.y;\n    var _mapRect$map2 = mapRect.map({\n        x: rect.left + rect.width,\n        y: rect.top + rect.height\n      }),\n      x2 = _mapRect$map2.x,\n      y2 = _mapRect$map2.y;\n    mappedRect = {\n      left: x,\n      top: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  } else {\n    mappedRect = {\n      left: clientRect.left,\n      top: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height\n    };\n  }\n  var _document = element.ownerDocument;\n  var _window = _document.defaultView;\n  if (!_window) {\n    return clientRect;\n  }\n  // recursively get rect if it's an iframe\n  if (_window.frameElement) {\n    return mapElementToScreenRect(_window.frameElement, mappedRect);\n  }\n  var _estimateWindowBorder = estimateWindowBorder(_window),\n    _estimateWindowBorder2 = _slicedToArray(_estimateWindowBorder, 3),\n    xBorder = _estimateWindowBorder2[0],\n    yBorder = _estimateWindowBorder2[1],\n    zoom = _estimateWindowBorder2[2];\n  if (zoom !== 1) {\n    mappedRect.left *= zoom;\n    mappedRect.top *= zoom;\n    mappedRect.width *= zoom;\n    mappedRect.height *= zoom;\n  }\n  mappedRect.left += _window.screenX + xBorder;\n  mappedRect.top += _window.screenY + yBorder;\n  return mappedRect;\n}\nexports.mapElementToScreenRect = mapElementToScreenRect;\nfunction mapWindowToElement(targetElement, fromWindow, fromRect) {\n  var removeBorder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  if (!targetElement) {\n    return null;\n  }\n  if (fromWindow) {\n    fromRect = {\n      left: fromWindow.screenX,\n      top: fromWindow.screenY,\n      width: fromWindow.outerWidth,\n      height: fromWindow.outerHeight\n    };\n    if (removeBorder) {\n      var _BrowserPopupWindow_3 = _slicedToArray(BrowserPopupWindow_1.popupWindowBorder, 3),\n        topBorder = _BrowserPopupWindow_3[0],\n        sideBorder = _BrowserPopupWindow_3[1],\n        bottomBorder = _BrowserPopupWindow_3[2];\n      fromRect.left += sideBorder;\n      fromRect.top += topBorder;\n      fromRect.width -= sideBorder * 2;\n      fromRect.height -= topBorder + bottomBorder;\n    }\n  } else if (!fromRect) {\n    return null;\n  }\n  var _document = targetElement.ownerDocument;\n  var _window = _document.defaultView;\n  if (!_window) {\n    return fromRect;\n  }\n  // recursively get rect if it's an iframe\n  if (_window.frameElement) {\n    fromRect = mapWindowToElement(_window.frameElement, null, fromRect);\n  } else {\n    var _estimateWindowBorder3 = estimateWindowBorder(_window),\n      _estimateWindowBorder4 = _slicedToArray(_estimateWindowBorder3, 3),\n      xBorder = _estimateWindowBorder4[0],\n      yBorder = _estimateWindowBorder4[1],\n      zoom = _estimateWindowBorder4[2];\n    fromRect.left -= _window.screenX + xBorder;\n    fromRect.top -= _window.screenY + yBorder;\n    if (zoom !== 1) {\n      fromRect.left /= zoom;\n      fromRect.top /= zoom;\n      fromRect.width /= zoom;\n      fromRect.height /= zoom;\n    }\n  }\n  var clientRect = targetElement.getBoundingClientRect();\n  var mapRect = new MapRect2D();\n  mapRect.init(0, 0, targetElement.offsetWidth, targetElement.offsetHeight, clientRect.x, clientRect.y, clientRect.width, clientRect.height);\n  var mappedRect;\n  var _mapRect$revertMap = mapRect.revertMap({\n      x: fromRect.left,\n      y: fromRect.top\n    }),\n    x = _mapRect$revertMap.x,\n    y = _mapRect$revertMap.y;\n  var _mapRect$revertMap2 = mapRect.revertMap({\n      x: fromRect.left + fromRect.width,\n      y: fromRect.top + fromRect.height\n    }),\n    x2 = _mapRect$revertMap2.x,\n    y2 = _mapRect$revertMap2.y;\n  mappedRect = {\n    left: x,\n    top: y,\n    width: x2 - x,\n    height: y2 - y\n  };\n  return mappedRect;\n}\nexports.mapWindowToElement = mapWindowToElement;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_slicedToArray","Object","defineProperty","exports","value","mapWindowToElement","mapElementToScreenRect","estimateWindowBorder","estimateBrowserZoom","BrowserPopupWindow_1","_window","_BrowserPopupWindow_","gerWindowBorder","_BrowserPopupWindow_2","topBorder","sideBorder","bottomBorder","outerWidth","screen","availWidth","xRatio","innerWidth","yRatio","outerHeight","innerHeight","zoomRatio","Math","min","round","addBorder","arguments","length","undefined","zoom","xBorder","yBorder","MapRect2D","key","init","x1","y1","w1","h1","x2","y2","w2","h2","scaleX","scaleY","offsetX","offsetY","map","pt","x","y","revertMap","element","rect","clientRect","getBoundingClientRect","mapRect","offsetWidth","offsetHeight","width","height","mappedRect","_mapRect$map","left","top","_mapRect$map2","_document","ownerDocument","defaultView","frameElement","_estimateWindowBorder","_estimateWindowBorder2","screenX","screenY","targetElement","fromWindow","fromRect","removeBorder","_BrowserPopupWindow_3","popupWindowBorder","_estimateWindowBorder3","_estimateWindowBorder4","_mapRect$revertMap","_mapRect$revertMap2"],"sources":["C:/d/Programming/web/jodel-mde/node_modules/rc-new-window/lib/ScreenPosition.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapWindowToElement = exports.mapElementToScreenRect = exports.estimateWindowBorder = exports.estimateBrowserZoom = void 0;\nconst BrowserPopupWindow_1 = require(\"./BrowserPopupWindow\");\nfunction estimateBrowserZoom(_window) {\n    // one of them might be off by a lot due to developer console or other browser plugin\n    let [topBorder, sideBorder, bottomBorder] = BrowserPopupWindow_1.gerWindowBorder();\n    if (_window.outerWidth === _window.screen.availWidth) {\n        sideBorder = 0;\n        bottomBorder = 0;\n    }\n    let xRatio = (_window.outerWidth - sideBorder * 2) / _window.innerWidth;\n    let yRatio = (_window.outerHeight - topBorder - bottomBorder) / _window.innerHeight;\n    let zoomRatio = Math.min(yRatio, xRatio);\n    if (zoomRatio > 1.8) {\n        zoomRatio = Math.round(zoomRatio);\n    }\n    else if (zoomRatio > 0.73) {\n        zoomRatio = Math.round(zoomRatio * 20) / 20;\n    }\n    else {\n        zoomRatio = 2 / Math.round(2 / zoomRatio);\n    }\n    return zoomRatio;\n}\nexports.estimateBrowserZoom = estimateBrowserZoom;\nfunction estimateWindowBorder(_window, addBorder = false) {\n    let zoom = _window ? estimateBrowserZoom(_window) : 1;\n    let xBorder = (_window.outerWidth - _window.innerWidth * zoom) >> 1;\n    let yBorder = Math.round(_window.outerHeight - _window.innerHeight * zoom);\n    if (xBorder > 32) {\n        // probably because of debugger console, assume it's in the right side\n        xBorder = 8;\n    }\n    else {\n        yBorder -= xBorder;\n    }\n    return [xBorder, yBorder, zoom];\n}\nexports.estimateWindowBorder = estimateWindowBorder;\nclass MapRect2D {\n    init(x1, y1, w1, h1, x2, y2, w2, h2) {\n        this.scaleX = w2 / w1;\n        this.scaleY = h2 / h1;\n        this.offsetX = x2 - x1 * this.scaleX;\n        this.offsetY = y2 - y1 * this.scaleY;\n    }\n    map(pt) {\n        return { x: pt.x * this.scaleX + this.offsetX, y: pt.y * this.scaleY + this.offsetY };\n    }\n    revertMap(pt) {\n        return { x: (pt.x - this.offsetX) / this.scaleX, y: (pt.y - this.offsetY) / this.scaleY };\n    }\n}\nfunction mapElementToScreenRect(element, rect) {\n    if (!element) {\n        return null;\n    }\n    let clientRect = element.getBoundingClientRect();\n    let mapRect = new MapRect2D();\n    mapRect.init(0, 0, element.offsetWidth, element.offsetHeight, clientRect.x, clientRect.y, clientRect.width, clientRect.height);\n    let mappedRect;\n    if (rect) {\n        let { x, y } = mapRect.map({ x: rect.left, y: rect.top });\n        let { x: x2, y: y2 } = mapRect.map({ x: rect.left + rect.width, y: rect.top + rect.height });\n        mappedRect = { left: x, top: y, width: x2 - x, height: y2 - y };\n    }\n    else {\n        mappedRect = {\n            left: clientRect.left,\n            top: clientRect.top,\n            width: clientRect.width,\n            height: clientRect.height,\n        };\n    }\n    let _document = element.ownerDocument;\n    let _window = _document.defaultView;\n    if (!_window) {\n        return clientRect;\n    }\n    // recursively get rect if it's an iframe\n    if (_window.frameElement) {\n        return mapElementToScreenRect(_window.frameElement, mappedRect);\n    }\n    let [xBorder, yBorder, zoom] = estimateWindowBorder(_window);\n    if (zoom !== 1) {\n        mappedRect.left *= zoom;\n        mappedRect.top *= zoom;\n        mappedRect.width *= zoom;\n        mappedRect.height *= zoom;\n    }\n    mappedRect.left += _window.screenX + xBorder;\n    mappedRect.top += _window.screenY + yBorder;\n    return mappedRect;\n}\nexports.mapElementToScreenRect = mapElementToScreenRect;\nfunction mapWindowToElement(targetElement, fromWindow, fromRect, removeBorder = true) {\n    if (!targetElement) {\n        return null;\n    }\n    if (fromWindow) {\n        fromRect = {\n            left: fromWindow.screenX,\n            top: fromWindow.screenY,\n            width: fromWindow.outerWidth,\n            height: fromWindow.outerHeight,\n        };\n        if (removeBorder) {\n            const [topBorder, sideBorder, bottomBorder] = BrowserPopupWindow_1.popupWindowBorder;\n            fromRect.left += sideBorder;\n            fromRect.top += topBorder;\n            fromRect.width -= sideBorder * 2;\n            fromRect.height -= topBorder + bottomBorder;\n        }\n    }\n    else if (!fromRect) {\n        return null;\n    }\n    let _document = targetElement.ownerDocument;\n    let _window = _document.defaultView;\n    if (!_window) {\n        return fromRect;\n    }\n    // recursively get rect if it's an iframe\n    if (_window.frameElement) {\n        fromRect = mapWindowToElement(_window.frameElement, null, fromRect);\n    }\n    else {\n        let [xBorder, yBorder, zoom] = estimateWindowBorder(_window);\n        fromRect.left -= _window.screenX + xBorder;\n        fromRect.top -= _window.screenY + yBorder;\n        if (zoom !== 1) {\n            fromRect.left /= zoom;\n            fromRect.top /= zoom;\n            fromRect.width /= zoom;\n            fromRect.height /= zoom;\n        }\n    }\n    let clientRect = targetElement.getBoundingClientRect();\n    let mapRect = new MapRect2D();\n    mapRect.init(0, 0, targetElement.offsetWidth, targetElement.offsetHeight, clientRect.x, clientRect.y, clientRect.width, clientRect.height);\n    let mappedRect;\n    let { x, y } = mapRect.revertMap({ x: fromRect.left, y: fromRect.top });\n    let { x: x2, y: y2 } = mapRect.revertMap({\n        x: fromRect.left + fromRect.width,\n        y: fromRect.top + fromRect.height,\n    });\n    mappedRect = { left: x, top: y, width: x2 - x, height: y2 - y };\n    return mappedRect;\n}\nexports.mapWindowToElement = mapWindowToElement;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAAA,IAAAE,cAAA,GAAAF,OAAA;AACbG,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,sBAAsB,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,mBAAmB,GAAG,KAAK,CAAC;AACjI,IAAMC,oBAAoB,GAAGX,OAAO,CAAC,sBAAsB,CAAC;AAC5D,SAASU,mBAAmBA,CAACE,OAAO,EAAE;EAClC;EACA,IAAAC,oBAAA,GAA4CF,oBAAoB,CAACG,eAAe,CAAC,CAAC;IAAAC,qBAAA,GAAAb,cAAA,CAAAW,oBAAA;IAA7EG,SAAS,GAAAD,qBAAA;IAAEE,UAAU,GAAAF,qBAAA;IAAEG,YAAY,GAAAH,qBAAA;EACxC,IAAIH,OAAO,CAACO,UAAU,KAAKP,OAAO,CAACQ,MAAM,CAACC,UAAU,EAAE;IAClDJ,UAAU,GAAG,CAAC;IACdC,YAAY,GAAG,CAAC;EACpB;EACA,IAAII,MAAM,GAAG,CAACV,OAAO,CAACO,UAAU,GAAGF,UAAU,GAAG,CAAC,IAAIL,OAAO,CAACW,UAAU;EACvE,IAAIC,MAAM,GAAG,CAACZ,OAAO,CAACa,WAAW,GAAGT,SAAS,GAAGE,YAAY,IAAIN,OAAO,CAACc,WAAW;EACnF,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,EAAEF,MAAM,CAAC;EACxC,IAAIK,SAAS,GAAG,GAAG,EAAE;IACjBA,SAAS,GAAGC,IAAI,CAACE,KAAK,CAACH,SAAS,CAAC;EACrC,CAAC,MACI,IAAIA,SAAS,GAAG,IAAI,EAAE;IACvBA,SAAS,GAAGC,IAAI,CAACE,KAAK,CAACH,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE;EAC/C,CAAC,MACI;IACDA,SAAS,GAAG,CAAC,GAAGC,IAAI,CAACE,KAAK,CAAC,CAAC,GAAGH,SAAS,CAAC;EAC7C;EACA,OAAOA,SAAS;AACpB;AACAtB,OAAO,CAACK,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,oBAAoBA,CAACG,OAAO,EAAqB;EAAA,IAAnBmB,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACpD,IAAIG,IAAI,GAAGvB,OAAO,GAAGF,mBAAmB,CAACE,OAAO,CAAC,GAAG,CAAC;EACrD,IAAIwB,OAAO,GAAIxB,OAAO,CAACO,UAAU,GAAGP,OAAO,CAACW,UAAU,GAAGY,IAAI,IAAK,CAAC;EACnE,IAAIE,OAAO,GAAGT,IAAI,CAACE,KAAK,CAAClB,OAAO,CAACa,WAAW,GAAGb,OAAO,CAACc,WAAW,GAAGS,IAAI,CAAC;EAC1E,IAAIC,OAAO,GAAG,EAAE,EAAE;IACd;IACAA,OAAO,GAAG,CAAC;EACf,CAAC,MACI;IACDC,OAAO,IAAID,OAAO;EACtB;EACA,OAAO,CAACA,OAAO,EAAEC,OAAO,EAAEF,IAAI,CAAC;AACnC;AACA9B,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AAAC,IAC9C6B,SAAS;EAAA,SAAAA,UAAA;IAAAvC,eAAA,OAAAuC,SAAA;EAAA;EAAArC,YAAA,CAAAqC,SAAA;IAAAC,GAAA;IAAAjC,KAAA,EACX,SAAAkC,KAAKC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;MACjC,IAAI,CAACC,MAAM,GAAGF,EAAE,GAAGJ,EAAE;MACrB,IAAI,CAACO,MAAM,GAAGF,EAAE,GAAGJ,EAAE;MACrB,IAAI,CAACO,OAAO,GAAGN,EAAE,GAAGJ,EAAE,GAAG,IAAI,CAACQ,MAAM;MACpC,IAAI,CAACG,OAAO,GAAGN,EAAE,GAAGJ,EAAE,GAAG,IAAI,CAACQ,MAAM;IACxC;EAAC;IAAAX,GAAA;IAAAjC,KAAA,EACD,SAAA+C,IAAIC,EAAE,EAAE;MACJ,OAAO;QAAEC,CAAC,EAAED,EAAE,CAACC,CAAC,GAAG,IAAI,CAACN,MAAM,GAAG,IAAI,CAACE,OAAO;QAAEK,CAAC,EAAEF,EAAE,CAACE,CAAC,GAAG,IAAI,CAACN,MAAM,GAAG,IAAI,CAACE;MAAQ,CAAC;IACzF;EAAC;IAAAb,GAAA;IAAAjC,KAAA,EACD,SAAAmD,UAAUH,EAAE,EAAE;MACV,OAAO;QAAEC,CAAC,EAAE,CAACD,EAAE,CAACC,CAAC,GAAG,IAAI,CAACJ,OAAO,IAAI,IAAI,CAACF,MAAM;QAAEO,CAAC,EAAE,CAACF,EAAE,CAACE,CAAC,GAAG,IAAI,CAACJ,OAAO,IAAI,IAAI,CAACF;MAAO,CAAC;IAC7F;EAAC;EAAA,OAAAZ,SAAA;AAAA;AAEL,SAAS9B,sBAAsBA,CAACkD,OAAO,EAAEC,IAAI,EAAE;EAC3C,IAAI,CAACD,OAAO,EAAE;IACV,OAAO,IAAI;EACf;EACA,IAAIE,UAAU,GAAGF,OAAO,CAACG,qBAAqB,CAAC,CAAC;EAChD,IAAIC,OAAO,GAAG,IAAIxB,SAAS,CAAC,CAAC;EAC7BwB,OAAO,CAACtB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEkB,OAAO,CAACK,WAAW,EAAEL,OAAO,CAACM,YAAY,EAAEJ,UAAU,CAACL,CAAC,EAAEK,UAAU,CAACJ,CAAC,EAAEI,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACM,MAAM,CAAC;EAC9H,IAAIC,UAAU;EACd,IAAIR,IAAI,EAAE;IACN,IAAAS,YAAA,GAAeN,OAAO,CAACT,GAAG,CAAC;QAAEE,CAAC,EAAEI,IAAI,CAACU,IAAI;QAAEb,CAAC,EAAEG,IAAI,CAACW;MAAI,CAAC,CAAC;MAAnDf,CAAC,GAAAa,YAAA,CAADb,CAAC;MAAEC,CAAC,GAAAY,YAAA,CAADZ,CAAC;IACV,IAAAe,aAAA,GAAuBT,OAAO,CAACT,GAAG,CAAC;QAAEE,CAAC,EAAEI,IAAI,CAACU,IAAI,GAAGV,IAAI,CAACM,KAAK;QAAET,CAAC,EAAEG,IAAI,CAACW,GAAG,GAAGX,IAAI,CAACO;MAAO,CAAC,CAAC;MAAnFrB,EAAE,GAAA0B,aAAA,CAALhB,CAAC;MAAST,EAAE,GAAAyB,aAAA,CAALf,CAAC;IACdW,UAAU,GAAG;MAAEE,IAAI,EAAEd,CAAC;MAAEe,GAAG,EAAEd,CAAC;MAAES,KAAK,EAAEpB,EAAE,GAAGU,CAAC;MAAEW,MAAM,EAAEpB,EAAE,GAAGU;IAAE,CAAC;EACnE,CAAC,MACI;IACDW,UAAU,GAAG;MACTE,IAAI,EAAET,UAAU,CAACS,IAAI;MACrBC,GAAG,EAAEV,UAAU,CAACU,GAAG;MACnBL,KAAK,EAAEL,UAAU,CAACK,KAAK;MACvBC,MAAM,EAAEN,UAAU,CAACM;IACvB,CAAC;EACL;EACA,IAAIM,SAAS,GAAGd,OAAO,CAACe,aAAa;EACrC,IAAI7D,OAAO,GAAG4D,SAAS,CAACE,WAAW;EACnC,IAAI,CAAC9D,OAAO,EAAE;IACV,OAAOgD,UAAU;EACrB;EACA;EACA,IAAIhD,OAAO,CAAC+D,YAAY,EAAE;IACtB,OAAOnE,sBAAsB,CAACI,OAAO,CAAC+D,YAAY,EAAER,UAAU,CAAC;EACnE;EACA,IAAAS,qBAAA,GAA+BnE,oBAAoB,CAACG,OAAO,CAAC;IAAAiE,sBAAA,GAAA3E,cAAA,CAAA0E,qBAAA;IAAvDxC,OAAO,GAAAyC,sBAAA;IAAExC,OAAO,GAAAwC,sBAAA;IAAE1C,IAAI,GAAA0C,sBAAA;EAC3B,IAAI1C,IAAI,KAAK,CAAC,EAAE;IACZgC,UAAU,CAACE,IAAI,IAAIlC,IAAI;IACvBgC,UAAU,CAACG,GAAG,IAAInC,IAAI;IACtBgC,UAAU,CAACF,KAAK,IAAI9B,IAAI;IACxBgC,UAAU,CAACD,MAAM,IAAI/B,IAAI;EAC7B;EACAgC,UAAU,CAACE,IAAI,IAAIzD,OAAO,CAACkE,OAAO,GAAG1C,OAAO;EAC5C+B,UAAU,CAACG,GAAG,IAAI1D,OAAO,CAACmE,OAAO,GAAG1C,OAAO;EAC3C,OAAO8B,UAAU;AACrB;AACA9D,OAAO,CAACG,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,kBAAkBA,CAACyE,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAuB;EAAA,IAArBC,YAAY,GAAAnD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAChF,IAAI,CAACgD,aAAa,EAAE;IAChB,OAAO,IAAI;EACf;EACA,IAAIC,UAAU,EAAE;IACZC,QAAQ,GAAG;MACPb,IAAI,EAAEY,UAAU,CAACH,OAAO;MACxBR,GAAG,EAAEW,UAAU,CAACF,OAAO;MACvBd,KAAK,EAAEgB,UAAU,CAAC9D,UAAU;MAC5B+C,MAAM,EAAEe,UAAU,CAACxD;IACvB,CAAC;IACD,IAAI0D,YAAY,EAAE;MACd,IAAAC,qBAAA,GAAAlF,cAAA,CAA8CS,oBAAoB,CAAC0E,iBAAiB;QAA7ErE,SAAS,GAAAoE,qBAAA;QAAEnE,UAAU,GAAAmE,qBAAA;QAAElE,YAAY,GAAAkE,qBAAA;MAC1CF,QAAQ,CAACb,IAAI,IAAIpD,UAAU;MAC3BiE,QAAQ,CAACZ,GAAG,IAAItD,SAAS;MACzBkE,QAAQ,CAACjB,KAAK,IAAIhD,UAAU,GAAG,CAAC;MAChCiE,QAAQ,CAAChB,MAAM,IAAIlD,SAAS,GAAGE,YAAY;IAC/C;EACJ,CAAC,MACI,IAAI,CAACgE,QAAQ,EAAE;IAChB,OAAO,IAAI;EACf;EACA,IAAIV,SAAS,GAAGQ,aAAa,CAACP,aAAa;EAC3C,IAAI7D,OAAO,GAAG4D,SAAS,CAACE,WAAW;EACnC,IAAI,CAAC9D,OAAO,EAAE;IACV,OAAOsE,QAAQ;EACnB;EACA;EACA,IAAItE,OAAO,CAAC+D,YAAY,EAAE;IACtBO,QAAQ,GAAG3E,kBAAkB,CAACK,OAAO,CAAC+D,YAAY,EAAE,IAAI,EAAEO,QAAQ,CAAC;EACvE,CAAC,MACI;IACD,IAAAI,sBAAA,GAA+B7E,oBAAoB,CAACG,OAAO,CAAC;MAAA2E,sBAAA,GAAArF,cAAA,CAAAoF,sBAAA;MAAvDlD,OAAO,GAAAmD,sBAAA;MAAElD,OAAO,GAAAkD,sBAAA;MAAEpD,IAAI,GAAAoD,sBAAA;IAC3BL,QAAQ,CAACb,IAAI,IAAIzD,OAAO,CAACkE,OAAO,GAAG1C,OAAO;IAC1C8C,QAAQ,CAACZ,GAAG,IAAI1D,OAAO,CAACmE,OAAO,GAAG1C,OAAO;IACzC,IAAIF,IAAI,KAAK,CAAC,EAAE;MACZ+C,QAAQ,CAACb,IAAI,IAAIlC,IAAI;MACrB+C,QAAQ,CAACZ,GAAG,IAAInC,IAAI;MACpB+C,QAAQ,CAACjB,KAAK,IAAI9B,IAAI;MACtB+C,QAAQ,CAAChB,MAAM,IAAI/B,IAAI;IAC3B;EACJ;EACA,IAAIyB,UAAU,GAAGoB,aAAa,CAACnB,qBAAqB,CAAC,CAAC;EACtD,IAAIC,OAAO,GAAG,IAAIxB,SAAS,CAAC,CAAC;EAC7BwB,OAAO,CAACtB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEwC,aAAa,CAACjB,WAAW,EAAEiB,aAAa,CAAChB,YAAY,EAAEJ,UAAU,CAACL,CAAC,EAAEK,UAAU,CAACJ,CAAC,EAAEI,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACM,MAAM,CAAC;EAC1I,IAAIC,UAAU;EACd,IAAAqB,kBAAA,GAAe1B,OAAO,CAACL,SAAS,CAAC;MAAEF,CAAC,EAAE2B,QAAQ,CAACb,IAAI;MAAEb,CAAC,EAAE0B,QAAQ,CAACZ;IAAI,CAAC,CAAC;IAAjEf,CAAC,GAAAiC,kBAAA,CAADjC,CAAC;IAAEC,CAAC,GAAAgC,kBAAA,CAADhC,CAAC;EACV,IAAAiC,mBAAA,GAAuB3B,OAAO,CAACL,SAAS,CAAC;MACrCF,CAAC,EAAE2B,QAAQ,CAACb,IAAI,GAAGa,QAAQ,CAACjB,KAAK;MACjCT,CAAC,EAAE0B,QAAQ,CAACZ,GAAG,GAAGY,QAAQ,CAAChB;IAC/B,CAAC,CAAC;IAHOrB,EAAE,GAAA4C,mBAAA,CAALlC,CAAC;IAAST,EAAE,GAAA2C,mBAAA,CAALjC,CAAC;EAIdW,UAAU,GAAG;IAAEE,IAAI,EAAEd,CAAC;IAAEe,GAAG,EAAEd,CAAC;IAAES,KAAK,EAAEpB,EAAE,GAAGU,CAAC;IAAEW,MAAM,EAAEpB,EAAE,GAAGU;EAAE,CAAC;EAC/D,OAAOW,UAAU;AACrB;AACA9D,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script"}