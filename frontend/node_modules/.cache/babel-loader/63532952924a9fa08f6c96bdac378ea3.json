{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexOfExpression = void 0;\nvar Expression_1 = require(\"../Expression\");\n/**\n * Returns the index of the given string in self or 0 if it is not condained.\n *\n * @oclExpression String::indexOf (s : String) : Number\n * @oclExample self.name.indexOf(\"string\")\n */\nvar IndexOfExpression = /** @class */function (_super) {\n  __extends(IndexOfExpression, _super);\n  function IndexOfExpression() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  IndexOfExpression.prototype.evaluate = function (visitor, localVariables) {\n    var source = this.getSource().evaluate(visitor, localVariables);\n    var indexOfString = this.getBody().evaluate(visitor, localVariables);\n    return indexOfString.length === 0 ? 0 : source.indexOf(indexOfString) + 1;\n  };\n  return IndexOfExpression;\n}(Expression_1.BodyBasedExpression);\nexports.IndexOfExpression = IndexOfExpression;","map":{"version":3,"names":["Expression_1","require","IndexOfExpression","_super","__extends","prototype","evaluate","visitor","localVariables","source","getSource","indexOfString","getBody","length","indexOf","BodyBasedExpression","exports"],"sources":["../../../../lib/components/expressions/string/IndexOfExpression.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA;;;;;;AAMA,IAAAC,iBAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,iBAAA,EAAAC,MAAA;EAAvC,SAAAD,kBAAA;;EAOA;EANIA,iBAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,OAA4B,EAAEC,cAAoB;IACvD,IAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE,CAACJ,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;IACjE,IAAMG,aAAa,GAAG,IAAI,CAACC,OAAO,EAAE,CAACN,QAAQ,CAACC,OAAO,EAAEC,cAAc,CAAC;IAEtE,OAAOG,aAAa,CAACE,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGJ,MAAM,CAACK,OAAO,CAACH,aAAa,CAAC,GAAG,CAAC;EAC7E,CAAC;EACL,OAAAT,iBAAC;AAAD,CAAC,CAPsCF,YAAA,CAAAe,mBAAmB;AAA7CC,OAAA,CAAAd,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script"}