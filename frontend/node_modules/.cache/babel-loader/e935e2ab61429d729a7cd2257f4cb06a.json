{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\components\\\\alert\\\\Alert.tsx\",\n  _this = this;\nimport { SetRootFieldAction } from '../../joiner';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './style.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AlertComponent(props) {\n  const {\n    type,\n    message\n  } = props;\n  let typeLabel = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  switch (type) {\n    case 'w':\n      typeLabel = /*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'text-warning',\n        children: \"Warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 31\n      }, this);\n      break;\n    case 'e':\n      typeLabel = /*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'text-danger',\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 31\n      }, this);\n      break;\n    default:\n      typeLabel = /*#__PURE__*/_jsxDEV(\"b\", {\n        className: 'text-primary',\n        children: \"Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 30\n      }, this);\n  }\n  if (!type || !message) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'alert-container',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'alert-card',\n      children: [typeLabel, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn btn-danger',\n        onClick: e => SetRootFieldAction.new('alert', '', ''),\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n_c = AlertComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  const alert = state.alert;\n  if (!alert) return ret;\n  ret.type = alert.charAt(0).toLowerCase();\n  ret.message = alert.slice(2);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const AlertConnected = connect(mapStateToProps, mapDispatchToProps)(AlertComponent);\nexport const AlertVisualizer = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(AlertConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = AlertVisualizer;\nexport default AlertVisualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AlertComponent\");\n$RefreshReg$(_c2, \"AlertVisualizer\");","map":{"version":3,"names":["SetRootFieldAction","React","connect","Fragment","_Fragment","jsxDEV","_jsxDEV","AlertComponent","props","type","message","typeLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","new","_c","mapStateToProps","state","ownProps","ret","alert","charAt","toLowerCase","slice","mapDispatchToProps","dispatch","AlertConnected","AlertVisualizer","arguments","length","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/components/alert/Alert.tsx"],"sourcesContent":["import {DState, SetRootFieldAction} from '../../joiner';\r\nimport {FakeStateProps} from '../../joiner/types';\r\nimport React, {Component, Dispatch, ReactElement} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.scss';\r\n\r\nfunction AlertComponent(props: AllProps) {\r\n    const {type, message} = props;\r\n    let typeLabel = <></>;\r\n    switch (type) {\r\n        case 'w': typeLabel = <b className={'text-warning'}>Warning</b>; break;\r\n        case 'e': typeLabel = <b className={'text-danger'}>Error</b>; break;\r\n        default: typeLabel = <b className={'text-primary'}>Info</b>;\r\n    }\r\n    if(!type || !message) return(<></>);\r\n    return(<div className={'alert-container'}>\r\n        <div className={'alert-card'}>\r\n            {typeLabel}\r\n            <div>{message}</div>\r\n            <button className={'btn btn-danger'} onClick={e => SetRootFieldAction.new('alert', '', '')}>\r\n                close\r\n            </button>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    type?: string;\r\n    message?: string;\r\n}\r\ninterface DispatchProps {}\r\n\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    const alert = state.alert;\r\n    if(!alert) return ret;\r\n    ret.type = alert.charAt(0).toLowerCase();\r\n    ret.message = alert.slice(2);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    return ret;\r\n}\r\n\r\n\r\nexport const AlertConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AlertComponent);\r\n\r\nexport const AlertVisualizer = (props: OwnProps, children: (string | Component)[] = []): ReactElement => {\r\n    return <AlertConnected {...{...props, children}} />;\r\n}\r\nexport default AlertVisualizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}