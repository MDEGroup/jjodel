{"ast":null,"code":"var _jsxFileName = \"C:\\\\d\\\\Programming\\\\web\\\\jodel-mde\\\\src\\\\components\\\\logger\\\\loggerComponent.tsx\";\nimport React, { PureComponent } from \"react\";\nimport './logger.scss';\nimport { DataOutputComponent, Log, U } from \"../../joiner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// private\nclass ThisState {\n  constructor() {\n    this.categoriesActive = {\n      l: true,\n      i: true,\n      w: true,\n      e: true,\n      ex: true,\n      eDev: true,\n      exDev: true\n    };\n    this.searchTag = '';\n    this.searchTagAsRegExp = false;\n    this.searchTagIsDeep = false;\n    this.regexpIsInvalid = false;\n    this.l_counter = 0;\n    this.i_counter = 0;\n    this.w_counter = 0;\n    this.e_counter = 0;\n    this.ex_counter = 0;\n    this.eDev_counter = 0;\n    this.exDev_counter = 0;\n  } // to mark the input as invalid without triggering a Log.e message loop\n  // counters to force update. (data source is in Log.messageMapping\n}\n/*interface ThisState\r\n    messages: Dictionary<string, Dictionary<string, any[]>>\r\n    filters: {category: ((cat: string) => boolean) | null, tag: ((tag: string) => boolean) | null, datafilter: ((data: any[]) => boolean) | null};\r\n    id: number;\r\n    minDate: UnixTimestamp;\r\n    maxDate: UnixTimestamp;\r\n}*/\n\nexport class LoggerComponent extends PureComponent {\n  /*public static Log(category: string, key: string, data: any[]): void{\r\n      for (let logger of LoggerComponent.loggers) { logger.log(category, key, data); }\r\n  }*/\n\n  constructor(props, context) {\n    super(props, context);\n    this.id = void 0;\n    this.categoryAliases = void 0;\n    this.changeSearch = e => {\n      this.setState({\n        ...this.state,\n        searchTag: e.target.value,\n        regexpIsInvalid: false\n      });\n    };\n    this.changeRegexpSearch = e => {\n      this.setState({\n        ...this.state,\n        searchTagAsRegExp: e.target.checked\n      });\n    };\n    this.changeDeepSearch = e => {\n      this.setState({\n        ...this.state,\n        searchTagIsDeep: e.target.checked\n      });\n    };\n    this.id = LoggerComponent.max_id++;\n    this.state = new ThisState();\n    // minDate: DDate.addYear(new Date(), -1, true).getTime(),\n    // maxDate: DDate.addYear(new Date(), +1, true).getTime()};\n    LoggerComponent.loggers.push(this);\n    Log._loggerComponent = this;\n    this.categoryAliases = {\n      l: null,\n      ex: \"e\",\n      exDev: \"eDev\"\n    };\n    // Log.registerLogger(this, Log.e);\n  }\n\n  isCatActive(cat) {\n    if (this.categoryAliases[cat] !== undefined /* null must pass! */) cat = this.categoryAliases[cat];\n    return !!this.state.categoriesActive[cat];\n  }\n  /*\r\n  private changeMinDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      this.setState({...this.state, minDate: new Date(e.target.value).getTime() });\r\n    }\r\n  private changeMaxDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      this.setState({...this.state, maxDate: new Date(e.target.value).getTime() });\r\n  }*/\n  filter(msg) {\n    let s = this.state.searchTagIsDeep ? msg.long_string : msg.short_string;\n    if (this.state.searchTagAsRegExp) {\n      try {\n        let regexp = new RegExp(this.state.searchTag);\n        return regexp.test(s);\n      } catch (e) {\n        // this is to avoid a loop of render-error\n        if (!this.state.regexpIsInvalid) {\n          this.setState({\n            regexpIsInvalid: true\n          });\n          Log.ee(\"invalid regular expression in Logger.filter\", (e.message || '').split('\\n')[0]);\n        }\n      }\n    }\n    return s.indexOf(this.state.searchTag) >= 0;\n  }\n  toggleCat(cat) {\n    this.setState({\n      categoriesActive: {\n        ...this.state.categoriesActive,\n        [cat]: !this.state.categoriesActive[cat]\n      }\n    });\n  }\n  displayArgs(args, category) {\n    if (!args) return undefined;\n    if (!Array.isArray(args)) args = [args];\n    let objs = [];\n    let primitives = [];\n    for (let a of args) {\n      switch (typeof a) {\n        case \"object\":\n        case \"function\":\n          objs.push(a);\n          primitives.push(\"[\" + typeof a + \"_\" + objs.length + \"]\");\n          break;\n        case \"symbol\":\n          primitives.push(a.toString());\n          break;\n        default:\n          primitives.push(a);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cat cat_\" + category,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: primitives.join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), objs.map((o, i) => /*#__PURE__*/_jsxDEV(DataOutputComponent, {\n        data: o,\n        rootName: \"\" + typeof o + \"_\" + (i + 1) + \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }, this);\n  }\n  render() {\n    let key;\n    const categoryAliases = this.categoryAliases;\n    const labelAliases = {\n      i: \"Info\",\n      w: \"Warning\",\n      e: \"Errors\",\n      eDev: \"Exceptions\"\n    };\n    const categories = Object.keys(Log.messageMapping).filter(c => categoryAliases[c] !== null);\n    const allMessages = [];\n    for (key of categories) {\n      if (!this.isCatActive(key)) continue; // U.arrayMergeInPlace(allMessages, Log.messageMapping[key])\n      for (let msg of Log.messageMapping[key]) {\n        if (this.filter(msg)) allMessages.push(msg);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex search-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search \" + (this.state.regexpIsInvalid && \"invalid\"),\n            type: \"search\",\n            value: this.state.searchTag,\n            onChange: this.changeSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"checkbox\",\n              checked: this.state.searchTagAsRegExp,\n              onChange: this.changeRegexpSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"as RegExp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"checkbox\",\n              checked: this.state.searchTagIsDeep,\n              onChange: this.changeDeepSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"deep\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: categories.filter(cat => !(cat in categoryAliases)).map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn\" + (this.isCatActive(cat) && \"-outline\") + \"-danger cat cat_\" + cat + (this.isCatActive(cat) ? \" active\" : \" inactive\"),\n          onClick: e => this.toggleCat(cat),\n          children: labelAliases[cat] || cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 84\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"entries\",\n        children: allMessages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"hoverable cat cat_\" + msg.category,\n          children: [false && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preview\",\n            children: msg.short_string\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 39\n          }, this), false && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content\",\n            children: msg.long_string\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 39\n          }, this), this.displayArgs(msg.raw_args, msg.category)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  /*\r\n      public log = (category: string, key: string, data: any[], fullconcat?: string): void => {\r\n          if (!this.state.categoriesActive.hasOwnProperty(category)) {\r\n              this.setState({categoriesActive: { ...this.state.categoriesActive, category: true}});\r\n              const category: GObject = {};\r\n              category[key] = data;\r\n              this.setState({messages: { ...this.state.messages, category} });\r\n          }\r\n  \r\n          const messages: GObject = { ...this.state.messages};\r\n          messages[category] = messages[category] ? { ...messages[category]} : {};\r\n          messages[category][key] = messages[category][key] ? [ ...messages[category][key], data] : [data];\r\n          this.setState( {messages});\r\n      }// .bind(this);\r\n  */\n  componentWillUnmount() {\n    Log._loggerComponent = undefined;\n    U.arrayRemoveAll(LoggerComponent.loggers, this);\n  }\n}\n\n// private\nLoggerComponent.cname = \"LoggerComponent\";\nLoggerComponent.loggers = [];\nLoggerComponent.max_id = 0; // private\n// private\n// private\n////// mapper func\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const LoggerComponentConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoggerComponent);*/","map":{"version":3,"names":["React","PureComponent","DataOutputComponent","Log","U","jsxDEV","_jsxDEV","Fragment","_Fragment","ThisState","constructor","categoriesActive","l","i","w","e","ex","eDev","exDev","searchTag","searchTagAsRegExp","searchTagIsDeep","regexpIsInvalid","l_counter","i_counter","w_counter","e_counter","ex_counter","eDev_counter","exDev_counter","LoggerComponent","props","context","id","categoryAliases","changeSearch","setState","state","target","value","changeRegexpSearch","checked","changeDeepSearch","max_id","loggers","push","_loggerComponent","isCatActive","cat","undefined","filter","msg","s","long_string","short_string","regexp","RegExp","test","ee","message","split","indexOf","toggleCat","displayArgs","args","category","Array","isArray","objs","primitives","a","length","toString","className","children","join","fileName","_jsxFileName","lineNumber","columnNumber","map","o","data","rootName","render","key","labelAliases","categories","Object","keys","messageMapping","c","allMessages","type","onChange","onClick","raw_args","componentWillUnmount","arrayRemoveAll","cname"],"sources":["C:/d/Programming/web/jodel-mde/src/components/logger/loggerComponent.tsx"],"sourcesContent":["import React, {PureComponent, ReactNode} from \"react\";\r\nimport './logger.scss';\r\nimport {DataOutputComponent, DDate, Dictionary, GObject, Log, U, UnixTimestamp} from \"../../joiner\";\r\nimport type {LoggerType} from \"../../common/U\";\r\nimport {LoggerCategoryState} from \"../../common/U\";\r\n\r\n// private\r\nclass ThisState {\r\n    categoriesActive: Dictionary<LoggerType, boolean> = {l: true, i: true, w: true, e: true, ex: true, eDev: true, exDev: true};\r\n    searchTag: string = '';\r\n    searchTagAsRegExp: boolean = false;\r\n    searchTagIsDeep: boolean = false;\r\n    regexpIsInvalid: boolean = false; // to mark the input as invalid without triggering a Log.e message loop\r\n\r\n    // counters to force update. (data source is in Log.messageMapping\r\n    l_counter: number = 0;\r\n    i_counter: number = 0;\r\n    w_counter: number = 0;\r\n    e_counter: number = 0;\r\n    ex_counter: number = 0;\r\n    eDev_counter: number = 0;\r\n    exDev_counter: number = 0;\r\n}\r\n/*interface ThisState\r\n    messages: Dictionary<string, Dictionary<string, any[]>>\r\n    filters: {category: ((cat: string) => boolean) | null, tag: ((tag: string) => boolean) | null, datafilter: ((data: any[]) => boolean) | null};\r\n    id: number;\r\n    minDate: UnixTimestamp;\r\n    maxDate: UnixTimestamp;\r\n}*/\r\n\r\nexport class LoggerComponent extends PureComponent<AllProps, ThisState>{\r\n    public static cname: string = \"LoggerComponent\";\r\n    public static loggers: LoggerComponent[] = [];\r\n    private static max_id: number = 0;\r\n    id: number;\r\n    categoryAliases: Partial<Dictionary<LoggerType, LoggerType>>;\r\n    /*public static Log(category: string, key: string, data: any[]): void{\r\n        for (let logger of LoggerComponent.loggers) { logger.log(category, key, data); }\r\n    }*/\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.id =  LoggerComponent.max_id++;\r\n        this.state = new ThisState();\r\n            // minDate: DDate.addYear(new Date(), -1, true).getTime(),\r\n            // maxDate: DDate.addYear(new Date(), +1, true).getTime()};\r\n        LoggerComponent.loggers.push(this);\r\n        Log._loggerComponent = this;\r\n\r\n        this.categoryAliases = {l: null as any, ex:\"e\", exDev:\"eDev\"};\r\n        // Log.registerLogger(this, Log.e);\r\n    }\r\n\r\n    private isCatActive(cat: LoggerType): boolean {\r\n        if (this.categoryAliases[cat] !== undefined/* null must pass! */) cat = this.categoryAliases[cat] as LoggerType;\r\n        return !!this.state.categoriesActive[cat];\r\n    }\r\n\r\n    private changeSearch = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        this.setState({...this.state, searchTag: e.target.value, regexpIsInvalid: false});\r\n    }\r\n    private changeRegexpSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, searchTagAsRegExp: e.target.checked});\r\n    }\r\n    private changeDeepSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, searchTagIsDeep: e.target.checked});\r\n    }\r\n    /*\r\n    private changeMinDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, minDate: new Date(e.target.value).getTime() });\r\n\r\n    }\r\n    private changeMaxDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({...this.state, maxDate: new Date(e.target.value).getTime() });\r\n    }*/\r\n    filter(msg: LoggerCategoryState): boolean{\r\n        let s = this.state.searchTagIsDeep ?  msg.long_string : msg.short_string;\r\n        if (this.state.searchTagAsRegExp) {\r\n            try {\r\n                let regexp = new RegExp(this.state.searchTag);\r\n                return regexp.test(s);\r\n            } catch (e: any) {\r\n\r\n                // this is to avoid a loop of render-error\r\n                if (!this.state.regexpIsInvalid){\r\n                    this.setState({regexpIsInvalid: true});\r\n                    Log.ee(\"invalid regular expression in Logger.filter\", (e.message || '').split('\\n')[0]);\r\n                }\r\n            }\r\n        }\r\n        return s.indexOf(this.state.searchTag) >= 0;\r\n    }\r\n\r\n    toggleCat(cat: LoggerType): void{\r\n        this.setState({categoriesActive:{...this.state.categoriesActive, [cat]: !this.state.categoriesActive[cat]}} )\r\n    }\r\n    displayArgs(args: any[], category: LoggerType): ReactNode{\r\n        if (!args) return undefined;\r\n        if (!Array.isArray(args)) args = [args];\r\n        let objs: GObject[] = [];\r\n        let primitives: any[] = [];\r\n        for (let a of args){\r\n            switch(typeof a){\r\n                case \"object\": case \"function\": objs.push(a); primitives.push(\"[\"+(typeof a)+\"_\"+(objs.length)+\"]\"); break;\r\n                case \"symbol\": primitives.push(a.toString()); break;\r\n                default: primitives.push(a);\r\n            }\r\n        }\r\n        return <div className={\"cat cat_\"+category}>\r\n            <div className={\"text\"}>{primitives.join(\" \")}</div>\r\n            { objs.map((o,i) => <DataOutputComponent data={o} rootName={\"\"+(typeof o)+\"_\"+(i+1)+\"\"} />) }\r\n        </div>;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        let key: LoggerType;\r\n        const categoryAliases = this.categoryAliases;\r\n        const labelAliases: Dictionary<string, string> = {i:\"Info\", w:\"Warning\", e:\"Errors\", eDev:\"Exceptions\"};\r\n        const categories: LoggerType[] = (Object.keys(Log.messageMapping) as LoggerType[]).filter(c => categoryAliases[c] !== null);\r\n        const allMessages: LoggerCategoryState[] = [];\r\n        for (key of categories) {\r\n            if (!this.isCatActive(key)) continue; // U.arrayMergeInPlace(allMessages, Log.messageMapping[key])\r\n            for (let msg of Log.messageMapping[key]) {\r\n                if (this.filter(msg)) allMessages.push(msg);\r\n            }\r\n        }\r\n        return (<>\r\n            <div>\r\n                <h1>Filter</h1>\r\n                <div className={\"d-flex search-row\"}>\r\n                    <input className={\"search \" + (this.state.regexpIsInvalid && \"invalid\")} type={\"search\"} value={this.state.searchTag} onChange={ this.changeSearch } />\r\n                    <label className={\"checkbox\"}>\r\n                        <input className=\"input\" type=\"checkbox\" checked={this.state.searchTagAsRegExp} onChange={this.changeRegexpSearch} />\r\n                        <label>as RegExp</label>\r\n                    </label>\r\n                    <label className={\"checkbox\"}>\r\n                        <input className=\"input\" type=\"checkbox\" checked={this.state.searchTagIsDeep} onChange={this.changeDeepSearch} />\r\n                        <label>deep</label>\r\n                    </label>\r\n                </div>\r\n                {/*<input label={\"from\"} type=\"datetime-local\" value={ new Date(this.state.minDate).toString()} onChange={this.changeMinDate} />\r\n                <input label={\"to\"} type=\"datetime-local\" value={ new Date(this.state.maxDate).toString()} onChange={this.changeMaxDate} /> */}\r\n            </div>\r\n            <div className={\"categories\"}>\r\n                { categories.filter(cat => !(cat in categoryAliases)).map((cat) => <button className={\"btn btn\"+(this.isCatActive(cat) && \"-outline\")+\"-danger cat cat_\" + cat + (this.isCatActive(cat) ? \" active\" : \" inactive\")}\r\n                                                  key={cat} onClick={e=>this.toggleCat(cat)}>{labelAliases[cat] || cat}</button>) }\r\n            </div>\r\n            <ul className={\"entries\"}>\r\n                { allMessages.map( (msg) => (\r\n                        <li className={\"hoverable cat cat_\"+msg.category}>\r\n                            {false && <span className={\"preview\"}>{msg.short_string}</span>}\r\n                            {false && <span className={\"content\"}>{msg.long_string}</span>}\r\n                            {this.displayArgs(msg.raw_args, msg.category)}\r\n                        </li>))\r\n                }\r\n            </ul>\r\n        </>); }\r\n\r\n\r\n/*\r\n    public log = (category: string, key: string, data: any[], fullconcat?: string): void => {\r\n        if (!this.state.categoriesActive.hasOwnProperty(category)) {\r\n            this.setState({categoriesActive: { ...this.state.categoriesActive, category: true}});\r\n            const category: GObject = {};\r\n            category[key] = data;\r\n            this.setState({messages: { ...this.state.messages, category} });\r\n        }\r\n\r\n        const messages: GObject = { ...this.state.messages};\r\n        messages[category] = messages[category] ? { ...messages[category]} : {};\r\n        messages[category][key] = messages[category][key] ? [ ...messages[category][key], data] : [data];\r\n        this.setState( {messages});\r\n    }// .bind(this);\r\n*/\r\n    componentWillUnmount(): void {\r\n        Log._loggerComponent = undefined;\r\n        U.arrayRemoveAll(LoggerComponent.loggers, this);\r\n    }\r\n}\r\n\r\n// private\r\ninterface OwnProps {\r\n    // propsRequestedFromHtmlAsAttributes: string;\r\n}\r\n// private\r\ninterface StateProps {\r\n    // propsFromReduxStateOrOtherKindOfStateManagement: boolean; // flux or custom things too, unrelated to this.state of react.\r\n}\r\n\r\n// private\r\ninterface DispatchProps {\r\n    // propsFromReduxActions: typeof funzioneTriggeraAzioneDaImportare;\r\n}\r\n\r\n\r\n// private\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n////// mapper func\r\n\r\n/*\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {} as any;\r\n    /// to fill\r\n    return ret; }\r\n\r\nexport const LoggerComponentConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoggerComponent);*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}