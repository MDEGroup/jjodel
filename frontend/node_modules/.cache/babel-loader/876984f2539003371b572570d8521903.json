{"ast":null,"code":"import { DV, DViewElement, DPackage, DClass, DEnumerator, DAttribute, DReference, DOperation, DEnumLiteral, DObject, DValue, DParameter, GraphSize, CoordinateMode, U } from '../../joiner';\nimport DSL from \"../../DSL/DSL\";\nvar nosize = {\n  x: 0,\n  y: 0,\n  w: 0,\n  h: 0,\n  nosize: true\n};\nvar defaultEdgePointSize = {\n  x: 0,\n  y: 0,\n  w: 5,\n  h: 5\n};\nvar defaultVertexSize = {\n  x: 0,\n  y: 0,\n  w: 140.6818084716797,\n  h: 32.52840805053711\n};\nvar defaultPackageSize = new GraphSize(0, 0, 400, 500);\nconst udLevel = 'ret.level = node.graph.state.level ?? 3\\n';\nconst udLevelG = 'ret.level = node.state.level ?? 3\\n';\nconst udLevelPkg = udLevelG + 'ret.upperLevel = node.graph.state.level ?? 3\\n';\nclass DefaultViews {\n  static model(vp) {\n    const view = DViewElement.new2('Model', DSL.parser(DV.modelView()), vp, d => {\n      d.appliableTo = 'Graph';\n      d.oclCondition = 'context DModel inv: true';\n      d.draggable = false;\n      d.resizable = false;\n      d.palette = {\n        'background-': U.hexToPalette('#fff'),\n        'color-': U.hexToPalette('#123cd0', '#4b0082', '#ff0000', '#3191bb', '#3191bb')\n      };\n    }, false);\n    view.css = `\n&, .Graph{\n  /*position: absolute;*/\n  background-color: var(--background-1);\n  &:hover{ overflow: hidden; }\n  height: 100%;\n  width: -webkit-fill-available;\n}\n.root {\n    overflow: hidden;\n    position: relative;\n}\n.edges {z-index: 101; position: absolute; top: 0; left: 0; height: 0; width: 0; overflow: visible; }\n.detail-level {\n    position: absolute;\n    right: -50px;\n    top: 50px;\n    display: flex;\n    transform: rotate(270deg);\n    &>div{\n        transform: rotate(90deg) translate(0, 100%);\n    }\n}\n\n/* stuff for subelements */\n[data-nodetype=\"GraphVertex\"] {\n  width: 50%;\n  height: 50%;\n}\n&,[data-nodetype]{\n  select, input{\n    background: inherit;\n    color: inherit;\n    &:empty{\n      font-style: italic;\n    }\n  }\n}\n[data-nodetype=\"Field\"] {\n  white-space: nowrap;\n}\n[data-nodetype=\"VoidVertex\"],\n[data-nodetype=\"Vertex\"],\n[data-nodetype=\"GraphVertex\"] {\n  position: absolute;\n  &>*{ border: 0.1em solid #a3a3a3; }\n  &>.ui-resizable-handle{ border: none; }\n}\n&,[data-nodetype], [data-nodetype]>*{\n  /* for some reason focus does not work?? so this is a fallback but needs to be properly fixed */\n  overflow: hidden;\n  &.selected-by-me, &:has(.selected-by-me), &:hover, &:active, &:focus-within, &:focus{\n    overflow: visible;\n    z-index: 1000 !important;\n  }\n}\n.Edge{\n    overflow: visible;\n}\n\n/*** CONTROL PANEL BEGIN ***/\n \n.control-panel-container {\n   position: absolute;\n   z-index: 1000;\n   top: 0px;\n   right: -269px; /* open: 0px, close: -275px */\n   width: 320px;\n   height: 100%;\n   transition: right 0.6s;\n   transition-timing-function: cubic-bezier(0.32, 0, 0.58, 1);\n}\n.control-panel-container .open {\n   right: -0px;\n}\n.control-panel-container .button {\n   position: absolute;\n   z-index: 1001;\n   top: 10px;\n   left: 36px;\n   font-size: 1.5em;\n   width: 16px;\n   height: 62px;\n   padding: 14px 0 0 0px;\n   border-radius: 4px 0 0 4px;\n   color: var(--color-5);\n   background-color: var(--color-2);\n   border-left: 3px solid var(--color-1);\n   border-top: 0px solid var(--color-4);\n   border-bottom: 0px solid var(--color-4);\n   &:hover {\n      cursor: pointer;\n   }\n}\n.control-panel-container .button .bi {\n   color: var(--color-1);\n   font-size: 14px;\n}\n.control-panel {\n   position: relative;\n   margin-left: 50px;\n   height: 100%;\n   width: 270px;\n   background: var(--color-1);\n   display: block;\n   opacity: 1;\n   border-left: 3px solid var(--color-2);\n   color: var(--color-2);\n   padding: 20px;\n   box-shadow: -0px -0px 1px var(--color-4);\n   \n}\n.open {\n   position: absolute;\n   right: 0px!important;\n   transition: right 0.6s;\n   transition-timing-function: cubic-bezier(0.32, 0, 0.58, 1);\n}\n.control-panel h1 {\n   font-size: 1.4em;\n}\n.control-panel .section h2 {\n   font-size: 1.2em;\n   padding: 40px 0px 10px 0px;\n}\n.control-panel .btn-close {\n   padding-top: 0px;\n   float: right;\n   display: block;\n   color: var(--color-2);\n   opacity: 1;\n   &:hover {\n      cursor: pointer;\n   }\n   \n}\n.control-panel .section .slider {\n   margin-top: 15px;\n   position: relative;\n   display: flex;\n   \n}\ncontrol-panel .section .toggle {\n   width: 100%;\n}\n\n/*** CONTROL PANEL END ***/\n`;\n    view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// custom preparations:\\n' + 'let packages = data && data.isMetamodel ? data.packages : [];\\n' + 'let suggestedEdges = data?.suggestedEdges || {};\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + 'ret.firstPackage = packages[0]\\n' + 'ret.otherPackages = packages.slice(1)\\n' + 'ret.m1Objects = data && !data.isMetamodel ? data.allSubObjects : []\\n' + 'ret.refEdges = (suggestedEdges.reference || []).filter(e => !e.vertexOverlaps)\\n' + 'ret.extendEdges = (suggestedEdges.extend || []).filter(e => !e.vertexOverlaps)\\n' + udLevelG + '}';\n    return view;\n  }\n  static package(vp) {\n    const view = DViewElement.new2('Package', DV.packageView(), vp, view => {\n      view.appliableToClasses = [DPackage.cname];\n      view.oclCondition = 'context DPackage inv: true';\n      view.appliableTo = 'GraphVertex';\n      view.palette = {\n        'color-': U.hexToPalette('#028012'),\n        'background-': U.hexToPalette('#fff')\n      };\n      view.css = `\n.package { background-color: var(--background-0); border-radius: 0.2em; border-left: 0.25em solid var(--color-1); }\n.package-children { height: -webkit-fill-available; width: -webkit-fill-available; }\n.summary { padding: 0.25rem; text-align: center; }\n.detail-level {\n    position: absolute;\n    right: -50px;\n    top: 50px;\n    display: flex;\n    transform: rotate(270deg);\n    &>div {\n        transform: rotate(90deg) translate(0, 100%);\n    }\n}`;\n      view.defaultVSize = defaultPackageSize;\n      view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.data = data\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// custom preparations:\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + udLevelPkg + '}';\n    }, false);\n    return view;\n  }\n  static class(vp) {\n    const view = DViewElement.new2('Class', DV.classView(), vp, view => {\n      view.appliableToClasses = [DClass.cname];\n      view.adaptWidth = true;\n      view.adaptHeight = true;\n      view.appliableTo = 'Vertex';\n      view.oclCondition = 'context DClass inv: true';\n      view.palette = {\n        'color-': U.hexToPalette('#f00', '#000', '#fff'),\n        'background-': U.hexToPalette('#fff', '#eee', '#f00')\n      };\n      view.css = `\n.class { border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color:var(--color-2); }\n.class-name{  font-weight: bold; color: var(--color-1); }\n.class-children { background-color: var(--background-2); height: fit-content; width: -webkit-fill-available; }\n.abstract { font-style: italic; }\n.summary { padding: 0.25rem; text-align: center; }`;\n      view.defaultVSize = defaultVertexSize;\n      view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// custom preparations:\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + 'ret.attributes = data.attributes\\n' + 'ret.references = data.references\\n' + 'ret.operations = data.operations\\n' + 'ret.abstract = data.abstract\\n' + 'ret.interface = data.interface\\n' + udLevel + '}';\n      // view.events = {e1:\"(num) => {\\n\\tdata.name = num;\\n}\"}\n    }, false);\n    return view;\n  }\n  static enum(vp) {\n    const view = DViewElement.new2('Enum', DV.enumeratorView(), vp, view => {\n      view.appliableToClasses = [DEnumerator.cname];\n      view.adaptWidth = true;\n      view.adaptHeight = true;\n      view.appliableTo = 'Vertex';\n      view.oclCondition = 'context DEnumerator inv: true';\n      view.palette = {\n        'color-': U.hexToPalette('#ffa500', '#000', '#fff'),\n        'background-': U.hexToPalette('#fff', '#eee', '#f00')\n      };\n      view.css = `\n.enumerator { border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color: var(--color-2); }\n.enumerator-name { font-weight: bold; color: var(--color-1); }\n.enumerator-children { background-color: var(--background-2); height: fit-content; width: -webkit-fill-available; }\n.summary { padding: 0.25rem; text-align: center; }\n`;\n      view.defaultVSize = defaultVertexSize;\n      view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// custom preparations:\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + 'ret.literals = data.literals\\n' + udLevel + '}';\n    }, false);\n    return view;\n  }\n  static attribute(vp) {\n    const view = DViewElement.new2('Attribute', DV.attributeView(), vp, view => {\n      view.appliableToClasses = [DAttribute.cname];\n      view.oclCondition = 'context DAttribute inv: true';\n      view.appliableTo = 'Field';\n      view.css = `\n.feature{\n    display: flex;\n    padding: 2px 5px;\n    select {\n        margin-left: auto;\n        flex-shrink: 1;\n        flex-basis: 75px;\n        min-width: 75px;\n        width: 33%\n    }\n}`;\n    }, false);\n    return view;\n  }\n  static reference(vp) {\n    const view = DViewElement.new2('Reference', DV.referenceView(), vp, view => {\n      view.appliableToClasses = [DReference.cname];\n      view.oclCondition = 'context DReference inv: true';\n      view.appliableTo = 'Field';\n      view.css = `\n.feature{\n    display: flex;\n    padding: 2px 5px;\n    select {\n        margin-left: auto;\n        flex-shrink: 1;\n        flex-basis: 75px;\n        min-width: 75px;\n        width: 33%\n    }\n}`;\n    }, false);\n    return view;\n  }\n  static operation(vp) {\n    const view = DViewElement.new2('Operation', DV.operationView(), vp, view => {\n      view.appliableToClasses = [DOperation.cname];\n      view.oclCondition = 'context DOperation inv: true';\n      view.appliableTo = 'Field';\n      view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.data = data\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// custom preparations:\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + udLevel + '}';\n      view.css = `\n.operation{\n    display: flex;\n    padding: 2px 5px;\n    select {\n        margin-left: auto;\n        flex-shrink: 1;\n        flex-basis: 75px;\n        min-width: 75px;\n        width: 33%;\n    }\n    .parameters{\n        background-color: var(--background-2);\n        left: 0;\n    }\n}`;\n    }, false);\n    return view;\n  }\n  static parameter(vp) {\n    const view = DViewElement.new2('Parameter', DV.parameterView(), vp, view => {\n      view.appliableToClasses = [DParameter.cname];\n      view.appliableTo = 'Field';\n      view.css = '*{\\n\\tfontSize:0.8rem;\\n}';\n    }, false);\n    return view;\n  }\n  static literal(vp) {\n    const view = DViewElement.new2('Literal', DV.literalView(), vp, view => {\n      view.appliableToClasses = [DEnumLiteral.cname];\n      view.oclCondition = 'context DEnumLiteral inv: true';\n      view.appliableTo = 'Field';\n      view.palette = {};\n      view.css = \"display: block;\";\n    }, false);\n    return view;\n  }\n  static object(vp) {\n    const view = DViewElement.new2('Object', DV.objectView(), vp, view => {\n      view.appliableToClasses = [DObject.cname];\n      view.adaptWidth = true;\n      view.adaptHeight = true;\n      view.oclCondition = 'context DObject inv: true';\n      view.palette = {\n        'color-': U.hexToPalette('#f00', '#000', '#fff'),\n        'background-': U.hexToPalette('#fff', '#eee', '#f00')\n      };\n      view.css = '.object {border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color: var(--color-2);}\\n';\n      view.css += '.object-name {font-weight: bold; color: var(--color-1);}\\n';\n      view.css += '.object-children {background-color: var(--background-2); height: fit-content; width: -webkit-fill-available;}';\n      view.defaultVSize = defaultVertexSize;\n      view.appliableTo = 'Vertex';\n      view.usageDeclarations = '(ret) => {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.data = data\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + 'ret.metaclassName = data.instanceof?.name || \\'Object\\'\\n' + udLevel + '}';\n    }, false);\n    return view;\n  }\n  static value(vp) {\n    const view = DViewElement.new2('Value', DV.valueView(), vp, view => {\n      view.appliableToClasses = [DValue.cname];\n      view.oclCondition = 'context DValue inv: true';\n      view.palette = {};\n      view.css = `.value{\n    padding-right: 6px;\n    max-width: 300px;\n    min-width: 100%;\n    overflow:hidden;\n    &:hover, &:focus-within{ overflow: visible; }\n    /*.values_str{\n        maxWidth: 100px;\n    }*/\n}`;\n      view.appliableTo = 'Field';\n      view.usageDeclarations = '(ret) =>  {\\n' + '// ** preparations and default behaviour here ** //\\n' + 'ret.node = node\\n' + 'ret.view = view\\n' + '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' + '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' + '// ** declarations here ** //\\n' + 'ret.instanceofname = data.instanceof?.name\\n' + 'ret.valuesString = data.valuesString()\\n' + 'ret.typeString = data.typeString\\n' + '}';\n    }, false);\n    return view;\n  }\n  static edgepoint(vp) {\n    let css = `.edgePoint{\n    border: 2px solid var(--border-1);\n    background: var(--background-1);\n    color: var(--color-1);\n    width: 100%;\n    height: 100%;\n    min-height: 15px;\n    min-width: 5px;\n    &:hover, &:focus-within, &:focus{\n        transform-origin: center;\n        transform: scale(1.3);\n    }\n}\n[hoverscale]:hover, [hoverscale]:focus-within, [hoverscale]:focus{\n    transform-origin: center;\n    transform: scale(var(--hover-scale));\n    &>[hoverscale]:hover, &>[hoverscale]:focus-within, &>[hoverscale]:focus{ transform: scale(1); }\n}\n\n`;\n    let usageDeclarations = \"(ret)=>{ // scope contains: data, node, view, constants, state\\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"ret.data = data\\n\" + \"ret.node = node\\n\" + \"ret.view = view\\n\" + \"// data, node, view are dependencies by default. delete them above if you want to remove them.\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\\n\" + \"// ** declarations here ** //\\n\" + \"ret.edgestart = node.edge.start?.size+''\\n\" + \"ret.edgeend = node.edge.end?.size+''\\n\" + \"}\";\n    // edgePointView.edgePointCoordMode = CoordinateMode.relativePercent;\n    let view = DViewElement.new2('EdgePoint', DV.edgePointView(), vp, d => {\n      d.appliableTo = 'EdgePoint';\n      d.resizable = false;\n      d.palette = {\n        'color-': U.hexToPalette('#000'),\n        'background-': U.hexToPalette('#fff'),\n        'border-': U.hexToPalette('#000'),\n        'hover-scale': {\n          type: 'number',\n          unit: '',\n          value: 1.3\n        }\n      };\n      d.css = css;\n      d.usageDeclarations = usageDeclarations;\n      d.edgePointCoordMode = CoordinateMode.absolute;\n      d.defaultVSize = defaultEdgePointSize;\n      // d.defaultVSize = new GraphSize(0, 0, 25, 25);\n    }, false);\n    return view;\n  }\n  static anchor(vp) {\n    let ret = DViewElement.new2('Anchors', DV.anchorJSX(), vp, v => {\n      v.isExclusiveView = false;\n      v.palette = {\n        'anchor-': U.hexToPalette('#77f', '#f77', '#007'),\n        'anchor-hover-': U.hexToPalette('#7f7', '#a44', '#070')\n      };\n      v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" + \"// ** preparations and default behaviour here ** //\\n\" + \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" + \"// ** declarations here ** //\\n\" + \"ret.anchors = data && node.anchors;\\n\" + \"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\" + \"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\" + \"}\";\n      v.events = {\n        dragAnchor: '(coords /*Point*/, anchorName /*string*/)=>{\\n' + '\\tconst updateAnchor = {};\\n' + '\\tupdateAnchor[anchorName] = coords;\\n' + '\\tnode.anchors=updateAnchor;\\n' + '}',\n        assignAnchor: '(anchorName /*string*/)=>{\\n' + '\\tnode.assignEdgeAnchor(anchorName);\\n' + '}'\n      };\n      v.css = `\n.anchor.valid-anchor{\n    display:block;\n}\n\n.anchor{\n    display:none;\n    position: absolute;\n    background-color: var(--anchor-1);\n    outline: 2px solid var(--anchor-3);\n    transform: translate(-50%, -50%);\n    pointer-events: all;\n    cursor: crosshair;\n    \n    &:hover{\n        background-color: var(--anchor-hover-1);\n        outline: 2px solid var(--anchor-hover-3);\n    }\n    &.active-anchor{\n        background-color: var(--anchor-2);\n        &:hover{\n            background-color: var(--anchor-hover-2);\n        }\n    }\n}\n`;\n    }, false, 'Pointer_ViewAnchors');\n    return ret;\n  }\n}\nexport default DefaultViews;","map":{"version":3,"names":["DV","DViewElement","DPackage","DClass","DEnumerator","DAttribute","DReference","DOperation","DEnumLiteral","DObject","DValue","DParameter","GraphSize","CoordinateMode","U","DSL","nosize","x","y","w","h","defaultEdgePointSize","defaultVertexSize","defaultPackageSize","udLevel","udLevelG","udLevelPkg","DefaultViews","model","vp","view","new2","parser","modelView","d","appliableTo","oclCondition","draggable","resizable","palette","hexToPalette","css","usageDeclarations","package","packageView","appliableToClasses","cname","defaultVSize","class","classView","adaptWidth","adaptHeight","enum","enumeratorView","attribute","attributeView","reference","referenceView","operation","operationView","parameter","parameterView","literal","literalView","object","objectView","value","valueView","edgepoint","edgePointView","type","unit","edgePointCoordMode","absolute","anchor","ret","anchorJSX","v","isExclusiveView","events","dragAnchor","assignAnchor"],"sources":["C:/d/Programming/web/jodel-mde/src/redux/defaults/views.ts"],"sourcesContent":["import {\r\n    DV,\r\n    DModel,\r\n    DViewElement,\r\n    DViewPoint,\r\n    Pointer,\r\n    DPackage,\r\n    DClass,\r\n    DEnumerator,\r\n    DAttribute,\r\n    DReference,\r\n    DOperation,\r\n    DEnumLiteral,\r\n    DObject,\r\n    DValue,\r\n    DParameter,\r\n    GraphSize,\r\n    CoordinateMode,\r\n    U\r\n} from '../../joiner';\r\nimport DSL from \"../../DSL/DSL\";\r\n\r\nvar nosize: GraphSize = {x:0, y:0, w:0, h:0, nosize:true} as any;\r\nvar defaultEdgePointSize: GraphSize = {x:0, y:0, w:5, h:5} as any;\r\nvar defaultVertexSize: GraphSize = {x:0, y:0, w:140.6818084716797, h:32.52840805053711} as any;\r\nvar defaultPackageSize = new GraphSize(0, 0, 400, 500);\r\n\r\nconst udLevel = 'ret.level = node.graph.state.level ?? 3\\n';\r\nconst udLevelG = 'ret.level = node.state.level ?? 3\\n';\r\nconst udLevelPkg = udLevelG + 'ret.upperLevel = node.graph.state.level ?? 3\\n';\r\n\r\nclass DefaultViews {\r\n\r\n    static model(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2(\r\n            'Model', DSL.parser(DV.modelView()), vp,(d)=> {\r\n                d.appliableTo = 'Graph';\r\n                d.oclCondition = 'context DModel inv: true';\r\n                d.draggable = false; d.resizable = false;\r\n                d.palette = {\r\n                    'background-': U.hexToPalette('#fff'),\r\n                    'color-': U.hexToPalette('#123cd0', '#4b0082', '#ff0000', '#3191bb', '#3191bb')\r\n                };\r\n            }, false);\r\n\r\n        view.css = `\r\n&, .Graph{\r\n  /*position: absolute;*/\r\n  background-color: var(--background-1);\r\n  &:hover{ overflow: hidden; }\r\n  height: 100%;\r\n  width: -webkit-fill-available;\r\n}\r\n.root {\r\n    overflow: hidden;\r\n    position: relative;\r\n}\r\n.edges {z-index: 101; position: absolute; top: 0; left: 0; height: 0; width: 0; overflow: visible; }\r\n.detail-level {\r\n    position: absolute;\r\n    right: -50px;\r\n    top: 50px;\r\n    display: flex;\r\n    transform: rotate(270deg);\r\n    &>div{\r\n        transform: rotate(90deg) translate(0, 100%);\r\n    }\r\n}\r\n\r\n/* stuff for subelements */\r\n[data-nodetype=\"GraphVertex\"] {\r\n  width: 50%;\r\n  height: 50%;\r\n}\r\n&,[data-nodetype]{\r\n  select, input{\r\n    background: inherit;\r\n    color: inherit;\r\n    &:empty{\r\n      font-style: italic;\r\n    }\r\n  }\r\n}\r\n[data-nodetype=\"Field\"] {\r\n  white-space: nowrap;\r\n}\r\n[data-nodetype=\"VoidVertex\"],\r\n[data-nodetype=\"Vertex\"],\r\n[data-nodetype=\"GraphVertex\"] {\r\n  position: absolute;\r\n  &>*{ border: 0.1em solid #a3a3a3; }\r\n  &>.ui-resizable-handle{ border: none; }\r\n}\r\n&,[data-nodetype], [data-nodetype]>*{\r\n  /* for some reason focus does not work?? so this is a fallback but needs to be properly fixed */\r\n  overflow: hidden;\r\n  &.selected-by-me, &:has(.selected-by-me), &:hover, &:active, &:focus-within, &:focus{\r\n    overflow: visible;\r\n    z-index: 1000 !important;\r\n  }\r\n}\r\n.Edge{\r\n    overflow: visible;\r\n}\r\n\r\n/*** CONTROL PANEL BEGIN ***/\r\n \r\n.control-panel-container {\r\n   position: absolute;\r\n   z-index: 1000;\r\n   top: 0px;\r\n   right: -269px; /* open: 0px, close: -275px */\r\n   width: 320px;\r\n   height: 100%;\r\n   transition: right 0.6s;\r\n   transition-timing-function: cubic-bezier(0.32, 0, 0.58, 1);\r\n}\r\n.control-panel-container .open {\r\n   right: -0px;\r\n}\r\n.control-panel-container .button {\r\n   position: absolute;\r\n   z-index: 1001;\r\n   top: 10px;\r\n   left: 36px;\r\n   font-size: 1.5em;\r\n   width: 16px;\r\n   height: 62px;\r\n   padding: 14px 0 0 0px;\r\n   border-radius: 4px 0 0 4px;\r\n   color: var(--color-5);\r\n   background-color: var(--color-2);\r\n   border-left: 3px solid var(--color-1);\r\n   border-top: 0px solid var(--color-4);\r\n   border-bottom: 0px solid var(--color-4);\r\n   &:hover {\r\n      cursor: pointer;\r\n   }\r\n}\r\n.control-panel-container .button .bi {\r\n   color: var(--color-1);\r\n   font-size: 14px;\r\n}\r\n.control-panel {\r\n   position: relative;\r\n   margin-left: 50px;\r\n   height: 100%;\r\n   width: 270px;\r\n   background: var(--color-1);\r\n   display: block;\r\n   opacity: 1;\r\n   border-left: 3px solid var(--color-2);\r\n   color: var(--color-2);\r\n   padding: 20px;\r\n   box-shadow: -0px -0px 1px var(--color-4);\r\n   \r\n}\r\n.open {\r\n   position: absolute;\r\n   right: 0px!important;\r\n   transition: right 0.6s;\r\n   transition-timing-function: cubic-bezier(0.32, 0, 0.58, 1);\r\n}\r\n.control-panel h1 {\r\n   font-size: 1.4em;\r\n}\r\n.control-panel .section h2 {\r\n   font-size: 1.2em;\r\n   padding: 40px 0px 10px 0px;\r\n}\r\n.control-panel .btn-close {\r\n   padding-top: 0px;\r\n   float: right;\r\n   display: block;\r\n   color: var(--color-2);\r\n   opacity: 1;\r\n   &:hover {\r\n      cursor: pointer;\r\n   }\r\n   \r\n}\r\n.control-panel .section .slider {\r\n   margin-top: 15px;\r\n   position: relative;\r\n   display: flex;\r\n   \r\n}\r\ncontrol-panel .section .toggle {\r\n   width: 100%;\r\n}\r\n\r\n/*** CONTROL PANEL END ***/\r\n`;\r\n\r\n        view.usageDeclarations = '(ret) => {\\n' +\r\n            '// ** preparations and default behaviour here ** //\\n' +\r\n            'ret.node = node\\n' +\r\n            'ret.view = view\\n' +\r\n            '// custom preparations:\\n' +\r\n            'let packages = data && data.isMetamodel ? data.packages : [];\\n' +\r\n            'let suggestedEdges = data?.suggestedEdges || {};\\n' +\r\n            '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n            '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n            '// ** declarations here ** //\\n' +\r\n            'ret.firstPackage = packages[0]\\n'+\r\n            'ret.otherPackages = packages.slice(1)\\n'+\r\n            'ret.m1Objects = data && !data.isMetamodel ? data.allSubObjects : []\\n'+\r\n            'ret.refEdges = (suggestedEdges.reference || []).filter(e => !e.vertexOverlaps)\\n'+\r\n            'ret.extendEdges = (suggestedEdges.extend || []).filter(e => !e.vertexOverlaps)\\n'+\r\n            udLevelG +\r\n            '}';\r\n        return view;\r\n    }\r\n\r\n    static package(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Package', DV.packageView(), vp, (view)=>{\r\n            view.appliableToClasses = [DPackage.cname];\r\n            view.oclCondition = 'context DPackage inv: true';\r\n            view.appliableTo = 'GraphVertex';\r\n            view.palette = {'color-':  U.hexToPalette('#028012'), 'background-':  U.hexToPalette('#fff')};\r\n            view.css = `\r\n.package { background-color: var(--background-0); border-radius: 0.2em; border-left: 0.25em solid var(--color-1); }\r\n.package-children { height: -webkit-fill-available; width: -webkit-fill-available; }\r\n.summary { padding: 0.25rem; text-align: center; }\r\n.detail-level {\r\n    position: absolute;\r\n    right: -50px;\r\n    top: 50px;\r\n    display: flex;\r\n    transform: rotate(270deg);\r\n    &>div {\r\n        transform: rotate(90deg) translate(0, 100%);\r\n    }\r\n}`\r\n            view.defaultVSize = defaultPackageSize;\r\n            view.usageDeclarations = '(ret) => {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.data = data\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// custom preparations:\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                udLevelPkg +\r\n                '}';\r\n        }, false);\r\n        return view\r\n    }\r\n\r\n    static class(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Class', DV.classView(), vp, (view)=>{\r\n            view.appliableToClasses = [DClass.cname];\r\n            view.adaptWidth = true; view.adaptHeight = true;\r\n            view.appliableTo = 'Vertex';\r\n            view.oclCondition = 'context DClass inv: true';\r\n            view.palette = {'color-': U.hexToPalette('#f00', '#000', '#fff'), 'background-':  U.hexToPalette('#fff', '#eee', '#f00')};\r\n            view.css = `\r\n.class { border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color:var(--color-2); }\r\n.class-name{  font-weight: bold; color: var(--color-1); }\r\n.class-children { background-color: var(--background-2); height: fit-content; width: -webkit-fill-available; }\r\n.abstract { font-style: italic; }\r\n.summary { padding: 0.25rem; text-align: center; }`;\r\n            view.defaultVSize = defaultVertexSize;\r\n            view.usageDeclarations = '(ret) => {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// custom preparations:\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                'ret.attributes = data.attributes\\n' +\r\n                'ret.references = data.references\\n' +\r\n                'ret.operations = data.operations\\n' +\r\n                'ret.abstract = data.abstract\\n' +\r\n                'ret.interface = data.interface\\n' +\r\n                udLevel +\r\n                '}';\r\n            // view.events = {e1:\"(num) => {\\n\\tdata.name = num;\\n}\"}\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static enum(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Enum', DV.enumeratorView(), vp, (view)=>{\r\n            view.appliableToClasses = [DEnumerator.cname];\r\n            view.adaptWidth = true; view.adaptHeight = true;\r\n            view.appliableTo = 'Vertex';\r\n            view.oclCondition = 'context DEnumerator inv: true';\r\n            view.palette = {'color-':  U.hexToPalette('#ffa500', '#000', '#fff'), 'background-':  U.hexToPalette('#fff', '#eee', '#f00')};\r\n            view.css =  `\r\n.enumerator { border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color: var(--color-2); }\r\n.enumerator-name { font-weight: bold; color: var(--color-1); }\r\n.enumerator-children { background-color: var(--background-2); height: fit-content; width: -webkit-fill-available; }\r\n.summary { padding: 0.25rem; text-align: center; }\r\n`\r\n            view.defaultVSize = defaultVertexSize;\r\n            view.usageDeclarations = '(ret) => {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// custom preparations:\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                'ret.literals = data.literals\\n' +\r\n                udLevel +\r\n                '}';\r\n        }, false);\r\n        return view;\r\n    }\r\n    static attribute(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Attribute', DV.attributeView(), vp, (view)=>{\r\n            view.appliableToClasses = [DAttribute.cname];\r\n            view.oclCondition = 'context DAttribute inv: true';\r\n            view.appliableTo = 'Field';\r\n            view.css = `\r\n.feature{\r\n    display: flex;\r\n    padding: 2px 5px;\r\n    select {\r\n        margin-left: auto;\r\n        flex-shrink: 1;\r\n        flex-basis: 75px;\r\n        min-width: 75px;\r\n        width: 33%\r\n    }\r\n}`;\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static reference(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Reference', DV.referenceView(), vp, (view)=>{\r\n            view.appliableToClasses = [DReference.cname];\r\n            view.oclCondition = 'context DReference inv: true';\r\n            view.appliableTo = 'Field';\r\n            view.css = `\r\n.feature{\r\n    display: flex;\r\n    padding: 2px 5px;\r\n    select {\r\n        margin-left: auto;\r\n        flex-shrink: 1;\r\n        flex-basis: 75px;\r\n        min-width: 75px;\r\n        width: 33%\r\n    }\r\n}`;\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static operation(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Operation', DV.operationView(), vp, (view)=>{\r\n            view.appliableToClasses = [DOperation.cname];\r\n            view.oclCondition = 'context DOperation inv: true';\r\n            view.appliableTo = 'Field';\r\n            view.usageDeclarations = '(ret) => {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.data = data\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// custom preparations:\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                udLevel +\r\n                '}';\r\n            view.css = `\r\n.operation{\r\n    display: flex;\r\n    padding: 2px 5px;\r\n    select {\r\n        margin-left: auto;\r\n        flex-shrink: 1;\r\n        flex-basis: 75px;\r\n        min-width: 75px;\r\n        width: 33%;\r\n    }\r\n    .parameters{\r\n        background-color: var(--background-2);\r\n        left: 0;\r\n    }\r\n}`;\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static parameter(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Parameter', DV.parameterView(), vp, (view)=>{\r\n            view.appliableToClasses = [DParameter.cname];\r\n            view.appliableTo = 'Field';\r\n            view.css = '*{\\n\\tfontSize:0.8rem;\\n}';\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static literal(vp: DViewElement): DViewElement {\r\n        const view: DViewElement = DViewElement.new2('Literal', DV.literalView(), vp, (view)=>{\r\n            view.appliableToClasses = [DEnumLiteral.cname];\r\n            view.oclCondition = 'context DEnumLiteral inv: true';\r\n            view.appliableTo = 'Field';\r\n            view.palette = {};\r\n            view.css = \"display: block;\";\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static object(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Object', DV.objectView(), vp, (view)=>{\r\n            view.appliableToClasses = [DObject.cname];\r\n            view.adaptWidth = true; view.adaptHeight = true;\r\n            view.oclCondition = 'context DObject inv: true';\r\n            view.palette = {'color-':  U.hexToPalette('#f00', '#000', '#fff'), 'background-': U.hexToPalette('#fff', '#eee', '#f00')};\r\n            view.css = '.object {border-radius: 0.2em; border-left: 0.25em solid var(--color-1); background: var(--background-1); color: var(--color-2);}\\n';\r\n            view.css += '.object-name {font-weight: bold; color: var(--color-1);}\\n';\r\n            view.css += '.object-children {background-color: var(--background-2); height: fit-content; width: -webkit-fill-available;}';\r\n            view.defaultVSize = defaultVertexSize;\r\n            view.appliableTo = 'Vertex';\r\n            view.usageDeclarations = '(ret) => {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.data = data\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                'ret.metaclassName = data.instanceof?.name || \\'Object\\'\\n' +\r\n                udLevel +\r\n                '}';\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static value(vp: DViewElement): DViewElement {\r\n        const view = DViewElement.new2('Value', DV.valueView(), vp, (view)=>{\r\n            view.appliableToClasses = [DValue.cname];\r\n            view.oclCondition = 'context DValue inv: true';\r\n            view.palette = {};\r\n            view.css = `.value{\r\n    padding-right: 6px;\r\n    max-width: 300px;\r\n    min-width: 100%;\r\n    overflow:hidden;\r\n    &:hover, &:focus-within{ overflow: visible; }\r\n    /*.values_str{\r\n        maxWidth: 100px;\r\n    }*/\r\n}`;\r\n            view.appliableTo = 'Field';\r\n            view.usageDeclarations = '(ret) =>  {\\n' +\r\n                '// ** preparations and default behaviour here ** //\\n' +\r\n                'ret.node = node\\n' +\r\n                'ret.view = view\\n' +\r\n                '// data, node, view are dependencies by default. delete them above if you want to remove them.\\n' +\r\n                '// add preparation code here (like for loops to count something), then list the dependencies below.\\n' +\r\n                '// ** declarations here ** //\\n' +\r\n                'ret.instanceofname = data.instanceof?.name\\n' +\r\n                'ret.valuesString = data.valuesString()\\n' +\r\n                'ret.typeString = data.typeString\\n' +\r\n                '}';\r\n        }, false);\r\n        return view;\r\n    }\r\n    static edgepoint(vp: DViewElement): DViewElement{\r\n        let css = `.edgePoint{\r\n    border: 2px solid var(--border-1);\r\n    background: var(--background-1);\r\n    color: var(--color-1);\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 15px;\r\n    min-width: 5px;\r\n    &:hover, &:focus-within, &:focus{\r\n        transform-origin: center;\r\n        transform: scale(1.3);\r\n    }\r\n}\r\n[hoverscale]:hover, [hoverscale]:focus-within, [hoverscale]:focus{\r\n    transform-origin: center;\r\n    transform: scale(var(--hover-scale));\r\n    &>[hoverscale]:hover, &>[hoverscale]:focus-within, &>[hoverscale]:focus{ transform: scale(1); }\r\n}\r\n\r\n`;\r\n        let usageDeclarations = \"(ret)=>{ // scope contains: data, node, view, constants, state\\n\" +\r\n            \"// ** preparations and default behaviour here ** //\\n\" +\r\n            \"ret.data = data\\n\" +\r\n            \"ret.node = node\\n\" +\r\n            \"ret.view = view\\n\" +\r\n            \"// data, node, view are dependencies by default. delete them above if you want to remove them.\\n\" +\r\n            \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\\n\" +\r\n            \"// ** declarations here ** //\\n\" +\r\n            \"ret.edgestart = node.edge.start?.size+''\\n\" +\r\n            \"ret.edgeend = node.edge.end?.size+''\\n\" +\r\n            \"}\"\r\n        // edgePointView.edgePointCoordMode = CoordinateMode.relativePercent;\r\n        let view: DViewElement = DViewElement.new2('EdgePoint', DV.edgePointView(), vp, (d)=>{\r\n            d.appliableTo = 'EdgePoint';\r\n            d.resizable = false;\r\n            d.palette = {'color-':  U.hexToPalette('#000'), 'background-': U.hexToPalette('#fff'), 'border-':  U.hexToPalette('#000'), 'hover-scale':{type:'number', unit:'', value:1.3}};\r\n            d.css = css;\r\n            d.usageDeclarations = usageDeclarations;\r\n            d.edgePointCoordMode = CoordinateMode.absolute;\r\n            d.defaultVSize = defaultEdgePointSize;\r\n            // d.defaultVSize = new GraphSize(0, 0, 25, 25);\r\n        }, false);\r\n        return view;\r\n    }\r\n\r\n    static anchor(vp: DViewElement): DViewElement {\r\n        let ret = DViewElement.new2('Anchors', DV.anchorJSX(), vp, (v) => {\r\n            v.isExclusiveView = false;\r\n            v.palette={'anchor-': U.hexToPalette('#77f', '#f77', '#007'),\r\n                'anchor-hover-': U.hexToPalette('#7f7', '#a44', '#070')};\r\n            v.usageDeclarations = \"(ret)=>{ // scope: data, node, view, state, \\n\" +\r\n                \"// ** preparations and default behaviour here ** //\\n\" +\r\n                \"// add preparation code here (like for loops to count something), then list the dependencies below.\\n\" +\r\n                \"// ** declarations here ** //\\n\" +\r\n                \"ret.anchors = data && node.anchors;\\n\"+\r\n                \"ret.dragAnchor = node.events.dragAnchor; // @autogenerated, do not edit\\n\"+\r\n                \"ret.assignAnchor = node.events.assignAnchor; // @autogenerated, do not edit\\n\"+\r\n                \"}\";\r\n            v.events = {\r\n                dragAnchor: '(coords /*Point*/, anchorName /*string*/)=>{\\n' +\r\n                    '\\tconst updateAnchor = {};\\n'+\r\n                    '\\tupdateAnchor[anchorName] = coords;\\n'+\r\n                    '\\tnode.anchors=updateAnchor;\\n'+\r\n                    '}',\r\n                assignAnchor: '(anchorName /*string*/)=>{\\n' +\r\n                    '\\tnode.assignEdgeAnchor(anchorName);\\n'+\r\n                    '}'}\r\n            v.css = `\r\n.anchor.valid-anchor{\r\n    display:block;\r\n}\r\n\r\n.anchor{\r\n    display:none;\r\n    position: absolute;\r\n    background-color: var(--anchor-1);\r\n    outline: 2px solid var(--anchor-3);\r\n    transform: translate(-50%, -50%);\r\n    pointer-events: all;\r\n    cursor: crosshair;\r\n    \r\n    &:hover{\r\n        background-color: var(--anchor-hover-1);\r\n        outline: 2px solid var(--anchor-hover-3);\r\n    }\r\n    &.active-anchor{\r\n        background-color: var(--anchor-2);\r\n        &:hover{\r\n            background-color: var(--anchor-hover-2);\r\n        }\r\n    }\r\n}\r\n`\r\n        }, false, 'Pointer_ViewAnchors' );\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DefaultViews;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}