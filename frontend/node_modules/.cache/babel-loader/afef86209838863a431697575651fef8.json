{"ast":null,"code":"// export {Graph, GraphComponent} from \"../graph/graph/graph\"; // require graphelement\n// export {Graph} from \"../graph/vertex/Vertex\"; // require graphelement\n// imports graphelements\nimport{Graph,Vertex,GraphVertex,Field,EdgePoint}from\"../graph/vertex/Vertex\";// require overlap, graphelement\nimport{Polygon,Circle,Cross,Decagon,Asterisk,Ellipse,Enneagon,Hexagon,Octagon,Heptagon,Pentagon,Rectangle,Square,SimpleStar,DecoratedStar,Trapezoid,Triangle}from\"../graph/vertex/Shapes\";// require graphelement\n// require vertex, graph\nimport{Edge}from\"../graph/damedges/damedge\";// exports graphelements\nexport{GraphElement,GraphElementComponent}from\"../graph/graphElement/graphElement\";export{Graph,Vertex,VoidVertex,GraphVertex,Field,EdgePoint,VertexComponent}from\"../graph/vertex/Vertex\";// require overlap, graphelement\nexport{Polygon,Circle,Cross,Decagon,Asterisk,Ellipse,Enneagon,Hexagon,Nonagon,Octagon,Heptagon,Pentagon,Rectangle,Septagon,Square,Star,SimpleStar,DecoratedStar,Trapezoid,Triangle}from\"../graph/vertex/Shapes\";export{DefaultNode,DefaultNodeComponent}from\"../graph/defaultNode/DefaultNode\";// require graphelement\nexport{GraphsContainer,GraphsContainerComponent}from\"../graph/graph/graphContainer\";// require vertex, graph\nexport{Edge,EdgeComponent}from\"../graph/damedges/damedge\";export{GenericInput}from\"../components/forEndUser/GenericInput\";// other exports\n//export {DockLayoutComponent} from \"../components/abstract/DockLayoutComponent\";\nexport{Input,Edit,TextArea,Select}from\"../components/forEndUser/Input\";// export {TextArea} from \"../components/forEndUser/TextArea\";\nexport{Selector}from\"../components/forEndUser/Selector\";export{View}from\"../components/forEndUser/Aliases\";export{Try}from\"../components/forEndUser/Try\";// export {Image} from \"../components/forEndUser/Image\";\nexport{DataOutputComponent}from\"../components/logger/DataOutput\";export{LoggerComponent}from\"../components/logger/loggerComponent\";/// import components that must save themselves to global variable to be accessible for user\nexport{Overlap}from\"../components/forEndUser/Overlap\";export{ControlPanel}from'../components/forEndUser/ControlPanel';export{Control,Slider,Toggle}from'../components/forEndUser/Control';export const Graphs={Graph:Graph,GraphVertex:GraphVertex};export const Edges={Edge:Edge,EdgePoint:EdgePoint};export const Fields={Field:Field// GraphElement: GraphElement,\n};export const Vertexes={Vertex:Vertex,// VoidVertex: VoidVertex,\nCircle:Circle,Polygon:Polygon,Cross:Cross,Asterisk:Asterisk,//Star: Star,\nSimpleStar:SimpleStar,DecoratedStar:DecoratedStar,Triangle:Triangle,Square:Square,Pentagon:Pentagon,Hexagon:Hexagon,Heptagon:Heptagon,Octagon:Octagon,Enneagon:Enneagon,Decagon:Decagon,// Nonagon: Nonagon, Septagon: Septagon,\n// Diamond: Diamond, Rhombus: Rhombus,\nEllipse:Ellipse,Rectangle:Rectangle,Trapezoid:Trapezoid};export const GraphElements={...Graphs,...Vertexes,...Fields,...Edges};// T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;\nfor(let key in GraphElements)if(!GraphElements[key]){console.log({GraphElements,v:GraphElements[key]});throw new Error(\"wrong initialization fo components\");}// U.objectMergeInPlace(GraphElements, Graphs, Edges as any, Vertexes, Fields, {Graphs, Edges, Vertexes, Fields});\n// console.info('components loaded');\nexport{Measurable,MeasurableComponent,ScrollableComponent,Scrollable,Draggable,Resizable,Rotatable}from\"../components/forEndUser/Measurable\";// icons\nimport*as _Tb from'react-icons/tb';export{_Tb as Tb};import*as _Fa from'react-icons/fa';export{_Fa as Fa};","map":{"version":3,"names":["Graph","Vertex","GraphVertex","Field","EdgePoint","Polygon","Circle","Cross","Decagon","Asterisk","Ellipse","Enneagon","Hexagon","Octagon","Heptagon","Pentagon","Rectangle","Square","SimpleStar","DecoratedStar","Trapezoid","Triangle","Edge","GraphElement","GraphElementComponent","VoidVertex","VertexComponent","Nonagon","Septagon","Star","DefaultNode","DefaultNodeComponent","GraphsContainer","GraphsContainerComponent","EdgeComponent","GenericInput","Input","Edit","TextArea","Select","Selector","View","Try","DataOutputComponent","LoggerComponent","Overlap","ControlPanel","Control","Slider","Toggle","Graphs","Edges","Fields","Vertexes","GraphElements","key","console","log","v","Error","Measurable","MeasurableComponent","ScrollableComponent","Scrollable","Draggable","Resizable","Rotatable","_Tb","Tb","_Fa","Fa"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/joiner/components.tsx"],"sourcesContent":["import type { Dictionary } from \"./types\";\r\n\r\n// export {Graph, GraphComponent} from \"../graph/graph/graph\"; // require graphelement\r\n// export {Graph} from \"../graph/vertex/Vertex\"; // require graphelement\r\n// imports graphelements\r\nimport {GraphElement, GraphElementComponent} from \"../graph/graphElement/graphElement\";\r\nimport {Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent} from \"../graph/vertex/Vertex\"; // require overlap, graphelement\r\nimport { Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle\r\n} from  \"../graph/vertex/Shapes\";\r\nimport {DefaultNode, DefaultNodeComponent} from \"../graph/defaultNode/DefaultNode\"; // require graphelement\r\nimport {GraphsContainer, GraphsContainerComponent} from \"../graph/graph/graphContainer\"; // require vertex, graph\r\nimport {Edge, EdgeComponent} from \"../graph/damedges/damedge\";\r\nimport {GenericInput} from \"../components/forEndUser/GenericInput\"\r\nimport {U} from \"./index\";\r\nimport { Control } from \"../components/forEndUser/Control\";\r\n// exports graphelements\r\nexport {GraphElement, GraphElementComponent} from \"../graph/graphElement/graphElement\";\r\nexport {Graph, Vertex, VoidVertex, GraphVertex, Field, EdgePoint, VertexComponent} from \"../graph/vertex/Vertex\"; // require overlap, graphelement\r\nexport { Polygon, Circle, Cross, Decagon,\r\n    Asterisk, Ellipse, Enneagon, Hexagon, Nonagon,\r\n    Octagon, Heptagon, Pentagon, Rectangle, Septagon,\r\n    Square, Star, SimpleStar, DecoratedStar, Trapezoid, Triangle\r\n} from  \"../graph/vertex/Shapes\";\r\nexport {DefaultNode, DefaultNodeComponent} from \"../graph/defaultNode/DefaultNode\"; // require graphelement\r\nexport {GraphsContainer, GraphsContainerComponent} from \"../graph/graph/graphContainer\"; // require vertex, graph\r\nexport {Edge, EdgeComponent,} from \"../graph/damedges/damedge\";\r\nexport {GenericInput} from \"../components/forEndUser/GenericInput\"\r\n// other exports\r\n//export {DockLayoutComponent} from \"../components/abstract/DockLayoutComponent\";\r\n\r\nexport {Input, Edit, TextArea, Select} from \"../components/forEndUser/Input\";\r\n// export {TextArea} from \"../components/forEndUser/TextArea\";\r\nexport {Selector} from \"../components/forEndUser/Selector\";\r\nexport {View} from \"../components/forEndUser/Aliases\";\r\nexport {Try} from \"../components/forEndUser/Try\";\r\n\r\n// export {Image} from \"../components/forEndUser/Image\";\r\n\r\n\r\nexport {DataOutputComponent} from \"../components/logger/DataOutput\";\r\nexport {LoggerComponent} from \"../components/logger/loggerComponent\";\r\n\r\n/// import components that must save themselves to global variable to be accessible for user\r\n\r\nexport {Overlap} from \"../components/forEndUser/Overlap\";\r\n\r\nexport {ControlPanel} from '../components/forEndUser/ControlPanel';\r\n\r\nexport {Control, Slider, Toggle} from '../components/forEndUser/Control';\r\n\r\ntype dict = Dictionary<string, typeof GraphElement | typeof Edge>;\r\n\r\n\r\nexport const Graphs = {\r\n    Graph: Graph, GraphVertex: GraphVertex,\r\n}\r\nexport const Edges = {\r\n    Edge: Edge,\r\n    EdgePoint: EdgePoint,\r\n}\r\nexport const Fields = {\r\n    Field: Field,\r\n    // GraphElement: GraphElement,\r\n}\r\nexport const Vertexes = {\r\n    Vertex: Vertex,\r\n    // VoidVertex: VoidVertex,\r\n    Circle: Circle,\r\n    Polygon: Polygon,\r\n    Cross: Cross,\r\n    Asterisk: Asterisk,\r\n    //Star: Star,\r\n    SimpleStar: SimpleStar, DecoratedStar: DecoratedStar,\r\n    Triangle: Triangle, Square: Square, Pentagon: Pentagon,\r\n    Hexagon: Hexagon, Heptagon: Heptagon, Octagon: Octagon,\r\n    Enneagon: Enneagon, Decagon: Decagon,\r\n    // Nonagon: Nonagon, Septagon: Septagon,\r\n    // Diamond: Diamond, Rhombus: Rhombus,\r\n    Ellipse: Ellipse,\r\n    Rectangle: Rectangle,\r\n    Trapezoid: Trapezoid\r\n}\r\nexport const GraphElements: dict = {...Graphs, ...Vertexes, ...Fields, ...Edges}; // T & {vertexes: T, edges: T, graphs: T, fields: T} = {} as any;\r\nfor (let key in GraphElements) if (!(GraphElements as any)[key]) { console.log({GraphElements, v:(GraphElements as any)[key]}); throw new Error(\"wrong initialization fo components\"); }\r\n// U.objectMergeInPlace(GraphElements, Graphs, Edges as any, Vertexes, Fields, {Graphs, Edges, Vertexes, Fields});\r\n// console.info('components loaded');\r\nexport {Measurable, MeasurableComponent, ScrollableComponent, Scrollable, Draggable, Resizable, Rotatable} from \"../components/forEndUser/Measurable\";\r\n\r\n// icons\r\nexport * as Tb from 'react-icons/tb';\r\nexport * as Fa from 'react-icons/fa';\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}