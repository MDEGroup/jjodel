{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\graph\\\\graphElement\\\\graphElement.tsx\",\n  _dec,\n  _class,\n  _class2,\n  _this = this;\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport './graphElement.scss';\nimport { Point, Pointers, TRANSACTION, GraphDragManager, GraphPoint, Selectors } from \"../../joiner\";\nimport { DefaultUsageDeclarations } from \"./sharedTypes/sharedTypes\";\nimport { LGraphElement, store, BEGIN, CreateElementAction, DClass, Debug, DEdge, DEnumerator, DGraph, DGraphElement, DModel, DObject, DPackage, DPointerTargetable, DUser, DV, EMeasurableEvents, END, JSXT, Keystrokes, Log, LPointerTargetable, LViewElement, MyProxyHandler, RuntimeAccessible, RuntimeAccessibleClass, SetFieldAction, SetRootFieldAction, U, UX, windoww } from \"../../joiner\";\n\n// const Selectors: typeof Selectors_ = windoww.Selectors;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function makeEvalContext(view, state, ownProps, stateProps) {\n  var _stateProps$node;\n  let component = GraphElementComponent.map[ownProps.nodeid];\n  let allProps = {\n    ...ownProps,\n    ...stateProps\n  };\n  let parsedConstants = stateProps.view._parsedConstants;\n  let evalContext = {\n    model: stateProps.data,\n    ...ownProps,\n    ...stateProps,\n    edge: RuntimeAccessibleClass.extends((_stateProps$node = stateProps.node) === null || _stateProps$node === void 0 ? void 0 : _stateProps$node.className, \"DVoidEdge\") ? stateProps.node : undefined,\n    state,\n    ownProps,\n    stateProps,\n    props: allProps,\n    component,\n    constants: parsedConstants,\n    // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\n    ...parsedConstants\n    // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\n  };\n  evalContext.__proto__ = windoww.defaultContext;\n  return evalContext;\n}\nfunction setTemplateString(stateProps, ownProps, state) {\n  //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\n  // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\n  const view = stateProps.view; //data._transient.currentView;\n  // eslint-disable-next-line no-mixed-operators\n  const evalContext = makeEvalContext(view, state, ownProps, stateProps);\n  // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\n\n  // const evalContextOld = U.evalInContext(this, constants);\n  // this.setState({evalContext});\n\n  // compute usageDeclarations\n  if (!stateProps.view.__raw.usageDeclarations) {\n    U.objectMergeInPlace(evalContext, stateProps.usageDeclarations = {\n      data: stateProps.data,\n      view: stateProps.view,\n      node: stateProps.node\n    });\n  } else try {\n    // let context = { ...ret.evalContext, state, ret, ownProps, props: ret};\n    // eval usageDeclarations\n    // this is not really evaluated in provided context, as it does not find view, data in scope\n    // and if i open console data becomes the window.data of the one selected in console.\n\n    // scrapped function mode, doesn't look like possible to execute a function in a different scope after his definition,\n    // unless it becomes a string and is redefined through eval\n    /// let usageDeclarations: ((g:DefaultUsageDeclarations)=>DefaultUsageDeclarations) = U.evalInContextAndScope(ret.view.usageDeclarations, ret.evalContext, ret.evalContext);\n    // usageDeclarations(ret.usageDeclarations);\n    // ret.evalContext.usageDeclarations = ret.usageDeclarations;\n    let tempContext = {\n      __param: stateProps.usageDeclarations\n    };\n    tempContext.__proto__ = evalContext;\n    U.evalInContextAndScopeNew(\"(\" + stateProps.view.usageDeclarations + \")(this.__param)\", tempContext, true, false);\n    U.objectMergeInPlace(evalContext, stateProps.usageDeclarations);\n    // ret.evalContext.props = ret; mo more needed since UD doesn't update props anymore // hotfix to update context props after usageDeclaration mapping\n    // console.log(\"view compute usageDeclarations SUCCESS 1\",\n    //     {UD_obj_result:stateProps.usageDeclarations, UD_view: stateProps.view.usageDeclarations, context:evalContext, stateProps, ownProps});\n  } catch (e) {\n    stateProps.invalidUsageDeclarations = e;\n    Log.ee(\"Invalid usage declarations\", {\n      e,\n      str: stateProps.view.usageDeclarations,\n      view: stateProps.view,\n      data: ownProps.data,\n      stateProps\n    });\n    U.objectMergeInPlace(evalContext, stateProps.usageDeclarations = {\n      data: stateProps.data,\n      view: stateProps.view,\n      node: stateProps.node,\n      invalidUsageDeclarations: true\n    });\n  }\n  stateProps.evalContext = evalContext;\n}\nlet debugcount = 0;\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\nexport const lightModeAllowedElements = [DModel.cname, DPackage.cname, DClass.cname, DEnumerator.cname, DObject.cname];\nconst countRenders = true;\nexport let GraphElementComponent = (_dec = RuntimeAccessible('GraphElementComponent'), _dec(_class = (_class2 = class GraphElementComponent extends Component {\n  static defaultShouldComponentUpdate(instance, nextProps, nextState, nextContext) {\n    return !U.shallowEqual(instance.props, nextProps) || !U.shallowEqual(instance.state, nextState);\n  }\n  static mapViewStuff(state, ret, ownProps) {\n    // let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\n    if (ownProps.view) {\n      ret.view = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(Pointers.from(ownProps.view), state));\n      if (ret.view) ret.views = [ret.view];\n      Log.w(!ret.view, \"Requested view \" + ownProps.view + \" not found. Another view got assigned.\", {\n        requested: ownProps.view,\n        props: ownProps,\n        state: ret\n      });\n    }\n    if (!ret.view) {\n      var _ownProps$view;\n      const viewScores = Selectors.getAppliedViews(ret.data, ((_ownProps$view = ownProps.view) === null || _ownProps$view === void 0 ? void 0 : _ownProps$view.id) || ownProps.view || null, ownProps.parentViewId || null);\n      ret.views = viewScores.map(e => LViewElement.fromD(e.element)).filter(v => !!v);\n      // console.log(\"debug\",  {...this.props, data: this.props.data?.id, view: this.props.view?.id, v0: this.props.views, views: this.props.views?.map( v => v?.id )})\n      ret.view = ret.views[0];\n      Log.ex(!ret.view, \"Could not find any view appliable to element.\", {\n        data: ret.data,\n        props: ownProps,\n        state: ret\n      });\n      ret.viewScores = viewScores; // debug only\n    }\n\n    /*        if (ownProps.view) {\r\n                ret.view = DPointerTargetable.from(ownProps.view, state);\r\n            } else {\r\n                ret.view = ret.views[0];\r\n            }*/\n  }\n  static mapLModelStuff(state, ownProps, ret) {\n    var _ret$data;\n    // NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\n    if (!((_ret$data = ret.data) === null || _ret$data === void 0 ? void 0 : _ret$data.__isProxy)) ret.data = LPointerTargetable.wrap(ownProps.data);\n    /*\r\n    const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n    // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n    ret.data = MyProxyHandler.wrap(meid, state);\r\n    // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n    */\n  }\n  static mapLGraphElementStuff(state, ownProps, ret) {\n    let dGraphElementDataClass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DGraphElement;\n    let isDGraph = arguments.length > 4 ? arguments[4] : undefined;\n    let nodeid = ownProps.nodeid;\n    let graphid = isDGraph ? isDGraph.id : ownProps.graphid;\n    let parentnodeid = ownProps.parentnodeid;\n    // let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\n    // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\n    /*if (!nodeid) {\r\n        nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '^' + stateProps.view.id : '') + '^1';\r\n        stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n        todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n    }*/\n\n    let graph = DPointerTargetable.from(graphid, state); // se non c'Ã¨ un grafo lo creo\n    if (!graph) {\n      // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\n      if (ret.data) CreateElementAction.new(DGraph.new(0, ret.data.id, parentnodeid, graphid, graphid));\n    }\n    /*else {\r\n        graph = MyProxyHandler.wrap(graph);\r\n        Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n    }*/\n    let dnode = DPointerTargetable.from(nodeid, state);\n\n    // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\n    if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {\n      /*\r\n      console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n      pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/\n      // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\n      let dge;\n      /*\r\n      if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n          let initialSize = ownProps.initialSize;\r\n          dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n          ret.node =  MyProxyHandler.wrap(dge);\r\n      } else*/\n      if (dGraphElementDataClass === DEdge) {\n        var _ret$data2;\n        // set start and end from ownprops;\n        let edgeOwnProps = ownProps;\n        let edgeStateProps = ret;\n        let startnodeid = LGraphElement.getNodeId(edgeOwnProps.start);\n        let endnodeid = LGraphElement.getNodeId(edgeOwnProps.end);\n        if (!startnodeid) {\n          startnodeid = LGraphElement.getNodeId(ret.data);\n        }\n        edgeStateProps.start = LPointerTargetable.fromPointer(startnodeid);\n        edgeStateProps.end = LPointerTargetable.fromPointer(endnodeid);\n        Log.e(!startnodeid, \"Cannot create an edge without start node\", {\n          startnodeid,\n          data: ret.data,\n          propsStart: edgeOwnProps.start\n        });\n        Log.e(!endnodeid, \"Cannot create an edge without end node (yet)\", {\n          endnodeid,\n          data: ret.data,\n          propsEnd: edgeOwnProps.end\n        });\n        if (!startnodeid || !endnodeid) return;\n        let longestLabel = edgeOwnProps.label;\n        let labels = edgeOwnProps.labels || [];\n        dge = DEdge.new(ownProps.htmlindex, (_ret$data2 = ret.data) === null || _ret$data2 === void 0 ? void 0 : _ret$data2.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\n        edgeStateProps.node = edgeStateProps.edge = MyProxyHandler.wrap(dge);\n      } else {\n        var _ret$data3;\n        let initialSize = ownProps.initialSize;\n        dge = dGraphElementDataClass.new(ownProps.htmlindex, (_ret$data3 = ret.data) === null || _ret$data3 === void 0 ? void 0 : _ret$data3.id, parentnodeid, graphid, nodeid, initialSize);\n        ret.node = MyProxyHandler.wrap(dge);\n      }\n      // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\n    } else {\n      ret.node = MyProxyHandler.wrap(dnode);\n    }\n  }\n\n  ////// mapper func\n  static mapStateToProps(state, ownProps) {\n    let dGraphDataClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DGraphElement;\n    let startingobj = arguments.length > 3 ? arguments[3] : undefined;\n    // console.log('dragx GE mapstate', {dGraphDataClass});\n    let ret = startingobj || {}; // NB: cannot use a constructor, must be pojo\n    GraphElementComponent.mapLModelStuff(state, ownProps, ret);\n    if (Debug.lightMode && (!ret.data || !lightModeAllowedElements.includes(ret.data.className))) {\n      return ret;\n    }\n    // console.log(\"map ge\", {ownProps, ret, state});\n    GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\n    GraphElementComponent.mapViewStuff(state, ret, ownProps);\n    Log.exDev(!ret.view, 'failed to assign view:', {\n      state,\n      ownProps,\n      reduxProps: ret\n    });\n    ret.usageDeclarations = new DefaultUsageDeclarations(ret, ownProps); //edited in-place through parameter in evalContext\n    // @ts-ignore\n    ret.key = ret.key || ownProps.key;\n    // @ts-ignore\n    ret.forceupdate = state.forceupdate;\n\n    // NB: after this function, ret (reduxstate) should not update shallow keys or ownProps, ret, usageDeclarations (because they are spread in ctx root)\n    // any further update will not be present in eval context.props unless merged like U.objectMergeInPlace(ret.evalContext.props, ...); (and same with ctx.stateProps)\n    setTemplateString(ret, ownProps, state); // todo: this is heavy, should be moved somewhere where it's executed once unless view changes (pre-render with if?)\n\n    // console.log(\"view compute usageDeclarations\", {ret, ownProps, ud:ret.view.usageDeclarations, context:ret.evalContext});\n    if (ret.view.usageDeclarations) {}\n\n    // Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\n    return ret;\n  }\n  static mapDispatchToProps(dispatch) {\n    const ret = {};\n    return ret;\n  }\n  // undefined or view.clonedCounter;\n\n  // todo: can be improved by import memoize from \"memoize-one\"; it is high-order function that memorize the result if params are the same without re-executing it (must not have side effects)\n  //  i could use memoization to parse the jsx and to execute the user-defined pre-render function\n  // le istanze obj di m1 non vengono agiornate se cambio nome alla classe m2\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    var _this$props$data, _this$props$data2, _this$props$data3;\n    // return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\n    let out = {\n      reason: undefined\n    };\n    let skipDeepKeys = {\n      pointedBy: true\n    };\n    // let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\n    let ret = false; // !U.isShallowEqualWithProxies(this.props, nextProps, 0, 1, skipPropKeys, out);\n    // todo: verify if this update work\n    // if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\n    if (!ret) ret = !U.isShallowEqualWithProxies(this.props.usageDeclarations, nextProps.usageDeclarations, 0, 1, skipDeepKeys, out);\n    Log.l(ret, \"ShouldComponentUpdate \" + ((_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.name) + \" UPDATED\", {\n      ret,\n      reason: out.reason,\n      oldProps: this.props,\n      nextProps\n    });\n    Log.l(((_this$props$data2 = this.props.data) === null || _this$props$data2 === void 0 ? void 0 : _this$props$data2.name) === \"concept 1_1\", \"ShouldComponentUpdate \" + ((_this$props$data3 = this.props.data) === null || _this$props$data3 === void 0 ? void 0 : _this$props$data3.name) + (ret ? \" UPDATED\" : \" REJECTED\"), {\n      ret,\n      reason: out.reason,\n      oldProps: this.props,\n      nextProps\n    }); //  oldnode:this.props.node, newnode: nextProps.node,\n    return ret;\n    // apparently node changes are not working? also check docklayout shouldupdate\n  }\n  doMeasurableEvent(type) {\n    if (Debug.lightMode) return false;\n    let measurableCode = null;\n    let context = null;\n    try {\n      measurableCode = this.props.view[type];\n      if (!measurableCode) return false;\n      context = this.getContext();\n      measurableCode = U.wrapUserFunction(measurableCode);\n      console.log(\"measurable execute\", {\n        type,\n        measurableCode\n      });\n      // eval measurable\n      U.evalInContextAndScope(measurableCode, context, context);\n    } catch (e) {\n      Log.ee('Error in \"' + type + '\" ' + e.message, {\n        e,\n        measurableCode,\n        context\n      });\n    }\n    // it has executed at least partially.\n    // i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\n    return true;\n  }\n  select(forUser) {\n    var _this$props$node, _this$props$data4;\n    // if (forUser === DUser.current && this.html.current) this.html.current.focus();\n    BEGIN();\n    (_this$props$node = this.props.node) === null || _this$props$node === void 0 ? void 0 : _this$props$node.select(forUser);\n    SetRootFieldAction.new('_lastSelected', {\n      node: this.props.nodeid,\n      view: this.props.view.id,\n      modelElement: (_this$props$data4 = this.props.data) === null || _this$props$data4 === void 0 ? void 0 : _this$props$data4.id\n    }); /*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n         //selected[forUser] = id;\r\n         SetRootFieldAction.new('selected', id, '', true);\r\n        }*/\n\n    // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\n    END();\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.id = void 0;\n    this.countRenders = void 0;\n    this._isMounted = void 0;\n    this.html = void 0;\n    this.lastViewChanges = void 0;\n    this.lastOnUpdateChanges = void 0;\n    this.stopUpdateEvents = void 0;\n    this.lastViewChanges = [];\n    this.lastOnUpdateChanges = [];\n    this.stopUpdateEvents = undefined;\n    this._isMounted = false;\n    this.countRenders = 0;\n    this.id = GraphElementComponent.maxid++;\n    GraphElementComponent.all[this.id] = this;\n    GraphElementComponent.map[props.nodeid] = this;\n    this.html = /*#__PURE__*/React.createRef();\n    let functionsToBind = [this.onClick, this.onLeave, this.onEnter, this.doContextMenu, this.onContextMenu, this.onMouseDown, this.onMouseUp, this.onKeyDown, this.onScroll]; /*\r\n                                                                                                                                                                               this.onClick = this.onClick.bind(this);\r\n                                                                                                                                                                               this.onLeave = this.onLeave.bind(this);\r\n                                                                                                                                                                               this.onContextMenu = this.onContextMenu.bind(this);\r\n                                                                                                                                                                               this.onEnter = this.onEnter.bind(this);\r\n                                                                                                                                                                               this.select = this.select.bind(this);*/\n    for (let f of functionsToBind) this[f.name] = f.bind(this);\n    // @ts-ignore\n    this.state = {\n      classes: []\n    };\n  }\n\n  // constants: evalutate solo durante il primo render, puÃ² essere una funzione con effetti collaterali sul componente,\n  // in tal caso la si esegue e si prende il valore di ritorno.\n  // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\n  // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\n\n  componentDidMount() {\n    // after first render\n    this._isMounted = true;\n  }\n  componentWillUnmount() {\n    // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista piÃ¹.\n    //  e non venga cancellato se il componente viene smontato perchÃ¨ ho solo cambiato vista\n    //  LOW PRIORITY perchÃ¨ funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\n    // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\n  }\n  /*\r\n      componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n          const newProps = this.props\r\n          if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n  }*/\n\n  getContext() {\n    let context = {\n      component: this,\n      __proto__: this.props.evalContext\n    };\n    context._context = context;\n    this.context = context;\n    return context;\n  }\n  displayError(e, where) {\n    var _this$props$data6, _this$props$node3;\n    const view = this.props.view; //data._transient.currentView;\n    let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") + (e.message || \"\\n\").split(\"\\n\")[0];\n    if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\n      errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.';\n    } else if (view.jsxString.indexOf('?.') >= 0) {\n      errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.';\n    } else if (e.message.indexOf(\"Unexpected token '<'\") !== -1) {\n      errormsg += '\\n\\nDid you forgot to close a html </tag>?';\n    }\n    try {\n      let ee = e.stack || \"\";\n      let stackerrorlast = ee.split(\"\\n\")[1];\n      let icol = stackerrorlast.lastIndexOf(\":\");\n      let jsxString = view.jsxString;\n      // let col = stackerrorlast.substring(icol+1);\n      let irow = stackerrorlast.lastIndexOf(\":\", icol - 1);\n      let stackerrorlinenum = {\n        row: Number.parseInt(stackerrorlast.substring(irow + 1, icol)),\n        col: Number.parseInt(stackerrorlast.substring(icol + 1))\n      };\n      let linesPre = 1;\n      let linesPost = 1;\n      let jsxlines = jsxString.split(\"\\n\");\n      let culpritlinesPre = jsxlines.slice(stackerrorlinenum.row - linesPre - 1, stackerrorlinenum.row - 1);\n      let culpritline = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\n      let culpritlinesPost = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\n      console.error(\"errr\", {\n        e,\n        jsxlines,\n        culpritlinesPre,\n        culpritline,\n        culpritlinesPost,\n        stackerrorlinenum,\n        icol,\n        irow,\n        stackerrorlast\n      });\n      let caretCursor = \"â\"; // âµ ê¯ ð¸ á\n      if (culpritline && stackerrorlinenum.col < culpritline.length && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\n        var _this$props$data5, _this$props$node2;\n        let rowPre = culpritline.substring(0, stackerrorlinenum.col);\n        let rowPost = culpritline.substring(stackerrorlinenum.col);\n        let jsxcode = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontFamily: \"monospaced sans-serif\",\n            color: \"#444\"\n          },\n          children: [culpritlinesPre.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 52\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [rowPre, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: \"red\"\n              },\n              children: [\" \", caretCursor, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 39\n            }, this), \" \", rowPost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), culpritlinesPost.map(l => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 53\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this);\n        errormsg += \" @line \" + stackerrorlinenum.row + \":\" + stackerrorlinenum.col;\n        return DV.errorView( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [errormsg, jsxcode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), {\n          where: \"in \" + where + \"()\",\n          e,\n          template: this.props.view.jsxString,\n          view: this.props.view\n        }, where, (_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : _this$props$data5.__raw, (_this$props$node2 = this.props.node) === null || _this$props$node2 === void 0 ? void 0 : _this$props$node2.__raw, view.__raw);\n      } else {\n        // it means it is likely accessing a minified.js src code, sending generic error without source mapping\n      }\n    } catch (e2) {\n      Log.eDevv(\"internal error in error view\", {\n        e,\n        e2,\n        where\n      });\n    }\n    return DV.errorView( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errormsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 29\n    }, this), {\n      where: \"in \" + where + \"()\",\n      e,\n      template: this.props.view.jsxString,\n      view: this.props.view\n    }, where, (_this$props$data6 = this.props.data) === null || _this$props$data6 === void 0 ? void 0 : _this$props$data6.__raw, (_this$props$node3 = this.props.node) === null || _this$props$node3 === void 0 ? void 0 : _this$props$node3.__raw, view.__raw);\n  }\n  getTemplate() {\n    /*if (!this.state.template) {\r\n        this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n            '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n    }*/\n    // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\n\n    // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\n    if (this.props.invalidUsageDeclarations) {\n      return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\n    }\n    let context = this.getContext();\n    // abababababab\n    // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\n\n    try {\n      let preRenderFuncStr = this.props.view.preRenderFunc;\n      if (preRenderFuncStr) {\n        // eval prerender\n        let obj = {};\n        let tempContext = {\n          __param: obj\n        };\n        tempContext.__proto__ = context;\n        U.evalInContextAndScopeNew(\"(\" + preRenderFuncStr + \")(this.__param)\", tempContext, true, false);\n        U.objectMergeInPlace(context, obj);\n      }\n    } catch (e) {\n      return this.displayError(e, \"Pre-Render\");\n    }\n    let ret;\n    // eval template\n    let jsxCodeString;\n    try {\n      jsxCodeString = JSXT.fromString(this.props.view.jsxString, {\n        factory: 'React.createElement'\n      });\n    } catch (e) {\n      return this.displayError(e, \"JSX Syntax\");\n    }\n    try {\n      ret = U.evalInContextAndScope('(()=>{ return ' + jsxCodeString + '})()', context);\n    } catch (e) {\n      return this.displayError(e, \"JSX Semantic\");\n    }\n    return ret;\n  }\n  onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    // NOT executed here, but on mousedown because of IOS compatibility\n  }\n  doContextMenu(e) {\n    var _state$contextMenu;\n    BEGIN();\n    this.props.node.select();\n    if (this.html.current) this.html.current.focus();\n    let state = store.getState();\n    if (((_state$contextMenu = state.contextMenu) === null || _state$contextMenu === void 0 ? void 0 : _state$contextMenu.x) !== e.clientX) {\n      var _this$props$node4;\n      SetRootFieldAction.new(\"contextMenu\", {\n        display: true,\n        x: e.clientX,\n        y: e.clientY,\n        nodeid: (_this$props$node4 = this.props.node) === null || _this$props$node4 === void 0 ? void 0 : _this$props$node4.id\n      });\n    }\n    END();\n  }\n  onEnter(e) {\n    var _this$props$isEdgePen, _this$props$data7;\n    // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\n    const isEdgePending = (_this$props$isEdgePen = this.props.isEdgePending) === null || _this$props$isEdgePen === void 0 ? void 0 : _this$props$isEdgePen.source;\n    if (!isEdgePending || ((_this$props$data7 = this.props.data) === null || _this$props$data7 === void 0 ? void 0 : _this$props$data7.className) !== \"DClass\") return;\n    const extendError = {\n      reason: '',\n      allTargetSuperClasses: []\n    };\n    const canBeExtend = isEdgePending.canExtend(this.props.data, extendError);\n    if (canBeExtend) this.setState({\n      classes: [...this.state.classes, \"class-can-be-extended\"]\n    });else this.setState({\n      classes: [...this.state.classes, \"class-cannot-be-extended\"]\n    });\n  }\n  onLeave(e) {\n    var _this$props$data8;\n    if (((_this$props$data8 = this.props.data) === null || _this$props$data8 === void 0 ? void 0 : _this$props$data8.className) !== \"DClass\") return;\n    this.setState({\n      classes: this.state.classes.filter(classname => {\n        return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\";\n      })\n    });\n  }\n  onMouseDown(e) {\n    e.stopPropagation();\n    GraphElementComponent.mousedownComponent = this;\n    TRANSACTION(() => {\n      if (e.button === Keystrokes.clickRight) {\n        this.doContextMenu(e);\n      }\n      let p = this.props;\n      if (p.isGraph && !p.isvertex || p.isGraph && p.isvertex && e.ctrlKey) GraphDragManager.startPanning(e, this.props.node);\n    });\n  }\n  onScroll(e) {\n    console.log(\"onScroll\");\n    let scroll = new Point(e.currentTarget.scrollLeft, e.currentTarget.scrollTop);\n    let scrollOrigin = new Point(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    let g = this.props.node.graph;\n    let oldZoom = g.zoom;\n    let newZoom = new GraphPoint(oldZoom.x + 0.1, oldZoom.y + 0.1);\n    let oldOffset = g.offset;\n    let gscrollOrigin = oldOffset.add(scrollOrigin.multiply(oldZoom, true), true);\n    let newscrollOrigin = oldOffset.add(scrollOrigin.multiply(newZoom, true), true);\n    let newOffset = oldOffset.add(gscrollOrigin.subtract(newscrollOrigin, true), true);\n    TRANSACTION(() => {\n      g.offset = newOffset;\n      g.zoom = newZoom;\n    });\n    e.stopPropagation();\n  }\n  onMouseUp(e) {\n    e.stopPropagation();\n    TRANSACTION(() => {\n      GraphDragManager.stopPanning(e);\n      if (GraphElementComponent.mousedownComponent !== this) {\n        return;\n      }\n      this.doOnClick(e);\n    });\n  }\n  onKeyDown(e) {\n    if (e.key === Keystrokes.escape) {\n      this.props.node.deselect();\n      if (this.props.isEdgePending) {\n        // this.stopPendingEdge(); todo\n        return;\n      }\n    }\n    if (e.ctrlKey || e.altKey) {\n      var _this$props$data9, _this$props$data10;\n      // todo: make them a switch\n      if (e.key === \"d\") (_this$props$data9 = this.props.data) === null || _this$props$data9 === void 0 ? void 0 : _this$props$data9.duplicate();else if (e.key === \"r\") (_this$props$data10 = this.props.data) === null || _this$props$data10 === void 0 ? void 0 : _this$props$data10.delete();\n    }\n    if (e.altKey) {\n      var _this$props$data11, _this$props$data12, _this$props$data13, _this$props$data14, _this$props$data15, _this$props$data16, _this$props$data17, _this$props$data18, _this$props$data19, _this$props$data20;\n      // if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\n      if (e.key === \"a\") (_this$props$data11 = this.props.data) === null || _this$props$data11 === void 0 ? void 0 : _this$props$data11.addChild(\"auto\");else\n        // add class if on package, literal if on enum...\n        if (e.key === \"r\") (_this$props$data12 = this.props.data) === null || _this$props$data12 === void 0 ? void 0 : _this$props$data12.addChild(\"reference\");else if (e.key === \"o\") ((_this$props$data13 = this.props.data) === null || _this$props$data13 === void 0 ? void 0 : _this$props$data13.addChild(\"operation\")) || ((_this$props$data14 = this.props.data) === null || _this$props$data14 === void 0 ? void 0 : _this$props$data14.addChild(\"object\"));else if (e.key === \"l\") (_this$props$data15 = this.props.data) === null || _this$props$data15 === void 0 ? void 0 : _this$props$data15.addChild(\"literal\");else if (e.key === \"p\") ((_this$props$data16 = this.props.data) === null || _this$props$data16 === void 0 ? void 0 : _this$props$data16.addChild(\"package\")) || ((_this$props$data17 = this.props.data) === null || _this$props$data17 === void 0 ? void 0 : _this$props$data17.addChild(\"parameter\"));else if (e.key === \"c\") (_this$props$data18 = this.props.data) === null || _this$props$data18 === void 0 ? void 0 : _this$props$data18.addChild(\"class\");else if (e.key === \"e\") (_this$props$data19 = this.props.data) === null || _this$props$data19 === void 0 ? void 0 : _this$props$data19.addChild(\"enumerator\");else if (e.key === \"q\") (_this$props$data20 = this.props.data) === null || _this$props$data20 === void 0 ? void 0 : _this$props$data20.addChild(\"annotation\");else ;\n    }\n  }\n  doOnClick(e) {\n    var _state$contextMenu2, _this$props$isEdgePen2, _this$props$data21, _this$props$node5, _this$props$node6, _this$props$node7, _this$props$node8, _state$_lastSelected;\n    // (e.target as any).focus();\n    e.stopPropagation();\n    let state = store.getState();\n    if (e.button !== Keystrokes.clickRight && ((_state$contextMenu2 = state.contextMenu) === null || _state$contextMenu2 === void 0 ? void 0 : _state$contextMenu2.display)) SetRootFieldAction.new(\"contextMenu\", {\n      display: false,\n      x: 0,\n      y: 0\n    }); // todo: need to move it on document or <App>\n    const edgePendingSource = (_this$props$isEdgePen2 = this.props.isEdgePending) === null || _this$props$isEdgePen2 === void 0 ? void 0 : _this$props$isEdgePen2.source;\n    console.log('mousedown select() check PRE:', {\n      name: (_this$props$data21 = this.props.data) === null || _this$props$data21 === void 0 ? void 0 : _this$props$data21.name,\n      isSelected: this.props.node.isSelected(),\n      'nodeIsSelectedMapProxy': (_this$props$node5 = this.props.node) === null || _this$props$node5 === void 0 ? void 0 : _this$props$node5.isSelected,\n      nodeIsSelectedRaw: (_this$props$node6 = this.props.node) === null || _this$props$node6 === void 0 ? void 0 : _this$props$node6.__raw.isSelected\n    });\n    if (edgePendingSource) {\n      var _this$props$data22;\n      if (((_this$props$data22 = this.props.data) === null || _this$props$data22 === void 0 ? void 0 : _this$props$data22.className) !== \"DClass\") return;\n      // const user = this.props.isEdgePending.user;\n      const extendError = {\n        reason: '',\n        allTargetSuperClasses: []\n      };\n      const canBeExtend = this.props.data && edgePendingSource.canExtend(this.props.data, extendError);\n      if (canBeExtend && this.props.data) {\n        const lClass = LPointerTargetable.from(this.props.data.id);\n        // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\n        // todo: use source.addExtends(lClass); or something (source is LClass)\n        SetFieldAction.new(lClass.id, \"extendedBy\", edgePendingSource.id, \"+=\", true);\n        SetFieldAction.new(edgePendingSource.id, \"extends\", lClass.id, \"+=\", true);\n      }\n      SetRootFieldAction.new('isEdgePending', {\n        user: '',\n        source: ''\n      });\n      return;\n    }\n    console.log('mousedown select() check:', {\n      isSelected: this.props.node.isSelected(),\n      'nodeIsSelectedMapProxy': (_this$props$node7 = this.props.node) === null || _this$props$node7 === void 0 ? void 0 : _this$props$node7.isSelected,\n      nodeIsSelectedRaw: (_this$props$node8 = this.props.node) === null || _this$props$node8 === void 0 ? void 0 : _this$props$node8.__raw.isSelected\n    });\n    BEGIN();\n    windoww.node = this.props.node;\n    this.props.node.toggleSelected(DUser.current);\n    if (((_state$_lastSelected = state._lastSelected) === null || _state$_lastSelected === void 0 ? void 0 : _state$_lastSelected.node) !== this.props.nodeid) {\n      var _this$props$data23;\n      SetRootFieldAction.new('_lastSelected', {\n        node: this.props.nodeid,\n        view: this.props.view.id,\n        modelElement: (_this$props$data23 = this.props.data) === null || _this$props$data23 === void 0 ? void 0 : _this$props$data23.id\n      });\n    }\n    if (e.shiftKey || e.ctrlKey) {} else {\n      var _this$props$node9;\n      let allNodes = (_this$props$node9 = this.props.node) === null || _this$props$node9 === void 0 ? void 0 : _this$props$node9.graph.allSubNodes;\n      let nid = this.props.node.id;\n      if (allNodes) for (let node of allNodes) if (node.id !== nid) node.deselect(DUser.current);\n    }\n    END();\n  }\n  onClick(e) {}\n  /*\r\n  onViewChangeOld(): void {\r\n      let thischange = {t: Date.now(), vid: this.props.node.__raw.view, newvid:this.props.view.id, v: this.props.node.view, newv: this.props.view, key:this.props.key};\r\n      this.lastViewChanges.push(thischange);\r\n      // nan -> false <200 = true\r\n      if (thischange.t - this.lastViewChanges[this.lastViewChanges.length-20]?.t < 200) { // important! NaN<1  and NaN>1 are both false\r\n          // if N views changed in <= 0.2 sec\r\n          Log.exDevv(\"loop in updating View assigned to node. The cause might be missing or invalid keys on GraphElement JSX nodes.\", {change_log:this.lastViewChanges, component: this});\r\n      }\r\n      this.props.node.view = this.props.view;\r\n  }*/\n\n  render(nodeType) {\n    var _this$props$data24, _this$props$node13;\n    let styleoverride = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (Debug.lightMode && (!this.props.data || !lightModeAllowedElements.includes(this.props.data.className))) {\n      return this.props.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \" + this.props.data.name, \":\", this.props.data.className]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 38\n      }, this) : undefined;\n    }\n    if (!this.props.node) return \"Loading...\";\n    /*if (this.props.node.__raw.view !== this.props.view.id) {\r\n        this.onViewChange();\r\n        return \"Updating view...\";\r\n    }*/\n\n    if (!this.stopUpdateEvents || this.stopUpdateEvents !== this.props.view.clonedCounter) {\n      this.stopUpdateEvents = undefined;\n      if (this.doMeasurableEvent(EMeasurableEvents.onDataUpdate)) {\n        var _this$lastOnUpdateCha;\n        let thischange = {\n          t: Date.now()\n        };\n        this.lastOnUpdateChanges.push(thischange);\n        if (thischange.t - ((_this$lastOnUpdateCha = this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 20]) === null || _this$lastOnUpdateCha === void 0 ? void 0 : _this$lastOnUpdateCha.t) < 200) {\n          var _this$lastOnUpdateCha2;\n          // if N updates in <= 0.2 sec\n          this.stopUpdateEvents = this.props.view.clonedCounter;\n          Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\", {\n            change_log: this.lastOnUpdateChanges,\n            component: this,\n            timediff: thischange.t - ((_this$lastOnUpdateCha2 = this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 20]) === null || _this$lastOnUpdateCha2 === void 0 ? void 0 : _this$lastOnUpdateCha2.t)\n          });\n        }\n      }\n    }\n\n    /// set classes\n    if (this.props.node) {\n      let isSelected = this.props.node.__raw.isSelected;\n      if (isSelected[DUser.current]) {\n        // todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\n        classes.push('selected-by-me');\n        if (Object.keys(isSelected).length > 1) classes.push('selected-by-others');\n      } else if (Object.keys(isSelected).length) classes.push('selected-by-others');\n    }\n    classes.push(((_this$props$data24 = this.props.data) === null || _this$props$data24 === void 0 ? void 0 : _this$props$data24.className) || 'DVoid');\n    U.arrayMergeInPlace(classes, this.state.classes);\n    if (Array.isArray(this.props.className)) {\n      U.arrayMergeInPlace(classes, this.props.className);\n    } else if (this.props.className) {\n      classes.push(this.props.className);\n    }\n    if (Array.isArray(this.props.class)) {\n      U.arrayMergeInPlace(classes, this.props.class);\n    } else if (this.props.class) {\n      classes.push(this.props.class);\n    }\n    /// end set classes\n\n    const rnode = this.getTemplate();\n    let rawRElement = UX.ReactNodeAsElement(rnode);\n    const me = this.props.data; // this.props.model;\n\n    // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\n\n    const addprops = true;\n    let fiximport = !!this.props.node;\n    if (addprops && rawRElement && fiximport) {\n      if (windoww.debugcount && debugcount++ > windoww.debugcount) throw new Error(\"debug triggered stop\");\n      let fixdoubleroot = true;\n      // add view props to GraphElement children (any level down)\n      const subElements = {}; // this.props.getGVidMap();\n      try {\n        var _this$props$node10, _this$props$view, _this$props$node11;\n        let viewStyle = {\n          ...(this.props.style || {})\n        };\n        /*\r\n            if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n            else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n            if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n            else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n            viewStyle = {};\r\n        */\n        // viewStyle.pointerEvents = \"all\";\n        viewStyle.order = viewStyle.zIndex = (_this$props$node10 = this.props.node) === null || _this$props$node10 === void 0 ? void 0 : _this$props$node10.zIndex; // alias? this.props.node.z\n        viewStyle.display = (_this$props$view = this.props.view) === null || _this$props$view === void 0 ? void 0 : _this$props$view.display;\n        let injectProps = {};\n        if (countRenders) {\n          classes.push(this.countRenders % 2 ? \"animate-on-update-even\" : \"animate-on-update-odd\");\n          injectProps[\"data-countrenders\"] = this.countRenders++;\n        }\n        /// let excludeProps = ['data', 'node', 'view', 'children', ]\n        let p = this.props;\n        for (let k in p) {\n          if (typeof p[k] === 'object' || typeof p[k] === 'function') continue;\n          injectProps[k] = p[k];\n        }\n        // for (let k in this.props.childStyle) { delete viewStyle[k]; }\n        rawRElement = /*#__PURE__*/React.cloneElement(rawRElement,\n        // i'm cloning a raw html (like div) being root of the rendered view\n        {\n          ...injectProps,\n          ref: this.html,\n          // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (Ã¨ perchÃ¨ iniziano con <Select/> as root?)\n          id: this.props.nodeid,\n          \"data-nodeid\": this.props.nodeid,\n          \"data-dataid\": me === null || me === void 0 ? void 0 : me.id,\n          \"data-viewid\": this.props.view.id,\n          \"data-modelname\": (me === null || me === void 0 ? void 0 : me.className) || \"model-less\",\n          \"data-userselecting\": JSON.stringify(((_this$props$node11 = this.props.node) === null || _this$props$node11 === void 0 ? void 0 : _this$props$node11.isSelected) || {}),\n          \"data-nodetype\": nodeType,\n          // \"data-order\": this.props.node?.zIndex,\n          style: {\n            ...viewStyle,\n            ...styleoverride\n          },\n          className: classes.join(' '),\n          onClick: this.onClick,\n          onContextMenu: this.onContextMenu,\n          onMouseDown: this.onMouseDown,\n          onMouseUp: this.onMouseUp,\n          onMouseWheel: this.onScroll,\n          onMouseEnter: this.onEnter,\n          onMouseLeave: this.onLeave,\n          tabIndex: this.props.tabIndex || -1,\n          children: UX.recursiveMap(rawRElement /*.props.children*/, (rn, index, depthIndexes) => {\n            let injectOffset = this.props.isGraph && !depthIndexes[0] && !index && this.props.node;\n            injectOffset && console.log(\"inject offset props0:\", {\n              injectOffset\n            });\n            //console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\n            return UX.injectProp(this, rn, subElements, this.props.parentnodeid, index, depthIndexes, injectOffset);\n          })\n        });\n        fixdoubleroot = false; // need to set the props to new root in that case.\n        if (fixdoubleroot) rawRElement = rawRElement.props.children;\n        // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\n      } catch (e) {\n        var _this$props$data25, _this$props$node12;\n        rawRElement = DV.errorView(\"error while injecting props to subnodes\\n:\" + (e.message || '').split('\\n')[0], {\n          e,\n          rawRElement,\n          key: this.props.key,\n          newid: this.props.nodeid\n        }, 'Subelement props', (_this$props$data25 = this.props.data) === null || _this$props$data25 === void 0 ? void 0 : _this$props$data25.__raw, (_this$props$node12 = this.props.node) === null || _this$props$node12 === void 0 ? void 0 : _this$props$node12.__raw, this.props.view.__raw);\n        /*\r\n        rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n            DV.errorView(\"error while injecting props to subnodes\",\r\n                {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n            {});*/\n\n        // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\n      }\n      /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n      let isEqual = true;\r\n      try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n      if (isEqual) {\r\n          this.props.node.subElements = Object.keys(subElements);\r\n      }*/\n    }\n    // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n    // rnode = React.cloneElement(rnode as ReactElement, injectprops);\n\n    // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\n    if (false && ((_this$props$node13 = this.props.node) === null || _this$props$node13 === void 0 ? void 0 : _this$props$node13.__raw).father) {\n      let $containedIn = $('#' + this.props.node.father);\n      let $containerDropArea = $containedIn.find(\".VertexContainer\");\n      const droparea = $containerDropArea[0] || $containedIn[0];\n      Log.exDev(!droparea, 'invalid vertex container target', {\n        $containedIn,\n        $containerDropArea\n      });\n      if (droparea) return /*#__PURE__*/createPortal(rawRElement || rnode, droparea);\n    } /*\r\n      if (countRenders) return <>{[\r\n         rawRElement || rnode,\r\n         <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n      ]}</>/*/\n    return rawRElement || rnode;\n  }\n}, _class2.cname = void 0, _class2.all = {}, _class2.map = {}, _class2.maxid = 0, _class2.mousedownComponent = void 0, _class2)) || _class);\n\n// private\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\n\nconst GraphElementConnected = connect(GraphElementComponent.mapStateToProps, GraphElementComponent.mapDispatchToProps)(GraphElementComponent);\nexport const GraphElement = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(GraphElementConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 824,\n    columnNumber: 12\n  }, _this);\n};\n// console.info('graphElement loaded');\n_c = GraphElement;\nGraphElementComponent.cname = \"GraphElementComponent\";\nGraphElementConnected.cname = \"GraphElementConnected\";\nGraphElement.cname = \"GraphElement\";\nvar _c;\n$RefreshReg$(_c, \"GraphElement\");","map":{"version":3,"names":["React","Component","createPortal","connect","Point","Pointers","TRANSACTION","GraphDragManager","GraphPoint","Selectors","DefaultUsageDeclarations","LGraphElement","store","BEGIN","CreateElementAction","DClass","Debug","DEdge","DEnumerator","DGraph","DGraphElement","DModel","DObject","DPackage","DPointerTargetable","DUser","DV","EMeasurableEvents","END","JSXT","Keystrokes","Log","LPointerTargetable","LViewElement","MyProxyHandler","RuntimeAccessible","RuntimeAccessibleClass","SetFieldAction","SetRootFieldAction","U","UX","windoww","jsxDEV","_jsxDEV","makeEvalContext","view","state","ownProps","stateProps","_stateProps$node","component","GraphElementComponent","map","nodeid","allProps","parsedConstants","_parsedConstants","evalContext","model","data","edge","extends","node","className","undefined","props","constants","__proto__","defaultContext","setTemplateString","__raw","usageDeclarations","objectMergeInPlace","tempContext","__param","evalInContextAndScopeNew","e","invalidUsageDeclarations","ee","str","debugcount","maxRenderCounter","Number","POSITIVE_INFINITY","lightModeAllowedElements","cname","countRenders","_dec","_class","_class2","defaultShouldComponentUpdate","instance","nextProps","nextState","nextContext","shallowEqual","mapViewStuff","ret","fromD","getViewByIDOrNameD","from","views","w","requested","_ownProps$view","viewScores","getAppliedViews","id","parentViewId","element","filter","v","ex","mapLModelStuff","_ret$data","__isProxy","wrap","mapLGraphElementStuff","dGraphElementDataClass","arguments","length","isDGraph","graphid","parentnodeid","graph","new","dnode","pendingCreation","dge","_ret$data2","edgeOwnProps","edgeStateProps","startnodeid","getNodeId","start","endnodeid","end","fromPointer","propsStart","propsEnd","longestLabel","label","labels","htmlindex","_ret$data3","initialSize","mapStateToProps","dGraphDataClass","startingobj","lightMode","includes","exDev","reduxProps","key","forceupdate","mapDispatchToProps","dispatch","shouldComponentUpdate","_this$props$data","_this$props$data2","_this$props$data3","out","reason","skipDeepKeys","pointedBy","isShallowEqualWithProxies","l","name","oldProps","doMeasurableEvent","type","measurableCode","context","getContext","wrapUserFunction","console","log","evalInContextAndScope","message","select","forUser","_this$props$node","_this$props$data4","modelElement","constructor","_isMounted","html","lastViewChanges","lastOnUpdateChanges","stopUpdateEvents","maxid","all","createRef","functionsToBind","onClick","onLeave","onEnter","doContextMenu","onContextMenu","onMouseDown","onMouseUp","onKeyDown","onScroll","f","bind","classes","componentDidMount","componentWillUnmount","_context","displayError","where","_this$props$data6","_this$props$node3","errormsg","split","indexOf","jsxString","stack","stackerrorlast","icol","lastIndexOf","irow","stackerrorlinenum","row","parseInt","substring","col","linesPre","linesPost","jsxlines","culpritlinesPre","slice","culpritline","culpritlinesPost","error","caretCursor","_this$props$data5","_this$props$node2","rowPre","rowPost","jsxcode","style","fontFamily","color","children","fileName","_jsxFileName","lineNumber","columnNumber","errorView","template","e2","eDevv","getTemplate","preRenderFuncStr","preRenderFunc","obj","jsxCodeString","fromString","factory","preventDefault","stopPropagation","_state$contextMenu","current","focus","getState","contextMenu","x","clientX","_this$props$node4","display","y","clientY","_this$props$isEdgePen","_this$props$data7","isEdgePending","source","extendError","allTargetSuperClasses","canBeExtend","canExtend","setState","_this$props$data8","classname","mousedownComponent","button","clickRight","p","isGraph","isvertex","ctrlKey","startPanning","scroll","currentTarget","scrollLeft","scrollTop","scrollOrigin","nativeEvent","offsetX","offsetY","g","oldZoom","zoom","newZoom","oldOffset","offset","gscrollOrigin","add","multiply","newscrollOrigin","newOffset","subtract","stopPanning","doOnClick","escape","deselect","altKey","_this$props$data9","_this$props$data10","duplicate","delete","_this$props$data11","_this$props$data12","_this$props$data13","_this$props$data14","_this$props$data15","_this$props$data16","_this$props$data17","_this$props$data18","_this$props$data19","_this$props$data20","addChild","_state$contextMenu2","_this$props$isEdgePen2","_this$props$data21","_this$props$node5","_this$props$node6","_this$props$node7","_this$props$node8","_state$_lastSelected","edgePendingSource","isSelected","nodeIsSelectedRaw","_this$props$data22","lClass","user","toggleSelected","_lastSelected","_this$props$data23","shiftKey","_this$props$node9","allNodes","allSubNodes","nid","render","nodeType","_this$props$data24","_this$props$node13","styleoverride","clonedCounter","onDataUpdate","_this$lastOnUpdateCha","thischange","t","Date","now","push","_this$lastOnUpdateCha2","change_log","timediff","Object","keys","arrayMergeInPlace","Array","isArray","class","rnode","rawRElement","ReactNodeAsElement","me","addprops","fiximport","Error","fixdoubleroot","subElements","_this$props$node10","_this$props$view","_this$props$node11","viewStyle","order","zIndex","injectProps","k","cloneElement","ref","JSON","stringify","join","onMouseWheel","onMouseEnter","onMouseLeave","tabIndex","recursiveMap","rn","index","depthIndexes","injectOffset","injectProp","_this$props$data25","_this$props$node12","newid","father","$containedIn","$","$containerDropArea","find","droparea","GraphElementConnected","GraphElement","_this","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/graphElement/graphElement.tsx"],"sourcesContent":["import React, {Component, Dispatch, PureComponent, ReactElement, ReactNode,} from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport './graphElement.scss';\r\nimport type {EdgeOwnProps} from \"./sharedTypes/sharedTypes\";\r\nimport {\r\n    GraphSize,\r\n    LGraph, MouseUpEvent, Point,\r\n    Pointers,\r\n    Selectors as Selectors_, Size, TRANSACTION, WGraph,\r\n    GraphDragManager, GraphPoint, Selectors\r\n} from \"../../joiner\";\r\nimport {DefaultUsageDeclarations} from \"./sharedTypes/sharedTypes\";\r\n\r\nimport {EdgeStateProps, LGraphElement, store, VertexComponent,\r\n    BEGIN,\r\n    CreateElementAction, DClass, Debug,\r\n    DEdge, DEnumerator,\r\n    DGraph,\r\n    DGraphElement,\r\n    Dictionary, DModel,\r\n    DModelElement, DObject,\r\n    DocString, DPackage,\r\n    DPointerTargetable,\r\n    DState,\r\n    DUser,\r\n    DV,\r\n    DViewElement,\r\n    EMeasurableEvents, END,\r\n    GObject,\r\n    GraphElementDispatchProps,\r\n    GraphElementOwnProps,\r\n    GraphElementReduxStateProps,\r\n    GraphElementStatee,\r\n    InOutParam,\r\n    JSXT, Keystrokes,\r\n    LClass,\r\n    LModelElement,\r\n    Log,\r\n    LPointerTargetable,\r\n    LViewElement,\r\n    MyProxyHandler,\r\n    Overlap,\r\n    Pointer,\r\n    RuntimeAccessible,\r\n    RuntimeAccessibleClass,\r\n    SetFieldAction,\r\n    SetRootFieldAction,\r\n    U,\r\n    UX,\r\n    windoww,\r\n} from \"../../joiner\";\r\n\r\n// const Selectors: typeof Selectors_ = windoww.Selectors;\r\n\r\nexport function makeEvalContext(view: LViewElement, state: DState, ownProps: GraphElementOwnProps, stateProps: GraphElementReduxStateProps): GObject {\r\n    let component = GraphElementComponent.map[ownProps.nodeid as Pointer<DGraphElement>];\r\n    let allProps = {...ownProps, ...stateProps};\r\n    let parsedConstants = stateProps.view._parsedConstants;\r\n    let evalContext: GObject = {\r\n        model: stateProps.data,\r\n        ...ownProps,\r\n        ...stateProps,\r\n        edge: (RuntimeAccessibleClass.extends(stateProps.node?.className, \"DVoidEdge\") ? stateProps.node : undefined),\r\n        state,\r\n        ownProps,\r\n        stateProps,\r\n        props: allProps,\r\n        component,\r\n        constants: parsedConstants,\r\n        // getSize:vcomponent?.getSize, setSize: vcomponent?.setSize,\r\n        ...parsedConstants,\r\n        // ...stateProps.usageDeclarations, NOT because they are not evaluated yet. i need a basic eval context to evaluate them\r\n    };\r\n    evalContext.__proto__ = windoww.defaultContext;\r\n    return evalContext;\r\n}\r\n\r\nfunction setTemplateString(stateProps: InOutParam<GraphElementReduxStateProps>, ownProps: Readonly<GraphElementOwnProps>, state: DState): void {\r\n    //if (!jsxString) { this.setState({template: this.getDefaultTemplate()}); return; }\r\n    // sintassi: '||' + anything + (opzionale: '|' + anything)*N_Volte + '||' + jsx oppure direttamente: jsx\r\n    const view: LViewElement = stateProps.view; //data._transient.currentView;\r\n    // eslint-disable-next-line no-mixed-operators\r\n    const evalContext = makeEvalContext(view, state, ownProps, stateProps);\r\n    // Log.exDev(!evalContext.data, \"missing data\", {evalContext, ownProps, stateProps});\r\n\r\n    // const evalContextOld = U.evalInContext(this, constants);\r\n    // this.setState({evalContext});\r\n\r\n\r\n    // compute usageDeclarations\r\n    if (!stateProps.view.__raw.usageDeclarations) {\r\n        U.objectMergeInPlace(evalContext, stateProps.usageDeclarations = {data: stateProps.data, view: stateProps.view, node: stateProps.node});\r\n    } else try {\r\n        // let context = { ...ret.evalContext, state, ret, ownProps, props: ret};\r\n        // eval usageDeclarations\r\n        // this is not really evaluated in provided context, as it does not find view, data in scope\r\n        // and if i open console data becomes the window.data of the one selected in console.\r\n\r\n        // scrapped function mode, doesn't look like possible to execute a function in a different scope after his definition,\r\n        // unless it becomes a string and is redefined through eval\r\n        /// let usageDeclarations: ((g:DefaultUsageDeclarations)=>DefaultUsageDeclarations) = U.evalInContextAndScope(ret.view.usageDeclarations, ret.evalContext, ret.evalContext);\r\n        // usageDeclarations(ret.usageDeclarations);\r\n        // ret.evalContext.usageDeclarations = ret.usageDeclarations;\r\n        let tempContext: GObject = {__param: stateProps.usageDeclarations};\r\n        tempContext.__proto__ = evalContext;\r\n        U.evalInContextAndScopeNew(\"(\"+stateProps.view.usageDeclarations+\")(this.__param)\", tempContext, true, false);\r\n        U.objectMergeInPlace(evalContext, stateProps.usageDeclarations);\r\n        // ret.evalContext.props = ret; mo more needed since UD doesn't update props anymore // hotfix to update context props after usageDeclaration mapping\r\n        // console.log(\"view compute usageDeclarations SUCCESS 1\",\r\n        //     {UD_obj_result:stateProps.usageDeclarations, UD_view: stateProps.view.usageDeclarations, context:evalContext, stateProps, ownProps});\r\n    } catch (e: any) {\r\n        stateProps.invalidUsageDeclarations = e;\r\n        Log.ee(\"Invalid usage declarations\", {e, str: stateProps.view.usageDeclarations, view:stateProps.view, data: ownProps.data, stateProps});\r\n        U.objectMergeInPlace(evalContext, stateProps.usageDeclarations = {data: stateProps.data, view: stateProps.view, node: stateProps.node, invalidUsageDeclarations:true});\r\n    }\r\n    stateProps.evalContext = evalContext;\r\n}\r\n\r\nlet debugcount = 0;\r\nlet maxRenderCounter = Number.POSITIVE_INFINITY;\r\nexport const lightModeAllowedElements = [DModel.cname, DPackage.cname, DClass.cname, DEnumerator.cname, DObject.cname];\r\n\r\nconst countRenders = true;\r\n@RuntimeAccessible('GraphElementComponent')\r\nexport class GraphElementComponent<AllProps extends AllPropss = AllPropss, GraphElementState extends GraphElementStatee = GraphElementStatee>\r\n    extends Component<AllProps, GraphElementState>{\r\n    public static cname: string;\r\n    static all: Dictionary<number, GraphElementComponent> = {};\r\n    public static map: Dictionary<Pointer<DGraphElement>, GraphElementComponent> = {};\r\n    static maxid: number = 0;\r\n    id: number;\r\n\r\n    public static defaultShouldComponentUpdate<AllProps extends GObject, State extends GObject, Context extends any>\r\n    (instance: React.Component, nextProps: Readonly<AllProps>, nextState: Readonly<State>, nextContext: Context) {\r\n        return (\r\n            !U.shallowEqual(instance.props, nextProps) ||\r\n            !U.shallowEqual(instance.state, nextState)\r\n        );\r\n    }\r\n\r\n    static mapViewStuff(state: DState, ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        // let dnode: DGraphElement | undefined = ownProps?.nodeid && DPointerTargetable.from(ownProps.nodeid, state) as any;\r\n        if (ownProps.view) {\r\n            ret.view = LPointerTargetable.fromD(Selectors.getViewByIDOrNameD(Pointers.from(ownProps.view), state) as DViewElement);\r\n            if (ret.view) ret.views = [ret.view];\r\n            Log.w(!ret.view, \"Requested view \"+ownProps.view+\" not found. Another view got assigned.\", {requested: ownProps.view, props: ownProps, state: ret});\r\n        }\r\n        if (!ret.view) {\r\n            const viewScores = Selectors.getAppliedViews(ret.data,\r\n                (ownProps.view as LViewElement)?.id || (ownProps.view as string) || null,\r\n                ownProps.parentViewId || null);\r\n            ret.views = viewScores.map<LViewElement>(e => LViewElement.fromD(e.element)).filter(v => !!v);\r\n            // console.log(\"debug\",  {...this.props, data: this.props.data?.id, view: this.props.view?.id, v0: this.props.views, views: this.props.views?.map( v => v?.id )})\r\n            ret.view = ret.views[0];\r\n            Log.ex(!ret.view, \"Could not find any view appliable to element.\", {data:ret.data, props: ownProps, state: ret});\r\n            (ret as any).viewScores = viewScores; // debug only\r\n        }\r\n\r\n        /*        if (ownProps.view) {\r\n                    ret.view = DPointerTargetable.from(ownProps.view, state);\r\n                } else {\r\n                    ret.view = ret.views[0];\r\n                }*/\r\n    }\r\n\r\n    static mapLModelStuff(state: DState, ownProps: GraphElementOwnProps, ret: GraphElementReduxStateProps): void {\r\n        // NB: Edge constructor might have set it from props.start, so keep the check before overwriting.\r\n        if (!ret.data?.__isProxy) ret.data = LPointerTargetable.wrap(ownProps.data);\r\n        /*\r\n        const meid: string = (typeof ownProps.data === 'string' ? ownProps.data as string : (ownProps.data as any as DModelElement)?.id) as string;\r\n        // Log.exDev(!meid, \"model element id not found in GE.mapstatetoprops\", {meid, ret, ownProps, state});\r\n        ret.data = MyProxyHandler.wrap(meid, state);\r\n        // Log.ex(!ret.data, \"can't find model data:\", {meid, state, ownpropsdata:ownProps.data, ownProps});\r\n        */\r\n    }\r\n\r\n    static mapLGraphElementStuff(state: DState,\r\n                                 ownProps: GraphElementOwnProps,\r\n                                 ret: GraphElementReduxStateProps,\r\n                                 dGraphElementDataClass: typeof DGraphElement = DGraphElement,\r\n                                 isDGraph?: DGraph): void {\r\n        let nodeid: string = ownProps.nodeid as string;\r\n        let graphid: string = isDGraph ? isDGraph.id : ownProps.graphid as string;\r\n        let parentnodeid: string = ownProps.parentnodeid as string;\r\n        // let data: Pointer<DModelElement, 0, 1, LModelElement> = ownProps.data || null;\r\n        // Log.exDev(!nodeid || !graphid, 'node id injection failed', {ownProps, data: ret.data, name:(ret.data as any)?.name || (ret.data as any)?.className}); /*\r\n        /*if (!nodeid) {\r\n            nodeid = 'nodeof_' + stateProps.data.id + (stateProps.view.storeSize ? '^' + stateProps.view.id : '') + '^1';\r\n            stateProps.nodeid = U.increaseEndingNumber(nodeid, false, false, id => !DPointerTargetable.from(id, state));\r\n            todo: quando il componente si aggiorna questo viene perso, come posso rendere permanente un settaggio di reduxstate in mapstatetoprops? o devo metterlo nello stato normale?\r\n        }*/\r\n\r\n        let graph: DGraph = DPointerTargetable.from(graphid, state) as DGraphElement as any; // se non c'Ã¨ un grafo lo creo\r\n        if (!graph) {\r\n            // Log.exDev(!dataid, 'attempted to make a Graph element without model', {dataid, ownProps, ret, thiss:this});\r\n            if (ret.data) CreateElementAction.new(DGraph.new(0, ret.data.id, parentnodeid, graphid, graphid)); }\r\n        /*else {\r\n            graph = MyProxyHandler.wrap(graph);\r\n            Log.exDev(graph.__raw.className !== \"DGraph\", 'graph class is wrong', {graph: ret.graph, ownProps});\r\n        }*/\r\n        let dnode: DGraphElement = DPointerTargetable.from(nodeid, state) as DGraphElement;\r\n\r\n        // console.log('dragx GE mapstate addGEStuff', {dGraphElementDataClass, created: new dGraphElementDataClass(false, nodeid, graphid)});\r\n        if (!dnode && !DPointerTargetable.pendingCreation[nodeid]) {/*\r\n            console.log(\"making node:\", {dGraphElementDataClass, nodeid, parentnodeid, graphid, dataid, ownProps, ret,\r\n                pendings: {...DPointerTargetable.pendingCreation}, pending:DPointerTargetable.pendingCreation[nodeid]});*/\r\n            // so this is called once, but createaction is triggered twice only for edgepoints? it works if i create it through console.\r\n            let dge;\r\n            /*\r\n            if (dGraphElementDataClass === DEdgePoint) { // made it same as dvertex\r\n                let initialSize = ownProps.initialSize;\r\n                dge = DEdgePoint.new(ownProps.htmlindex as number, dataid, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            } else*/\r\n            if (dGraphElementDataClass === DEdge) {\r\n                // set start and end from ownprops;\r\n                let edgeOwnProps: EdgeOwnProps = ownProps as EdgeOwnProps;\r\n                let edgeStateProps: EdgeStateProps = ret as EdgeStateProps;\r\n                let startnodeid = LGraphElement.getNodeId(edgeOwnProps.start);\r\n                let endnodeid = LGraphElement.getNodeId(edgeOwnProps.end);\r\n                if (!startnodeid) {\r\n                    startnodeid = LGraphElement.getNodeId(ret.data);\r\n                }\r\n                edgeStateProps.start = LPointerTargetable.fromPointer(startnodeid)\r\n                edgeStateProps.end = LPointerTargetable.fromPointer(endnodeid);\r\n                Log.e(!startnodeid, \"Cannot create an edge without start node\", {startnodeid, data:ret.data, propsStart:edgeOwnProps.start});\r\n                Log.e(!endnodeid, \"Cannot create an edge without end node (yet)\", {endnodeid, data:ret.data, propsEnd:edgeOwnProps.end});\r\n                if (!startnodeid || !endnodeid) return;\r\n                let longestLabel = edgeOwnProps.label;\r\n                let labels: DEdge[\"labels\"] = edgeOwnProps.labels || [];\r\n                dge = DEdge.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, startnodeid, endnodeid, longestLabel, labels);\r\n                edgeStateProps.node = edgeStateProps.edge = MyProxyHandler.wrap(dge);\r\n            }\r\n            else {\r\n                let initialSize = ownProps.initialSize;\r\n                dge = dGraphElementDataClass.new(ownProps.htmlindex as number, ret.data?.id, parentnodeid, graphid, nodeid, initialSize);\r\n                ret.node =  MyProxyHandler.wrap(dge);\r\n            }\r\n            // console.log(\"map ge2\", {nodeid: nodeid+'', dge: {...dge}, dgeid: dge.id});\r\n        }\r\n        else { ret.node = MyProxyHandler.wrap(dnode); }\r\n    }\r\n\r\n    ////// mapper func\r\n    static mapStateToProps(state: DState, ownProps: GraphElementOwnProps, dGraphDataClass: (typeof DGraphElement | typeof DEdge) = DGraphElement, startingobj?: GObject): GraphElementReduxStateProps {\r\n        // console.log('dragx GE mapstate', {dGraphDataClass});\r\n        let ret: GraphElementReduxStateProps = (startingobj || {}) as GraphElementReduxStateProps; // NB: cannot use a constructor, must be pojo\r\n        GraphElementComponent.mapLModelStuff(state, ownProps, ret);\r\n        if (Debug.lightMode && (!ret.data || !(lightModeAllowedElements.includes(ret.data.className)))){\r\n            return ret;\r\n        }\r\n        // console.log(\"map ge\", {ownProps, ret, state});\r\n        GraphElementComponent.mapLGraphElementStuff(state, ownProps, ret, dGraphDataClass);\r\n        GraphElementComponent.mapViewStuff(state, ret, ownProps);\r\n        Log.exDev(!ret.view, 'failed to assign view:', {state, ownProps, reduxProps: ret});\r\n        ret.usageDeclarations = new DefaultUsageDeclarations(ret, ownProps); //edited in-place through parameter in evalContext\r\n        // @ts-ignore\r\n        ret.key = ret.key || ownProps.key;\r\n        // @ts-ignore\r\n        ret.forceupdate = state.forceupdate;\r\n\r\n        // NB: after this function, ret (reduxstate) should not update shallow keys or ownProps, ret, usageDeclarations (because they are spread in ctx root)\r\n        // any further update will not be present in eval context.props unless merged like U.objectMergeInPlace(ret.evalContext.props, ...); (and same with ctx.stateProps)\r\n        setTemplateString(ret, ownProps, state); // todo: this is heavy, should be moved somewhere where it's executed once unless view changes (pre-render with if?)\r\n\r\n        // console.log(\"view compute usageDeclarations\", {ret, ownProps, ud:ret.view.usageDeclarations, context:ret.evalContext});\r\n        if (ret.view.usageDeclarations) {\r\n\r\n        }\r\n\r\n        // Log.l((ret.data as any)?.name === \"concept 1\", \"mapstatetoprops concept 1\", {newnode: ret.node});\r\n        return ret;\r\n    }\r\n\r\n    static mapDispatchToProps(dispatch: Dispatch<any>): GraphElementDispatchProps {\r\n        const ret: GraphElementDispatchProps = {} as any;\r\n        return ret;\r\n    }\r\n\r\n\r\n    countRenders: number;\r\n    _isMounted: boolean;\r\n    html: React.RefObject<HTMLElement | undefined>;\r\n    lastViewChanges: {t: number, vid: Pointer<DViewElement>, v: LViewElement, key?: string}[];\r\n    lastOnUpdateChanges: {t: number}[];\r\n    stopUpdateEvents?: number; // undefined or view.clonedCounter;\r\n\r\n    // todo: can be improved by import memoize from \"memoize-one\"; it is high-order function that memorize the result if params are the same without re-executing it (must not have side effects)\r\n    //  i could use memoization to parse the jsx and to execute the user-defined pre-render function\r\n// le istanze obj di m1 non vengono agiornate se cambio nome alla classe m2\r\n    public shouldComponentUpdate(nextProps: Readonly<AllProps>, nextState: Readonly<GraphElementState>, nextContext: any): boolean {\r\n        // return GraphElementComponent.defaultShouldComponentUpdate(this, nextProps, nextState, nextContext);\r\n        let out = {reason:undefined};\r\n        let skipDeepKeys = {pointedBy:true};\r\n        // let skipPropKeys = {...skipDeepKeys, usageDeclarations: true, node:true, data:true, initialSize: true};\r\n        let ret = false; // !U.isShallowEqualWithProxies(this.props, nextProps, 0, 1, skipPropKeys, out);\r\n        // todo: verify if this update work\r\n        // if node and data in props must be ignored and not checked for changes. but they are checked if present in usageDeclarations\r\n        if (!ret) ret = !U.isShallowEqualWithProxies(this.props.usageDeclarations, nextProps.usageDeclarations, 0, 1, skipDeepKeys, out);\r\n        Log.l(ret, \"ShouldComponentUpdate \" + this.props.data?.name + \" UPDATED\", {ret, reason: out.reason, oldProps:this.props, nextProps});\r\n        Log.l(this.props.data?.name === \"concept 1_1\",\r\n            \"ShouldComponentUpdate \" +this.props.data?.name + (ret ? \" UPDATED\" : \" REJECTED\"),\r\n            {ret, reason: out.reason, oldProps:this.props, nextProps}); //  oldnode:this.props.node, newnode: nextProps.node,\r\n        return ret;\r\n        // apparently node changes are not working? also check docklayout shouldupdate\r\n    }\r\n\r\n    protected doMeasurableEvent(type: EMeasurableEvents): boolean {\r\n        if (Debug.lightMode) return false;\r\n        let measurableCode: string = null as any;\r\n        let context: GObject = null as any;\r\n        try{\r\n            measurableCode = (this.props.view)[type];\r\n            if (!measurableCode) return false;\r\n            context = this.getContext();\r\n            measurableCode = U.wrapUserFunction(measurableCode);\r\n            console.log(\"measurable execute\", {type, measurableCode});\r\n            // eval measurable\r\n            U.evalInContextAndScope<GObject>(measurableCode, context, context);\r\n        }\r\n        catch (e: any) { Log.ee('Error in \"'+type+'\" ' + e.message, {e, measurableCode, context}); }\r\n        // it has executed at least partially.\r\n        // i just need to know if he had the chance to do side-effects and the answer is yes regardless of exceptions\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    select(forUser?: Pointer<DUser>): void {\r\n        // if (forUser === DUser.current && this.html.current) this.html.current.focus();\r\n        BEGIN();\r\n        this.props.node?.select(forUser);\r\n        SetRootFieldAction.new('_lastSelected', {\r\n            node: this.props.nodeid,\r\n            view: this.props.view.id,\r\n            modelElement: this.props.data?.id\r\n        });/*\r\n        // ? why this?\r\n        const id = this.props.data?.id;\r\n        if (id) {\r\n            //selected[forUser] = id;\r\n            SetRootFieldAction.new('selected', id, '', true);\r\n        }*/\r\n\r\n        // SetRootFieldAction.new(`selected.${DUser.current}`, nodeid, '', true);\r\n        END();\r\n    }\r\n\r\n    constructor(props: AllProps, context: any) {\r\n        super(props, context);\r\n        this.lastViewChanges = [];\r\n        this.lastOnUpdateChanges = []\r\n        this.stopUpdateEvents = undefined;\r\n        this._isMounted = false;\r\n        this.countRenders = 0;\r\n        this.id = GraphElementComponent.maxid++;\r\n        GraphElementComponent.all[this.id] = this;\r\n        GraphElementComponent.map[props.nodeid as Pointer<DGraphElement>] = this;\r\n        this.html = React.createRef();\r\n        let functionsToBind = [this.onClick,\r\n            this.onLeave, this.onEnter,\r\n            this.doContextMenu, this.onContextMenu,\r\n            this.onMouseDown, this.onMouseUp, this.onKeyDown, this.onScroll];/*\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onLeave = this.onLeave.bind(this);\r\n        this.onContextMenu = this.onContextMenu.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.select = this.select.bind(this);*/\r\n        for (let f of functionsToBind) (this as any)[f.name] = f.bind(this);\r\n        // @ts-ignore\r\n        this.state = {classes: [] as string[]};\r\n    }\r\n\r\n    // constants: evalutate solo durante il primo render, puÃ² essere una funzione con effetti collaterali sul componente,\r\n    // in tal caso la si esegue e si prende il valore di ritorno.\r\n    // preRenderFunc: funzione evalutata ed eseguita sempre prima del render, ha senso solo per generare effetti collaterali sulle \"costanti\".\r\n    // jsxString: funzione evalutata una sola volta durante il primo render ed eseguita ad ogni update dei dati.\r\n\r\n\r\n\r\n    componentDidMount(): void {\r\n        // after first render\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        // todo: devo fare in modo che il nodo venga cancellato solo se sto modificando la vista in modo che questo vertice non esista piÃ¹.\r\n        //  e non venga cancellato se il componente viene smontato perchÃ¨ ho solo cambiato vista\r\n        //  LOW PRIORITY perchÃ¨ funziona anche senza, pur sprecando memoria che potrebbe essere liberata.\r\n        // if (view_is_still_active_but_got_modified_and_vertex_is_deleted) new DeleteElementAction(this.getId());\r\n    }\r\n    /*\r\n        componentDidUpdate(oldProps: Readonly<AllProps {/*\r\n            const newProps = this.props\r\n            if (oldProps.view !== newProps.view) { this.setTemplateString(newProps.view); }\r\n    }*/\r\n\r\n    protected getContext(): GObject{\r\n        let context: GObject = {component:this, __proto__:this.props.evalContext};\r\n        context._context = context;\r\n        this.context = context;\r\n        return context;\r\n    }\r\n\r\n    protected displayError(e: Error, where: string): React.ReactNode {\r\n        const view: LViewElement = this.props.view; //data._transient.currentView;\r\n        let errormsg = (where === \"preRenderFunc\" ? \"Pre-Render \" : \"\") +(e.message||\"\\n\").split(\"\\n\")[0];\r\n        if (e.message.indexOf(\"Unexpected token .\") >= 0 || view.jsxString.indexOf('?.') >= 0 || view.jsxString.indexOf('??') >= 0) {\r\n            errormsg += '\\n\\nReminder: nullish operators \".?\" and \"??\" are not supported.'; }\r\n        else if (view.jsxString.indexOf('?.') >= 0) { errormsg += '\\n\\nReminder: ?. operator and empty tags <></> are not supported.'; }\r\n        else if (e.message.indexOf(\"Unexpected token '<'\") !== -1) { errormsg += '\\n\\nDid you forgot to close a html </tag>?'; }\r\n        try {\r\n            let ee = e.stack || \"\";\r\n            let stackerrorlast = ee.split(\"\\n\")[1];\r\n\r\n            let icol = stackerrorlast.lastIndexOf(\":\");\r\n            let jsxString = view.jsxString;\r\n            // let col = stackerrorlast.substring(icol+1);\r\n            let irow = stackerrorlast.lastIndexOf(\":\", icol-1);\r\n            let stackerrorlinenum: GObject = {\r\n                row: Number.parseInt(stackerrorlast.substring(irow+1, icol)),\r\n                col: Number.parseInt(stackerrorlast.substring(icol+1)) };\r\n            let linesPre = 1;\r\n            let linesPost = 1;\r\n            let jsxlines = jsxString.split(\"\\n\");\r\n            let culpritlinesPre: string[] = jsxlines.slice(stackerrorlinenum.row-linesPre-1, stackerrorlinenum.row - 1);\r\n            let culpritline: string = jsxlines[stackerrorlinenum.row - 1]; // stack start counting lines from 1\r\n            let culpritlinesPost: string[] = jsxlines.slice(stackerrorlinenum.row, stackerrorlinenum.row + linesPost);\r\n            console.error(\"errr\", {e, jsxlines, culpritlinesPre, culpritline, culpritlinesPost, stackerrorlinenum, icol, irow, stackerrorlast});\r\n\r\n            let caretCursor = \"â\" // âµ ê¯ ð¸ á\r\n            if (culpritline && stackerrorlinenum.col < culpritline.length && stackerrorlast.indexOf(\"main.chunk.js\") === -1) {\r\n                let rowPre = culpritline.substring(0, stackerrorlinenum.col);\r\n                let rowPost = culpritline.substring(stackerrorlinenum.col);\r\n                let jsxcode =\r\n                    <div style={{fontFamily: \"monospaced sans-serif\", color:\"#444\"}}>\r\n                        { culpritlinesPre.map(l => <div>{l}</div>) }\r\n                        <div>{rowPre} <b style={{color:\"red\"}}> {caretCursor} </b> {rowPost}</div>\r\n                        { culpritlinesPost.map(l => <div>{l}</div>) }\r\n                    </div>;\r\n                errormsg += \" @line \" + stackerrorlinenum.row + \":\" + stackerrorlinenum.col;\r\n                return DV.errorView(\r\n                    <div>{errormsg}{jsxcode}</div>, {where:\"in \"+where+\"()\", e, template: this.props.view.jsxString, view: this.props.view},\r\n                    where, this.props.data?.__raw, this.props.node?.__raw, view.__raw\r\n                    );\r\n            } else {\r\n                // it means it is likely accessing a minified.js src code, sending generic error without source mapping\r\n            }\r\n        } catch(e2) {\r\n            Log.eDevv(\"internal error in error view\", {e, e2, where} );\r\n        }\r\n        return DV.errorView(<div>{errormsg}</div>, {where:\"in \"+where+\"()\", e, template: this.props.view.jsxString, view: this.props.view},\r\n            where, this.props.data?.__raw, this.props.node?.__raw, view.__raw);\r\n    }\r\n\r\n    private getTemplate(): ReactNode {\r\n        /*if (!this.state.template) {\r\n            this.setTemplateString('{c1: 118}', '()=>{this.setState({c1: this.state.c1+1})}',\r\n                '<div><input value=\"{name}\" onInput=\"{setName}\"></input><p>c1:{this.state.c1}</p><Attribute prop1={daa} prop2={1 + 1.5} stringPropdaa=\\\"daa\\\" /><ul>{colors.map( color => <li>color: {color}</li>)}</ul></div>');\r\n        }*/\r\n        // console.log('getTemplate:', {props: this.props, template: this.props.template, ctx: this.props.evalContext});\r\n\r\n        // Log.exDev(debug && maxRenderCounter-- < 0, \"loop involving render\");\r\n        if (this.props.invalidUsageDeclarations) {\r\n            return this.displayError(this.props.invalidUsageDeclarations, \"Usage Declaration\");\r\n        }\r\n        let context: GObject = this.getContext();\r\n        // abababababab\r\n        // todo: invece di fare un mapping ricorsivo dei figli per inserirgli delle prop, forse posso farlo passando una mia factory che wrappa React.createElement\r\n\r\n        try {\r\n                let preRenderFuncStr: string | undefined = this.props.view.preRenderFunc;\r\n            if (preRenderFuncStr) {\r\n                // eval prerender\r\n                let obj: GObject = {};\r\n                let tempContext: GObject = {__param: obj};\r\n                tempContext.__proto__ = context;\r\n                U.evalInContextAndScopeNew(\"(\"+preRenderFuncStr+\")(this.__param)\", tempContext, true, false);\r\n                U.objectMergeInPlace(context, obj);\r\n            }\r\n        }\r\n        catch(e: any) { return this.displayError(e, \"Pre-Render\");  }\r\n\r\n        let ret;\r\n        // eval template\r\n        let jsxCodeString: DocString<ReactNode>;\r\n\r\n        try { jsxCodeString = JSXT.fromString(this.props.view.jsxString, {factory: 'React.createElement'}); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Syntax\"); }\r\n\r\n        try { ret = U.evalInContextAndScope<() => ReactNode>('(()=>{ return ' + jsxCodeString + '})()', context); }\r\n        catch (e: any) { return this.displayError(e, \"JSX Semantic\"); }\r\n        return ret;\r\n    }\r\n\r\n    onContextMenu(e: React.MouseEvent<Element>) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // NOT executed here, but on mousedown because of IOS compatibility\r\n    }\r\n\r\n    doContextMenu(e: React.MouseEvent<Element>) {\r\n        BEGIN()\r\n        this.props.node.select();\r\n        if (this.html.current) this.html.current.focus();\r\n        let state: DState = store.getState();\r\n        if (state.contextMenu?.x !== e.clientX) {\r\n            SetRootFieldAction.new(\"contextMenu\", {\r\n                display: true,\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                nodeid: this.props.node?.id\r\n            });\r\n        }\r\n        END();\r\n    }\r\n\r\n    onEnter(e: React.MouseEvent<Element>) { // instead of doing it here, might set this class on render, and trigger it visually operative with :hover selector css\r\n        const isEdgePending = this.props.isEdgePending?.source;\r\n        if (!isEdgePending || this.props.data?.className !== \"DClass\") return;\r\n        const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n        const canBeExtend = isEdgePending.canExtend(this.props.data as any as LClass, extendError);\r\n\r\n        if (canBeExtend) this.setState({classes:[...this.state.classes, \"class-can-be-extended\"]});\r\n        else this.setState({classes:[...this.state.classes, \"class-cannot-be-extended\"]});\r\n    }\r\n    onLeave(e: React.MouseEvent<Element>) {\r\n        if (this.props.data?.className !== \"DClass\") return;\r\n        this.setState({classes: this.state.classes.filter((classname) => {\r\n            return classname !== \"class-can-be-extended\" && classname !== \"class-cannot-be-extended\"\r\n        })});\r\n    }\r\n\r\n    static mousedownComponent: GraphElementComponent | undefined;\r\n    onMouseDown(e: React.MouseEvent): void {\r\n        e.stopPropagation();\r\n        GraphElementComponent.mousedownComponent = this;\r\n        TRANSACTION(()=>{\r\n            if (e.button === Keystrokes.clickRight) { this.doContextMenu(e); }\r\n            let p: GObject = this.props;\r\n            if (p.isGraph && !p.isvertex || p.isGraph && p.isvertex && e.ctrlKey) GraphDragManager.startPanning(e, this.props.node as LGraph);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onScroll(e: React.MouseEvent): void {\r\n        console.log(\"onScroll\");\r\n        let scroll: Point = new Point(e.currentTarget.scrollLeft, e.currentTarget.scrollTop);\r\n        let scrollOrigin: Point = new Point(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\r\n        let g: LGraph = this.props.node.graph;\r\n        let oldZoom: GraphPoint = g.zoom;\r\n        let newZoom: GraphPoint = new GraphPoint(oldZoom.x+0.1, oldZoom.y+0.1);\r\n        let oldOffset: GraphPoint = g.offset;\r\n        let gscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(oldZoom, true), true);\r\n        let newscrollOrigin: GraphPoint = oldOffset.add(scrollOrigin.multiply(newZoom, true), true);\r\n        let newOffset: GraphPoint = oldOffset.add( gscrollOrigin.subtract(newscrollOrigin, true), true);\r\n        TRANSACTION(()=>{\r\n            g.offset = newOffset;\r\n            g.zoom = newZoom;\r\n        })\r\n        e.stopPropagation();\r\n    }\r\n    onMouseUp(e: React.MouseEvent): void {\r\n        e.stopPropagation();\r\n        TRANSACTION(()=>{\r\n            GraphDragManager.stopPanning(e);\r\n            if (GraphElementComponent.mousedownComponent !== this) { return; }\r\n            this.doOnClick(e);\r\n        })\r\n    }\r\n    onKeyDown(e: React.KeyboardEvent){\r\n        if (e.key === Keystrokes.escape) {\r\n            this.props.node.deselect();\r\n            if (this.props.isEdgePending) {\r\n                // this.stopPendingEdge(); todo\r\n                return;\r\n            }\r\n        }\r\n        if (e.ctrlKey || e.altKey) {\r\n            // todo: make them a switch\r\n            if (e.key === \"d\") this.props.data?.duplicate(); else\r\n            if (e.key === \"r\") this.props.data?.delete();\r\n        }\r\n        if (e.altKey) {\r\n            // if (e.key === Keystrokes.escape) this.props.node.toggleMinimize();\r\n            if (e.key === \"a\") this.props.data?.addChild(\"auto\"); else // add class if on package, literal if on enum...\r\n            if (e.key === \"r\") this.props.data?.addChild(\"reference\"); else\r\n            if (e.key === \"o\") this.props.data?.addChild(\"operation\") || this.props.data?.addChild(\"object\"); else\r\n            if (e.key === \"l\") this.props.data?.addChild(\"literal\"); else\r\n            if (e.key === \"p\") this.props.data?.addChild(\"package\") || this.props.data?.addChild(\"parameter\"); else\r\n            if (e.key === \"c\") this.props.data?.addChild(\"class\"); else\r\n            if (e.key === \"e\") this.props.data?.addChild(\"enumerator\"); else\r\n            if (e.key === \"q\") this.props.data?.addChild(\"annotation\"); else\r\n            ;\r\n        }\r\n    }\r\n\r\n    private doOnClick(e: React.MouseEvent): void {\r\n        // (e.target as any).focus();\r\n        e.stopPropagation();\r\n        let state: DState = store.getState();\r\n        if (e.button !== Keystrokes.clickRight && state.contextMenu?.display) SetRootFieldAction.new(\"contextMenu\", {display: false, x: 0, y: 0}); // todo: need to move it on document or <App>\r\n        const edgePendingSource = this.props.isEdgePending?.source;\r\n        console.log('mousedown select() check PRE:', {name: this.props.data?.name, isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n\r\n        if (edgePendingSource) {\r\n            if (this.props.data?.className !== \"DClass\") return;\r\n            // const user = this.props.isEdgePending.user;\r\n            const extendError: {reason: string, allTargetSuperClasses: LClass[]} = {reason: '', allTargetSuperClasses: []}\r\n            const canBeExtend = this.props.data && edgePendingSource.canExtend(this.props.data as LClass, extendError);\r\n            if (canBeExtend && this.props.data) {\r\n                const lClass: LClass = LPointerTargetable.from(this.props.data.id);\r\n                // SetFieldAction.new(lClass.id, \"extendedBy\", source.id, \"\", true); // todo: this should throw a error for wrong type.\r\n                // todo: use source.addExtends(lClass); or something (source is LClass)\r\n                SetFieldAction.new(lClass.id, \"extendedBy\", edgePendingSource.id, \"+=\", true);\r\n                SetFieldAction.new(edgePendingSource.id, \"extends\", lClass.id, \"+=\", true);\r\n            }\r\n            SetRootFieldAction.new('isEdgePending', { user: '',  source: '' });\r\n            return;\r\n        }\r\n        console.log('mousedown select() check:', {isSelected: this.props.node.isSelected(), 'nodeIsSelectedMapProxy': this.props.node?.isSelected, nodeIsSelectedRaw:this.props.node?.__raw.isSelected});\r\n        BEGIN();\r\n        windoww.node = this.props.node;\r\n        this.props.node.toggleSelected(DUser.current);\r\n        if (state._lastSelected?.node !== this.props.nodeid) {\r\n            SetRootFieldAction.new('_lastSelected', {\r\n                node: this.props.nodeid,\r\n                view: this.props.view.id,\r\n                modelElement: this.props.data?.id\r\n            });\r\n        }\r\n\r\n        if (e.shiftKey || e.ctrlKey) { }\r\n        else {\r\n            let allNodes: LGraphElement[] | undefined = this.props.node?.graph.allSubNodes;\r\n            let nid = this.props.node.id;\r\n            if (allNodes) for (let node of allNodes) if (node.id !== nid) node.deselect(DUser.current);\r\n        }\r\n        END();\r\n    }\r\n\r\n    onClick(e: React.MouseEvent): void {\r\n\r\n    }\r\n    /*\r\n    onViewChangeOld(): void {\r\n        let thischange = {t: Date.now(), vid: this.props.node.__raw.view, newvid:this.props.view.id, v: this.props.node.view, newv: this.props.view, key:this.props.key};\r\n        this.lastViewChanges.push(thischange);\r\n        // nan -> false <200 = true\r\n        if (thischange.t - this.lastViewChanges[this.lastViewChanges.length-20]?.t < 200) { // important! NaN<1  and NaN>1 are both false\r\n            // if N views changed in <= 0.2 sec\r\n            Log.exDevv(\"loop in updating View assigned to node. The cause might be missing or invalid keys on GraphElement JSX nodes.\", {change_log:this.lastViewChanges, component: this});\r\n        }\r\n        this.props.node.view = this.props.view;\r\n    }*/\r\n\r\n    public render(nodeType?:string, styleoverride:React.CSSProperties={}, classes: string[]=[]): ReactNode {\r\n        if (Debug.lightMode && (!this.props.data || !(lightModeAllowedElements.includes(this.props.data.className)))){\r\n            return this.props.data ? <div>{\" \" + ((this.props.data as any).name)}:{this.props.data.className}</div> : undefined;\r\n        }\r\n        if (!this.props.node) return \"Loading...\";\r\n        /*if (this.props.node.__raw.view !== this.props.view.id) {\r\n            this.onViewChange();\r\n            return \"Updating view...\";\r\n        }*/\r\n\r\n        if (!this.stopUpdateEvents || this.stopUpdateEvents !== this.props.view.clonedCounter) {\r\n            this.stopUpdateEvents = undefined;\r\n            if (this.doMeasurableEvent(EMeasurableEvents.onDataUpdate)) {\r\n                let thischange = {t: Date.now()};\r\n                this.lastOnUpdateChanges.push(thischange);\r\n                if (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 20]?.t < 200) {\r\n                    // if N updates in <= 0.2 sec\r\n                    this.stopUpdateEvents = this.props.view.clonedCounter;\r\n                    Log.eDevv(\"loop in node.render() likely due to MeasurableEvent onDataUpdate. It has been disabled until the view changes.\",{\r\n                        change_log: this.lastOnUpdateChanges,\r\n                        component: this,\r\n                        timediff: (thischange.t - this.lastOnUpdateChanges[this.lastOnUpdateChanges.length - 20]?.t)\r\n                    } as any);\r\n                }\r\n            }\r\n        }\r\n\r\n        /// set classes\r\n        if (this.props.node) {\r\n            let isSelected: Dictionary<Pointer<DUser>, boolean> = this.props.node.__raw.isSelected;\r\n            if (isSelected[DUser.current]) { // todo: better to just use css attribute selectors [data-userselecting = \"userID\"]\r\n                classes.push('selected-by-me');\r\n                if (Object.keys(isSelected).length > 1) classes.push('selected-by-others');\r\n            } else if (Object.keys(isSelected).length) classes.push('selected-by-others');\r\n        }\r\n        classes.push(this.props.data?.className || 'DVoid');\r\n        U.arrayMergeInPlace(classes, this.state.classes);\r\n        if (Array.isArray(this.props.className)) { U.arrayMergeInPlace(classes, this.props.className); }\r\n        else if (this.props.className) { classes.push(this.props.className); }\r\n        if (Array.isArray(this.props.class)) { U.arrayMergeInPlace(classes, this.props.class); }\r\n        else if (this.props.class) { classes.push(this.props.class); }\r\n        /// end set classes\r\n\r\n        const rnode: ReactNode = this.getTemplate();\r\n        let rawRElement: ReactElement | null = UX.ReactNodeAsElement(rnode);\r\n        const me: LModelElement | undefined = this.props.data; // this.props.model;\r\n\r\n        // \\console.log('GE render', {thiss: this, data:me, rnode, rawRElement, props:this.props, name: (me as any)?.name});\r\n\r\n        const addprops: boolean = true;\r\n        let fiximport = !!this.props.node;\r\n        if (addprops && rawRElement && fiximport) {\r\n            if (windoww.debugcount && debugcount++>windoww.debugcount) throw new Error(\"debug triggered stop\");\r\n            let fixdoubleroot = true;\r\n            // add view props to GraphElement children (any level down)\r\n            const subElements: Dictionary<DocString<'nodeid'>, boolean> = {}; // this.props.getGVidMap();\r\n            try {\r\n                let viewStyle: GObject = {...(this.props.style || {})};\r\n                /*\r\n                    if (view.adaptWidth) viewStyle.width = view.adaptWidth; // '-webkit-fill-available';\r\n                    else viewStyle.height = (rootProps.view.height) && rootProps.view.height + 'px';\r\n                    if (view.adaptHeight) viewStyle.height = view.adaptHeight; //'fit-content'; // '-webkit-fill-available'; if needs to actually fill all it's not a vertex but a field.\r\n                    else viewStyle.width = (rootProps.view.width) && rootProps.view.width + 'px';\r\n                    viewStyle = {};\r\n                */\r\n                // viewStyle.pointerEvents = \"all\";\r\n                viewStyle.order = viewStyle.zIndex = this.props.node?.zIndex; // alias? this.props.node.z\r\n                viewStyle.display = this.props.view?.display;\r\n                let injectProps: GObject = {};\r\n                if (countRenders) {\r\n                    classes.push(this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\");\r\n                    injectProps[\"data-countrenders\"] = this.countRenders++;\r\n                }\r\n                /// let excludeProps = ['data', 'node', 'view', 'children', ]\r\n                let p: GObject = this.props;\r\n                for (let k in p) {\r\n                    if (typeof p[k] === 'object' || typeof p[k] === 'function') continue;\r\n                    injectProps[k] = p[k];\r\n                }\r\n                // for (let k in this.props.childStyle) { delete viewStyle[k]; }\r\n                rawRElement = React.cloneElement(rawRElement, // i'm cloning a raw html (like div) being root of the rendered view\r\n                    {\r\n                        ...injectProps,\r\n                        ref: this.html,\r\n                        // damiano: ref html viene settato correttamente a tutti tranne ad attribute, ref, operation (Ã¨ perchÃ¨ iniziano con <Select/> as root?)\r\n                        id: this.props.nodeid,\r\n                        \"data-nodeid\": this.props.nodeid,\r\n                        \"data-dataid\": me?.id,\r\n                        \"data-viewid\": this.props.view.id,\r\n                        \"data-modelname\": me?.className || \"model-less\",\r\n                        \"data-userselecting\": JSON.stringify(this.props.node?.isSelected || {}),\r\n                        \"data-nodetype\": nodeType,\r\n                        // \"data-order\": this.props.node?.zIndex,\r\n                        style: {...viewStyle, ...styleoverride},\r\n                        className: classes.join(' '),\r\n                        onClick: this.onClick,\r\n                        onContextMenu:this.onContextMenu,\r\n                        onMouseDown:this.onMouseDown,\r\n                        onMouseUp:this.onMouseUp,\r\n                        onMouseWheel: this.onScroll,\r\n                        onMouseEnter:this.onEnter,\r\n                        onMouseLeave:this.onLeave,\r\n                        tabIndex: (this.props as any).tabIndex || -1,\r\n                        children: UX.recursiveMap(rawRElement/*.props.children*/,\r\n                            (rn: ReactNode, index: number, depthIndexes: number[]) => {\r\n                                let injectOffset: undefined | LGraph = ((this.props as any).isGraph && !depthIndexes[0] && !index) && (this.props.node as LGraph);\r\n                                injectOffset&&console.log(\"inject offset props0:\", {injectOffset});\r\n                                //console.log(\"inject offset props00:\", {injectOffset, ig:(this.props as any).isGraph, props:this.props, depthIndexes, index});\r\n                                return UX.injectProp(this, rn, subElements, this.props.parentnodeid as string, index, depthIndexes, injectOffset)\r\n                            })});\r\n                fixdoubleroot = false; // need to set the props to new root in that case.\r\n                if (fixdoubleroot) rawRElement = rawRElement.props.children;\r\n                // console.log(\"probem\", {rawRElement, children:(rawRElement as any)?.children, pchildren:(rawRElement as any)?.props?.children});\r\n            } catch (e: any) {\r\n                rawRElement = DV.errorView(\"error while injecting props to subnodes\\n:\" + (e.message || '').split('\\n')[0],\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid},\r\n                    'Subelement props', this.props.data?.__raw, this.props.node?.__raw, this.props.view.__raw) as ReactElement;\r\n                /*\r\n                rawRElement = U.eval InContextAndScope<ReactElement>('()=>{ return ' +\r\n                    DV.errorView(\"error while injecting props to subnodes\",\r\n                        {e, rawRElement, key:this.props.key, newid: this.props.nodeid}) + '}',\r\n                    {});*/\r\n\r\n                // rawRElement = DV.errorView(\"error while injecting props to subnodes\", {e, rawRElement, key:this.props.key, newid: this.props.nodeid});\r\n            }\r\n            /*console.log('tempdebug', {deepStrictEqual, okeys:Object.keys});\r\n            let isEqual = true;\r\n            try {deepStrictEqual(subElements, this.props.node.subElements)} catch(e) { isEqual = false; }\r\n            if (isEqual) {\r\n                this.props.node.subElements = Object.keys(subElements);\r\n            }*/\r\n        }\r\n        // const injectprops = {a:3, b:4} as DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n        // rnode = React.cloneElement(rnode as ReactElement, injectprops);\r\n\r\n        // console.log(\"nodeee\", {thiss:this, props:this.props, node: this.props.node});\r\n        if (false && (this.props.node?.__raw as DGraphElement).father) {\r\n            let $containedIn = $('#' + this.props.node.father);\r\n            let $containerDropArea = $containedIn.find(\".VertexContainer\");\r\n            const droparea = $containerDropArea[0] || $containedIn[0];\r\n            Log.exDev(!droparea, 'invalid vertex container target', {$containedIn, $containerDropArea});\r\n            if (droparea) return createPortal(\r\n                rawRElement || rnode,\r\n                droparea\r\n            );\r\n        }/*\r\n        if (countRenders) return <>{[\r\n            rawRElement || rnode,\r\n            <div className={this.countRenders%2 ? \"animate-on-update-even\" : \"animate-on-update-odd\"} data-countrenders={this.countRenders++} />\r\n        ]}</>/*/\r\n        return rawRElement || rnode;\r\n    }\r\n\r\n}\r\n\r\n// private\r\n// type AllPropss = GraphElementOwnProps & GraphElementDispatchProps & GraphElementReduxStateProps;\r\ntype AllPropss = Overlap<Overlap<GraphElementOwnProps, GraphElementDispatchProps>, GraphElementReduxStateProps>;\r\n\r\nconst GraphElementConnected = connect<GraphElementReduxStateProps, GraphElementDispatchProps, GraphElementOwnProps, DState>(\r\n    GraphElementComponent.mapStateToProps,\r\n    GraphElementComponent.mapDispatchToProps\r\n)(GraphElementComponent as any);\r\n\r\nexport const GraphElement = (props: GraphElementOwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <GraphElementConnected {...{...props, children}} />; }\r\n// console.info('graphElement loaded');\r\n\r\n\r\nGraphElementComponent.cname = \"GraphElementComponent\";\r\nGraphElementConnected.cname = \"GraphElementConnected\";\r\nGraphElement.cname = \"GraphElement\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}