{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\src\\\\pages\\\\Project.tsx\",\n  _s = $RefreshSig$(),\n  _this = this;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { DUser, LProject, LUser, Try, U } from '../joiner';\nimport useQuery from '../hooks/useQuery';\nimport { ProjectsApi } from '../api/persistance';\nimport { SaveManager } from '../components/topbar/SaveManager';\nimport { Dashboard } from \"./components\";\nimport CollaborativeAttacher from \"../components/collaborative/CollaborativeAttacher\";\nimport { Cards } from './components/cards/Cards';\nimport { useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectComponent(props) {\n  _s();\n  var _user$project;\n  const {\n    user\n  } = props;\n  const navigate = useNavigate();\n  const query = useQuery();\n  const id = query.get('id') || '';\n  useEffect(() => {\n    (async function () {\n      const project = await ProjectsApi.getOne(id);\n      if (!project) {\n        U.refresh();\n        navigate('/allProject');\n        return;\n      }\n      if (project.state) {\n        const state = JSON.parse(await U.decompressState(project.state));\n        state['idlookup'][DUser.current] = user.__raw;\n        if (!state['users'].includes(DUser.current)) state['users'].push(DUser.current);\n        SaveManager.load(JSON.stringify(state));\n      }\n      user.project = LProject.fromPointer(project.id);\n    })();\n  }, [id]);\n  let allViews = (user === null || user === void 0 ? void 0 : (_user$project = user.project) === null || _user$project === void 0 ? void 0 : _user$project.viewpoints.flatMap(vp => vp && vp.allSubViews)) || [];\n  allViews = allViews.filter(v => v);\n  const viewsDeDuplicator = {};\n  for (let v of allViews) viewsDeDuplicator[v.id] = v;\n  if (!(user === null || user === void 0 ? void 0 : user.project)) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Try, {\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        active: 'Project',\n        version: props.version,\n        project: user.project,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            children: [user.project.metamodels.length === 0 ? /*#__PURE__*/_jsxDEV(Cards.Item, {\n              title: 'Your first metamodel ?',\n              subtitle: 'Create a new metamodel.',\n              icon: 'add',\n              style: 'red',\n              action: () => {\n                alert('new metamodel');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Cards.Item, {\n                title: 'Create another metamodel ?',\n                subtitle: 'Create a new metamodel.',\n                icon: 'add',\n                style: 'red',\n                action: () => {\n                  alert('another metamodel');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Cards.Item, {\n                title: 'Create a model ?',\n                subtitle: 'Create a new model.',\n                icon: 'add',\n                style: 'red',\n                action: () => {\n                  alert('new model');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Cards.Item, {\n              icon: 'question',\n              style: 'clear',\n              title: 'Ehy!',\n              subtitle: 'What do you want to do today?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), user.project.type === 'collaborative' && /*#__PURE__*/_jsxDEV(CollaborativeAttacher, {\n      project: user.project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true);\n}\n_s(ProjectComponent, \"V1s50OUsdf+12xaZNBGUoNUNFvQ=\", false, function () {\n  return [useNavigate, useQuery];\n});\n_c = ProjectComponent;\nfunction mapStateToProps(state, ownProps) {\n  const ret = {};\n  ret.user = LUser.fromPointer(DUser.current);\n  return ret;\n}\nfunction mapDispatchToProps(dispatch) {\n  const ret = {};\n  return ret;\n}\nexport const ProjectConnected = connect(mapStateToProps, mapDispatchToProps)(ProjectComponent);\nconst ProjectPage = function (props) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return /*#__PURE__*/_jsxDEV(ProjectConnected, {\n    ...props,\n    children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 12\n  }, _this);\n};\n_c2 = ProjectPage;\nexport { ProjectPage };\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectComponent\");\n$RefreshReg$(_c2, \"ProjectPage\");","map":{"version":3,"names":["React","useEffect","connect","DUser","LProject","LUser","Try","U","useQuery","ProjectsApi","SaveManager","Dashboard","CollaborativeAttacher","Cards","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","ProjectComponent","props","_s","_user$project","user","navigate","query","id","get","project","getOne","refresh","state","JSON","parse","decompressState","current","__raw","includes","push","load","stringify","fromPointer","allViews","viewpoints","flatMap","vp","allSubViews","filter","v","viewsDeDuplicator","children","active","version","metamodels","length","Item","title","subtitle","icon","style","action","alert","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","mapStateToProps","ownProps","ret","mapDispatchToProps","dispatch","ProjectConnected","ProjectPage","arguments","undefined","_this","_c2","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/pages/Project.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    CreateElementAction,\r\n    Dictionary,\r\n    DState,\r\n    DUser,\r\n    DViewElement, GObject,\r\n    LProject,\r\n    LUser,\r\n    LViewElement,\r\n    LViewPoint,\r\n    Pointer,\r\n    Try,\r\n    U\r\n} from '../joiner';\r\nimport {FakeStateProps} from '../joiner/types';\r\nimport useQuery from '../hooks/useQuery';\r\nimport {ProjectsApi} from '../api/persistance';\r\nimport {SaveManager} from '../components/topbar/SaveManager';\r\nimport {Dashboard} from \"./components\";\r\nimport CollaborativeAttacher from \"../components/collaborative/CollaborativeAttacher\";\r\nimport {Cards} from './components/cards/Cards';\r\nimport Storage from \"../data/storage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction ProjectComponent(props: AllProps): JSX.Element {\r\n\r\n    const {user} = props;\r\n    const navigate = useNavigate();\r\n    const query = useQuery();\r\n    const id = query.get('id') || '';\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n            const project = await ProjectsApi.getOne(id);\r\n            if(!project) {\r\n                U.refresh();\r\n                navigate('/allProject');\r\n                return;\r\n            }\r\n            if(project.state) {\r\n                const state = JSON.parse(await U.decompressState(project.state));\r\n                state['idlookup'][DUser.current] = user.__raw;\r\n                if(!state['users'].includes(DUser.current)) state['users'].push(DUser.current);\r\n                SaveManager.load(JSON.stringify(state));\r\n            }\r\n            user.project = LProject.fromPointer(project.id);\r\n        })();\r\n    }, [id]);\r\n\r\n    let allViews = user?.project?.viewpoints.flatMap((vp: LViewPoint) => vp && vp.allSubViews) || [];\r\n    allViews = allViews.filter(v => v);\r\n    const viewsDeDuplicator: Dictionary<Pointer<DViewElement>, LViewElement> = {};\r\n    for (let v of allViews) viewsDeDuplicator[v.id] = v;\r\n    if(!user?.project) return (<></>);\r\n    return(<>\r\n        <Try>\r\n            <Dashboard active={'Project'} version={props.version} project={user.project}>\r\n                <React.Fragment>\r\n                    <Cards>\r\n                        {user.project.metamodels.length === 0 ?\r\n                            <Cards.Item\r\n                                title={'Your first metamodel ?'}\r\n                                subtitle={'Create a new metamodel.'}\r\n                                icon={'add'}\r\n                                style={'red'}\r\n                                action={() => {alert('new metamodel')}}\r\n                            />\r\n                            :\r\n                            <React.Fragment>\r\n                                <Cards.Item\r\n                                    title={'Create another metamodel ?'}\r\n                                    subtitle={'Create a new metamodel.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {alert('another metamodel')}}\r\n                                />\r\n                                <Cards.Item\r\n                                    title={'Create a model ?'}\r\n                                    subtitle={'Create a new model.'}\r\n                                    icon={'add'}\r\n                                    style={'red'}\r\n                                    action={() => {alert('new model')}}\r\n                                />\r\n                            </React.Fragment>\r\n                        }\r\n                        <Cards.Item icon={'question'} style={'clear'} title={'Ehy!'} subtitle={'What do you want to do today?'}/>\r\n                    </Cards>\r\n                </React.Fragment>\r\n            </Dashboard>\r\n        </Try>\r\n        {user.project.type === 'collaborative' && <CollaborativeAttacher project={user.project} />}\r\n    </>);\r\n\r\n}\r\ninterface OwnProps {}\r\ninterface StateProps {\r\n    user: LUser,\r\n    version: DState[\"version\"],\r\n}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.user = LUser.fromPointer(DUser.current);\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\nexport const ProjectConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProjectComponent);\r\n\r\nconst ProjectPage = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return <ProjectConnected {...{...props, children}} />;\r\n}\r\n\r\nexport {ProjectPage};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}