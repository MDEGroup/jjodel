{"ast":null,"code":"var _jsxFileName = \"C:\\\\0Programmi\\\\Dev\\\\projects\\\\frontend\\\\jjodel\\\\frontend\\\\src\\\\components\\\\tooltip\\\\MyTooltip.tsx\";\nimport React from 'react';\nimport './mytooltip.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyTooltip = props => {\n  const tooltip = props.text;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: 'my-tooltip',\n    children: tooltip\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n/*\r\nfunction TooltipComponent(props: TooltipProps) {\r\n    const tooltip = props.label;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {tooltip: string}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.tooltip = state.tooltip;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TooltipComponent);\r\n\r\nexport const Tooltip = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return(<TooltipConnected {...{...props, children}} />);\r\n}\r\nexport default Tooltip;\r\n*/\n_c = MyTooltip;\nvar _c;\n$RefreshReg$(_c, \"MyTooltip\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyTooltip","props","tooltip","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/frontend/src/components/tooltip/MyTooltip.tsx"],"sourcesContent":["import React, {Dispatch, ReactElement} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {DState} from '../../joiner';\r\nimport {FakeStateProps} from '../../joiner/types';\r\nimport './mytooltip.scss';\r\n\r\n\r\ntype TooltipProps = {\r\n    text: string;\r\n}\r\n\r\nexport const MyTooltip = (props: TooltipProps) => {\r\n    const tooltip = props.text;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\n/*\r\nfunction TooltipComponent(props: TooltipProps) {\r\n    const tooltip = props.label;\r\n\r\n    return(\r\n        <label className={'my-tooltip'}>{tooltip}</label>\r\n    );\r\n}\r\n\r\ninterface OwnProps {}\r\ninterface StateProps {tooltip: string}\r\ninterface DispatchProps {}\r\ntype AllProps = OwnProps & StateProps & DispatchProps;\r\n\r\nfunction mapStateToProps(state: DState, ownProps: OwnProps): StateProps {\r\n    const ret: StateProps = {} as FakeStateProps;\r\n    ret.tooltip = state.tooltip;\r\n    return ret;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<any>): DispatchProps {\r\n    const ret: DispatchProps = {};\r\n    return ret;\r\n}\r\n\r\n\r\nexport const TooltipConnected = connect<StateProps, DispatchProps, OwnProps, DState>(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TooltipComponent);\r\n\r\nexport const Tooltip = (props: OwnProps, children: (string | React.Component)[] = []): ReactElement => {\r\n    return(<TooltipConnected {...{...props, children}} />);\r\n}\r\nexport default Tooltip;\r\n*/\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAgC,OAAO;AAInD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,OAAO,MAAMC,SAAS,GAAIC,KAAmB,IAAK;EAC9C,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI;EAE1B,oBACIJ,OAAA;IAAOK,SAAS,EAAE,YAAa;IAAAC,QAAA,EAAEH;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEzD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCAC,EAAA,GARaV,SAAS;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}