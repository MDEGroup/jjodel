{"ast":null,"code":"export class GraphElementStatee {\n  constructor() {\n    this.classes = void 0;\n  }\n  /*\r\n  constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n  this.preRenderFunc = preRenderFunc;\r\n  this.evalContext = evalContext;\r\n  this.template = templatefunc;\r\n  }\r\n  preRenderFunc?: string;\r\n  evalContext: Json;\r\n  template: () => ReactNode;* /\r\n  nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n  constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n  this.nodeid = nodeid;\r\n  }*/\n  // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\n}\nexport class GraphElementReduxStateProps {\n  constructor() {\n    this.view = void 0;\n    this.views = void 0;\n    this.evalContext = void 0;\n    this.node = void 0;\n    this.data = void 0;\n    this.usageDeclarations = void 0;\n    this.invalidUsageDeclarations = void 0;\n    this.isEdgePending = void 0;\n  } // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\n  // all applicable views\n  // graphID!: string;\n  // dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\n  // model?: LModel;\n  // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\n  //preRenderFunc?: string;\n  //template!: string;\n  // graph!: LGraph;\n  // lastSelected!: LModelElement | null;\n  // vertex only\n}\nexport class GraphElementDispatchProps {}\n\n// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\nexport class BasicReactOwnProps {\n  constructor() {\n    this.children = void 0;\n    this.style = void 0;\n    this.class = void 0;\n    this.className = void 0;\n    this.key = void 0;\n  } // orArr<JSX.Element | PrimitiveType>;\n  // my add as a fault-tolerant fix for users not used to jsx\n}\nexport class GraphElementOwnProps extends BasicReactOwnProps {\n  constructor() {\n    super(...arguments);\n    this.data = void 0;\n    this.view = void 0;\n    this.initialSize = void 0;\n    this.parentnodeid = void 0;\n    this.nodeid = void 0;\n    this.graphid = void 0;\n    this.parentViewId = void 0;\n    this.htmlindex = void 0;\n    this.childStyle = void 0;\n  } // Injected\n  // Injected\n  // injected\n  // injected\n  // injected\n  // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\n}\nexport class EdgeOwnProps extends GraphElementOwnProps {\n  constructor() {\n    super(...arguments);\n    this.onclick = void 0;\n    this.onmousedown = void 0;\n    this.isgraph = false;\n    this.isvertex = true;\n    this.start = void 0;\n    this.end = void 0;\n    this.label = void 0;\n    this.labels = void 0;\n  }\n}\nexport class EdgeStateProps extends GraphElementReduxStateProps {\n  constructor() {\n    super(...arguments);\n    this.node = void 0;\n    this.edge = void 0;\n    this.isEdgePending = void 0;\n    this.viewpoint = void 0;\n    this.start = void 0;\n    this.end = void 0;\n  } // just alias for node\n  //lastSelected!: LModelElement | null;\n  // key: string;\n}\n\n// @RuntimeAccessible\nexport class DefaultUsageDeclarations {\n  // all can be deleted in usageDeclaration function except view.\n\n  constructor(ret, ownProps) {\n    this.view = void 0;\n    this.node = void 0;\n    this.data = void 0;\n  } /*this.data = ret.data;\r\n    this.view = ret.view;\r\n    this.node = ret.node;/*/\n}\n\n// @RuntimeAccessible\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations {\n  constructor() {\n    super(...arguments);\n    this.start = void 0;\n    this.end = void 0;\n  }\n}","map":{"version":3,"names":["GraphElementStatee","constructor","classes","GraphElementReduxStateProps","view","views","evalContext","node","data","usageDeclarations","invalidUsageDeclarations","isEdgePending","GraphElementDispatchProps","BasicReactOwnProps","children","style","class","className","key","GraphElementOwnProps","arguments","initialSize","parentnodeid","nodeid","graphid","parentViewId","htmlindex","childStyle","EdgeOwnProps","onclick","onmousedown","isgraph","isvertex","start","end","label","labels","EdgeStateProps","edge","viewpoint","DefaultUsageDeclarations","ret","ownProps","EdgeDefaultUsageDeclarations"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/src/graph/graphElement/sharedTypes/sharedTypes.tsx"],"sourcesContent":["import React, {CSSProperties, PureComponent, ReactNode} from \"react\";\r\nimport type {\r\n    DEdge,\r\n    DGraph,\r\n    DGraphElement,\r\n    DModelElement,\r\n    DViewElement,\r\n    Json,\r\n    LGraph,\r\n    LGraphElement,\r\n    LModelElement,\r\n    LViewElement,\r\n    Pointer, PrimitiveType\r\n} from \"../../../joiner\";\r\nimport {LClass, LEdge, LUser, LViewPoint, RuntimeAccessible} from \"../../../joiner\";\r\nimport {GObject, InitialVertexSize, orArr} from \"../../../joiner/types\";\r\n\r\nexport class GraphElementStatee {/*\r\n    constructor(preRenderFunc: string | undefined, evalContext: GObject, templatefunc: () => React.ReactNode) {\r\n        this.preRenderFunc = preRenderFunc;\r\n        this.evalContext = evalContext;\r\n        this.template = templatefunc;\r\n    }\r\n    preRenderFunc?: string;\r\n    evalContext: Json;\r\n    template: () => ReactNode;* /\r\n    nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>;\r\n    constructor(nodeid: Pointer<DGraphElement, 1, 1, LGraphElement>) {\r\n        this.nodeid = nodeid;\r\n    }*/\r\n    // displayPosition?: GraphSize; // used while dragging to prevent flood of redux events\r\n    classes!: string[];\r\n}\r\n\r\n\r\nexport class GraphElementReduxStateProps {\r\n    // userexample?: UserState; // todo: make and repace with proxy wrapper \"User\", or make a \"cached\" global variable synchronized with redux state for easier access\r\n    view!: LViewElement;\r\n    views!: LViewElement[]; // all applicable views\r\n    // graphID!: string;\r\n    // dataid?: Pointer<DModelElement, 1, 1, LModelElement>;\r\n    // model?: LModel;\r\n    // [userMappedFromRedux: string]: any; // roba che l'utente ha dichiarato di voler prendere dallo stato e redux gli carica nelle props\r\n    //preRenderFunc?: string;\r\n    evalContext!: Json;\r\n    //template!: string;\r\n    node!: LGraphElement;\r\n    data?: LModelElement;\r\n    usageDeclarations!: DefaultUsageDeclarations;\r\n    invalidUsageDeclarations?: Error;\r\n    // graph!: LGraph;\r\n\r\n    // lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };// vertex only\r\n}\r\n\r\nexport class GraphElementDispatchProps {\r\n}\r\n\r\n// generic props for every component that this component will need to extend joining user-specified values and component-specific built-in values\r\nexport class BasicReactOwnProps {\r\n    children?: ReactNode; // orArr<JSX.Element | PrimitiveType>;\r\n    style?: CSSProperties;\r\n    class?: string | string[]; // my add as a fault-tolerant fix for users not used to jsx\r\n    className?: string | string[];\r\n    key?: string;\r\n}\r\n\r\nexport class GraphElementOwnProps extends BasicReactOwnProps {\r\n    data?: Pointer<DModelElement, 0, 1, LModelElement> | LModelElement;\r\n    view?: Pointer<DViewElement, 1, 1, LViewElement> | LViewElement\r\n    initialSize?: InitialVertexSize;\r\n\r\n    parentnodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    nodeid?: Pointer<DGraphElement, 1, 1, LGraphElement>; // Injected\r\n    graphid?: Pointer<DGraph, 1, 1, LGraph>; // injected\r\n    parentViewId?: Pointer<DViewElement, 1, 1, LViewElement>; // injected\r\n    htmlindex?: number; // injected\r\n    childStyle?: CSSProperties; // injected, indicates some properties are styled from <Polygon or such, and must be transferred to the first child of root\r\n}\r\n\r\nexport class EdgeOwnProps extends GraphElementOwnProps {\r\n    onclick?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    onmousedown?: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n    isgraph?: boolean = false;\r\n    isvertex?: boolean = true;\r\n    start!: LGraphElement[\"id\"];\r\n    end!: LGraphElement[\"id\"];\r\n    label?: DEdge[\"longestLabel\"];\r\n    labels?: DEdge[\"labels\"];\r\n}\r\n\r\nexport class EdgeStateProps extends GraphElementReduxStateProps {\r\n    node!: LEdge;\r\n    edge!: LEdge; // just alias for node\r\n    //lastSelected!: LModelElement | null;\r\n    isEdgePending!: { user: LUser, source: LClass };\r\n    viewpoint!: LViewPoint;\r\n    start!: LGraphElement;\r\n    end!: LGraphElement;\r\n    // key: string;\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class DefaultUsageDeclarations{\r\n    // all can be deleted in usageDeclaration function except view.\r\n    view?: GraphElementReduxStateProps[\"view\"];\r\n    node?: GraphElementReduxStateProps[\"node\"];\r\n    data: GraphElementOwnProps[\"data\"];\r\n    [key:string]: any;\r\n    constructor(ret: GraphElementReduxStateProps, ownProps: GraphElementOwnProps) {\r\n        /*this.data = ret.data;\r\n        this.view = ret.view;\r\n        this.node = ret.node;/*/\r\n    }\r\n}\r\n\r\n// @RuntimeAccessible\r\nexport class EdgeDefaultUsageDeclarations extends DefaultUsageDeclarations{\r\n    start!: EdgeOwnProps[\"start\"];\r\n    end!: EdgeOwnProps[\"end\"];\r\n}\r\n"],"mappings":"AAiBA,OAAO,MAAMA,kBAAkB,CAAC;EAAAC,YAAA;IAAA,KAc5BC,OAAO;EAAA;EAdsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;AAEJ;AAGA,OAAO,MAAMC,2BAA2B,CAAC;EAAAF,YAAA;IAAA,KAErCG,IAAI;IAAA,KACJC,KAAK;IAAA,KAMLC,WAAW;IAAA,KAEXC,IAAI;IAAA,KACJC,IAAI;IAAA,KACJC,iBAAiB;IAAA,KACjBC,wBAAwB;IAAA,KAIxBC,aAAa;EAAA,EAjBb;EAEwB;EACxB;EACA;EACA;EACA;EACA;EAEA;EAKA;EAEA;EACgD;AACpD;AAEA,OAAO,MAAMC,yBAAyB,CAAC;;AAGvC;AACA,OAAO,MAAMC,kBAAkB,CAAC;EAAAZ,YAAA;IAAA,KAC5Ba,QAAQ;IAAA,KACRC,KAAK;IAAA,KACLC,KAAK;IAAA,KACLC,SAAS;IAAA,KACTC,GAAG;EAAA,EAJmB;EAEK;AAG/B;AAEA,OAAO,MAAMC,oBAAoB,SAASN,kBAAkB,CAAC;EAAAZ,YAAA;IAAA,SAAAmB,SAAA;IAAA,KACzDZ,IAAI;IAAA,KACJJ,IAAI;IAAA,KACJiB,WAAW;IAAA,KAEXC,YAAY;IAAA,KACZC,MAAM;IAAA,KACNC,OAAO;IAAA,KACPC,YAAY;IAAA,KACZC,SAAS;IAAA,KACTC,UAAU;EAAA,EALkD;EACN;EACb;EACiB;EACtC;EACQ;AAChC;AAEA,OAAO,MAAMC,YAAY,SAAST,oBAAoB,CAAC;EAAAlB,YAAA;IAAA,SAAAmB,SAAA;IAAA,KACnDS,OAAO;IAAA,KACPC,WAAW;IAAA,KACXC,OAAO,GAAa,KAAK;IAAA,KACzBC,QAAQ,GAAa,IAAI;IAAA,KACzBC,KAAK;IAAA,KACLC,GAAG;IAAA,KACHC,KAAK;IAAA,KACLC,MAAM;EAAA;AACV;AAEA,OAAO,MAAMC,cAAc,SAASlC,2BAA2B,CAAC;EAAAF,YAAA;IAAA,SAAAmB,SAAA;IAAA,KAC5Db,IAAI;IAAA,KACJ+B,IAAI;IAAA,KAEJ3B,aAAa;IAAA,KACb4B,SAAS;IAAA,KACTN,KAAK;IAAA,KACLC,GAAG;EAAA,EALW;EACd;EAKA;AACJ;;AAEA;AACA,OAAO,MAAMM,wBAAwB;EACjC;;EAKAvC,WAAWA,CAACwC,GAAgC,EAAEC,QAA8B,EAAE;IAAA,KAJ9EtC,IAAI;IAAA,KACJG,IAAI;IAAA,KACJC,IAAI;EAMJ,CAAC,CAHG;AACR;AACA;AAEA;;AAEA;AACA,OAAO,MAAMmC,4BAA4B,SAASH,wBAAwB;EAAAvC,YAAA;IAAA,SAAAmB,SAAA;IAAA,KACtEa,KAAK;IAAA,KACLC,GAAG;EAAA;AACP","ignoreList":[]},"metadata":{},"sourceType":"module"}