{"ast":null,"code":"import React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport Tabs from 'rc-tabs';\nimport Menu, { MenuItem } from 'rc-menu';\nimport Dropdown from 'rc-dropdown';\nimport * as DragManager from \"./dragdrop/DragManager\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DockTabBar } from \"./DockTabBar\";\nimport DockTabPane from \"./DockTabPane\";\nimport { getFloatPanelSize } from \"./Algorithm\";\nimport { WindowBox } from \"./WindowBox\";\nfunction findParentPanel(element) {\n  for (let i = 0; i < 10; ++i) {\n    if (!element) {\n      return null;\n    }\n    if (element.classList.contains('dock-panel')) {\n      return element;\n    }\n    element = element.parentElement;\n  }\n  return null;\n}\nfunction isPopupDiv(r) {\n  var _a, _b;\n  return r == null || ((_a = r.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === 'LI' || ((_b = r.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement.tagName) === 'LI';\n}\nexport class TabCache {\n  constructor(context) {\n    this.getRef = r => {\n      if (isPopupDiv(r)) {\n        return;\n      }\n      this._ref = r;\n    };\n    this.getHitAreaRef = r => {\n      if (isPopupDiv(r)) {\n        return;\n      }\n      this._hitAreaRef = r;\n    };\n    this.onCloseClick = e => {\n      this.context.dockMove(this.data, null, 'remove');\n      e.stopPropagation();\n    };\n    this.onDragStart = e => {\n      let panel = this.data.parent;\n      if (panel.parent.mode === 'float' && panel.tabs.length === 1) {\n        // when it's the only tab in a float panel, skip this drag, let parent tab bar handle it\n        return;\n      }\n      let panelElement = findParentPanel(this._ref);\n      let tabGroup = this.context.getGroup(this.data.group);\n      let [panelWidth, panelHeight] = getFloatPanelSize(panelElement, tabGroup);\n      e.setData({\n        tab: this.data,\n        panelSize: [panelWidth, panelHeight]\n      }, this.context.getDockId());\n      e.startDrag(this._ref.parentElement, this._ref.parentElement);\n    };\n    this.onDragOver = e => {\n      let dockId = this.context.getDockId();\n      let tab = DragManager.DragState.getData('tab', dockId);\n      let panel = DragManager.DragState.getData('panel', dockId);\n      let group;\n      if (tab) {\n        panel = tab.parent;\n        group = tab.group;\n      } else {\n        // drag whole panel\n        if (!panel) {\n          return;\n        }\n        if (panel === null || panel === void 0 ? void 0 : panel.panelLock) {\n          e.reject();\n          return;\n        }\n        group = panel.group;\n      }\n      if (group !== this.data.group) {\n        e.reject();\n      } else if (tab && tab !== this.data) {\n        let direction = this.getDropDirection(e);\n        this.context.setDropRect(this._hitAreaRef, direction, this);\n        e.accept('');\n      } else if (panel && panel !== this.data.parent) {\n        let direction = this.getDropDirection(e);\n        this.context.setDropRect(this._hitAreaRef, direction, this);\n        e.accept('');\n      }\n    };\n    this.onDragLeave = e => {\n      this.context.setDropRect(null, 'remove', this);\n    };\n    this.onDrop = e => {\n      let dockId = this.context.getDockId();\n      let panel;\n      let tab = DragManager.DragState.getData('tab', dockId);\n      if (tab) {\n        panel = tab.parent;\n      } else {\n        panel = DragManager.DragState.getData('panel', dockId);\n      }\n      if (tab && tab !== this.data) {\n        let direction = this.getDropDirection(e);\n        this.context.dockMove(tab, this.data, direction);\n      } else if (panel && panel !== this.data.parent) {\n        let direction = this.getDropDirection(e);\n        this.context.dockMove(panel, this.data, direction);\n      }\n    };\n    this.context = context;\n  }\n  setData(data) {\n    if (data !== this.data) {\n      this.data = data;\n      this.content = this.render();\n      return true;\n    }\n    return false;\n  }\n  getDropDirection(e) {\n    let rect = this._hitAreaRef.getBoundingClientRect();\n    let midx = rect.left + rect.width * 0.5;\n    return e.clientX > midx ? 'after-tab' : 'before-tab';\n  }\n  render() {\n    let {\n      id,\n      title,\n      group,\n      content,\n      closable,\n      cached,\n      parent\n    } = this.data;\n    let {\n      onDragStart,\n      onDragOver,\n      onDrop,\n      onDragLeave\n    } = this;\n    if (parent.parent.mode === 'window') {\n      onDragStart = null;\n      onDragOver = null;\n      onDrop = null;\n      onDragLeave = null;\n    }\n    let tabGroup = this.context.getGroup(group);\n    if (typeof content === 'function') {\n      content = content(this.data);\n    }\n    let tab = React.createElement(DragDropDiv, {\n      getRef: this.getRef,\n      onDragStartT: onDragStart,\n      onDragOverT: onDragOver,\n      onDropT: onDrop,\n      onDragLeaveT: onDragLeave\n    }, title, closable ? React.createElement(\"div\", {\n      className: \"dock-tab-close-btn\",\n      onClick: this.onCloseClick\n    }) : null, React.createElement(\"div\", {\n      className: \"dock-tab-hit-area\",\n      ref: this.getHitAreaRef\n    }));\n    return React.createElement(DockTabPane, {\n      key: id,\n      cacheId: id,\n      cached: cached,\n      tab: tab\n    }, content);\n  }\n  destroy() {\n    // place holder\n  }\n}\nexport class DockTabs extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this._cache = new Map();\n    this.onMaximizeClick = e => {\n      let {\n        panelData\n      } = this.props;\n      this.context.dockMove(panelData, null, 'maximize');\n      // prevent the focus change logic\n      e.stopPropagation();\n    };\n    this.onNewWindowClick = () => {\n      let {\n        panelData\n      } = this.props;\n      this.context.dockMove(panelData, null, 'new-window');\n    };\n    this.renderTabBar = (props, TabNavList) => {\n      let {\n        panelData,\n        onPanelDragStart,\n        onPanelDragMove,\n        onPanelDragEnd\n      } = this.props;\n      let {\n        group: groupName,\n        panelLock\n      } = panelData;\n      let group = this.context.getGroup(groupName);\n      let {\n        panelExtra\n      } = group;\n      let maximizable = group.maximizable;\n      if (panelData.parent.mode === 'window') {\n        onPanelDragStart = null;\n        maximizable = false;\n      }\n      if (panelLock) {\n        if (panelLock.panelExtra) {\n          panelExtra = panelLock.panelExtra;\n        }\n      }\n      let showNewWindowButton = group.newWindow && WindowBox.enabled && panelData.parent.mode === 'float';\n      let panelExtraContent;\n      if (panelExtra) {\n        panelExtraContent = panelExtra(panelData, this.context);\n      } else if (maximizable || showNewWindowButton) {\n        panelExtraContent = React.createElement(\"div\", {\n          className: \"dock-panel-max-btn\",\n          onClick: maximizable ? this.onMaximizeClick : null\n        });\n        if (showNewWindowButton) {\n          panelExtraContent = this.addNewWindowMenu(panelExtraContent, !maximizable);\n        }\n      }\n      return React.createElement(DockTabBar, Object.assign({\n        onDragStart: onPanelDragStart,\n        onDragMove: onPanelDragMove,\n        onDragEnd: onPanelDragEnd,\n        TabNavList: TabNavList,\n        isMaximized: panelData.parent.mode === 'maximize'\n      }, props, {\n        extra: panelExtraContent\n      }));\n    };\n    this.onTabChange = activeId => {\n      this.props.panelData.activeId = activeId;\n      this.context.onSilentChange(activeId, 'active');\n      this.forceUpdate();\n    };\n  }\n  updateTabs(tabs) {\n    if (tabs === this.cachedTabs) {\n      return;\n    }\n    this.cachedTabs = tabs;\n    let newCache = new Map();\n    let reused = 0;\n    for (let tabData of tabs) {\n      let {\n        id\n      } = tabData;\n      if (this._cache.has(id)) {\n        let tab = this._cache.get(id);\n        newCache.set(id, tab);\n        tab.setData(tabData);\n        ++reused;\n      } else {\n        let tab = new TabCache(this.context);\n        newCache.set(id, tab);\n        tab.setData(tabData);\n      }\n    }\n    if (reused !== this._cache.size) {\n      for (let [id, tab] of this._cache) {\n        if (!newCache.has(id)) {\n          tab.destroy();\n        }\n      }\n    }\n    this._cache = newCache;\n  }\n  addNewWindowMenu(element, showWithLeftClick) {\n    const nativeMenu = React.createElement(Menu, {\n      onClick: this.onNewWindowClick\n    }, React.createElement(MenuItem, null, \"New Window\"));\n    let trigger = showWithLeftClick ? ['contextMenu', 'click'] : ['contextMenu'];\n    return React.createElement(Dropdown, {\n      prefixCls: \"dock-dropdown\",\n      overlay: nativeMenu,\n      trigger: trigger,\n      mouseEnterDelay: 0.1,\n      mouseLeaveDelay: 0.1\n    }, element);\n  }\n  render() {\n    let {\n      group,\n      tabs,\n      activeId\n    } = this.props.panelData;\n    let tabGroup = this.context.getGroup(group);\n    let {\n      animated\n    } = tabGroup;\n    if (animated == null) {\n      animated = true;\n    }\n    this.updateTabs(tabs);\n    let children = [];\n    for (let [id, tab] of this._cache) {\n      children.push(tab.content);\n    }\n    return React.createElement(Tabs, {\n      prefixCls: \"dock\",\n      moreIcon: \"...\",\n      animated: animated,\n      renderTabBar: this.renderTabBar,\n      activeKey: activeId,\n      onChange: this.onTabChange\n    }, children);\n  }\n}\nDockTabs.contextType = DockContextType;\nDockTabs.propKeys = ['group', 'tabs', 'activeId', 'onTabChange'];","map":{"version":3,"names":["React","DockContextType","Tabs","Menu","MenuItem","Dropdown","DragManager","DragDropDiv","DockTabBar","DockTabPane","getFloatPanelSize","WindowBox","findParentPanel","element","i","classList","contains","parentElement","isPopupDiv","r","_a","_b","tagName","TabCache","constructor","context","getRef","_ref","getHitAreaRef","_hitAreaRef","onCloseClick","e","dockMove","data","stopPropagation","onDragStart","panel","parent","mode","tabs","length","panelElement","tabGroup","getGroup","group","panelWidth","panelHeight","setData","tab","panelSize","getDockId","startDrag","onDragOver","dockId","DragState","getData","panelLock","reject","direction","getDropDirection","setDropRect","accept","onDragLeave","onDrop","content","render","rect","getBoundingClientRect","midx","left","width","clientX","id","title","closable","cached","createElement","onDragStartT","onDragOverT","onDropT","onDragLeaveT","className","onClick","ref","key","cacheId","destroy","DockTabs","PureComponent","arguments","_cache","Map","onMaximizeClick","panelData","props","onNewWindowClick","renderTabBar","TabNavList","onPanelDragStart","onPanelDragMove","onPanelDragEnd","groupName","panelExtra","maximizable","showNewWindowButton","newWindow","enabled","panelExtraContent","addNewWindowMenu","Object","assign","onDragMove","onDragEnd","isMaximized","extra","onTabChange","activeId","onSilentChange","forceUpdate","updateTabs","cachedTabs","newCache","reused","tabData","has","get","set","size","showWithLeftClick","nativeMenu","trigger","prefixCls","overlay","mouseEnterDelay","mouseLeaveDelay","animated","children","push","moreIcon","activeKey","onChange","contextType","propKeys"],"sources":["C:/0Programmi/Dev/projects/frontend/jjodel/node_modules/rc-dock/es/DockTabs.js"],"sourcesContent":["import React from \"react\";\nimport { DockContextType } from \"./DockData\";\nimport Tabs from 'rc-tabs';\nimport Menu, { MenuItem } from 'rc-menu';\nimport Dropdown from 'rc-dropdown';\nimport * as DragManager from \"./dragdrop/DragManager\";\nimport { DragDropDiv } from \"./dragdrop/DragDropDiv\";\nimport { DockTabBar } from \"./DockTabBar\";\nimport DockTabPane from \"./DockTabPane\";\nimport { getFloatPanelSize } from \"./Algorithm\";\nimport { WindowBox } from \"./WindowBox\";\nfunction findParentPanel(element) {\n    for (let i = 0; i < 10; ++i) {\n        if (!element) {\n            return null;\n        }\n        if (element.classList.contains('dock-panel')) {\n            return element;\n        }\n        element = element.parentElement;\n    }\n    return null;\n}\nfunction isPopupDiv(r) {\n    var _a, _b;\n    return (r == null || ((_a = r.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === 'LI' || ((_b = r.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement.tagName) === 'LI');\n}\nexport class TabCache {\n    constructor(context) {\n        this.getRef = (r) => {\n            if (isPopupDiv(r)) {\n                return;\n            }\n            this._ref = r;\n        };\n        this.getHitAreaRef = (r) => {\n            if (isPopupDiv(r)) {\n                return;\n            }\n            this._hitAreaRef = r;\n        };\n        this.onCloseClick = (e) => {\n            this.context.dockMove(this.data, null, 'remove');\n            e.stopPropagation();\n        };\n        this.onDragStart = (e) => {\n            let panel = this.data.parent;\n            if (panel.parent.mode === 'float' && panel.tabs.length === 1) {\n                // when it's the only tab in a float panel, skip this drag, let parent tab bar handle it\n                return;\n            }\n            let panelElement = findParentPanel(this._ref);\n            let tabGroup = this.context.getGroup(this.data.group);\n            let [panelWidth, panelHeight] = getFloatPanelSize(panelElement, tabGroup);\n            e.setData({ tab: this.data, panelSize: [panelWidth, panelHeight] }, this.context.getDockId());\n            e.startDrag(this._ref.parentElement, this._ref.parentElement);\n        };\n        this.onDragOver = (e) => {\n            let dockId = this.context.getDockId();\n            let tab = DragManager.DragState.getData('tab', dockId);\n            let panel = DragManager.DragState.getData('panel', dockId);\n            let group;\n            if (tab) {\n                panel = tab.parent;\n                group = tab.group;\n            }\n            else {\n                // drag whole panel\n                if (!panel) {\n                    return;\n                }\n                if (panel === null || panel === void 0 ? void 0 : panel.panelLock) {\n                    e.reject();\n                    return;\n                }\n                group = panel.group;\n            }\n            if (group !== this.data.group) {\n                e.reject();\n            }\n            else if (tab && tab !== this.data) {\n                let direction = this.getDropDirection(e);\n                this.context.setDropRect(this._hitAreaRef, direction, this);\n                e.accept('');\n            }\n            else if (panel && panel !== this.data.parent) {\n                let direction = this.getDropDirection(e);\n                this.context.setDropRect(this._hitAreaRef, direction, this);\n                e.accept('');\n            }\n        };\n        this.onDragLeave = (e) => {\n            this.context.setDropRect(null, 'remove', this);\n        };\n        this.onDrop = (e) => {\n            let dockId = this.context.getDockId();\n            let panel;\n            let tab = DragManager.DragState.getData('tab', dockId);\n            if (tab) {\n                panel = tab.parent;\n            }\n            else {\n                panel = DragManager.DragState.getData('panel', dockId);\n            }\n            if (tab && tab !== this.data) {\n                let direction = this.getDropDirection(e);\n                this.context.dockMove(tab, this.data, direction);\n            }\n            else if (panel && panel !== this.data.parent) {\n                let direction = this.getDropDirection(e);\n                this.context.dockMove(panel, this.data, direction);\n            }\n        };\n        this.context = context;\n    }\n    setData(data) {\n        if (data !== this.data) {\n            this.data = data;\n            this.content = this.render();\n            return true;\n        }\n        return false;\n    }\n    getDropDirection(e) {\n        let rect = this._hitAreaRef.getBoundingClientRect();\n        let midx = rect.left + rect.width * 0.5;\n        return e.clientX > midx ? 'after-tab' : 'before-tab';\n    }\n    render() {\n        let { id, title, group, content, closable, cached, parent } = this.data;\n        let { onDragStart, onDragOver, onDrop, onDragLeave } = this;\n        if (parent.parent.mode === 'window') {\n            onDragStart = null;\n            onDragOver = null;\n            onDrop = null;\n            onDragLeave = null;\n        }\n        let tabGroup = this.context.getGroup(group);\n        if (typeof content === 'function') {\n            content = content(this.data);\n        }\n        let tab = (React.createElement(DragDropDiv, { getRef: this.getRef, onDragStartT: onDragStart, onDragOverT: onDragOver, onDropT: onDrop, onDragLeaveT: onDragLeave },\n            title,\n            closable ?\n                React.createElement(\"div\", { className: \"dock-tab-close-btn\", onClick: this.onCloseClick })\n                : null,\n            React.createElement(\"div\", { className: \"dock-tab-hit-area\", ref: this.getHitAreaRef })));\n        return (React.createElement(DockTabPane, { key: id, cacheId: id, cached: cached, tab: tab }, content));\n    }\n    destroy() {\n        // place holder\n    }\n}\nexport class DockTabs extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this._cache = new Map();\n        this.onMaximizeClick = (e) => {\n            let { panelData } = this.props;\n            this.context.dockMove(panelData, null, 'maximize');\n            // prevent the focus change logic\n            e.stopPropagation();\n        };\n        this.onNewWindowClick = () => {\n            let { panelData } = this.props;\n            this.context.dockMove(panelData, null, 'new-window');\n        };\n        this.renderTabBar = (props, TabNavList) => {\n            let { panelData, onPanelDragStart, onPanelDragMove, onPanelDragEnd } = this.props;\n            let { group: groupName, panelLock } = panelData;\n            let group = this.context.getGroup(groupName);\n            let { panelExtra } = group;\n            let maximizable = group.maximizable;\n            if (panelData.parent.mode === 'window') {\n                onPanelDragStart = null;\n                maximizable = false;\n            }\n            if (panelLock) {\n                if (panelLock.panelExtra) {\n                    panelExtra = panelLock.panelExtra;\n                }\n            }\n            let showNewWindowButton = group.newWindow && WindowBox.enabled && panelData.parent.mode === 'float';\n            let panelExtraContent;\n            if (panelExtra) {\n                panelExtraContent = panelExtra(panelData, this.context);\n            }\n            else if (maximizable || showNewWindowButton) {\n                panelExtraContent = React.createElement(\"div\", { className: \"dock-panel-max-btn\", onClick: maximizable ? this.onMaximizeClick : null });\n                if (showNewWindowButton) {\n                    panelExtraContent = this.addNewWindowMenu(panelExtraContent, !maximizable);\n                }\n            }\n            return (React.createElement(DockTabBar, Object.assign({ onDragStart: onPanelDragStart, onDragMove: onPanelDragMove, onDragEnd: onPanelDragEnd, TabNavList: TabNavList, isMaximized: panelData.parent.mode === 'maximize' }, props, { extra: panelExtraContent })));\n        };\n        this.onTabChange = (activeId) => {\n            this.props.panelData.activeId = activeId;\n            this.context.onSilentChange(activeId, 'active');\n            this.forceUpdate();\n        };\n    }\n    updateTabs(tabs) {\n        if (tabs === this.cachedTabs) {\n            return;\n        }\n        this.cachedTabs = tabs;\n        let newCache = new Map();\n        let reused = 0;\n        for (let tabData of tabs) {\n            let { id } = tabData;\n            if (this._cache.has(id)) {\n                let tab = this._cache.get(id);\n                newCache.set(id, tab);\n                tab.setData(tabData);\n                ++reused;\n            }\n            else {\n                let tab = new TabCache(this.context);\n                newCache.set(id, tab);\n                tab.setData(tabData);\n            }\n        }\n        if (reused !== this._cache.size) {\n            for (let [id, tab] of this._cache) {\n                if (!newCache.has(id)) {\n                    tab.destroy();\n                }\n            }\n        }\n        this._cache = newCache;\n    }\n    addNewWindowMenu(element, showWithLeftClick) {\n        const nativeMenu = (React.createElement(Menu, { onClick: this.onNewWindowClick },\n            React.createElement(MenuItem, null, \"New Window\")));\n        let trigger = showWithLeftClick ? ['contextMenu', 'click'] : ['contextMenu'];\n        return (React.createElement(Dropdown, { prefixCls: \"dock-dropdown\", overlay: nativeMenu, trigger: trigger, mouseEnterDelay: 0.1, mouseLeaveDelay: 0.1 }, element));\n    }\n    render() {\n        let { group, tabs, activeId } = this.props.panelData;\n        let tabGroup = this.context.getGroup(group);\n        let { animated } = tabGroup;\n        if (animated == null) {\n            animated = true;\n        }\n        this.updateTabs(tabs);\n        let children = [];\n        for (let [id, tab] of this._cache) {\n            children.push(tab.content);\n        }\n        return (React.createElement(Tabs, { prefixCls: \"dock\", moreIcon: \"...\", animated: animated, renderTabBar: this.renderTabBar, activeKey: activeId, onChange: this.onTabChange }, children));\n    }\n}\nDockTabs.contextType = DockContextType;\nDockTabs.propKeys = ['group', 'tabs', 'activeId', 'onTabChange'];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}